############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ██████╗ ██╗██╗   ██╗███████╗██████╗
# ██╔══██╗██║██║   ██║██╔════╝██╔══██╗
# ██║  ██║██║██║   ██║█████╗  ██████╔╝
# ██║  ██║██║╚██╗ ██╔╝██╔══╝  ██╔══██╗
# ██████╔╝██║ ╚████╔╝ ███████╗██║  ██║
# ╚═════╝ ╚═╝  ╚═══╝  ╚══════╝╚═╝  ╚═╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

gdp_var = {
	value = root.gdp
	min = 1
}
gdp_nationnal_currency = {
	value = root.gdp
	multiply = money_value
}
#GDP var 1 year:
GDP_var_y_1_percentage = {
	value = var:GDP_var_1_year
	divide = 100
}
GDP_var_half_1_year_percentage = {
	value = var:GDP_var_half_1_year
	divide = 100
}
GDP_dif_1_final = {
	value = var:GDP_dif_1
	subtract = 1
}

#GDP var 5 year:
GDP_var_y_5_percentage  = {
	value = var:GDP_var_5_year
	divide = 100
}
GDP_var_half_5_year_percentage = {
	value = var:GDP_var_half_5_year
	divide = 100
}
GDP_dif_5_final = {
	value = var:GDP_dif_5
	subtract = 1
}

#GDP var 10 year
GDP_var_y_10_percentage  = {
	value = var:GDP_var_10_year
	divide = 100
}
GDP_var_half_10_year_percentage = {
	value = var:GDP_var_half_10_year
	divide = 100
}
GDP_dif_10_final = {
	value = var:GDP_dif_10
	subtract = 1
}

#gold_reserves_1B
gold_reserves_1B  = {
	#name = 00_ai_buy_building_construction_sector_test
	add = 1
}

army_size_var = {
	value = 0
	add = army_size
}
navy_size_var = {
	value = 0
	add = navy_size
}

currency_quantity_sell = {
	value = 0.5
	if = {
		limit = {
			# or = {
			# 	trade_balance_in_currency < 0
			# 	central_bank_gold_reserves_state < 0 
			# }
			has_modifier = extreme_weak_currency
		}
		add = 0.5
	}
}

########################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#  █████╗ ██╗   ██╗███████╗██████╗  █████╗  ██████╗ ███████╗         ██████╗  ██████╗ ██╗     ██████╗         ███████╗██╗  ██╗ ██████╗██╗  ██╗ █████╗ ███╗   ██╗ ██████╗ ███████╗        ██████╗  █████╗ 
# ██╔══██╗██║   ██║██╔════╝██╔══██╗██╔══██╗██╔════╝ ██╔════╝        ██╔════╝ ██╔═══██╗██║     ██╔══██╗        ██╔════╝╚██╗██╔╝██╔════╝██║  ██║██╔══██╗████╗  ██║██╔════╝ ██╔════╝        ██╔══██╗██╔══██╗
# ███████║██║   ██║█████╗  ██████╔╝███████║██║  ███╗█████╗          ██║  ███╗██║   ██║██║     ██║  ██║        █████╗   ╚███╔╝ ██║     ███████║███████║██╔██╗ ██║██║  ███╗█████╗          ██████╔╝███████║
# ██╔══██║╚██╗ ██╔╝██╔══╝  ██╔══██╗██╔══██║██║   ██║██╔══╝          ██║   ██║██║   ██║██║     ██║  ██║        ██╔══╝   ██╔██╗ ██║     ██╔══██║██╔══██║██║╚██╗██║██║   ██║██╔══╝          ██╔══██╗██╔══██║
# ██║  ██║ ╚████╔╝ ███████╗██║  ██║██║  ██║╚██████╔╝███████╗███████╗╚██████╔╝╚██████╔╝███████╗██████╔╝███████╗███████╗██╔╝ ██╗╚██████╗██║  ██║██║  ██║██║ ╚████║╚██████╔╝███████╗███████╗██║  ██║██║  ██║
# ╚═╝  ╚═╝  ╚═══╝  ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝ ╚═════╝  ╚═════╝ ╚══════╝╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
#                                                                                                                                                                                                        
# ████████╗███████╗         ██████╗██╗   ██╗██████╗ ██████╗ ███████╗███╗   ██╗ ██████╗██╗███████╗███████╗                                                                                                
# ╚══██╔══╝██╔════╝        ██╔════╝██║   ██║██╔══██╗██╔══██╗██╔════╝████╗  ██║██╔════╝██║██╔════╝██╔════╝                                                                                                
#    ██║   █████╗          ██║     ██║   ██║██████╔╝██████╔╝█████╗  ██╔██╗ ██║██║     ██║█████╗  ███████╗                                                                                                
#    ██║   ██╔══╝          ██║     ██║   ██║██╔══██╗██╔══██╗██╔══╝  ██║╚██╗██║██║     ██║██╔══╝  ╚════██║                                                                                                
#    ██║   ███████╗███████╗╚██████╗╚██████╔╝██║  ██║██║  ██║███████╗██║ ╚████║╚██████╗██║███████╗███████║                                                                                                
#    ╚═╝   ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝╚═╝╚══════╝╚══════╝                                                                                                 

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

difference_with_average_gold_exchange_rate_currencies = {
	value = money_value_rapported_inflation
	divide = global_var:money_value_median
}
difference_with_average_gold_exchange_rate_currencies_revers = {
	value = 0

	# if 
	# limit
	# difference_with_average_gold_exchange_rate_currencies > 1


	# if 
	# limit
	# difference_with_average_gold_exchange_rate_currencies < 1

	value = 1
	subtract = difference_with_average_gold_exchange_rate_currencies
	multiply = -1
}
difference_with_average_gold_exchange_rate_currencies_revers_normalized = {
	value = difference_with_average_gold_exchange_rate_currencies_revers
	multiply = -1
}
difference_with_average_gold_exchange_rate_currencies_revers_100 = {
	value = difference_with_average_gold_exchange_rate_currencies_revers_normalized
	multiply = 100
}

median_currency_value_1 = {
	value = 0
	every_country = {
		limit = {
			has_modifier = has_central_bank
			money_value > 0.001
			money_value <= 0.25
		}
		add = 1
	}
}
median_currency_value_2 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 0.25
		money_value <= 0.50
	}
	add = 1
}
}
median_currency_value_3 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 0.50
		money_value <= 0.75
	}
	add = 1
}
}
median_currency_value_4 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 0.75
		money_value <= 1.00
	}
	add = 1
}
}
median_currency_value_5 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 1.00
		money_value <= 1.25
	}
	add = 1
}
}
median_currency_value_6 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 1.25
		money_value <= 1.50
	}
	add = 1
}
}
median_currency_value_7 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 1.50
		money_value <= 1.75
	}
	add = 1
}
}
median_currency_value_8 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 1.75
		money_value <= 2.00
	}
	add = 1
}
}
median_currency_value_9 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 2.00
		money_value <= 2.25
	}
	add = 1
}
}
median_currency_value_10 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 2.25
		money_value <= 2.50
	}
	add = 1
}
}
median_currency_value_11 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 2.50
		money_value <= 2.75
	}
	add = 1
}
}
median_currency_value_12 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 2.75
		money_value <= 3.00
	}
	add = 1
}
}
median_currency_value_13 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 3.00
		money_value <= 3.25
	}
	add = 1
}
}
median_currency_value_14 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 3.25
		money_value <= 3.50
	}
	add = 1
}
}
median_currency_value_15 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 3.50
		money_value <= 3.75
	}
	add = 1
}
}
median_currency_value_16 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 3.75
		money_value <= 4.00
	}
	add = 1
}
}
median_currency_value_17 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 4.00
		money_value <= 4.25
	}
	add = 1
}
}
median_currency_value_18 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 4.25
		money_value <= 4.50
	}
	add = 1
}
}
median_currency_value_19 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 4.50
		money_value <= 4.75
	}
	add = 1
}
}
median_currency_value_20 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 4.75
		money_value <= 5.00
	}
	add = 1
}
}
median_currency_value_21 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 5.00
		money_value <= 5.25
	}
	add = 1
}
}
median_currency_value_22 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 5.25
		money_value <= 5.50
	}
	add = 1
}
}
median_currency_value_23 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 5.50
		money_value <= 5.75
	}
	add = 1
}
}
median_currency_value_24 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 5.75
		money_value <= 6.00
	}
	add = 1
}
}
median_currency_value_25 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 6.00
		money_value <= 6.25
	}
	add = 1
}
}
median_currency_value_26 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 6.25
		money_value <= 6.50
	}
	add = 1
}
}
median_currency_value_27 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 6.50
		money_value <= 6.75
	}
	add = 1
}
}
median_currency_value_28 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 6.75
		money_value <= 7.00
	}
	add = 1
}
}
median_currency_value_29 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 7.00
		money_value <= 7.25
	}
	add = 1
}
}
median_currency_value_30 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 7.25
		money_value <= 7.50
	}
	add = 1
}
}
median_currency_value_31 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 7.50
		money_value <= 7.75
	}
	add = 1
}
}
median_currency_value_32 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 7.75
		money_value <= 8.00
	}
	add = 1
}
}
median_currency_value_33 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 8.00
		money_value <= 8.25
	}
	add = 1
}
}
median_currency_value_34 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 8.25
		money_value <= 8.50
	}
	add = 1
}
}
median_currency_value_35 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 8.50
		money_value <= 8.75
	}
	add = 1
}
}
median_currency_value_36 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 8.75
		money_value <= 9.00
	}
	add = 1
}
}
median_currency_value_37 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 9.00
		money_value <= 9.25
	}
	add = 1
}
}
median_currency_value_38 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 9.25
		money_value <= 9.50
	}
	add = 1
}
}
median_currency_value_39 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 9.50
		money_value <= 9.75
	}
	add = 1
}
}
median_currency_value_40 = {
value = 0
every_country = {
	limit = {
		has_modifier = has_central_bank
		money_value > 9.75
		money_value <= 10.00
	}
	add = 1
}
}
	
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#  ██████╗ ██████╗ ███╗   ██╗ ██████╗███████╗██████╗ ███╗   ██╗██╗███╗   ██╗ ██████╗     ██████╗ ███████╗███████╗███████╗██████╗ ██╗   ██╗███████╗     ██████╗██╗   ██╗██████╗ ██████╗ ███████╗███╗   ██╗ ██████╗██╗   ██╗
# ██╔════╝██╔═══██╗████╗  ██║██╔════╝██╔════╝██╔══██╗████╗  ██║██║████╗  ██║██╔════╝     ██╔══██╗██╔════╝██╔════╝██╔════╝██╔══██╗██║   ██║██╔════╝    ██╔════╝██║   ██║██╔══██╗██╔══██╗██╔════╝████╗  ██║██╔════╝╚██╗ ██╔╝
# ██║     ██║   ██║██╔██╗ ██║██║     █████╗  ██████╔╝██╔██╗ ██║██║██╔██╗ ██║██║  ███╗    ██████╔╝█████╗  ███████╗█████╗  ██████╔╝██║   ██║█████╗      ██║     ██║   ██║██████╔╝██████╔╝█████╗  ██╔██╗ ██║██║      ╚████╔╝
# ██║     ██║   ██║██║╚██╗██║██║     ██╔══╝  ██╔══██╗██║╚██╗██║██║██║╚██╗██║██║   ██║    ██╔══██╗██╔══╝  ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██╔══╝      ██║     ██║   ██║██╔══██╗██╔══██╗██╔══╝  ██║╚██╗██║██║       ╚██╔╝
# ╚██████╗╚██████╔╝██║ ╚████║╚██████╗███████╗██║  ██║██║ ╚████║██║██║ ╚████║╚██████╔╝    ██║  ██║███████╗███████║███████╗██║  ██║ ╚████╔╝ ███████╗    ╚██████╗╚██████╔╝██║  ██║██║  ██║███████╗██║ ╚████║╚██████╗   ██║
#  ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝╚═╝  ╚═══╝ ╚═════╝     ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚══════╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝   ╚═╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

global_monetary_reference = {
	every_country = {
		limit = {
			has_modifier = global_monetary_reference
		}
		value = money_value_rapported_inflation
	}
}
money_value_reference_currency = {
	every_country = {
		limit = {
			has_modifier = global_monetary_reference
		}
		value = money_value
	}
}
money_value_rapported_inflation_reference_currency = {
	every_country = {
		limit = {
			has_modifier = global_monetary_reference
		}
		value = money_value_rapported_inflation
	}
}
money_supply_reference_currency = {
	every_country = {
		limit = {
			has_modifier = global_monetary_reference
		}
		value = money_supply
	}
}
money_supply_stockpile_by_other_country_reference_currency = {
	every_country = {
		limit = {
			has_modifier = global_monetary_reference
		}
		value = money_supply_stockpile_by_other_country
	}
}

reference_currency_owned_by_the_country_in_gold = {
	value = 0
	add = reference_currency_owned_by_the_country
	multiply = global_monetary_reference
}

money_value_exchange_rate_with_reference_currency = {
	value = money_value_rapported_inflation
	divide = global_monetary_reference
}

amount_reference_currency_to_ensure_parity = {
	value = money_supply
	multiply = var:money_value_target_with_the_reference_currency_2
	multiply = hedging_rate_in_reference_currency
}
hedging_rate_in_reference_currency  = {
	value = 0.25 #pourra etre modifier à l'avenir 
}

reference_currency_owned_by_the_country_equivalent_gold = {
	value = reference_currency_owned_by_the_country_in_gold
	multiply = {
		value = global_monetary_reference 
		divide = var:money_value_target_1
	}
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#  ██████╗ ██████╗ ███╗   ██╗ ██████╗███████╗██████╗ ███╗   ██╗██╗███╗   ██╗ ██████╗     ██████╗ ██╗      █████╗ ██╗   ██╗███████╗██████╗
# ██╔════╝██╔═══██╗████╗  ██║██╔════╝██╔════╝██╔══██╗████╗  ██║██║████╗  ██║██╔════╝     ██╔══██╗██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗
# ██║     ██║   ██║██╔██╗ ██║██║     █████╗  ██████╔╝██╔██╗ ██║██║██╔██╗ ██║██║  ███╗    ██████╔╝██║     ███████║ ╚████╔╝ █████╗  ██████╔╝
# ██║     ██║   ██║██║╚██╗██║██║     ██╔══╝  ██╔══██╗██║╚██╗██║██║██║╚██╗██║██║   ██║    ██╔═══╝ ██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗
# ╚██████╗╚██████╔╝██║ ╚████║╚██████╗███████╗██║  ██║██║ ╚████║██║██║ ╚████║╚██████╔╝    ██║     ███████╗██║  ██║   ██║   ███████╗██║  ██║
#  ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝╚═╝  ╚═══╝ ╚═════╝     ╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

player_has_central_bank = {
	value = 0
	every_country = {
		limit = {
			is_player = yes
			has_modifier = has_central_bank
		}
		add = 1
	}
}
money_value_of_player = {
	every_country = {
		limit = {
			is_player = yes
		}
		value = money_value
	}
}
money_value_rapported_inflation_of_player = {
	every_country = {
		limit = {
			is_player = yes
		}
		value = money_value_rapported_inflation
	}
}
money_supply_of_player = {
	every_country = {
		limit = {
			is_player = yes
		}
		value = money_supply
	}
}
money_supply_stockpile_by_other_country_of_player = {
	every_country = {
		limit = {
			is_player = yes
		}
		value = money_supply_stockpile_by_other_country
	}
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ██████╗ ███████╗██╗   ██╗ █████╗ ██╗     ██╗   ██╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗    ██╗██████╗ ███████╗██╗   ██╗ █████╗ ██╗     ██╗   ██╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗
# ██╔══██╗██╔════╝██║   ██║██╔══██╗██║     ██║   ██║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║   ██╔╝██╔══██╗██╔════╝██║   ██║██╔══██╗██║     ██║   ██║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║
# ██║  ██║█████╗  ██║   ██║███████║██║     ██║   ██║███████║   ██║   ██║██║   ██║██╔██╗ ██║  ██╔╝ ██████╔╝█████╗  ██║   ██║███████║██║     ██║   ██║███████║   ██║   ██║██║   ██║██╔██╗ ██║
# ██║  ██║██╔══╝  ╚██╗ ██╔╝██╔══██║██║     ██║   ██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║ ██╔╝  ██╔══██╗██╔══╝  ╚██╗ ██╔╝██╔══██║██║     ██║   ██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║
# ██████╔╝███████╗ ╚████╔╝ ██║  ██║███████╗╚██████╔╝██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║██╔╝   ██║  ██║███████╗ ╚████╔╝ ██║  ██║███████╗╚██████╔╝██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║
# ╚═════╝ ╚══════╝  ╚═══╝  ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝    ╚═╝  ╚═╝╚══════╝  ╚═══╝  ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#devaluation
devaluation_rate_normalized = {
	value = var:devaluation_rate
	add = 100
	divide = 100
}
money_value_predicted_devaluation = {
	value = national_capacity
	divide = money_supply_predicted_devaluation
	max = 100
}
money_supply_predicted_revaluation = {
	value = money_supply
	add = money_supply_predicted_add_revaluation_1
}
money_supply_predicted_devaluation = {
	value = money_supply
	multiply = devaluation_rate_normalized
}
money_supply_predicted_add_devaluation_1 = {
	value = money_supply_predicted_devaluation
	subtract = money_supply
}
inflation_value_predicted_devaluation = {
	add = devaluation_rate_normalized
	subtract = 1
	divide = var:devaluation_time #pas besoin de le validé car les bouton sont intouchable
}
devaluation_time_month = {
	value = var:devaluation_time
	multiply = 12
}
devaluation_time_1_month = { #special for exchange control
	value = var:devaluation_time_1
	multiply = 12
}
devaluation_time_week = {
	value = var:devaluation_time
	multiply = 52
}
inflation_value_predicted_devaluation_month = {
	value = var:devaluation_rate
    divide = devaluation_time_month
}
money_supply_to_add_per_month = { #valeur à ajouter par an
	value = 0
	if  = {
		limit  = {
			var:devaluation_on = 1
		}
		add = var:money_supply_predicted_add_devaluation_1_month_valided #valided to save the vare
		divide = devaluation_time_month
	}
}
devaluation_on_time_scripted = {
	value = 0
	if  = {
		limit  = {
			var:devaluation_on = 1
		}
		add = devaluation_time_month
		subtract = var:devaluation_on_time
	}
}

#revaluation
revaluation_rate_normalized = {
	value = 100
	subtract = var:revaluation_rate
	divide = 100
}
money_value_predicted_revaluation = {
	value = national_capacity
	divide = money_supply_predicted_revaluation
	max = 100
}
money_supply_predicted_revaluation = {
	value = money_supply
	add = money_supply_predicted_add_revaluation_1
}
money_supply_state_predicted_revaluation = {
	value = money_supply_state #money_supply
	multiply = revaluation_rate_normalized
}
money_supply_predicted_add_revaluation_1 = { #money_supply_to_subtract_per_month
	value = money_supply_state_predicted_revaluation #money_supply
	subtract = money_supply_state
}
inflation_value_predicted_revaluation = {
	add = revaluation_rate_normalized
	subtract = 1
	multiply = var:revaluation_time
}
revaluation_time_month = {
	value = var:revaluation_time
	multiply = 12
}
revaluation_time_1_month = { #special for exchange control
	value = var:revaluation_time_1
	multiply = 12
}
revaluation_time_week = {
	value = var:revaluation_time
	multiply = 52
}
inflation_value_predicted_revaluation_month = {
	value = var:revaluation_rate
    divide = revaluation_time_month
	multiply = -1
}
money_supply_to_subtract_per_month = {
	value = 0
	if  = {
		limit  = {
			var:revaluation_on = 1
		}
		add = var:money_supply_predicted_add_revaluation_1_month_valided #valided to save the vare
		divide = revaluation_time_month
	}
}
revaluation_on_time_scripted = { #valeur à ajouter par an
	value = 0
	if  = {
		limit  = {
			var:revaluation_on = 1
		}
		add = revaluation_time_month
		subtract = var:revaluation_on_time
	}
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███╗   ███╗ ██████╗ ███╗   ██╗███████╗██╗   ██╗    ██╗   ██╗ █████╗ ██╗     ██╗   ██╗███████╗
# ████╗ ████║██╔═══██╗████╗  ██║██╔════╝╚██╗ ██╔╝    ██║   ██║██╔══██╗██║     ██║   ██║██╔════╝
# ██╔████╔██║██║   ██║██╔██╗ ██║█████╗   ╚████╔╝     ██║   ██║███████║██║     ██║   ██║█████╗
# ██║╚██╔╝██║██║   ██║██║╚██╗██║██╔══╝    ╚██╔╝      ╚██╗ ██╔╝██╔══██║██║     ██║   ██║██╔══╝
# ██║ ╚═╝ ██║╚██████╔╝██║ ╚████║███████╗   ██║███████╗╚████╔╝ ██║  ██║███████╗╚██████╔╝███████╗
# ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝╚══════╝ ╚═══╝  ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚══════╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

money_value = {
	if = {
		limit = {
			not = {
				has_modifier = has_central_bank
			}
		}
		value = money_value_no_bc
	}
	if = {
		limit = {
			has_modifier = has_central_bank
			not = {
				is_subject = yes
			}
		}
		value = money_value_0
	}
	if = {
		limit = {
			or = {
				is_subject = yes
				
			}
			overlord = {
				has_modifier = has_central_bank
			}
		}
		value = overlord.money_value #overlord.money_value_0
		divide = overlord.var:parity_scaled_by_the_overlord
	}
	if = {
		limit = {
			or = {
				is_subject = yes
				
			}
			overlord = {
				not = {
					has_modifier = has_central_bank
				}
			}
		}
		value = money_value_no_bc
		divide = overlord.var:parity_scaled_by_the_overlord
	}
	min = 0.0001
}
money_value_0 = {	
	if = {
		limit = {
			not = {
				has_technology_researched = gold_standard
			}
		}
		value = 0.01
	}
	if = {
		limit = {
			has_technology_researched = gold_standard
		}
		value = national_capacity
		divide = money_supply
	}

	max = 10
}
money_value_no_bc = {
	value = 1
}
money_value_raported_to_overrlord = {
	value = money_value_rapported_inflation
	divide = overlord.money_value
}
money_value_rapported_inflation = {
	value = money_value
	multiply = inflation_value_for_currency
	min = 0.00001
}
gold_value_rapported_inflation = {
	value = 1
	divide = money_value_rapported_inflation
}

money_value_target_change_prediction = { 
	value = money_value
}

money_value_target_real = {
	add = var:money_value_target_1
}
money_value_target_real_below_10 = {
	value = var:money_value_target_1
	multiply = 0.90
}
money_value_target_real_above_10 = {
	value = var:money_value_target_1
	multiply = 1.1
}
money_value_target_real_below_25 = {
	value = var:money_value_target_1
	multiply = 0.75
}
money_value_target_real_gui = {
	add = var:money_value_target_2
}
money_value_target = {
	add = national_capacity
	divide = var:money_value_target_1  #valeur à choisir
}
money_value_target_with_the_reference_currency = {
	add = global_monetary_reference
	multiply = var:money_value_target_with_the_reference_currency_2
}

#money_value var 1 year:
money_value_var_y_1_percentage = {
	value = var:money_value_var_1_year
	divide = 100
}
money_value_var_half_1_year_percentage = {
	value = var:money_value_var_half_1_year
	divide = 100
}
money_value_dif_1_final = {
	value = var:money_value_dif_1
	subtract = 1
}

#money_value var 5 year:
money_value_var_y_5_percentage  = {
	value = var:money_value_var_5_year
	divide = 100
}
money_value_var_half_5_year_percentage = {
	value = var:money_value_var_half_5_year
	divide = 100
}
money_value_dif_5_final = {
	value = var:money_value_dif_5
	subtract = 1
}
#money_value var 10 year:
money_value_var_y_10_percentage  = {
	value = var:money_value_var_10_year
	divide = 100
}
money_value_var_half_10_year_percentage = {
	value = var:money_value_var_half_10_year
	divide = 100
}
money_value_dif_10_final = {
	value = var:money_value_dif_10
	subtract = 1
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███╗   ███╗ ██████╗ ███╗   ██╗███████╗██╗   ██╗     ███████╗██╗   ██╗██████╗ ██████╗ ██╗  ██╗   ██╗
# ████╗ ████║██╔═══██╗████╗  ██║██╔════╝╚██╗ ██╔╝     ██╔════╝██║   ██║██╔══██╗██╔══██╗██║  ╚██╗ ██╔╝
# ██╔████╔██║██║   ██║██╔██╗ ██║█████╗   ╚████╔╝      ███████╗██║   ██║██████╔╝██████╔╝██║   ╚████╔╝ 
# ██║╚██╔╝██║██║   ██║██║╚██╗██║██╔══╝    ╚██╔╝       ╚════██║██║   ██║██╔═══╝ ██╔═══╝ ██║    ╚██╔╝  
# ██║ ╚═╝ ██║╚██████╔╝██║ ╚████║███████╗   ██║███████╗███████║╚██████╔╝██║     ██║     ███████╗██║   
# ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝╚══════╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝     ╚══════╝╚═╝   

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

money_supply = {
	value = 0 #à voir
	add = money_supply_state
	add = money_circulating

	min = 1
}
money_supply_montly = {
	value = 0
	add = money_supply_state_monthly
	add = money_circulating_monthly
}

#Special
total_money_supply = {
	value = 0
	add = money_supply
	add = money_supply_stockpile_by_other_country
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███╗   ██╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗ █████╗ ██╗              ██████╗ █████╗ ██████╗  █████╗  ██████╗██╗████████╗██╗   ██╗
# ████╗  ██║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║██╔══██╗██║             ██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██║╚══██╔══╝╚██╗ ██╔╝
# ██╔██╗ ██║███████║   ██║   ██║██║   ██║██╔██╗ ██║███████║██║             ██║     ███████║██████╔╝███████║██║     ██║   ██║    ╚████╔╝ 
# ██║╚██╗██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║██╔══██║██║             ██║     ██╔══██║██╔═══╝ ██╔══██║██║     ██║   ██║     ╚██╔╝  
# ██║ ╚████║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║██║  ██║███████╗███████╗╚██████╗██║  ██║██║     ██║  ██║╚██████╗██║   ██║      ██║   
# ╚═╝  ╚═══╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝ ╚═════╝╚═╝   ╚═╝      ╚═╝   

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

national_capacity = {
	value = 1
	#add = gold_reserves
	add = central_bank_reserves

	min = 0.01
}
national_capacity_for_global_monetary_reference = {
	value = 1
	if = {
		add = gold_reserves
		#add = country_credit
		add = central_bank_gold_reserves_state
		if = {
			limit = {
				or = {
					is_player = yes
					trade_balance_in_gold_fixe > 0
				}
			}
			add = trade_balance_in_gold_fixe
		}
	}
	min = 0.01
}
total_gold_reserves = {
	add = gold_reserves
}
central_bank_reserves = {
	value = 0
	if = {
		limit = {
			has_law = law_type:law_gold_standard
		}
		add = central_bank_gold_reserves_state
	}
	if = {
		limit = {
			has_law = law_type:law_gold_exchange_standard
		}
		add = var:reference_currency_owned_by_the_country_equivalent_gold_fixe
	}

	add = gold_loaned_to_central_bank
	add = var:trade_balance_in_gold_fixe 
}
all_gold_value_inflation = {
	value = 0
	add = central_bank_gold_reserves_state
	add = var:trade_balance_in_gold_fixe 

	add = gold_loaned_to_central_bank
}
central_bank_gold_reserves_state = {
	value = 1
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = bank_central_historic_place
				}
				add = var:central_bank_gold_reserves_state_1
			}
		}
	}
}
central_bank_gold_reserves_state_25 = {
	value = 1
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = bank_central_historic_place
				}
				add = var:central_bank_gold_reserves_state_1
			}
		}
	}
	multiply = 0.25
}
country_credit = {
	value = credit
	multiply = scaled_debt #credit
	#taking_loans	(Check if the country is currently running a weekly deficit and taking loans to compensate)
}
country_credit_90 = {
	value = credit
	multiply = 0.9
}
central_bank_gold_reserves_state_to_ensure_the_conversion = {
	value = money_value_target_real
	multiply = money_supply
}
debt_issued_relative_GDP = {
	value = gdp_var
	multiply = var:debt_issued_relative_GDP_percentage
}
debt_issued_relative_GDP_in_gold = {
	value = debt_issued_relative_GDP
	multiply = money_value_rapported_inflation
}
credit_at_central_bank_in_gold = {
	value = var:credit_at_central_bank
	multiply = money_value_rapported_inflation
}
central_bank_debt_1 = {
	value = central_bank_reserves
	subtract = central_bank_gold_reserves_state_to_ensure_the_conversion
}
central_bank_debt = {
	value = 0
	add = {
		value = 0

		if = {
			limit = {
				central_bank_debt_1 < 0
			}
			add = {
				value = central_bank_debt_1
				multiply = -1
			}
		}
	}
}
central_bank_debt_compared_gdp = {
	value = central_bank_debt
	divide = gdp_var
}
national_debt_allowed = {
	value = gdp_var
	multiply = national_debt_allowed_relative_gdp
}
national_debt_unauthorized = {
	value = var:credit_at_central_bank
	subtract = national_debt_allowed
}
national_debt_allowed_in_gold = {
	value = var:credit_at_central_bank
	subtract = national_debt_allowed
	multiply = -1
}
credit_at_central_bank_interest_per_week_by_inflation = {
	value = credit_at_central_bank_interest_per_month_by_inflation
	multiply = 0.25
}
income_150 = {
	value = income
	multiply = 1.5
}
income_175 = {
	value = income
	multiply = 1.75
}
income_200 = {
	value = income
	multiply = 2
}
income_225 = {
	value = income
	multiply = 2.25
}
income_250 = {
	value = income
	multiply = 2.5
}
authorized_debt_interest = {
 	value = 0
	if = {
		limit = {
			expenses < income_150	 
		}
		add = 0.25
	}
	if = {
		limit = {
			expenses > income_150
			expenses < income_175 
		}
		add = 0.20
	}
	if = {
		limit = {
			expenses > income_175
			expenses < income_200 
		}
		add = 0.15
	}
	if = {
		limit = {
			expenses > income_200
			expenses < income_225
		}
		add = 0.10
	}
	if = {
		limit = {
			expenses > income_225
			expenses < income_250
		}
		add = 0.05
	}
	if = {
		limit = {
			expenses > income_250
		}
		add = 0
	}
	if = {
		limit = {
			country_credit > 0
		}
		add = -1
	}
	min = 0
}
part_budget_authorized_debt_interest = {
	value = income
	multiply = authorized_debt_interest  #par du budget à l'equilibre que la dette doit attendre pour etre suportable
}
national_debt_refund_more_25 = {
	value = part_budget_authorized_debt_interest
	multiply = 4
	multiply = 12
	divide = country_interest
}
national_debt_refund_more_25_at_refund = {
	value = var:credit_at_central_bank
	subtract = national_debt_refund_more_25
}
national_debt = {
	value = 0
	#add = credit
	add = country_credit
	add = var:credit_at_central_bank
	#add = central_bank_debt
	#add = external_debt
}
national_debt_compared_gdp = {
	value = national_debt
	divide = gdp_var
}
credit_at_central_bank_interest_1_years = {
	add = var:credit_at_central_bank
	multiply = country_interest #interest_value_10Y = on calcule par le taux vanila qui représente le taux de rémunération de la devise ou taux directeur/// au taux du marché 
}
credit_at_central_bank_interest_1_years_in_gold = {
	value = 0
	add = credit_at_central_bank_in_gold
	multiply = interest_value_10Y
}
credit_at_central_bank_interest_per_month = {
	value = credit_at_central_bank_interest_1_years
	divide = 12
}
credit_at_central_bank_interest_per_month_by_inflation = { #modifier divise par 4
	value = credit_at_central_bank_interest_per_month
	multiply = {
		value = 1
		add = inflation_value
	}
}
refund_credit_at_central_bank_in_gold = {
	value = var:refund_credit_at_central_bank
	multiply = money_value_rapported_inflation
}
credit_at_central_bank_2M5 = {
	value = var:refund_credit_at_central_bank
	add = 2500000
}
central_bank_gold_reserves_market_goods_sell_orders = {
	value = {
		add = market.mg:gold.market_goods_sell_orders
	}
}
stockpiling_central_bank_gold_reserves_var_0 = {
	value = var:stockpiling_central_bank_gold_reserves_var_1
}












############
total_import_trade_routes = {
	every_country = {
		limit = {
			has_modifier = has_central_bank
		}
		every_trade_route = {
			limit = {
				importer.owner = root
			}
			add = 1
		}
	}
}
total_export_trade_routes = {
	every_country = {
		limit = {
			has_modifier = has_central_bank
		}
		every_trade_route = {
			limit = {
				exporter.owner = root
			}
			add = 1
		}
	}
}

############

#export
export_value = {
	value = {
		add = {
			add = {
				add= 20
				add = {
					add = market.mg:fish.market_goods_pricier
					multiply = 20

				}
				multiply = market.mg:fish.market_goods_exports
			}
			add = {
				add= 50
				add = {
					add = market.mg:ammunition.market_goods_pricier
					multiply = 50

					}

				multiply = market.mg:ammunition.market_goods_exports
			}
			add = {
				add= 60
				add = {
					add = market.mg:small_arms.market_goods_pricier
					multiply = 60

					}

				multiply = market.mg:small_arms.market_goods_exports
			}
			add = {
				add = 70
					add = {
					add = market.mg:artillery.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:artillery.market_goods_exports
			}
			add = {
				add = 80
					add = {
					add = market.mg:tanks.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:tanks.market_goods_exports
			}
			add = {
				add = 80
					add = {
					add = market.mg:aeroplanes.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:aeroplanes.market_goods_exports
			}
			add = {
				add = 70
					add = {
					add = market.mg:manowars.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:manowars.market_goods_exports
			}
			add = {
				add = 80
					add = {
					add = market.mg:ironclads.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:ironclads.market_goods_exports
			}
			add = {
				add = 20
					add = {
					add = market.mg:grain.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:grain.market_goods_exports
			}
			add = {
				add = 20
					add = {
					add = market.mg:fabric.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:fabric.market_goods_exports
			}
			add = {
				add = 20
					add = {
					add = market.mg:wood.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:wood.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:groceries.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:groceries.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:clothes.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:clothes.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:furniture.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:furniture.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:paper.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:paper.market_goods_exports
			}
			add = {
				add = 60
					add = {
					add = market.mg:clippers.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:clippers.market_goods_exports
			}
			add = {
				add = 70
					add = {
					add = market.mg:steamers.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:steamers.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:silk.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:silk.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:dye.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:dye.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:sulfur.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:sulfur.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:coal.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:coal.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:iron.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:iron.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:lead.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:lead.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:hardwood.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:hardwood.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:rubber.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:rubber.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:oil.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:oil.market_goods_exports
			}
			add = {
				add = 60
					add = {
					add = market.mg:engines.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:engines.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:steel.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:steel.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:glass.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:glass.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:fertilizer.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:fertilizer.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:tools.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:tools.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:explosives.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:explosives.market_goods_exports
			}
			add = {
				add = 70
					add = {
					add = market.mg:porcelain.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:porcelain.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:meat.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:meat.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:fruit.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:fruit.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:liquor.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:liquor.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:wine.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:wine.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:tea.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:tea.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:coffee.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:coffee.market_goods_exports
			}
			add = {
				add = 30
					add = {
					add = market.mg:sugar.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:sugar.market_goods_exports
			}
			add = {
				add = 40
					add = {
					add = market.mg:tobacco.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:tobacco.market_goods_exports
			}
			add = {
				add = 50
					add = {
					add = market.mg:opium.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:opium.market_goods_exports
			}
			add = {
				add = 100
					add = {
					add = market.mg:automobiles.market_goods_pricier
						multiply = 100
						}
					multiply = market.mg:automobiles.market_goods_exports
			}
			add = {
				add = 70
					add = {
					add = market.mg:telephones.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:telephones.market_goods_exports
			}
			add = {
				add = 80
					add = {
					add = market.mg:radios.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:radios.market_goods_exports
			}
			add = {
				add = 60
					add = {
					add = market.mg:luxury_clothes.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:luxury_clothes.market_goods_exports
			}
			add = {
				add = 60
					add = {
					add = market.mg:luxury_furniture.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:luxury_furniture.market_goods_exports
			}
			add = {
				add = 100
					add = {
					add = market.mg:gold.market_goods_pricier
						multiply = 100
						}
					multiply = market.mg:gold.market_goods_exports
			}
			add = {
				add = 200
					add = {
					add = market.mg:fine_art.market_goods_pricier
						multiply = 200
						}
					multiply = market.mg:fine_art.market_goods_exports
			}


		}
	}
	multiply = 4 #month
	if = {
		limit = {
			has_modifier = weak_currency
		}
		multiply = difference_with_average_gold_exchange_rate_currencies_revers_100
	}
}
export_value_in_currency_week = {
	value = export_value
}
export_value_in_gold_week = {
	value = export_value
	multiply = money_value_target_real #money_value
}
export_value_in_currency = {
	value = export_value_in_gold
	divide = money_value_target_real #money_value
}
export_value_in_gold = {
	value = var:export_value_in_gold
}

############

#import
import_value = {
	value= {
		add = {
			add = {
				add= 20
				add = {
					add = market.mg:fish.market_goods_pricier
					multiply = 20
				}
				multiply = market.mg:fish.market_goods_imports
			}
			add = {
				add= 50
				add = {
					add = market.mg:ammunition.market_goods_pricier
					multiply = 50

					}

				multiply = market.mg:ammunition.market_goods_imports
			}
			add = {
				add= 60
				add = {
					add = market.mg:small_arms.market_goods_pricier
					multiply = 60

					}

				multiply = market.mg:small_arms.market_goods_imports
			}
			add = {
				add = 70
					add = {
					add = market.mg:artillery.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:artillery.market_goods_imports
			}
			add = {
				add = 80
					add = {
					add = market.mg:tanks.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:tanks.market_goods_imports
			}
			add = {
				add = 80
					add = {
					add = market.mg:aeroplanes.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:aeroplanes.market_goods_imports
			}
			add = {
				add = 70
					add = {
					add = market.mg:manowars.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:manowars.market_goods_imports
			}
			add = {
				add = 80
					add = {
					add = market.mg:ironclads.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:ironclads.market_goods_imports
			}
			add = {
				add = 20
					add = {
					add = market.mg:grain.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:grain.market_goods_imports
			}
			add = {
				add = 20
					add = {
					add = market.mg:fabric.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:fabric.market_goods_imports
			}
			add = {
				add = 20
					add = {
					add = market.mg:wood.market_goods_pricier
						multiply = 20
						}
					multiply = market.mg:wood.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:groceries.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:groceries.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:clothes.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:clothes.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:furniture.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:furniture.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:paper.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:paper.market_goods_imports
			}
			add = {
				add = 60
					add = {
					add = market.mg:clippers.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:clippers.market_goods_imports
			}
			add = {
				add = 70
					add = {
					add = market.mg:steamers.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:steamers.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:silk.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:silk.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:dye.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:dye.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:sulfur.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:sulfur.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:coal.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:coal.market_goods_imports
			}

			add = {
				add = 40
					add = {
					add = market.mg:iron.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:iron.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:lead.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:lead.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:hardwood.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:hardwood.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:rubber.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:rubber.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:oil.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:oil.market_goods_imports
			}
			add = {
				add = 60
					add = {
					add = market.mg:engines.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:engines.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:steel.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:steel.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:glass.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:glass.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:fertilizer.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:fertilizer.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:tools.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:tools.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:explosives.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:explosives.market_goods_imports
			}
			add = {
				add = 70
					add = {
					add = market.mg:porcelain.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:porcelain.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:meat.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:meat.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:fruit.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:fruit.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:liquor.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:liquor.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:wine.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:wine.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:tea.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:tea.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:coffee.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:coffee.market_goods_imports
			}
			add = {
				add = 30
					add = {
					add = market.mg:sugar.market_goods_pricier
						multiply = 30
						}
					multiply = market.mg:sugar.market_goods_imports
			}
			add = {
				add = 40
					add = {
					add = market.mg:tobacco.market_goods_pricier
						multiply = 40
						}
					multiply = market.mg:tobacco.market_goods_imports
			}
			add = {
				add = 50
					add = {
					add = market.mg:opium.market_goods_pricier
						multiply = 50
						}
					multiply = market.mg:opium.market_goods_imports
			}
			add = {
				add = 100
					add = {
					add = market.mg:automobiles.market_goods_pricier
						multiply = 100
						}
					multiply = market.mg:automobiles.market_goods_imports
			}
			add = {
				add = 70
					add = {
					add = market.mg:telephones.market_goods_pricier
						multiply = 70
						}
					multiply = market.mg:telephones.market_goods_imports
			}
			add = {
				add = 80
					add = {
					add = market.mg:radios.market_goods_pricier
						multiply = 80
						}
					multiply = market.mg:radios.market_goods_imports
			}
			add = {
				add = 60
					add = {
					add = market.mg:luxury_clothes.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:luxury_clothes.market_goods_imports
			}
			add = {
				add = 60
					add = {
					add = market.mg:luxury_furniture.market_goods_pricier
						multiply = 60
						}
					multiply = market.mg:luxury_furniture.market_goods_imports
			}
			add = {
				add = 100
					add = {
					add = market.mg:gold.market_goods_pricier
						multiply = 100
						}
					multiply = market.mg:gold.market_goods_imports
			}
			add = {
				add = 200
					add = {
					add = market.mg:fine_art.market_goods_pricier
						multiply = 200
						}
					multiply = market.mg:fine_art.market_goods_imports
			}
		}
	}
	multiply = 4 #month
}
import_value_in_gold_week = {
	value = import_value_in_currency_week
	multiply = money_value_target_real
}
import_value_in_currency = {
	value = var:import_value_in_currency
}
import_value_in_gold = {
	value = import_value_in_currency
	multiply = money_value_target_real
}

#import revers
import_value_in_currency_week_revers = {
	value = import_value_in_currency_week
	multiply = -1
}
import_value_in_gold_week_revers = {
	value = import_value_in_gold_week
	multiply = -1
}
import_value_in_currency_revers = {
	value = import_value_in_currency
	multiply = -1
}
import_value_in_gold_revers = {
	value = import_value_in_gold
	multiply = -1
}

############
#trade_balance_synth
trade_balance_in_currency = {
	value = 0
	add = export_value_in_currency
	subtract = import_value_in_currency
}
trade_balance_in_currency_delta = {
	value = 0
	add = export_value_in_currency_week
	subtract = import_value_in_currency_week

	#6 mounth
	multiply = 26
}
trade_balance_in_gold = {
	value = 1
	add = trade_balance_in_currency
	multiply = money_value_target_real #money_value
}
trade_balance_in_gold_delta = {
	value = trade_balance_in_currency_delta
	multiply = money_value_target_real #money_value
}

############
gold_reserves_var = {
	value = gold_reserves
}
gold_reserve_rest = {
	value = gold_reserves

	subtract = var:grain_buy_price_by_price_in_gold
	subtract = var:wood_buy_price_by_price_in_gold
	subtract = var:coal_buy_price_by_price_in_gold
	subtract = var:iron_buy_price_by_price_in_gold
	subtract = var:sulfur_buy_price_by_price_in_gold
	subtract = var:lead_buy_price_by_price_in_gold
	subtract = var:oil_buy_price_by_price_in_gold
	subtract = var:dye_buy_price_by_price_in_gold
	subtract = var:silk_buy_price_by_price_in_gold
	subtract = var:rubber_buy_price_by_price_in_gold
	subtract = var:ammunition_buy_price_by_price_in_gold
	subtract = var:small_arms_buy_price_by_price_in_gold
	subtract = var:artillery_buy_price_by_price_in_gold
	subtract = var:tanks_buy_price_by_price_in_gold
	subtract = var:aeroplanes_buy_price_by_price_in_gold
	subtract = var:manowars_buy_price_by_price_in_gold
	subtract = var:ironclads_buy_price_by_price_in_gold

	subtract = var:grain_sell_price_by_price_in_gold
	subtract = var:wood_sell_price_by_price_in_gold
	subtract = var:coal_sell_price_by_price_in_gold
	subtract = var:iron_sell_price_by_price_in_gold
	subtract = var:sulfur_sell_price_by_price_in_gold
	subtract = var:lead_sell_price_by_price_in_gold
	subtract = var:oil_sell_price_by_price_in_gold
	subtract = var:dye_sell_price_by_price_in_gold
	subtract = var:silk_sell_price_by_price_in_gold
	subtract = var:rubber_sell_price_by_price_in_gold
	subtract = var:ammunition_sell_price_by_price_in_gold
	subtract = var:small_arms_sell_price_by_price_in_gold
	subtract = var:artillery_sell_price_by_price_in_gold
	subtract = var:tanks_sell_price_by_price_in_gold
	subtract = var:aeroplanes_sell_price_by_price_in_gold
	subtract = var:manowars_sell_price_by_price_in_gold
	subtract = var:ironclads_sell_price_by_price_in_gold
}
gold_reserves_var_01 = {
	value = gold_reserves_var
	multiply = 0.01
}
gold_reserves_var_02 = {
	value = gold_reserves_var
	multiply = 0.02
}
gold_reserves_var_03 = {
	value = gold_reserves_var
	multiply = 0.03
}
gold_reserves_var_04 = {
	value = gold_reserves_var
	multiply = 0.04
}
gold_reserves_var_05 = {
	value = gold_reserves_var
	multiply = 0.05
}
gold_reserves_var_06 = {
	value = gold_reserves_var
	multiply = 0.06
}
gold_reserves_var_07 = {
	value = gold_reserves_var
	multiply = 0.07
}
gold_reserves_var_08 = {
	value = gold_reserves_var
	multiply = 0.08
}
gold_reserves_var_09 = {
	value = gold_reserves_var
	multiply = 0.09
}
gold_reserves_var_10 = {
	value = gold_reserves_var
	multiply = 0.1
}
gold_reserves_var_11 = {
	value = gold_reserves_var
	multiply = 0.11
}
gold_reserves_var_12 = {
	value = gold_reserves_var
	multiply = 0.12
}
gold_reserves_var_13 = {
	value = gold_reserves_var
	multiply = 0.13
}
gold_reserves_var_25 = {
	value = gold_reserves_var
	multiply = 0.25
}
gold_reserves_var_35 = {
	value = gold_reserves_var
	multiply = 0.35
}

gold_reserves_10 = {
	value = gold_reserves_limit
	multiply = 0.10
}
gold_reserves_20 = {
	value = gold_reserves_limit
	multiply = 0.20
}
gold_reserves_25 = {
	value = gold_reserves_limit
	multiply = 0.25
}
gold_reserves_30 = {
	value = gold_reserves_limit
	multiply = 0.23
}
gold_reserves_40 = {
	value = gold_reserves_limit
	multiply = 0.40
}
gold_reserves_50 = {
	value = gold_reserves_limit
	multiply = 0.50
}
gold_reserves_60 = {
	value = gold_reserves_limit
	multiply = 0.60
}
gold_reserves_70 = {
	value = gold_reserves_limit
	multiply = 0.70
}
gold_reserves_75 = {
	value = gold_reserves_limit
	multiply = 0.75
}
gold_reserves_80 = {
	value = gold_reserves_limit
	multiply = 0.80
}
gold_reserves_90 = {
	value = gold_reserves_limit
	multiply = 0.90
}
gold_reserves_rest = {
	value = gold_reserves_limit
	subtract = gold_reserves
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███████╗██╗  ██╗ ██████╗██╗  ██╗ █████╗ ███╗   ██╗ ██████╗ ███████╗    ██████╗  █████╗ ████████╗███████╗    ███╗   ███╗ █████╗ ██████╗ ██╗  ██╗███████╗████████╗
# ██╔════╝╚██╗██╔╝██╔════╝██║  ██║██╔══██╗████╗  ██║██╔════╝ ██╔════╝    ██╔══██╗██╔══██╗╚══██╔══╝██╔════╝    ████╗ ████║██╔══██╗██╔══██╗██║ ██╔╝██╔════╝╚══██╔══╝
# █████╗   ╚███╔╝ ██║     ███████║███████║██╔██╗ ██║██║  ███╗█████╗      ██████╔╝███████║   ██║   █████╗      ██╔████╔██║███████║██████╔╝█████╔╝ █████╗     ██║
# ██╔══╝   ██╔██╗ ██║     ██╔══██║██╔══██║██║╚██╗██║██║   ██║██╔══╝      ██╔══██╗██╔══██║   ██║   ██╔══╝      ██║╚██╔╝██║██╔══██║██╔══██╗██╔═██╗ ██╔══╝     ██║
# ███████╗██╔╝ ██╗╚██████╗██║  ██║██║  ██║██║ ╚████║╚██████╔╝███████╗    ██║  ██║██║  ██║   ██║   ███████╗    ██║ ╚═╝ ██║██║  ██║██║  ██║██║  ██╗███████╗   ██║
# ╚══════╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝    ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝   ╚═╝
#
# ██████╗  █████╗ ███╗   ██╗███████╗██╗
# ██╔══██╗██╔══██╗████╗  ██║██╔════╝██║
# ██████╔╝███████║██╔██╗ ██║█████╗  ██║
# ██╔═══╝ ██╔══██║██║╚██╗██║██╔══╝  ██║
# ██║     ██║  ██║██║ ╚████║███████╗███████╗
# ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚══════╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#exchange_rate
exchange_rate_1_XXX = {
	value = player.money_value_rapported_inflation
	divide = money_value_rapported_inflation
}
exchange_rate_XXX_1 = {
	value = money_value_rapported_inflation
	divide = player.money_value_rapported_inflation
}

exchange_rate_for_international_trade_buy_market_panel = {
	value = player.money_value_rapported_inflation
	divide = money_value_rapported_inflation
}
exchange_rate_for_international_trade_buy_for_target_market_panel = {
	value = money_value_rapported_inflation
	divide = player.money_value_rapported_inflation
}

#######
exchange_rate_our_reference = {    #(FRF/GBP = 0.25) = (1FRF = 0.25 GBP)
	value = money_value_rapported_inflation
	divide = global_monetary_reference
}
exchange_rate_reference_our = {  #(GBP/FRF = 15) = (1GBP = 15 FRF)
	value = global_monetary_reference
	divide = money_value_rapported_inflation
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ██╗███╗   ██╗████████╗███████╗██████╗ ███████╗███████╗████████╗    ██╗   ██╗ █████╗ ██╗     ██╗   ██╗███████╗
# ██║████╗  ██║╚══██╔══╝██╔════╝██╔══██╗██╔════╝██╔════╝╚══██╔══╝    ██║   ██║██╔══██╗██║     ██║   ██║██╔════╝
# ██║██╔██╗ ██║   ██║   █████╗  ██████╔╝█████╗  ███████╗   ██║       ██║   ██║███████║██║     ██║   ██║█████╗
# ██║██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗██╔══╝  ╚════██║   ██║       ╚██╗ ██╔╝██╔══██║██║     ██║   ██║██╔══╝
# ██║██║ ╚████║   ██║   ███████╗██║  ██║███████╗███████║   ██║        ╚████╔╝ ██║  ██║███████╗╚██████╔╝███████╗
# ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝   ╚═╝         ╚═══╝  ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚══════╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

country_interest = {
    add = root.modifier:country_loan_interest_rate_add
    multiply = {
        add = 1
        add = root.modifier:country_loan_interest_rate_mult
    }
}
interest_value_5Y = {
	value = var:target_interest_rate
	multiply = var:interest_value_5Y_variation
}
interest_value_10Y = {
	value = var:target_interest_rate
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███████╗ ██████╗ ██████╗ ███████╗██╗  ██╗    ██╗     ██╗███╗   ███╗██╗████████╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗
# ██╔════╝██╔═══██╗██╔══██╗██╔════╝╚██╗██╔╝    ██║     ██║████╗ ████║██║╚══██╔══╝██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║
# █████╗  ██║   ██║██████╔╝█████╗   ╚███╔╝     ██║     ██║██╔████╔██║██║   ██║   ███████║   ██║   ██║██║   ██║██╔██╗ ██║
# ██╔══╝  ██║   ██║██╔══██╗██╔══╝   ██╔██╗     ██║     ██║██║╚██╔╝██║██║   ██║   ██╔══██║   ██║   ██║██║   ██║██║╚██╗██║
# ██║     ╚██████╔╝██║  ██║███████╗██╔╝ ██╗    ███████╗██║██║ ╚═╝ ██║██║   ██║   ██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║
# ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

##################
sell_limit_currency_var_0 = {
	value = 0
	if = {
		limit = {
			country_rank = rank_value:great_power
		}
		add = 100000000
	}
	if = {
		limit = {
			country_rank = rank_value:major_power
		}
		add = 80000000
	}
	if = {
		limit = {
			country_rank = rank_value:unrecognized_major_power
		}
		add = 60000000
	}
	if = {
		limit = {
			country_rank = rank_value:unrecognized_regional_power
		}
		add = 4000000
	}
	if = {
		limit = {
			country_rank = rank_value:minor_power
		}
		add = 20000000
	}
	if = {
		limit = {
			country_rank = rank_value:unrecognized_power
		}

	}
}
sell_limit_currency_var_rest = {
	value = sell_limit_currency_var_0
	subtract = var:sell_limit_currency_var_1
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ███████╗████████╗ ██████╗  ██████╗██╗  ██╗██████╗ ██╗██╗     ██╗███╗   ██╗ ██████╗          ██████╗██╗   ██╗██████╗ ██████╗ ███████╗███╗   ██╗ ██████╗██╗   ██╗     ███████╗████████╗ █████╗ ████████╗
# ██╔════╝╚══██╔══╝██╔═══██╗██╔════╝██║ ██╔╝██╔══██╗██║██║     ██║████╗  ██║██╔════╝         ██╔════╝██║   ██║██╔══██╗██╔══██╗██╔════╝████╗  ██║██╔════╝╚██╗ ██╔╝     ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝
# ███████╗   ██║   ██║   ██║██║     █████╔╝ ██████╔╝██║██║     ██║██╔██╗ ██║██║  ███╗        ██║     ██║   ██║██████╔╝██████╔╝█████╗  ██╔██╗ ██║██║      ╚████╔╝      ███████╗   ██║   ███████║   ██║   
# ╚════██║   ██║   ██║   ██║██║     ██╔═██╗ ██╔═══╝ ██║██║     ██║██║╚██╗██║██║   ██║        ██║     ██║   ██║██╔══██╗██╔══██╗██╔══╝  ██║╚██╗██║██║       ╚██╔╝       ╚════██║   ██║   ██╔══██║   ██║   
# ███████║   ██║   ╚██████╔╝╚██████╗██║  ██╗██║     ██║███████╗██║██║ ╚████║╚██████╔╝███████╗╚██████╗╚██████╔╝██║  ██║██║  ██║███████╗██║ ╚████║╚██████╗   ██║███████╗███████║   ██║   ██║  ██║   ██║   
# ╚══════╝   ╚═╝    ╚═════╝  ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝   ╚═╝╚══════╝╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   
#                                                                                                                                                                                                       
# ███████╗        ██╗███╗   ██╗         ██████╗  ██████╗ ██╗     ██████╗                                                                                                                                
# ██╔════╝        ██║████╗  ██║        ██╔════╝ ██╔═══██╗██║     ██╔══██╗                                                                                                                               
# █████╗          ██║██╔██╗ ██║        ██║  ███╗██║   ██║██║     ██║  ██║                                                                                                                               
# ██╔══╝          ██║██║╚██╗██║        ██║   ██║██║   ██║██║     ██║  ██║                                                                                                                               
# ███████╗███████╗██║██║ ╚████║███████╗╚██████╔╝╚██████╔╝███████╗██████╔╝                                                                                                                               
# ╚══════╝╚══════╝╚═╝╚═╝  ╚═══╝╚══════╝ ╚═════╝  ╚═════╝ ╚══════╝╚═════╝                                                                                                                                

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

all_currency_in_gold_10 = {
	value = all_currency_in_gold
	multiply = 0.1
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

# ██╗███╗   ██╗███████╗██╗      █████╗ ████████╗██╗ ██████╗ ███╗   ██╗
# ██║████╗  ██║██╔════╝██║     ██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║
# ██║██╔██╗ ██║█████╗  ██║     ███████║   ██║   ██║██║   ██║██╔██╗ ██║
# ██║██║╚██╗██║██╔══╝  ██║     ██╔══██║   ██║   ██║██║   ██║██║╚██╗██║
# ██║██║ ╚████║██║     ███████╗██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║
# ╚═╝╚═╝  ╚═══╝╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

inflation_value_for_currency = {
	value = 100
	if = {
		limit = {
			inflation_value_100 > 0
		}
		subtract = inflation_value_100
	}
	if = {
		limit = {
			inflation_value_100 < 0
		}
		subtract = inflation_value_100
	}
	divide = 100
}
inflation_value_100 = {
	value = inflation_value
	multiply = 100
}
inflation_value = {
	value = 0
	add = var:inflation_on_consumer_goods_rolling_inflation_6_months
	add = var:inflation_on_energy_rolling_inflation_6_months
	add = var:inflation_on_raw_material_rolling_inflation_6_months
	add = var:inflation_on_manufactured_goods_rolling_inflation_6_months
	add = var:inflation_on_military_equipment_rolling_inflation_6_months
	add = var:money_value_dif_01_rolling_inflation_6_months

}
inflation_value_for_modifier = {
	value = inflation_value
	max = 1
	min = -1
}

#inflation_on_consumer_goods
inflation_on_consumer_goods_market_value = {
	add = market.inflation_on_consumer_goods
}
inflation_on_consumer_goods = {
	add = {
		market = {
			mg:grain = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:fish = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:fabric = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:clothes = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:furniture = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:paper = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:services = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:transportation = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:porcelain = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:meat = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:fruit = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:wine = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:tea = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:tobacco = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:opium = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:automobiles = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:telephones = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:radios = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:luxury_clothes = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:luxury_furniture = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:fine_art = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
		}
	}
	divide = {
		value = 0.1
		add = market.mg:grain.market_goods_buy_orders
		add = market.mg:fish.market_goods_buy_orders
		add = market.mg:fabric.market_goods_buy_orders
		add = market.mg:clothes.market_goods_buy_orders
		add = market.mg:furniture.market_goods_buy_orders
		add = market.mg:paper.market_goods_buy_orders
		add = market.mg:services.market_goods_buy_orders
		add = market.mg:transportation.market_goods_buy_orders
		add = market.mg:porcelain.market_goods_buy_orders
		add = market.mg:meat.market_goods_buy_orders
		add = market.mg:fruit.market_goods_buy_orders
		add = market.mg:wine.market_goods_buy_orders
		add = market.mg:tea.market_goods_buy_orders
		add = market.mg:tobacco.market_goods_buy_orders
		add = market.mg:opium.market_goods_buy_orders
		add = market.mg:automobiles.market_goods_buy_orders
		add = market.mg:telephones.market_goods_buy_orders
		add = market.mg:radios.market_goods_buy_orders
		add = market.mg:luxury_clothes.market_goods_buy_orders
		add = market.mg:luxury_furniture.market_goods_buy_orders
		add = market.mg:fine_art.market_goods_buy_orders
	}
}
inflation_on_consumer_goods_market_value_abs = {
	value = 1
	if = {
		limit = {
			inflation_on_consumer_goods_market_value > 0
		}
		add = inflation_on_consumer_goods_market_value
	}
	if = {
		limit = {
			inflation_on_consumer_goods_market_value < 0
		}
		subtract = inflation_on_consumer_goods_market_value
	}
}

#inflation_on_energy
inflation_on_energy_market_value = {
	add = market.inflation_on_energy
}
inflation_on_energy = {
	add = {
		market = {
			mg:wood = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:electricity = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:coal = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:oil = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
		}
	}
	divide = {
		value = 0.1
		add = market.mg:wood.market_goods_buy_orders
		add = market.mg:electricity.market_goods_buy_orders
		add = market.mg:hardwood.market_goods_buy_orders
		add = market.mg:coal.market_goods_buy_orders
		add = market.mg:oil.market_goods_buy_orders
	}
}
inflation_on_energy_market_value_abs = {
	value = 1
	if = {
		limit = {
			inflation_on_energy_market_value > 0
		}
		add = inflation_on_energy_market_value
	}
	if = {
		limit = {
			inflation_on_energy_market_value < 0
		}
		subtract = inflation_on_energy_market_value
	}
}

#inflation_on_raw_material
inflation_on_raw_material_market_value = {
	add = market.inflation_on_raw_material
}
inflation_on_raw_material = {
	add = {
		market = {
			mg:silk = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:dye = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:sulfur = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:iron = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:lead = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:rubber = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
		}
	}
	divide = {
		value = 0.1
		add = market.mg:silk.market_goods_buy_orders
		add = market.mg:dye.market_goods_buy_orders
		add = market.mg:hardwood.market_goods_buy_orders
		add = market.mg:sulfur.market_goods_buy_orders
		add = market.mg:iron.market_goods_buy_orders
		add = market.mg:lead.market_goods_buy_orders
		add = market.mg:rubber.market_goods_buy_orders
	}
}
inflation_on_raw_material_market_value_abs = {
	value = 1
	if = {
		limit = {
			inflation_on_raw_material_market_value > 0
		}
		add = inflation_on_raw_material_market_value
	}
	if = {
		limit = {
			inflation_on_raw_material_market_value < 0
		}
		subtract = inflation_on_raw_material_market_value
	}
}

#inflation_on_manufactured_goods
inflation_on_manufactured_goods_market_value = {
	add = market.inflation_on_manufactured_goods
}
inflation_on_manufactured_goods = {
	value = 0
	add = {
		market = {
			mg:clippers = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:steamers = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:engines = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:steel = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:glass = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:fertilizer = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:tools = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
			mg:explosives = {
				add = {
					add = market_goods_pricier
					multiply = market_goods_buy_orders
				}
			}
		}
	}
	divide = {
		value = 0.1
		add = market.mg:clippers.market_goods_buy_orders
		add = market.mg:steamers.market_goods_buy_orders
		add = market.mg:hardwood.market_goods_buy_orders
		add = market.mg:engines.market_goods_buy_orders
		add = market.mg:steel.market_goods_buy_orders
		add = market.mg:glass.market_goods_buy_orders
		add = market.mg:fertilizer.market_goods_buy_orders
		add = market.mg:tools.market_goods_buy_orders
		add = market.mg:explosives.market_goods_buy_orders
	}
}
inflation_on_manufactured_goods_market_value_abs = {
	value = 1
	if = {
		limit = {
			inflation_on_manufactured_goods_market_value > 0
		}
		add = inflation_on_manufactured_goods_market_value
	}
	if = {
		limit = {
			inflation_on_manufactured_goods_market_value < 0
		}
		subtract = inflation_on_manufactured_goods_market_value
	}
}

#inflation_on_military_equipment
inflation_on_military_equipment_market_value = {
	add = market.inflation_on_military_equipment
}
inflation_on_military_equipment = {
	add = {

		############
		# MILITARY #
		############

		mg:ammunition = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:small_arms = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:artillery = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:tanks = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:aeroplanes = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:manowars = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
		mg:ironclads = {
			add = {
				add = market_goods_pricier
				multiply = market_goods_buy_orders
			}
		}
	}
	divide = {

		############
		# MILITARY #
		############

		mg:ammunition = {
			add = market_goods_buy_orders

		}
		mg:small_arms = {
			add = market_goods_buy_orders

		}
		mg:artillery = {
			add = market_goods_buy_orders

		}
		mg:tanks = {
			add = market_goods_buy_orders

		}
		mg:aeroplanes = {
			add = market_goods_buy_orders

		}
		mg:manowars = {
			add = market_goods_buy_orders

		}
		mg:ironclads = {
			add = market_goods_buy_orders

		}
	}
}
inflation_on_military_equipment_market_value_abs = {
	value = 1
	if = {
		limit = {
			inflation_on_military_equipment_market_value > 0
		}
		add = inflation_on_military_equipment_market_value
	}
	if = {
		limit = {
			inflation_on_military_equipment_market_value < 0
		}
		subtract = inflation_on_military_equipment_market_value
	}
}
