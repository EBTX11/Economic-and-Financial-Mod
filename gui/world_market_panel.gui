# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types world_market_panel
{
	type world_market_panel = default_block_window {
		name = "world_market_panel"
		
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/Market/world_market_panel_open"
				}
			}

			state = {
				name = _hide
				start_sound = {
					soundeffect = "event:/SFX/UI/Market/world_market_panel_stop"
				}
			}
		}
		
		blockoverride "window_header_name"
		{
			raw_text = "WORLD_MARKET_HEADER"
		}
		
		blockoverride "fixed_top"
		{
			tab_buttons = {
				# Overview
				blockoverride "first_button" {
					text = "concept_goods"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "concept_goods"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('default')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected" {
					text = "concept_goods"
				}

				# Details
				blockoverride "second_button" {
					text = "PARTICIPANTS"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "PARTICIPANTS"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('participants')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('participants')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('participants') )]"
				}
				blockoverride "second_button_selected" {
					text = "PARTICIPANTS"
				}
			}

			flowcontainer = {
				visible = "[InformationPanel.IsTabSelected('default')]"
				direction = vertical

				section_header_button = {					
					blockoverride "left_text" {
						text = "FILTERS"
						fontsize_min = 12
						elide = right
					}

					blockoverride "right_text" {
						section_header_right_text = {
							text = "WORLD_MARKET_CURRENT_GOODS_FILTERS"
						}
					}

					blockoverride "onclick" {
						onclick = "[GetVariableSystem.Toggle( 'world_market_filters' )]"
					}
					
					blockoverride "onclick_showmore" {
						visible = "[Not(GetVariableSystem.Exists( 'world_market_filters' ))]"
					}

					blockoverride "onclick_showless" {
						visible = "[GetVariableSystem.Exists( 'world_market_filters' )]"
					}
				}

				flowcontainer = {
					visible = "[GetVariableSystem.Exists( 'world_market_filters' )]"
					minimumsize = { @panel_width_plus_14 -1 }
					using = default_list_position
					margin_bottom = 10
					margin_top = 5
					spacing = 10

					background = {
						using = dark_area
					}

					### LIST
					flowcontainer = {
						direction = vertical

						textbox = {
							text = "GOODS_CATEGORY"
							multiline = yes
							size = { 95 75 }
							align = right|nobaseline
							margin_right = 10
							margin_left = 10
							using = elide_fontsize_min
						}

						textbox = {
							text = "concept_prestige_goods"
							visible = "[And(InformationPanel.IsTabSelected('default'), HasDlcFeature('mp1_prestige_goods'))]"
							size = { 95 60 }
							align = right|nobaseline
							margin_right = 10
							margin_left = 10
							using = elide_fontsize_min
							multiline = yes
						}
					}

					vertical_divider = {}

					flowcontainer = {
						margin_left = 10
						direction = vertical

						world_market_goods_filters = {}

						flowcontainer = {
							visible = "[And(InformationPanel.IsTabSelected('default'), HasDlcFeature('mp1_prestige_goods'))]"
							spacing = 5
							margin_top = 13


							filter_button = {
								visible = "[GetVariableSystem.Exists( 'hide_prestige_goods' )]"

								blockoverride "text" {
									text = "SHOW"
								}

								blockoverride "onclick" {
									onclick = "[GetVariableSystem.Toggle( 'hide_prestige_goods' )]"
								}
							}

							filter_background_selected = {
								visible = "[Not(GetVariableSystem.Exists( 'hide_prestige_goods' ))]"

								blockoverride "text" {
									text = "SHOW"
								}
							}

							filter_button = {
								visible = "[Not(GetVariableSystem.Exists( 'hide_prestige_goods' ))]"
							
								blockoverride "text" {
									text = "HIDE"
								}

								blockoverride "onclick" {
									onclick = "[GetVariableSystem.Toggle( 'hide_prestige_goods' )]"
								}
							}

							filter_background_selected = {
								visible = "[GetVariableSystem.Exists( 'hide_prestige_goods' )]" 

								blockoverride "text" {
									text = "HIDE"
								}
							}

						}
					}
				}
			}
		}
		
		blockoverride "scrollarea_content"
		{
			container = {
				parentanchor = hcenter
				
				world_market_panel_details_content = {
					visible = "[InformationPanel.IsTabSelected('default')]"
					using = default_fade_in_out
				}

				flowcontainer = {
					visible = "[InformationPanel.IsTabSelected('participants')]"
					using = default_list_position
					minimumsize = { @panel_width_plus_14 -1 }
					direction = vertical

					container = {
						using = default_list_position
						minimumsize = { @panel_width_plus_14 -1 }
						background = {
							using = dark_area
						}

						flowcontainer = {
							spacing = 10
							margin_bottom = 10
							margin_top = 10
							parentanchor = hcenter

							market_importers_piechart = {}
							market_exporters_piechart = {}
						}
					}

					flowcontainer = {
						using = default_list_position
						margin = { 0 5 }

						sort_button = {
							text = "concept_market"
							onclick = "[WorldMarketPanel.SortMarkets('name')]"
							align = hcenter|nobaseline
							size = { 150 20 }
						}

						sort_button = {
							text = "concept_imports"
							onclick = "[WorldMarketPanel.SortMarkets('imports')]"
							align = hcenter|nobaseline
							size = { 170 20 }
							margin_right = 7
						}

						sort_button = {
							text = "concept_exports"
							onclick = "[WorldMarketPanel.SortMarkets('exports')]"
							align = hcenter|nobaseline
							size = { 170 20 }
							margin_right = 7
						}

						sort_button = {
							raw_text = "@market_balance!"
							onclick = "[WorldMarketPanel.SortMarkets('trade_deficit_surplus')]"
							tooltip = "TRADE_DEFICIT_SURPLUS"
							align = hcenter|nobaseline
							size = { 50 20 }
						}
					}

					flowcontainer = {
						datamodel = "[WorldMarketPanel.GetMarkets]"
						direction = vertical
						using = default_list_position

						item = {
							flowcontainer = {
								minimumsize = { -1 30 }
								background = {
									using = entry_bg_simple
								}

								textbox = {
									text = "[Market.GetOwner.GetFlagTextIcon] [Market.GetName]"
									autoresize = yes
									minimumsize = { 120 -1 }
									maximumsize = { 120 -1 }
									align = nobaseline
									parentanchor = vcenter
									margin_left = 7
									elide = right
								}
								container = {
									minimumsize = { 30 -1 }
									parentanchor = vcenter

									button_icon_goto = {
										onclick = "[InformationPanelBar.OpenMarketPanel(Market.Self)]"
										tooltip = "GO_TO_BUTTON_MARKET"
										parentanchor = vcenter|right
										size = { 23 23 }
									}
								}

								textbox = {
									text = "[Market.GetTotalImportedAmount|vD]"
									autoresize = yes
									minimumsize = { 70 -1 }
									maximumsize = { 70 -1 }
									margin_right = 5
									align = right|nobaseline
									parentanchor = vcenter
								}

								flowcontainer = {
									datamodel = "[DataModelFirst(Market.GetImports, '(int32)4')]"
									parentanchor = vcenter
									minimumsize = { 100 -1 }

									item = {
										small_goods_button = {}
									}
								}

								vertical_divider = {}
								
								textbox = {
									text = "[Market.GetTotalExportedAmount|vD]"
									autoresize = yes
									minimumsize = { 70 -1 }
									maximumsize = { 70 -1 }
									margin_right = 5
									align = right|nobaseline
									parentanchor = vcenter
								}

								flowcontainer = {
									datamodel = "[DataModelFirst(Market.GetExports, '(int32)4')]"
									parentanchor = vcenter
									minimumsize = { 100 -1 }

									item = {
										small_goods_button = {}
									}
								}

								vertical_divider = {}

								textbox = {
									text = "TRADE_DEFICIT_SURPLUS_VALUE"
									tooltip = "TRADE_SURPLUS_TOOLTIP"
									visible = "[GreaterThan_CFixedPoint(Market.GetTradeSurplus,'(CFixedPoint)-1')]"
									autoresize = yes
									minimumsize = { 50 -1 }
									maximumsize = { 50 -1 }
									margin_right = 5
									align = right|nobaseline
									parentanchor = vcenter
									using = elide_fontsize_min
								}
								
								textbox = {
									text = "NOT_AVAILABLE"
									alpha = 0.5
									visible = "[Not(GreaterThan_CFixedPoint(Market.GetTradeSurplus,'(CFixedPoint)-1'))]"
									autoresize = yes
									minimumsize = { 50 -1 }
									maximumsize = { 50 -1 }
									margin_right = 5
									align = right|nobaseline
									parentanchor = vcenter
									using = elide_fontsize_min
								}								
							}
						}
					}
				}
			}
		}
	}

	type small_goods_button = button {
		size = { 23 23 }
		onclick = "[InformationPanelBar.OpenGoodsPanel(Goods.GetMarket, Goods.Self)]"
		onrightclick = "[RightClickMenuManager.ShowForGoods(Goods.AccessSelf)]"

		icon = {
			size = { 23 23 }
			texture = "[Goods.GetTexture]"

			block "tooltip" {
				tooltipwidget = {
					FancyTooltip_Goods = {}
				}
			}
		}
	}


	type world_market_panel_details_content = container {
		parentanchor = hcenter
		
		flowcontainer = {
			direction = vertical
			using = default_list_position
			margin_bottom = 20

			flowcontainer = {
				using = default_list_position
				margin = { 0 5 }
				
				sort_button = {
					onclick = "[WorldMarketPanel.SortGoods('name')]"
					tooltip = "SORT_BY_MARKET_GOODS"
					size = { 60 20 }
					
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_good.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}


				sort_button = {
					raw_text = "MARKET_PRICE"
					onclick = "[WorldMarketPanel.SortGoods('price')]"
					align = hcenter|nobaseline
					size = { 190 20 }
				}

				sort_button = {
					onclick = "[WorldMarketPanel.SortGoods('balance')]"
					tooltip = "SORT_BY_BALANCE_TOOLTIP"
					align = hcenter|nobaseline
					size = { 90 20 }
					margin_right = 7

					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_balance.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}

				sort_button = {
					text = "concept_exports"
					tooltip = "SORT_BY_EXPORTS"
					onclick = "[WorldMarketPanel.SortGoods('exports')]"
					align = hcenter|nobaseline
					size = { 100 20 }	
				}

				sort_button = {
					text = "concept_imports"
					tooltip = "SORT_BY_IMPORTS"
					onclick = "[WorldMarketPanel.SortGoods('imports')]"
					align = hcenter|nobaseline
					size = { 100 20 }
					margin_right = 7
				}
			}

			flowcontainer = {
				using = default_list_position
				direction = vertical
				spacing = 20
				
				flowcontainer = {
					datamodel = "[WorldMarketPanel.GetGoods( WorldMarketPanel.GetFilters )]"
					direction = vertical
					spacing = 2
					parentanchor = hcenter
					
					item = {
						world_market_goods_entry_button = {}
					}
				}				
			}
		}
	}
	
	type world_market_goods_filters = flowcontainer {
		spacing = 5
		
		### STAPLE FILTER
		widget = {
			size = { 75 75 }
			
			icon = {
				texture = "gfx/interface/backgrounds/round_frame_dec.dds"
				size = { 75 75 }
				block "staple_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('staple')]"
				}
				using = default_fade_in_out
			}
			world_market_goods_filter_button = {
				block "staple_icon" {
					visible = "[Not(WorldMarketPanel.IsSelected('staple'))]"
				}
				tooltip = "STAPLE_FILTER"
				
				block "staple_onclick" {
					onclick = "[WorldMarketPanel.Filter('staple')]"
					using = market_filter_staple_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_staple_goods.dds"
				}
			}
			world_market_goods_filter_button = {
				block "staple_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('staple')]"
				}
				tooltip = "STAPLE_FILTER"
				
				block "staple_onclick" {
					onclick = "[WorldMarketPanel.Filter('staple')]"
					using = market_filter_staple_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_staple_goods_selected.dds"
				}
			}
		}
		### INDUSTRIAL FILTER
		widget = {
			size = { 75 75 }
			
			icon = {
				texture = "gfx/interface/backgrounds/round_frame_dec.dds"
				size = { 75 75 }
				block "industrial_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('industrial')]"
				}
				using = default_fade_in_out
			}
			world_market_goods_filter_button = {
				block "industrial_icon" {
					visible = "[Not(WorldMarketPanel.IsSelected('industrial'))]"
				}
				tooltip = "INDUSTRIAL_GOODS_FILTER"
				
				block "industrial_onclick" {
					onclick = "[WorldMarketPanel.Filter('industrial')]"
					using = market_filter_industrial_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_industrial_goods.dds"
				}
			}
			world_market_goods_filter_button = {
				block "industrial_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('industrial')]"
				}
				tooltip = "INDUSTRIAL_GOODS_FILTER"
				
				block "industrial_onclick" {
					onclick = "[WorldMarketPanel.Filter('industrial')]"
					using = market_filter_industrial_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_industrial_goods_selected.dds"
				}
			}
		}
		### LUXURY FILTER
		widget = {
			size = { 75 75 }
			
			icon = {
				texture = "gfx/interface/backgrounds/round_frame_dec.dds"
				size = { 75 75 }
				block "luxury_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('luxury')]"
				}
				using = default_fade_in_out
			}
			
			world_market_goods_filter_button = {
				block "luxury_icon" {
					visible = "[Not(WorldMarketPanel.IsSelected('luxury'))]"
				}
				tooltip = "LUXURY_GOODS_FILTER"
				
				block "luxury_onclick" {
					onclick = "[WorldMarketPanel.Filter('luxury')]"
					using = market_filter_luxury_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_luxury_goods.dds"
				}
			}
			world_market_goods_filter_button = {
				block "luxury_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('luxury')]"
				}
				tooltip = "LUXURY_GOODS_FILTER"
				
				block "luxury_onclick" {
					onclick = "[WorldMarketPanel.Filter('luxury')]"
					using = market_filter_luxury_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_luxury_goods_selected.dds"
				}
			}
		}
		### MILITARY FILTER
		widget = {
			size = { 75 75 }
			
			icon = {
				texture = "gfx/interface/backgrounds/round_frame_dec.dds"
				size = { 75 75 }
				block "military_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('military')]"
				}
				using = default_fade_in_out
			}
			
			world_market_goods_filter_button = {
				block "military_icon" {
					visible = "[Not(WorldMarketPanel.IsSelected('military'))]"
				}
				tooltip = "MILITARY_GOODS_FILTER"
				
				block "military_onclick" {
					onclick = "[WorldMarketPanel.Filter('military')]"
					using = market_filter_military_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_military_goods.dds"
				}
			}
			world_market_goods_filter_button = {
				block "military_icon_selected" {
					visible = "[WorldMarketPanel.IsSelected('military')]"
				}
				tooltip = "MILITARY_GOODS_FILTER"
				
				block "military_onclick" {
					onclick = "[WorldMarketPanel.Filter('military')]"
					using = market_filter_military_button_sound
				}
				blockoverride "icon" {
					texture = "gfx/interface/market_view/filter_military_goods_selected.dds"
				}
			}
		}
	}	
	
	type world_market_goods_filter_button = button_icon_round_big {
		size = { 59 59 }
		parentanchor = center
		using = tooltip_above
			
		blockoverride "icon" {
			block "icon" {}
		}
		blockoverride "icon_size" {
			size = { 48 48 }
		}
	}
		
	type world_market_goods_entry_button = flowcontainer {
		direction = vertical

		button = {
			onclick = "[InformationPanelBar.OpenGoodsWorldMarketPanel(Goods.Self)]"
			onrightclick = "[RightClickMenuManager.ShowForGoods(Goods.AccessSelf)]"
			
			size = { @panel_width 50 }
			using = default_button
			using = select_button_sound

			block "tooltip" {
			}

			flowcontainer = {
				parentanchor = left|vcenter
				widgetanchor = left|vcenter
				
				using = world_market_goods_list_item

				widget = {
					using = world_market_price_tooltip_with_graph
					size = { 190 55 }
					
					textbox = {
						raw_text = "[GetPlayer.GetCustom('currency_symbol')][Goods.GetWorldMarketBasePrice|1v] [Goods.GetCompareIconAgainstBasePriceNoFormatting( Goods.GetWorldMarketBasePrice )]"
						align = right|nobaseline
						size = { 110 40 }
						margin_right = 10
						parentanchor = vcenter
					}

					flowcontainer = {
						direction = vertical
						minimumsize = { 80 52 }
						spacing = 5
						margin_top = 10
						parentanchor = right

						textbox = {
							text = "WORLD_MARKET_PANEL_GOODS_PRICE_GOLD"
							visible = "[GreaterThanOrEqualTo_CFixedPoint(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice), '(CFixedPoint)0.01')]"
							align = right|nobaseline
							autoresize = yes
							margin_right = 10
							parentanchor = right
						}

						textbox = {
							text = "WORLD_MARKET_PANEL_GOODS_PRICE"
							visible = "[And( Not(LessThanOrEqualTo_CFixedPoint(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice), '(CFixedPoint)-0.01')), Not(GreaterThanOrEqualTo_CFixedPoint(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice), '(CFixedPoint)0.01')))]"
							align = hcenter|nobaseline
							autoresize = yes
							parentanchor = hcenter
						}

						textbox = {
							text = "WORLD_MARKET_PANEL_GOODS_PRICE_BLUE"
							visible = "[LessThanOrEqualTo_CFixedPoint(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice), '(CFixedPoint)-0.01')]"
							align = left|nobaseline
							autoresize = yes
							margin_left = 10
						}

						double_direction_progressbar_gold = {
							size = { 60 6 }
							parentanchor = hcenter

							blockoverride "negative_min_max_values" {
								min = -0.75
								max = 0
							}

							blockoverride "positive_min_max_values" {
								min = 0
								max = 0.75
							}
							
							blockoverride "value_left" {
								value = "[FixedPointToFloat(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice))]"
							}
							blockoverride "value_right" {
								value = "[FixedPointToFloat(Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice))]"
							}
						}
					}
				}

				vertical_divider = {}
				
				flowcontainer = {
					direction = vertical
					minimumsize = { 90 52 }
					margin_top = 10
					spacing = 5

					textbox = {
						text = "WORLD_MARKET_PANEL_BALANCE_GOLD"
						visible = "[GreaterThan_int32(FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance), '(int32)0')]"
						align = right|nobaseline
						autoresize = yes
						margin_right = 15
						parentanchor = right
					}

					textbox = {
						text = "WORLD_MARKET_PANEL_BALANCE"
						visible = "[EqualTo_int32(FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance), '(int32)0')]"
						align = hcenter|nobaseline
						autoresize = yes
						parentanchor = hcenter
					}

					textbox = {
						text = "WORLD_MARKET_PANEL_BALANCE_BLUE"
						visible = "[LessThan_int32(FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance), '(int32)0')]"
						align = left|nobaseline
						autoresize = yes
						margin_left = 15
					}

					double_direction_progressbar_gold = {
						size = { 60 6 }
						parentanchor = hcenter

						blockoverride "negative_min_max_values" {
							min = "[Negate_float(FixedPointToFloat(WorldMarketPanel.GetMaxImbalanceScaledByBasePrice))]"
							max = 0
						}

						blockoverride "positive_min_max_values" {
							min = 0
							max = "[FixedPointToFloat(WorldMarketPanel.GetMaxImbalanceScaledByBasePrice)]"
						}
						
						blockoverride "value_left" {
							value = "[FixedPointToInt(Multiply_CFixedPoint(Goods.GetWorldMarketExportsAndImportsBalance, Goods.GetBasePrice))]"
						}
						blockoverride "value_right" {
							value = "[FixedPointToInt(Multiply_CFixedPoint(Goods.GetWorldMarketExportsAndImportsBalance, Goods.GetBasePrice))]"
						}
					}
				}

				vertical_divider = {}

				textbox = {
					text = "[Goods.GetWorldMarketExportsWithTooltip]"
					visible = "[GreaterThan_CFixedPoint(Goods.GetWorldMarketExports, '(CFixedPoint)0')]"
					align = right|nobaseline
					size = { 50 40 }
					margin_right = 10
					parentanchor = vcenter
				}

				widget = {
					visible = "[GreaterThan_CFixedPoint(Goods.GetWorldMarketExports, '(CFixedPoint)0')]"
					size = { 50 40 }
					parentanchor = vcenter
				
					overlappingitembox = {
						datamodel = "[DataModelFirst(Goods.GetWorldMarketExporters, '(int32)2')]"
						size = { 40 18 }
						parentanchor = vcenter

						item = {
							small_market_flag = {}
						}
					}
				}

				textbox = {
					visible = "[Not(GreaterThan_CFixedPoint(Goods.GetWorldMarketExports, '(CFixedPoint)0'))]"
					raw_text = "-"
					align = hcenter|nobaseline
					alpha = 0.5
					size = { 100 40 }
					margin_right = 10
					parentanchor = vcenter
				}			

				vertical_divider = {}		
				
				textbox = {
					text = "[Goods.GetWorldMarketImportsWithTooltip]"
					visible = "[GreaterThan_CFixedPoint(Goods.GetWorldMarketImports, '(CFixedPoint)0')]"
					align = right|nobaseline
					size = { 50 40 }
					margin_right = 10
					parentanchor = vcenter
				}

				widget = {
					visible = "[GreaterThan_CFixedPoint(Goods.GetWorldMarketImports, '(CFixedPoint)0')]"
					size = { 50 40 }
					parentanchor = vcenter
				
					overlappingitembox = {
						datamodel = "[DataModelFirst(Goods.GetWorldMarketImporters, '(int32)2')]"
						size = { 40 18 }
						parentanchor = vcenter

						item = {
							small_market_flag = {}
						}
					}
				}

				textbox = {
					visible = "[Not(GreaterThan_CFixedPoint(Goods.GetWorldMarketImports, '(CFixedPoint)0'))]"
					raw_text = "-"
					align = right|nobaseline
					alpha = 0.5
					size = { 105 40 }
					margin_right = 10
					parentanchor = vcenter
				}
			}
		}

		flowcontainer = {
			visible = "[Not(GetVariableSystem.Exists( 'hide_prestige_goods' ))]"
			direction = vertical

			flowcontainer = {
				visible = "[Not(IsDataModelEmpty(Goods.GetWorldMarketPrestigeGoods))]"

				goods_prestige_goods_breakdown_list_item = {
					blockoverride "prestige_goods_onclick" {
						onclick = "[InformationPanelBar.OpenGoodsWorldMarketPanel(Goods.Self)]"
					}

					blockoverride "prestige_goods_item_text_1" {
						raw_text = "BASE_GOODS_WORLD_MARKET_EXPORTS"
					}

					blockoverride "prestige_goods_item_text_2" {
						raw_text = "BASE_GOODS_WORLD_MARKET_IMPORTS"
					}

					blockoverride "prestige_goods_item_name_size" {
						minimumsize = { 270 -1 }
						maximumsize = { 270 -1 }
					}

					blockoverride "prestige_goods_item_text_size" {
						minimumsize = { 100 -1 }
						maximumsize = { 100 -1 }
					}
				}
				margin_left = 10
			}

			flowcontainer = {
				visible = "[Not(IsDataModelEmpty(Goods.GetWorldMarketPrestigeGoods))]"
				datamodel = "[Goods.GetWorldMarketPrestigeGoods]"

				direction = vertical
				margin_left = 10
				margin_bottom = 10


				item = {
					goods_prestige_goods_breakdown_list_item = {
						blockoverride "prestige_goods_onclick" {
							onclick = "[InformationPanelBar.OpenGoodsWorldMarketPanel(Goods.Self)]"
						}

						blockoverride "prestige_goods_item_text_1" {
							raw_text = "PRESTIGE_GOODS_WORLD_EXPORTS"
						}

						blockoverride "prestige_goods_item_text_2" {
							raw_text = "PRESTIGE_GOODS_WORLD_IMPORTS"
						}

						blockoverride "prestige_goods_item_name_size" {
							minimumsize = { 270 -1 }
							maximumsize = { 270 -1 }
						}

						blockoverride "prestige_goods_item_text_size" {
							minimumsize = { 100 -1 }
							maximumsize = { 100 -1 }
						}
					}
				}
			}
		}
	}

	type small_market_flag =  widget {
		datacontext = "[Market.GetOwner]"
		size = { 27 18 }

		is_player_glow = {
			blockoverride "is_player_glow_size" {
				size = { 300% 300% }
			}
		}

		button = {
			size = { 27 18 }

			block "small_market_flag_tooltip" {
				tooltipwidget = {
					FancyTooltip_Market = {
						blockoverride "tooltip_content_before" {
							custom_tooltip_textbox = {
								text = "MARKET_TRADE_VALUES"
							}
						}
					}
				}
			}

			onclick = "[InformationPanelBar.OpenMarketPanel(Market.Self)]"
			onrightclick = "[RightClickMenuManager.ShowForMarket(Market.AccessSelf)]"
			distribute_visual_state = no
			inherit_visual_state = no

			texture = "[Country.GetFlag.GetSmallFlagTexture]"
			frame = "[Country.GetFlag.GetSmallFlagFrame]"
			framesize = "[GetSmallFlagFrameSize]"
			using = flag_button_sound
			using = flag_overlay

			button = {
				name = frame
				texture = "gfx/interface/flag/flag_power_tiny.dds"
				size = { 33 24 }
				framesize = { 66 48 }
				frame = "[Country.GetRankIconIndex]"
				alwaystransparent = yes
				parentanchor = center
			}
		}
	}

	type market_flag = small_flag {
		datacontext = "[Market.GetOwner]"

		blockoverride "flag_click" {
			onclick = "[InformationPanelBar.OpenMarketPanel(Market.Self)]"
			onrightclick = "[RightClickMenuManager.ShowForMarket(Market.AccessSelf)]"
			distribute_visual_state = no
			inherit_visual_state = no
		}

		blockoverride "tooltip" {
			tooltipwidget = {
				FancyTooltip_Market = {}
			}
		}
	}
}

template world_market_goods_list_item {
	widget = {
		size = { 55 55 }
		parentanchor = vcenter

		tooltipwidget = {
			FancyTooltip_Goods = {}
		}
		
		icon = {
			texture = "gfx/interface/market_view/trade_good_list_bg.dds"
			position = { 25 0 }
			size = { 190 46 }
			parentanchor = vcenter
			color = "[Goods.GetCategoryColor]"
		}

		icon = {
			texture = "gfx/interface/market_view/trade_good_icon_bg.dds"
			size = { 55 55 }
			color = "[Goods.GetCategoryColor]"
			
			icon = {
				texture = "[Goods.GetTexture]"
				size = { 40 40 }
				parentanchor = center
			}
		}
	}
}

template world_market_goods_filter_button
{
	using = filter_button_sound
	framesize = { 89 83 }
	gfxtype = framedbuttongfx
	effectname = "NoHighlight"
	upframe = 1
	overframe = 2
	downframe = 3
}