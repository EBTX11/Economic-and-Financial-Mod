# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types stockpile_panel_types
{
	type stockpile_panel = default_block_window {
		name = "stockpile_panel"
		visible = "[GetVariableSystem.Exists('stockpile_panel_var')]"









		state = {
			name = 1
			trigger_on_create = yes
			on_start = "[GetVariableSystem.Set('stockpile_last_tab', 'stockpile_1_tab')]"
		}

		blockoverride "window_header_name"
		{
			text = "stockpile_PANEL_HEADER_NAME"
		}

		blockoverride "fixed_top"
		{

			tab_buttons = {
				blockoverride "first_button" {
					text = "stockpile_1"
				}
				blockoverride "first_button_click" {
					onclick = "[GetVariableSystem.Set('stockpile_panel_var', 'stockpile_1_tab')]"
					onclick = "[GetVariableSystem.Set('stockpile_last_tab', 'stockpile_1_tab')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_1_tab')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_1_tab') )]"
				}
				blockoverride "first_button_selected" {
					text = "stockpile_1"
				}

				blockoverride "third_button" {
					text = "stockpile_2"
				}
				blockoverride "third_button_click" {
					onclick = "[GetVariableSystem.Set('stockpile_panel_var', 'stockpile_2_tab')]"
					onclick = "[GetVariableSystem.Set('stockpile_last_tab', 'stockpile_2_tab')]"
				}
				blockoverride "third_button_visibility" {
					visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_2_tab')]"
				}
				blockoverride "third_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_2_tab') )]"
				}
				blockoverride "third_button_selected" {
					text = "stockpile_2"
				}

				blockoverride "fourth_button" {
					text = "stockpile_3"
				}
				blockoverride "fourth_button_click" {
					onclick = "[GetVariableSystem.Set('stockpile_panel_var', 'stockpile_3_tab')]"
					onclick = "[GetVariableSystem.Set('stockpile_last_tab', 'stockpile_3_tab')]"
				}
				blockoverride "fourth_button_visibility" {
					visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_3_tab')]"
				}
				blockoverride "fourth_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_3_tab') )]"
				}
				blockoverride "fourth_button_selected" {
					text = "stockpile_3"
				}

				blockoverride "second_button" {
					text = "stockpile_4"
				}
				blockoverride "second_button_click" {
					onclick = "[GetVariableSystem.Set('stockpile_panel_var', 'stockpile_4_tab')]"
					onclick = "[GetVariableSystem.Set('stockpile_last_tab', 'stockpile_4_tab')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_4_tab')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_4_tab') )]"
				}
				blockoverride "second_button_selected" {
					text = "stockpile_4"
				}



				
			}

			#Tab 1 sort
			flowcontainer = {  
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_1_tab')]"

				flowcontainer = {  
				
					sort_button = {
						size = { 60 20 }
						tooltip = "SORT_BY_MARKET_GOODS"
						onclick = "[Market.Sort('name')]"
						onclick = "[Market.RestoreSort]"
						button = {
							texture = "gfx/interface/buttons/sort_button_icons/sort_icon_good.dds"
							size = { 25 25 }
							parentanchor = center
							alwaystransparent = yes
						}
					}
					sort_button = {
						name = "stockpile"
						align = hcenter|nobaseline
						text = "stockpile"
						size = { 100 20 }
						onclick = "[Market.Sort('sell')]"
						onclick = "[Market.RestoreSort]"
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "Current (monthly)"
						size = { 100 20 }
						onclick = "[Market.Sort('buy')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "unstock"
						size = { 90 20 }
						onclick = "[Market.Sort('balance')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
						tooltip = "SORT_BY_BALANCE_TOOLTIP"
					}
					
					sort_button = {
						align = hcenter|nobaseline
						text = "X"
						size = { 190 20 }
						onclick = "[Market.Sort('price')]"
						onclick = "[Market.RestoreSort]"
					}
				}
			}
			#Tab 2 sort
			flowcontainer = {
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_2_tab')]"
			
				flowcontainer = {  
				
					sort_button = {
						size = { 60 20 }
						tooltip = "SORT_BY_MARKET_GOODS"
						onclick = "[Market.Sort('name')]"
						onclick = "[Market.RestoreSort]"
						button = {
							texture = "gfx/interface/buttons/sort_button_icons/sort_icon_good.dds"
							size = { 25 25 }
							parentanchor = center
							alwaystransparent = yes
						}
					}
					sort_button = {
						name = "stockpile"
						align = hcenter|nobaseline
						text = "stockpile"
						size = { 100 20 }
						onclick = "[Market.Sort('sell')]"
						onclick = "[Market.RestoreSort]"
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "Current (monthly)"
						size = { 100 20 }
						onclick = "[Market.Sort('buy')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "unstock"
						size = { 90 20 }
						onclick = "[Market.Sort('balance')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
						tooltip = "SORT_BY_BALANCE_TOOLTIP"
					}
					
					sort_button = {
						align = hcenter|nobaseline
						text = "X"
						size = { 190 20 }
						onclick = "[Market.Sort('price')]"
						onclick = "[Market.RestoreSort]"
					}
				}
			
			}
			#Tab 3 sort
			flowcontainer = {
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_3_tab')]"
			
				flowcontainer = {  
				
					sort_button = {
						size = { 60 20 }
						tooltip = "SORT_BY_MARKET_GOODS"
						onclick = "[Market.Sort('name')]"
						onclick = "[Market.RestoreSort]"
						button = {
							texture = "gfx/interface/buttons/sort_button_icons/sort_icon_good.dds"
							size = { 25 25 }
							parentanchor = center
							alwaystransparent = yes
						}
					}
					sort_button = {
						name = "stockpile"
						align = hcenter|nobaseline
						text = "stockpile"
						size = { 100 20 }
						onclick = "[Market.Sort('sell')]"
						onclick = "[Market.RestoreSort]"
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "Current (monthly)"
						size = { 100 20 }
						onclick = "[Market.Sort('buy')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "unstock"
						size = { 90 20 }
						onclick = "[Market.Sort('balance')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
						tooltip = "SORT_BY_BALANCE_TOOLTIP"
					}
					
					sort_button = {
						align = hcenter|nobaseline
						text = "X"
						size = { 190 20 }
						onclick = "[Market.Sort('price')]"
						onclick = "[Market.RestoreSort]"
					}
				}
			
			}
			#Tab 4 sort
			flowcontainer = {
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_4_tab')]"
			
				flowcontainer = {  
				
					sort_button = {
						size = { 60 20 }
						tooltip = "SORT_BY_MARKET_GOODS"
						onclick = "[Market.Sort('name')]"
						onclick = "[Market.RestoreSort]"
						button = {
							texture = "gfx/interface/buttons/sort_button_icons/sort_icon_good.dds"
							size = { 25 25 }
							parentanchor = center
							alwaystransparent = yes
						}
					}
					sort_button = {
						name = "stockpile"
						align = hcenter|nobaseline
						text = "stockpile"
						size = { 100 20 }
						onclick = "[Market.Sort('sell')]"
						onclick = "[Market.RestoreSort]"
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "Current (monthly)"
						size = { 100 20 }
						onclick = "[Market.Sort('buy')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
					}
	
					sort_button = {
						align = hcenter|nobaseline
						text = "unstock"
						size = { 90 20 }
						onclick = "[Market.Sort('balance')]"
						onclick = "[Market.RestoreSort]"
						margin_right = 7
						tooltip = "SORT_BY_BALANCE_TOOLTIP"
					}
					
					sort_button = {
						align = hcenter|nobaseline
						text = "X"
						size = { 190 20 }
						onclick = "[Market.Sort('price')]"
						onclick = "[Market.RestoreSort]"
					}
				}
			
			}

		}

		blockoverride "scrollarea_content"
		{

			#Tab 1
			flowcontainer = {
				using = default_list_position
				direction = vertical
				minimumsize = { @panel_width_plus_20 -1 }
				maximumsize = { @panel_width_plus_20 -1 }			
				margin_top = 10
				margin_left = 5

				flowcontainer = {
					parentanchor = left|nobaseline
					direction = vertical
					using = default_content_fade
					visible = "[GetVariableSystem.HasValue('stockpile_panel_var', 'stockpile_1_tab')]"


					#widget = {
					vbox = {
						layoutpolicy_horizontal = expanding   
						ignoreinvisible = no
						parentanchor = left|nobaseline


						spacing = 5
						size = { 550 50 }

						#visible = "[NotEqualTo_int32(SaveDialog.SavableCount, '(int32)1')]"

						button_standard = { 
							layoutpolicy_horizontal = expanding    
							size = { 550 50 }
							spacing = 0
								
							icon = {
								texture = "gfx/interface/icons/goods_icons/grain.dds"
								size = { 40 40 }
								position = { 7 4 }
								parentanchor = left|nobaseline
							}

							using = goods_list_item_custom

							textbox = {
								text = "[GetPlayer.MakeScope.ScriptValue('stockpiling_grain_var_0')|+D]"
								
								align = left|nobaseline
								elide = right
								default_format = "#white #bold"
								autoresize = yes
								fontsize = 25
								allow_outside = yes
								ignoreinvisible = yes
								margin_left = 0

								position = { 75 8 }						

							}

							vertical_divider = {
								position = { 165 0 }						
							}

							textbox = {
								text = "[GetPlayer.MakeScope.Var('stockpiling_grain_var_2').GetValue|=+D]"
								
								align = left|nobaseline
								elide = right
								default_format = "#white #bold"
								autoresize = yes
								fontsize = 15
								allow_outside = yes
								ignoreinvisible = yes
								margin_left = 0

								position = { 200 15 }						
							}
					
							vertical_divider = {
								position = { 265 0 }						
							}

							textbox = {
								text = "[GetPlayer.MakeScope.Var('stockpiling_grain_var_2').GetValue|=+D]"
								
								align = left|nobaseline
								elide = right
								default_format = "#white #bold"
								autoresize = yes
								fontsize = 15
								allow_outside = yes
								ignoreinvisible = yes
								margin_left = 0

								position = { 300 15 }						
							}

							vertical_divider = {
								position = { 355 0 }						
							}

							button_radio = {
								visible = "[Not(LobbyView.IsPublicCrossplay)]"
								onclick = "[LobbyView.SetPublicCrossplay]"
								enabled = "[Or(Not(JominiMultiplayerIsCrossplayFilterAvailable), JominiMultiplayerIsCrossplayEnabled)]"
							
								size = { 40 40 }
								position = { 365 4 }						
							}
				
							button_radio = {
								visible = "[LobbyView.IsPublicCrossplay]"
								frame = 2
								size = { 40 40 }
								position = { 365 4 }						
							}

							vertical_divider = {
								position = { 415 0 }						
							}

							button_icon_plus_action = {
								name = "vo_tutorial_increase_interest"
								size = { 30 30 }
								parentanchor = vcenter
								tooltip = "CENTRAL_BANK_INTEREST_INCREASE_EFFECT"
								onclick = "[GetScriptedGui('vo_increase_interest').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								enabled = "[IsValid( Building.QueueConstruction )]"

								position = { 426 1 }						
							}
							textbox = {
								name = "vo_tutorial_highlight_interest"
								autoresize = yes
								text = "[GetPlayer.MakeScope.ScriptValue('vo_interest_value')|%|V]"
								tooltip = "CENTRAL_BANK_INTEREST_EFFECT"
								align = nobaseline
								parentanchor = vcenter


								position = { 463 1 }						

							}
							button_icon_minus_action = {
								name = "vo_tutorial_reduce_interest"
								size = { 30 30 }
								parentanchor = vcenter
								tooltip = "CENTRAL_BANK_INTEREST_REDUCE_EFFECT"
								onclick = "[GetScriptedGui('vo_reduce_interest').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								enabled = "[IsValid( Building.Downsize )]"
								using = tooltip_below

								position = { 510 1 }						

							}
						}

						#divider_decorative = {}

						button_standard = { 
							layoutpolicy_horizontal = expanding    
						
							size = { 550 50 }

							
							spacing = 5
								
							icon = {
								texture = "gfx/interface/icons/goods_icons/grain.dds"
								size = { 40 40 }
								position = { 7 4 }
								parentanchor = left|nobaseline
							}

							using = goods_list_item_custom

							textbox = {
								text = "[GetPlayer.MakeScope.ScriptValue('stockpiling_grain_var_0')|=+D]"
								
								align = left|nobaseline
								elide = right
								default_format = "#white #bold"
								autoresize = yes
								fontsize = 15
								allow_outside = yes
								ignoreinvisible = yes
								margin_left = 0

								position = { 210 12 }						

							}

							vertical_divider = {
								position = { 290 0 }						
							}

							textbox = {
								text = "[GetPlayer.MakeScope.Var('stockpiling_grain_var_2').GetValue|=+D]"
								
								align = left|nobaseline
								elide = right
								default_format = "#white #bold"
								autoresize = yes
								fontsize = 15
								allow_outside = yes
								ignoreinvisible = yes
								margin_left = 0

								position = { 355 12 }	
							}
						























						}


					}
				}

			}

			#Tab 2

			
			#Tab 3


			#Tab 4
		}

		blockoverride "header_back_button" {
			onclick = "[GetVariableSystem.Clear('stockpile_panel_var')]"
		}

		blockoverride "header_close_button" {
			onclick = "[GetVariableSystem.Clear('stockpile_panel_var')]"
			datacontext = "[GetScriptedGui('fi_list_all_clear')]"
			onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', GetPlayer.MakeScope).End )]"
		}
	}
}

template fistockpile_panel {
	stockpile_panel = {}
}

template goods_list_item_custom {
	widget = {
		size = { 55 55 }
		block "goods_list_item_datacontext" {}
		parentanchor = vcenter

		tooltipwidget = {
			FancyTooltip_Goods = {}
		}
		
		icon = {
			texture = "gfx/interface/market_view/trade_good_list_bg.dds"
			position = { 25 0 }
			size = { 190 46 }
			parentanchor = vcenter
			color = "[Goods.GetCategoryColor]"
		}

		icon = {
			texture = "gfx/interface/market_view/trade_good_icon_bg.dds"
			size = { 55 55 }
			color = "[Goods.GetCategoryColor]"
			
			icon = {
				texture = "[Goods.GetTexture]"
				size = { 40 40 }
				parentanchor = center
			}
		}
	}
}