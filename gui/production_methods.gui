# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types production_methods
{
	### autoexpand
	type building_auto_expand = widget {
		visible = "[IsPotential( Building.ToggleAutoExpand )]"
		size = { 35 35 }
		
		icon = {
			using = rotate_glow_blue
			size = { 130% 130% }
			visible = "[Building.IsAutoExpanding]"
			alwaystransparent = yes
			parentanchor = center
			using = default_fade_in_out
		}
		
		button_icon_round_action = {
			size = { 100% 100% }
			visible = "[Building.IsAutoExpanding]"
			enabled = "[IsValid( Building.ToggleAutoExpand )]"
			onclick = "[Execute( Building.ToggleAutoExpand )]" 
			tooltip = [Building.GetAutoExpandTooltip]
			using = icon_toggle_single_off_sound
			
			blockoverride "icon" {
				texture = "gfx/interface/production_methods/auto_expand.dds"
			}
			blockoverride "icon_size" {
							size = { 77% 77% }
			}	
		}

		button_icon_round_action = {
			size = { 100% 100% }
			visible = "[Not(Building.IsAutoExpanding)]"
			enabled = "[IsValid( Building.ToggleAutoExpand )]"
			onclick = "[Execute( Building.ToggleAutoExpand )]" 
			tooltip = [Building.GetAutoExpandTooltip]
			using = icon_toggle_single_on_sound
			
			blockoverride "icon" {
				texture = "gfx/interface/production_methods/auto_expand_not.dds"
			}
			blockoverride "icon_size" {
							size = { 77% 77% }
			}
		}
	}
	
	### has new PM icon_Exclamation mark_
	type has_new_pm_icon = icon {
		size = { 16 16 }
		framesize = { 52 52 }
		texture = "gfx/interface/current_situations/icon_situation_unread.dds"
		block "visible" {}
		tooltip = "TOOLTIP_NEW_PRODUCTION_METHOD"
	}

	### PM ITEM
	type buildings_production_method_item = flowcontainer {
		block "visible" {
			visible = "[Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetBuildings))]"
		}

		block "datacontext" {
			datacontext = "[BuildingBrowserBuildingTypeItem.GetBuildingType]"
		}

		direction = vertical
		spacing = 10

		### TOP ITEM
		widget = {
			size = { @panel_width_plus_14 95 }

			highlight_tutorial = {
	   			visible = "[BuildingType.IsBeingTutorialHighlighted]"
	    	}

			### DROPDOWN / EXPAND
			section_header_button = {
				blockoverride "layout" {
					position = { 110 0 }
					size = { 440 38 }
				}

				blockoverride "left_text" {
					raw_text = "#v [BuildingType.GetNameNoFormatting]#!"
				}
				blockoverride "right_text" {
					section_header_right_text = {
						visible = "[And( And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), GreaterThan_int32( BuildingType.GetLevelCountInCountry(GetPlayer.Self), '(int32)0' ))]"
						text = "[BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
						tooltip = "PRODUCTIVITY_SPAN_TOOLTIP"
					}
				}

				blockoverride "onclick" {
					onclick = "[BuildingBrowserPanel.ToggleExpandBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType)]"
				}

				blockoverride "onclick_showmore" {
					visible = "[Not(BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType))]"
				}

				blockoverride "onclick_showless" {
					visible = "[BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType)]"
				}
			}

			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################

			# ██████╗ ██████╗  ██████╗ ██████╗ ██╗   ██╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗    ███╗   ███╗███████╗████████╗██╗  ██╗ ██████╗ ██████╗ ███████╗     ██████╗ ██████╗  ██████╗ ██╗   ██╗██████╗ ███████╗██████╗     ███╗   ███╗ ██████╗ ██████╗ ███████╗██████╗ 
			# ██╔══██╗██╔══██╗██╔═══██╗██╔══██╗██║   ██║██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║    ████╗ ████║██╔════╝╚══██╔══╝██║  ██║██╔═══██╗██╔══██╗██╔════╝    ██╔════╝ ██╔══██╗██╔═══██╗██║   ██║██╔══██╗██╔════╝██╔══██╗    ████╗ ████║██╔═══██╗██╔══██╗██╔════╝██╔══██╗
			# ██████╔╝██████╔╝██║   ██║██║  ██║██║   ██║██║        ██║   ██║██║   ██║██╔██╗ ██║    ██╔████╔██║█████╗     ██║   ███████║██║   ██║██║  ██║███████╗    ██║  ███╗██████╔╝██║   ██║██║   ██║██████╔╝█████╗  ██║  ██║    ██╔████╔██║██║   ██║██║  ██║█████╗  ██║  ██║
			# ██╔═══╝ ██╔══██╗██║   ██║██║  ██║██║   ██║██║        ██║   ██║██║   ██║██║╚██╗██║    ██║╚██╔╝██║██╔══╝     ██║   ██╔══██║██║   ██║██║  ██║╚════██║    ██║   ██║██╔══██╗██║   ██║██║   ██║██╔═══╝ ██╔══╝  ██║  ██║    ██║╚██╔╝██║██║   ██║██║  ██║██╔══╝  ██║  ██║
			# ██║     ██║  ██║╚██████╔╝██████╔╝╚██████╔╝╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║    ██║ ╚═╝ ██║███████╗   ██║   ██║  ██║╚██████╔╝██████╔╝███████║    ╚██████╔╝██║  ██║╚██████╔╝╚██████╔╝██║     ███████╗██████╔╝    ██║ ╚═╝ ██║╚██████╔╝██████╔╝███████╗██████╔╝
			# ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═════╝  ╚═════╝  ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝    ╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚══════╝     ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝     ╚══════╝╚═════╝     ╚═╝     ╚═╝ ╚═════╝ ╚═════╝ ╚══════╝╚═════╝ 

			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################

			textbox = {
				visible = "[EqualTo_string(BuildingType.GetNameNoFormatting, Localize('building_national_stockpile'))]"
				size = { 290 80 }
				position = { 25 15 }
				text = "NATIONAL_STOCKPILE_BUILDING_TEXT"
				fontsize = 20
				align = center
				elide = center
				ignoreinvisible = yes
				allow_outside = yes
				parentanchor = center
				multiline = yes
				button_icon_goto = {
					parentanchor = right
					size = { 25 25 }
					position = { 30 35 }
					#onclick = "[InformationPanel.SelectTab('stockpile')]"
					enabled = "[GetScriptedGui('is_centralized').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					tooltip = "GO_TO_BUTTON_STOCKPILE"
					block "goto_visibility" {}
				}
			}

			### production methods grouped
			container = {
				position = { 110 0 }
				parentanchor = bottom
				visible = "[Not(EqualTo_string(BuildingType.GetNameNoFormatting, Localize('building_national_stockpile')))]"

				fixedgridbox = {
					datamodel = "[BuildingBrowserBuildingTypeItem.GetBuildingType.AccessProductionMethodGroups]"
					flipdirection = yes
					addcolumn = 52
					addrow = 50

					item = {
						widget = {
							### fait disparaitre les pm
							visible = "[Not(Or(Or(EqualTo_string(ProductionMethodGroup.GetKey,'pmg_market_liquidity'), EqualTo_string(ProductionMethodGroup.GetKey,'pmg_private_ownership_manufacture_stock')), Or(EqualTo_string(ProductionMethodGroup.GetKey,'pmg_private_ownership_mining_stock'), EqualTo_string(ProductionMethodGroup.GetKey,'pmg_private_ownership_railroad_stock'))))]"

							size = { 50 50 }
							tooltip = "BUILDING_TYPE_BULK_CHANGE_TOOLTIP"
							using = tooltip_above

							button = {
								visible = "[NotEqualTo_int32( GetDataModelSize( ProductionMethodGroup.AccessCountryProductionMethods( GetPlayer.Self ) ), '(int32)1' )]"
								distribute_visual_state = no
								inherit_visual_state = no
								using = expand_button_bg_dropdown
								size = { 100% 100% }
								onclick = "[BuildingBrowserBuildingTypeItem.ToggleSwitchProductionMethodMenu( ProductionMethodGroup.AccessSelf, PdxGuiWidget.AccessSelf)]"
								enabled = "[Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetOwnBuildings))]"
							}

							### pm icon
							icon = {
								visible = "[BuildingBrowserBuildingTypeItem.HasAllSameProductionMethod( ProductionMethodGroup.Self )]"
								size = { 40 40 }
								parentanchor = center
								texture = "[BuildingBrowserBuildingTypeItem.GetAllSameProductionMethodTexture( ProductionMethodGroup.Self )]"
							}

							### mixed pm icon
							icon = {
								visible = "[Not( BuildingBrowserBuildingTypeItem.HasAllSameProductionMethod( ProductionMethodGroup.Self ) )]"
								size = { 35 35 }
								parentanchor = center
								texture = "[ProductionMethodGroup.GetMixedIcon]"
							}

							# ### new pm
							# has_new_pm_icon = {
							# 	position = { -2 2 }
							# 	parentanchor = bottom|left
							# 	blockoverride "visible" {
							# 		visible = "[And(GetPlayer.HasNewProductionMethodInGroup( ProductionMethodGroup.Self ), Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetOwnBuildings)))]"
							# 	}
							# }


							### nr available
							textbox = {
								raw_text = "#bold [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType.AccessSelf)]#!"
								parentanchor = right
								position = { -5 0 }
								autoresize = yes
								align = right|nobaseline
								visible = "[GreaterThan_int32( ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType.AccessSelf), '(int32)1')]"
								tooltip = "PRODUCTION_METHOD_OPTIONS_BULK"
								using = tooltip_above
								using = fontsize_small

								background = {
									using = default_background
									margin = { 8 4 }
								}
							}
						}
					}
				}
			}

			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################

			# ███████╗███╗   ██╗██████╗ 
			# ██╔════╝████╗  ██║██╔══██╗
			# █████╗  ██╔██╗ ██║██║  ██║
			# ██╔══╝  ██║╚██╗██║██║  ██║
			# ███████╗██║ ╚████║██████╔╝
			# ╚══════╝╚═╝  ╚═══╝╚═════╝ 

			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################
			#####################################################################################################################################################

			### building icon
			button = {
				texture = "[BuildingType.GetTexture]"
				onrightclick = "[RightClickMenuManager.ShowForBuildingType(BuildingType.AccessSelf)]"
				effectname = "NoHighlight"
				distribute_visual_state = no
				inherit_visual_state = no

				size = { 100 100 }
				position = { 7 0 }
				parentanchor = vcenter

				tooltipwidget = {
					FancyTooltip_BuildingType = {}
				}
			}

			### ACTION BUTTONS
			flowcontainer = {
				parentanchor = bottom|right
				position = { -10 -5 }
				spacing = 5

				### expand
				button_icon_round_map_interaction = {
					size = { 40 40 }
					blockoverride "icon" {
						texture = "gfx/interface/buttons/button_icons/plus.dds"
					}

					onclick = "[BuildingType.ActivateExpansionLens]"
					using = select_button_sound
					visible = "[And(Or( BuildingType.IsBuildable, BuildingType.IsExpandable ), Not(BuildingType.IsMilitaryBuilding))]"
					tooltip = "EXPAND"
				}

				### privatize
				building_privatize_bulk_toggle = {
					size = { 40 40 }
				}

				### subsidize
				widget = {
					size = { 40 40 }
					visible = "[BuildingType.CanBeSubsidized]"

					icon = {
						using = rotate_glow_blue
						size = { 130% 130% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllSubsidies]"
						alwaystransparent = yes
						parentanchor = center
						using = default_fade_in_out
					}

					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_YES"
						using = icon_toggle_all_off_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllNoSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_NO"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_not.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}


					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasMixedSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_MIXED"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_mixed.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
				}

				### auto expand
				widget = {
					size = { 40 40 }
					visible = "[BuildingType.CanBeAutoExpanded]"

					icon = {
						using = rotate_glow_blue
						size = { 130% 130% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						alwaystransparent = yes
						parentanchor = center
						using = default_fade_in_out
					}

					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_YES"
						using = icon_toggle_all_off_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/auto_expand.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllNoAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_NO"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/auto_expand_not.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasMixedAutoExpand]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_MIXED"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_mixed.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
				}

			}

			### PRODUCTIVITY SPAN ###
			textbox = {
				text = "BUILDING_TYPE_COUNT"
				autoresize = yes
				position = { 11 -3 }
				parentanchor = bottom
				align = hcenter|nobaseline
				using = fontsize_large
				minimumsize = { 26 26 }
			}
		}

		### EXPANDED LIST OF BUILDINGS
		expanded_list = {
			using = expanded_list_bg
			blockoverride "dark_area_alpha" {
				alpha = 0.5
			}

			datamodel = "[BuildingBrowserBuildingTypeItem.GetBuildings]"
			visible = "[BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType)]"

			item = {
				condensed_building_information = {
					background = {
						using = entry_bg_simple
					}
					background = {
						using = entry_bg_simple
					}

					blockoverride "extra_items_in_production_methods_list" {
						military_building_combat_unit_summary = {
							parentanchor = right|vcenter

							blockoverride "icon_size" {
								size = { 50 50 }
							}

							blockoverride "overlappingitembox_size" {
								size = { 190 50 }
							}

							blockoverride "unit_number_margins" {
								margin = { 6 3 }
							}
						}
					}
				}
			}
		}
	}

	### OLD PM ITEM (ONLY USED IN CONSTRUCTION PANEL)
	type old_buildings_production_method_item = flowcontainer {
		block "visible" {
			visible = "[Not(IsDataModelEmpty(BuildingProductionMethodsEntry.GetBuildings))]"
		}

		block "datacontext" {
			datacontext = "[BuildingProductionMethodsEntry.GetBuildingType]"
		}

		direction = vertical
		spacing = 10

		### TOP ITEM
		widget = {
			size = { @panel_width_plus_14 95 }

			highlight_tutorial = {
	   			visible = "[BuildingType.IsBeingTutorialHighlighted]"
	    	}

	    	### building icon
	    	button = {
	    		texture = "[BuildingType.GetTexture]"
	    		onrightclick = "[RightClickMenuManager.ShowForBuildingType(BuildingType.AccessSelf)]"
	    		effectname = "NoHighlight"
	    		distribute_visual_state = no
	    		inherit_visual_state = no

	    		size = { 100 100 }
	    		position = { 7 0 }
	    		parentanchor = vcenter

	    		tooltipwidget = {
	    			FancyTooltip_BuildingType = {}
	    		}
	    	}

			### DROPDOWN / EXPAND
			section_header_button = {
				position = { 50 0 }
				size = { 440 38 }
				
				blockoverride "left_text" {
					raw_text = "#v [BuildingType.GetNameNoFormatting]#!"
				}
				blockoverride "right_text" {
					section_header_right_text = {
						visible = "[And( And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), GreaterThan_int32( BuildingType.GetLevelCountInCountry(GetPlayer.Self), '(int32)0' ))]"
						text = "[BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
						tooltip = "PRODUCTIVITY_SPAN_TOOLTIP"
					}
				}
				
				blockoverride "onclick" {
					onclick = "[BuildingProductionMethodsEntry.ToggleExpand]"
				}
				
				blockoverride "onclick_showmore" {
					visible = "[Not(BuildingProductionMethodsEntry.IsExpanded)]"
				}

				blockoverride "onclick_showless" {
					visible = "[BuildingProductionMethodsEntry.IsExpanded]"
				}
			}

			# INFO AREA BELOW THE DROPDOWN
			widget = {
				position = { 110 38 }
				size = { 440 57 }

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin = { 0 0 }

					### production methods grouped
					container = {						
						fixedgridbox = {
							datamodel = "[BuildingProductionMethodsEntry.GetBuildingType.AccessProductionMethodGroups]"
							flipdirection = yes
							addcolumn = 52
							addrow = 50

							item = {
								widget = {
									size = { 50 50 }
									tooltip = "[BuildingProductionMethodsEntry.GetBulkChangeTooltip( ProductionMethodGroup.Self )]"
									using = tooltip_above

									button = {
										visible = "[NotEqualTo_int32( GetDataModelSize( ProductionMethodGroup.AccessCountryProductionMethods( GetPlayer.Self ) ), '(int32)1' )]"
										distribute_visual_state = no
										inherit_visual_state = no
										using = expand_button_bg_dropdown
										size = { 100% 100% }
										onclick = "[RightClickMenuManager.ToggleSwitchProductionMethodMenuForType(BuildingProductionMethodsEntry.GetBuildingType, ProductionMethodGroup.AccessSelf, PdxGuiWidget.AccessSelf)]"
									}
									
									### pm icon
									icon = {
										visible = "[BuildingProductionMethodsEntry.HasAllSameProductionMethod( ProductionMethodGroup.Self )]"
										size = { 40 40 }
										parentanchor = center
										texture = "[BuildingProductionMethodsEntry.GetAllSameProductionMethodTexture( ProductionMethodGroup.Self )]"
									}
									
									### mixed pm icon
									icon = {
										visible = "[Not( BuildingProductionMethodsEntry.HasAllSameProductionMethod( ProductionMethodGroup.Self ) )]"
										size = { 35 35 }
										parentanchor = center
										texture = "[ProductionMethodGroup.GetMixedIcon]"
									}
									
									# ### new pm
									# has_new_pm_icon = {
									# 	position = { -2 2 }
									# 	parentanchor = bottom|left
									# 	blockoverride "visible" {
									# 		visible = "[GetPlayer.HasNewProductionMethodInGroup( ProductionMethodGroup.Self )]"
									# 	}
									# }
																		

									### nr available
									textbox = {
										raw_text = "#bold [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingProductionMethodsEntry.GetBuildingType)]#!"
										parentanchor = right
										position = { -5 0 }
										autoresize = yes
										align = right|nobaseline
										visible = "[GreaterThan_int32( ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingProductionMethodsEntry.GetBuildingType), '(int32)1')]"
										tooltip = "PRODUCTION_METHOD_OPTIONS_BULK"
										using = tooltip_above
										using = fontsize_small

										background = {
											using = default_background
											margin = { 8 4 }
										}
									}
								}
							}
						}
					}

					construction_queue_sector_actions = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}
		
				}
			}

			

			### PRODUCTIVITY SPAN ###
			textbox = {
				text = "BUILDING_TYPE_COUNT"
				autoresize = yes
				position = { 11 -3 }
				parentanchor = bottom
				align = hcenter|nobaseline
				using = fontsize_large
				minimumsize = { 26 26 }
			}
		}

		### EXPANDED LIST OF BUILDINGS
		expanded_list = {
			using = expanded_list_bg
			blockoverride "dark_area_alpha" {
				alpha = 0.5
			}

			datamodel = "[BuildingProductionMethodsEntry.GetBuildings]"
			visible = "[BuildingProductionMethodsEntry.IsExpanded]"

			item = {
				condensed_building_information = {
					background = {
						using = entry_bg_simple
					}
					background = {
						using = entry_bg_simple
					}

					blockoverride "extra_items_in_production_methods_list" {					
						military_building_combat_unit_summary = {
							parentanchor = right|vcenter

							blockoverride "icon_size" {
								size = { 50 50 }
							}

							blockoverride "overlappingitembox_size" {
								size = { 190 50 }
							}

							blockoverride "unit_number_margins" {
								margin = { 6 3 }
							}
						}
					}
				}
			}
		}
	}


	type construction_queue_sector_actions = hbox {
		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			widget = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				flowcontainer = {
					name = "construction_points"
					parentanchor = center
					spacing = 10
					tooltip = "CONSTRUCTION_SPEED_BASE_TOOLTIP"
					datacontext = "[AccessPlayer]"

					icon = {
						parentanchor = vcenter
						size = { 30 30 }
						texture = "gfx/interface/icons/state_status_icons/has_construction.dds"
						visible = "[Not(Country.IsConstructionPaused)]"
					}

					icon = {
						parentanchor = vcenter
						size = { 30 30 }
						texture = "gfx/interface/icons/state_status_icons/has_construction_paused.dds"
						visible = "[Country.IsConstructionPaused]"
					}

					textbox = {
						parentanchor = vcenter
						using = fontsize_large
						text = "CONSTRUCTION_VALUE"
						autoresize = yes
						align = nobaseline
						min_width = 56

						background = {
							using = dark_area
							margin_left = 30
						}
					}
				}
			}

			widget = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				flowcontainer = {
					direction = horizontal
					parentanchor = center
					spacing = 20 #need extra spacing for the tooltips for the text vs the button not to interfere with each other...


					textbox = {
						parentanchor = vcenter

						background = {
							using = dark_area
							margin_right = 30
						}

						autoresize = yes
						minimumsize = { 0 26 }
						margin_left = 5
						align = nobaseline

						alpha = "[TransparentIfZero(GetPlayer.GetConstructionGoodsExpenses)]"
						raw_text = "#N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetConstructionGoodsExpenses|D-]"
						using = construction_goods_expense_tooltip_with_graph
					}

					container = {
						name = "pause_construction"

						parentanchor = vcenter

						button_icon_round_action = {

							tooltip = "[Country.PauseConstructionTooltip]"
							visible = "[Not(Country.IsConstructionPaused)]"

							blockoverride "size" {
								size = { 40 40 }
							}
							blockoverride "icon_size" {
								size = { 75% 75% }
							}

							block "onclick" {
								onclick = "[Execute( Country.PauseConstruction )]"
								enabled = "[And(IsValid( Country.PauseConstruction ), Country.HasConstructionQueued)]"
								input_action = "toggle_construction_queue_pause"
							}

							blockoverride "icon" {
								texture = "gfx/interface/production_methods/unpaused_government_construction.dds"
							}
						}

						button_icon_round_action = {

							tooltip = "[Country.ResumeConstructionTooltip]"
							visible = "[Country.IsConstructionPaused]"

							blockoverride "size" {
								size = { 40 40 }
							}
							blockoverride "icon_size" {
								size = { 75% 75% }
							}

							block "onclick" {
								onclick = "[Execute( Country.ResumeConstruction )]"
								enabled = "[IsValid( Country.ResumeConstruction )]"
								input_action = "toggle_construction_queue_pause"
							}

							blockoverride "icon" {
								texture = "gfx/interface/production_methods/paused_government_construction.dds"
							}
						}
					}
				}
			}
		}

		### expand
		widget = {
			size = {50 50}

			button_icon_round_map_interaction = {

				size = { 40 40 }
				parentanchor = center
				blockoverride "icon" {
					texture = "gfx/interface/buttons/button_icons/plus.dds"
				}
				
				onclick = "[BuildingType.ActivateExpansionLens]"
				using = select_button_sound
				visible = "[And(Or( BuildingType.IsBuildable, BuildingType.IsExpandable ), Not(BuildingType.IsMilitaryBuilding))]"
				tooltip = "EXPAND"
			}
		}	
	}	
}
