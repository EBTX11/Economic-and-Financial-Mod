l_english:

 TAB: "   "
 COLON:0 ":"
 DASH_WITH_SPACING:0 " - "
 POP_WORKPLACE_DAY_LABOURER:0 "Day Laborer"
 POP_WORKPLACE_UNEMPLOYED:0 "[concept_unemployed]"
 POP_WORKPLACE_EMPLOYED:0 "$NAME$"
 POP_WORKPLACE_DAY_LABOURER_LIST_ENTRY:0 "$WORKPLACE$: $WORKERS|v$"
 POP_WORKPLACE_DAY_LABOURER_LIST:0 "Works at:\n$LIST$"
 POP_WORKPLACE_EMPLOYED_TOOLTIP:0 "Have $WORKERS|v$ in industry."
 POP_WORKPLACE_UNEMPLOYED_TOOLTIP:0 "Is [concept_unemployed]."
 LOBBYVIEW_SELECT_PLAYABLE:1 "@red_cross! No country selected\n\nSelect a country on the map"
 LOBBYVIEW_NO_CROSSPLAY:0 "Disable cross-platform play"
 LOBBYVIEW_NO_CROSSPLAY_TOOLTIP:0 "Only allow players in your current platform"
 JOIN_MULTIPLAYER_PASTE_SERVER_ID:0 "Paste server ID"

 PRIVATELY_OWNED_FILTER_RIGHT_CLICK_MENU_TITLE: "Filter [NationalizeBuildingGroup.GetInvestor.GetAdjective] [concept_privately_owned] [Concept('concept_building_level','$concept_building_levels$')]"
 PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER: "#header Filter [NationalizeBuildingGroup.GetInvestor.GetAdjective] [concept_privately_owned] [Concept('concept_building_level','$concept_building_levels$')]#!"

 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_ALL: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL: "#header Show all [concept_privately_owned] [Concept('concept_building_level','$concept_building_levels$')]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] selected $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED: "Currently showing all [concept_privately_owned] [Concept('concept_building_level','$concept_building_levels$')]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] selected $concept_building_levels_short$"

 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_COMPANIES: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES: "#header Show only [Concept('concept_building_level','$concept_building_levels$')] owned by [Concept('concept_company', '$concept_companies$')]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] selected $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED: "Currently only showing [Concept('concept_building_level','$concept_building_levels$')] owned by [Concept('concept_company', '$concept_companies$')]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] selected $concept_building_levels_short$"

 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_MANOR_HOUSE: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE: "#header Show only [Concept('concept_building_level','$concept_building_levels$')] owned by [GetBuildingType('building_manor_house').GetName]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] selected $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED: "Currently only showing [Concept('concept_building_level','$concept_building_levels$')] owned by [GetBuildingType('building_manor_house').GetName]\n#v  [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] selected $concept_building_levels_short$"

 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_FINANCIAL_DISTRICT: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT: "#header Show only [Concept('concept_building_level','$concept_building_levels$')] owned by [GetBuildingType('building_financial_district').GetName]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] selected $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED: "Currently only showing [Concept('concept_building_level','$concept_building_levels$')] owned by [GetBuildingType('building_financial_district').GetName]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] selected $concept_building_levels_short$"
 
 WORKER_OWNED: "Worker-Owned"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_WORKER_OWNED: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED: "#header Show only Worker-Owned [Concept('concept_building_level','$concept_building_levels$')]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] selected $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED: "Currently only showing Worker-Owned [Concept('concept_building_level','$concept_building_levels$')]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] selected $concept_building_levels_short$"
 

 NATIONALIZE_BUILDING_HEADER: "$NATIONALIZE$"
 NATIONALIZE: "$concept_nationalize$"
 CONSTRUCTION_CURRENT_PAGE:1 "Page [ConstructionPanel.AccessCurrentGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_CURRENT_PAGE_PRIVATE:0 "Page [ConstructionPanel.AccessCurrentPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_NEXT_PAGE:0 "Next Page"
 CONSTRUCTION_PREVIOUS_PAGE:0 "Previous Page"
 PRIVATELY_FUNDED_CONSTRUCTION:0 "#header [concept_private_construction]#!\n$TOOLTIP_DELIMITER$\nThis [concept_construction_queue] item is a [concept_private_construction] and cannot be cancelled or reprioritized."
 GOVERNMENT_FUNDED_CONSTRUCTION:0 "#header [concept_government_construction]#!\n$TOOLTIP_DELIMITER$\nThis [concept_construction_queue] item is a [concept_government_construction] and can be freely cancelled or reprioritized."
 CANNOT_ALTER_PRIVATE_CONSTRUCTION:0 "[Concept('concept_private_construction', '$concept_private_constructions$')] cannot be cancelled or reprioritized."
 NATIONALIZE_BUILDINGS_DESCRIPTION: "[concept_nationalize] [Concept('concept_building', '$concept_buildings$')], seizing the [Concept('concept_building_level', '$concept_building_levels$')] and making them [concept_nationally_owned]"
 NATIONALIZE_BUILDING_TYPE_GROUP_TOOLTIP: "#header [BuildingType.GetName]#!\n#v [NationalizeBuildingTypeGroup.GetMaxLevels]#! level(s) available for [Concept('concept_nationalize','$concept_nationalization$')]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_int32(NationalizeBuildingTypeGroup.GetCurrentLevels, '(int32)0'), 'SELECTED_LEVELS_BREAKDOWN', 'NO_LEVELS_SELECTED_FOR_NATIONALIZATION')]"
 SELECTED_LEVELS_BREAKDOWN: "#title #v [NationalizeBuildingTypeGroup.GetCurrentLevels]#!/[NationalizeBuildingTypeGroup.GetMaxLevels] level(s) currently selected for $concept_nationalization$:#! #indent_newline:3 \n[NationalizeBuildingTypeGroup.GetSelectedBuildingsBreakdown]#!"
 NO_LEVELS_SELECTED_FOR_NATIONALIZATION: "No level(s) currently selected for $concept_nationalization$"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY_MONEY: "[GetPlayer.GetCustom('currency_symbol')]#v $VAL|D=-$#!"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY: "$EFFECT_LIST_BULLET$[Building.GetState.GetName], $NUM_LEVELS|v$ level(s):"
 NATIONALIZE_BUILDING_ITEM_TOOLTIP: "$EFFECT_LIST_BULLET$[Building.GetName] in [Building.GetState.GetName], $NUM_LEVELS|v$ level(s):"
 # It might be better to use something like construction_panel.gui:205-225, where we change the text here without any new code, just check the different "HasPact" and "IsSubject" and construct the text accordingly.
 # at least "country" here is [NationalizeBuildingGroup.GetCountry] :)
 NATIONALIZE_BUILDING_GROUP_NAME_COMPANY: "Owned by [Country.GetAdjectiveNoFormatting] [Concept('concept_company', '$concept_companies$')]"
 NATIONALIZE_BUILDING_GROUP_NAME_PRIVATE: "[Country.GetAdjectiveNoFormatting] [concept_privately_owned]"
 NATIONALIZE_BUILDING_GROUP_NAME_GOVERNMENT: "[Country.GetAdjectiveNoFormatting] [concept_nationally_owned]"
 NATIONALIZE_BUILD_GROUP_TOOLTIP: "[SelectLocalization(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc), 'NATIONALIZE_BUILDING_GROUP_NONE_SELECTED', 'NATIONALIZE_BUILDING_GROUP_SELECTED')]"
 NATIONALIZE_BUILDING_GROUP_SELECTED: "#header [NationalizeBuildingGroup.GetName]#!\n#v [NationalizeBuildingGroup.GetNumSelectedLevels]#! level(s) selected for [Concept('concept_nationalize','$concept_nationalization$')][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc)), 'NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE')] #indent_newline:3 \n[NationalizeBuildingGroup.GetSelectedLevelsDesc]#!"
 NATIONALIZE_BUILDING_GROUP_NONE_SELECTED: "#v [NationalizeBuildingGroup.GetNumSelectedLevels]#! [NationalizeBuildingGroup.GetName] [Concept('concept_building_level','$concept_building_levels$')] selected for [Concept('concept_nationalize','$concept_nationalization$')][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]"
 NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE: "#title $concept_nationalization$ cost per [concept_building]:#!"
 NATIONALIZE_FILTERED_BUILDINGS_LABEL: "Nationalize Filtered Buildings"
 NATIONALIZE_FILTERED_BUILDINGS_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\n[concept_nationalize] one or more levels of the currently filtered [Concept('concept_building','$concept_buildings$')]."
 NATIONALIZE_FILTERED_BUILDINGS_FAILED: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\nIt is not possible to [concept_nationalize] any of the currently filtered [Concept('concept_building','$concept_buildings$')]."
 NATIONALIZE_BUILDING_REQUIRED_LEVELS: "Must nationalize at least #v 1#! [concept_building_level]"
 NATIONALIZE_BUILDING_NO_LEVELS: "Could not find any levels that can be [Concept('concept_nationalize','$concept_nationalized$')]"
 NATIONALIZE_EFFECTS_HEADER: "Effects"
 NATIONALIZE_EFFECTS_MAINTENANCE: "#r -[GetPlayer.GetStateOwnedBuildingsBureaucracyCostForLevels(NationalizeBuildingWindow.GetNumLevelsToNationalize)|D0]#! [concept_bureaucracy] maintenance cost for [Concept('concept_nationally_owned', '$concept_nationally_owning$')] #v [NationalizeBuildingWindow.GetNumLevelsToNationalize]#! new [SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'concept_building_level_short','concept_building_levels_short')]#!"
 NATIONALIZE_EFFECT_RADICALS: "#title These [concept_building_owners] would become more [concept_radical]:#!#indent_newline:3 \n[NationalizeBuildingWindow.GetPopRadicalizationListDesc]#!"
 NATIONALIZE_EFFECT_RELATIONS: "$BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER$\n[NationalizeBuildingWindow.GetDamagedRelationsListDesc]"

 NATIONALIZE_COMPENSATION_PLAYER_IP: "([GetPlayer.GetCustom('currency_symbol')]#v [NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool|D]#! goes to your [concept_investment_pool])"
 NATIONALIZE_COMPENSATION_AMOUNT: "[GetPlayer.GetCustom('currency_symbol')]#r -[NationalizeBuildingWindow.GetCompensationTotal|D]#! cost [AddLocalizationIf(GreaterThan_CFixedPoint(NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool, '(CFixedPoint)0'), 'NATIONALIZE_COMPENSATION_PLAYER_IP')]"

 CANNOT_NATIONALIZE_FOREIGN_INVESTMENT_RIGHTS: "[COUNTRY.GetFlagTextIcon] [COUNTRY.GetAdjectiveNoFormatting] investors have [concept_foreign_investment] rights."
 CANNOT_NATIONALIZE_NATIONALLY_OWNED_BUILDING: "[COUNTRY.GetFlagTextIcon] [COUNTRY.GetAdjectiveNoFormatting] [concept_nationally_owned] [Concept('concept_building_level','$concept_building_levels$')] cannot be [Concept('concept_nationalize','$concept_nationalized$')]"
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS: "There are no levels that #tooltippable #tooltip:[BUILDING.GetTooltipTag],CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN can be nationalized#!#!"
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN: "[Building.GetNoLevelsCanBeNationalizedDesc]"
 CANNOT_NATIONALIZE_UNDER_COLLECTIVIZATION: "This building cannot be nationalized because it has not reached its minimum Worker-Owned Levels"

 CANNOT_NATIONALIZE_NO_FUNDS:0 "Cannot afford [Concept('concept_nationalize','$concept_nationalization$')], we need #variable [GetPlayer.GetCustom('currency_symbol')]$COST|D$#! and we only have [GetPlayer.GetCustom('currency_symbol')]#v [GetPlayer.GetGoldReserves|D]#! in our [concept_gold_reserves] currently"
 CANNOT_NATIONALIZE_BUILDING_TYPE:0 "Only the buildings that can be constructed and owned by others can be [Concept('concept_nationalize','$concept_nationalized$')]"
 CANNOT_NATIONALIZE_DISALLOWED:0 "[Concept('concept_nationalize','$concept_nationalization$')] is not allowed"
 BUILDING_NATIONALIZE:0 "$concept_nationalize$"
 CANNOT_NATIONALIZE_LAST_COMPANY_LEVELS: "These levels can't be nationalized as [Company.GetName] can't have less then #variable $NUM_LEVELS$#! owned levels"
 BUILDING_NATIONALIZE_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\n[concept_nationalize] one or more levels of this [concept_building][ConcatIfNeitherEmpty('\n\n',GetDesc( Building.NationalizeBuildingLevels( '(int32)1' ) ))]"
 BUILDING_NATIONALIZE_DESC: "[concept_nationalize] [NationalizeBuildingWindow.GetNumLevelsToNationalize|v] [SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')]:\n$OWNERS$\n\n$COMPENSATION$[ConcatIfNeitherEmpty('\n\n','$PENALTIES$')]"
 BUILDING_NATIONALIZE_LEVEL_SINGULAR: "[concept_building_level]"
 BUILDING_NATIONALIZE_LEVEL_PLURAL: "[Concept('concept_building_level', '$concept_building_levels$')]"
 BUILDING_NATIONALIZE_WITH_COMPENSATION_DESC: "[GetPlayer.GetCustom('currency_symbol')]$COST|vD$ compensation cost ([GetPlayer.GetCustom('currency_symbol')]$INVESTMENT|Dv$ will be paid into the [concept_investment_pool])"
 BUILDING_NATIONALIZE_NO_COMPENSATION_DESC: "This will be done with #n no monetary compensation#!, increasing the impact on $concept_radicals$ and $concept_relations$ by #n [GetDefine('NEconomy','NATIONALIZE_BUILDING_NO_COMPENSATION_IMPACT_MULT')|%0]#!"
 BUILDING_NATIONALIZE_COUNTRY_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! owned by [COUNTRY.GetName]"
 BUILDING_NATIONALIZE_BUILDING_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! owned by [BUILDING.GetName] in [Building.GetState.GetName]"
 BUILDING_NATIONALIZE_SELF_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! owned by the [concept_workforce]"
 BUILDING_NATIONALIZE_RADICALS_DESC: "@warning! These [concept_building_owners] would become more [concept_radical]:\n$POP_LIST$"
 BUILDING_NATIONALIZE_RADICALIZED_POP_ENTRY: "$NAME$ #v $AMOUNT|-D$#!"
 BUILDING_NATIONALIZATION_CAN_TOGGLE_COMPENSATION: "#header Compensation for $concept_nationalization$#!\n$TOOLTIP_DELIMITER$\n#instruction Click to toggle whether to give monetary compensation for $concept_nationalization$ to [Concept('concept_building_owners','$concept_building_owning$')] [Concept('concept_pop', '$concept_pops$')]#!"
 BUILDING_NATIONALIZATION_CANNOT_TOGGLE_COMPENSATION: "#header Compensation for $concept_nationalization$#!\n$TOOLTIP_DELIMITER$\nCannot disable monetary compensation for $concept_nationalization$ due to:\n$DETAILS$"
 BUILDING_NATIONALIZATION_WITH_COMPENSATION: "Give compensation to [concept_building_owners]"
 BUILDING_NATIONALIZATION_INCREASE_LEVELS_TOOLTIP: "#header Increase levels to $concept_nationalize$#!\n$TOOLTIP_DELIMITER$\n#i Click#! to increase the number of levels by #v 1#!\n#i $SHORTCUT_KEY_MOD_shift$Click#! to increase the number of levels by #v 10#!\n#i $SHORTCUT_KEY_MOD_ctrl$Click#! to set the number of levels to #v maximum#!"
 BUILDING_NATIONALIZATION_DECREASE_LEVELS_TOOLTIP: "#header Decrease levels to $concept_nationalize$#!\n$TOOLTIP_DELIMITER$\n#i Click#! to decrease the number of levels by #v 1#!\n#i $SHORTCUT_KEY_MOD_shift$Click#! to decrease the number of levels by #v 10#!\n#i $SHORTCUT_KEY_MOD_ctrl$Click#! to set the number of levels to #v minimum#!"
 CTRL_CLICK_TO_SET_TO_MAXIMUM_MINIMUM: "#i $SHORTCUT_KEY_MOD_ctrl$Click#! to set the number of levels to a #v minimum#!/#v maximum#!"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER: "@warning! Would reduce [concept_relations] with the following [Concept('concept_country', '$concept_countries$')]:"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_ENTRY: "[COUNTRY.GetName]: $AMOUNT|=+$ (Currently [COUNTRY.GetRelationsWith(GetPlayer)|+])"

 CANNOT_TOGGLE_PRIVATIZATION_NO_AVAILABLE_LEVELS:0 "Cannot be privatized as there are no levels to privatize"
 CANNOT_PRIVATIZE_BUILDING_TYPE:0 "Only the buildings that can be constructed and owned by others can be privatized"
 CANNOT_TOGGLE_PRIVATIZATION_DISALLOWED:0 "All privatization is banned in the country of building location"
 BUILDING_TOGGLE_PRIVATIZATION:0 "[Concept('concept_privatize','$concept_privatization$')]"
 CANNOT_TOGGLE_PRIVATIZATION_FORCED:0 "[Concept('concept_privatize','$concept_privatization$')] is forced in the country of building location"
 BUILDING_ENABLE_PRIVATIZATION:0 "Enable [Concept('concept_privatize','$concept_privatization$')]"
 BUILDING_DISABLE_PRIVATIZATION:0 "Disable [Concept('concept_privatize','$concept_privatization$')]"
 BUILDING_TOGGLE_PRIVATIZATION_TOOLTIP_HEADER:0 "#header Toggle $BUILDING_TOGGLE_PRIVATIZATION$#!"
 BUILDING_TOGGLE_PRIVATIZATION_TOOLTIP_DESC:0 "Allow investors to buy [Building.GetName] levels from [GetPlayer.GetName] for #variable [GetPlayer.GetCustom('currency_symbol')]$COST|D$#! per level"
 BUILDING_PRIVITZATION_TOOLTIP: "#header [Concept('concept_privatize','$concept_privatized$')]#!\nThis allows investors to buy [Building.GetName] levels from [GetPlayer.GetName] for #variable [GetPlayer.GetCustom('currency_symbol')]$COST|D$#! per level"
 BUILDING_PIN_IN_OUTLINER: "[SelectLocalization(Building.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"

 TRANSFER_OWNERSHIP_FOR_BUILDING_HEADER: "$TAB$[Building.GetName] #variable $LEVEL$#! level(s), owned by:"
 TRANSFER_OWNERSHIP_FROM_COUNTRY: "$TAB$$TAB$#variable $LEVEL$#! level(s): [Country.GetName]"
 TRANSFER_OWNERSHIP_FROM_BUILDING: "$TAB$$TAB$#variable $LEVEL$#! levels(s): [Building.GetName] in [Building.GetState.GetName]"
 TRANSFER_OWNERSHIP_FROM_WORKFORCE: "$TAB$$TAB$#variable $LEVEL$#! levels(s): [concept_workforce]"
 CREATE_COMPANY_COMMAND_DESC: "#header Establish the [CompanyType.GetNameNoFormatting|v] [concept_company] in [State.GetName]#!\n\nTo this new Company the following [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] will be transferred:\n$OWNERS$\n\n[GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|v1$ predicted [concept_productivity]"
 PURCHASE_COMPANY_COMMAND_DESC: "#header Establish the [CompanyType.GetNameNoFormatting|v] [concept_company] in [State.GetName]#!\n\nThis new Company will be transferred the following [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')]:\n$OWNERS$\n\n[GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|v1$ predicted [concept_productivity]\n\n[GetPlayer.GetCustom('currency_symbol')]$COST|vD+$ total cost"
 CANNOT_PURCHASE_COMPANY_NO_FUNDS: "Cannot afford establishing a new [concept_company], we need #variable [GetPlayer.GetCustom('currency_symbol')]$COST|D$#! and we only have [GetPlayer.GetCustom('currency_symbol')]#v [GetPlayer.GetGoldReserves|D]#! in our [concept_gold_reserves] currently"

 TRANSFER_OWNERSHIP_TO_COUNTRY: "[BuildingType.GetName] #variable $LEVEL$#! will be transferred to [Country.GetName]"
 TRANSFER_OWNERSHIP_TO_WORKFORCE: "[BuildingType.GetName] #variable $LEVEL$#! will be transferred to [concept_workforce]"
 REMOVE_COMPANY_COMMAND_DESC: "#header Disband [Company.GetName|v] [concept_company] in [Company.GetState.GetName]#!\n\n$LEVEL|v$ [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] will be transferred from the company:\n$ASSETS$\n\nTotal compensation for [Concept('concept_nationalize','$concept_nationalization$')]: [GetPlayer.GetCustom('currency_symbol')]$COST|K0v$"

 # BUILDING OWNERSHIP / FOREIGN INVESTMENTS
 DOMESTIC: "Domestic"
 ABROAD: "Abroad"
 LOCATION: "Location"
 OWNER_TYPE: "Owner Type"
 BUILDING_TYPE: "Building"
 RECENT_SEARCHES: "Recent Searches"
 PRIVATE: "Private"
 ALL_BUILDINGS: "All Buildings"
 WORKERS: "Workers"
 CONSTRUCTION_EFFICIENCY_SHORT: "Con.Eff"
 EMPLOYMENT_SHORT: "Emp."
 CASH_RESERVES_SHORT: "Cash."
 TRAITS: "Traits"
 CLEAR_SEARCH: "#header Clear Search#!"
 POTENTIAL_BUILDINGS: "Potential Buildings"
 CONTROLLER: "Controller"
 IN_PLAYER_COUNTRY: "In [GetPlayer.GetName]"
 EVERYWHERE: "Everywhere"

 BUILDING_DATABASE_ORDER: "Building Type"

 CURRENT_COMPACT_BUILDING_BROWSER_FILTER: "[SelectLocalization(Not(And(And(And(Not(BuildingBrowserPanel.IsFiltered('owned_national')), Not(BuildingBrowserPanel.IsFiltered('owned_private'))), Not(BuildingBrowserPanel.IsFiltered('owned_foreign'))), Not(BuildingBrowserPanel.IsFiltered('owned_company')))), 'COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER', 'SELECTED_FILTER_ALL_BUILDINGS')], [SelectLocalization(BuildingBrowserPanel.IsFiltered('is_domestic'), 'COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER', 'EVERYWHERE')]"
 COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER: "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_national'), 'NATIONALLY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_private'), 'PRIVATELY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_foreign'), 'FOREIGN_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_company'), 'COMPANY_OWNED_BUILDINGS')]"
 COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER:0 "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_domestic'), 'IN_PLAYER_COUNTRY')][AddLocalizationIf(BuildingBrowserPanel.IsFilterNo('is_domestic'), 'ABROAD')]"

 SELECTED_FILTER_ALL_BUILDINGS: "[SelectLocalization(Not(And(And(Not(BuildingBrowserPanel.IsFiltered('is_urban')), Not(BuildingBrowserPanel.IsFiltered('is_rural'))), Not(BuildingBrowserPanel.IsFiltered('is_development')))), 'ALL_CATEGORY_BUILDINGS', 'ALL_BUILDINGS')]"

 NATIONALLY_OWNED_BUILDINGS: "$concept_nationally_owned$$BUILDING_CATEGORY$ $concept_buildings$"
 PRIVATELY_OWNED_BUILDINGS: "$concept_privately_owned$$BUILDING_CATEGORY$ $concept_buildings$"
 FOREIGN_OWNED_BUILDINGS: "Foreign Owned$BUILDING_CATEGORY$ $concept_buildings$"
 COMPANY_OWNED_BUILDINGS: "$concept_company$ Owned$BUILDING_CATEGORY$ $concept_buildings$"

 ALL_CATEGORY_BUILDINGS: "All$BUILDING_CATEGORY$ $concept_buildings$"
 BUILDING_CATEGORY: "[ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_urban'), 'IS_URBAN'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_rural'), 'IS_RURAL'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_development'), 'IS_DEVELOPMENT'))]"

 AVAILABILITY: "Availability"
 AVAILABLITY_ALL: "All, both existing and potential new [Concept('concept_building', '$concept_buildings$')]"
 ONLY_AVAILABLE_BUILDING_TYPES: "Only existing [Concept('concept_building', '$concept_buildings$')]"
 ONLY_POTENTIAL_BUILDING_TYPES: "Only potential new [Concept('concept_building', '$concept_buildings$')]"


 BUILDING_BROWSER: "Building Registry"
 NO_BUILDINGS_MATCHES_THE_CURRENT_FILTER: "No Buildings matches the current filter"
 BY_BUILDING_TYPE: "By Type"
 GROUPING: "Grouping"
 INTERACTIONS: "Interactions"
 SITUATED_IN_INCORPORATED_STATE: "Situated in an Incorporated State"
 NOT_SITUATED_IN_INCORPORATED_STATE: "Situated in an Unincorporated State"
 FULLY_EMPLOYED: "Fully employed"
 HAS_UNEMPLOYMENT: "Has vacancies"
 CASH_RESERVES: "Cash Reserves"
 FULL_CASH_RESERVES: "Have full Cash Reserves"
 NOT_FULL_CASH_RESERVES: "Does not have full Cash Reserves"
 IS_SUBSIDIZED: "Is Subsidized"
 IS_NOT_SUBSIDIZED: "Is not Subsidized"
 SUBSIDIES: "Subsidies"
 IS_DOMESTIC: "Is located in [BuildingBrowserPanel.GetCountry.GetName]"
 IS_ABROAD: "Is located abroad"
 SUBSISTENCE: "Subsistence"
 IS_SUBSISTENCE_BUILDING: "Is Subsistence Building"
 NOT_SUBSISTENCE_BUILDING: "Is not a Subsistence Building"
 HAS_CONSTRUCTION_QUEUED: "Has Construction Queued"
 NOT_CONSTRUCTION_QUEUED: "Does not have any Construction Queued"
 CAPPED_BUILDING: "Size Cap"
 IS_CAPPED_BUILDING: "Is Capped Building"
 NOT_CAPPED_BUILDING: "Is Uncapped Building"
 INPUT_SHORTAGE: "Input Shortage"
 HAS_INPUT_SHORTAGE: "Has any Input Shortages"
 NOT_INPUT_SHORTAGE: "Does not have any Input Shortages"
 HIRING_STATUS: "Hiring Status"
 IS_HIRING: "Is Hiring"
 IS_UNWILLING_TO_HIRE: "Is Unwilling to hire"
 IS_UNABLE_TO_HIRE: "Is Unable to hire"
 HAS_FAILED_HIRES: "Has Failed to hire"
 FILTERED_BUILDING_TYPE_SIZE_DESC_HAS_QUEUED: "$NUM_LEVELS$+$NUM_QUEUED$"
 FILTERED_BUILDING_TYPE_SIZE_DESC_NO_QUEUED: "$NUM_LEVELS$"
 BUILDING_GROUP: "Group"
 IS_URBAN: "Urban"
 IS_RURAL: "Rural"
 IS_DEVELOPMENT: "Development"
 STATE_NAME_WITH_FOREIGN_FLAG_NO_FORMAT: "[AddLocalizationIf( Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE' )][State.GetNameNoFormatting]"
 STATE_NAME_WITH_FOREIGN_FLAG: "[AddLocalizationIf( Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE' )][State.GetName]"
 STATE_OWNER_FLAG_WITH_SPACE: "[State.GetOwner.GetFlagTextIcon] "
 OWNERSHIP: "Ownership"
 BUILDING_BROWSER_CONSTRUCTING: "Constructing..."
 BUILDING_FILTER_OWNERSHIP: "Owners"
 BUILDING_FILTER_OWNERSHIP_GOVERNMENT_TT: "Has [Concept('concept_building_level', '$concept_building_levels$')] [concept_nationally_owned] by [GetPlayer.GetName]"
 BUILDING_FILTER_OWNERSHIP_PRIVATE_TT: "Has [Concept('concept_building_level', '$concept_building_levels$')] [concept_privately_owned] by [GetPlayer.GetAdjective] [Concept('concept_pop', '$concept_pops$')]"
 BUILDING_FILTER_OWNERSHIP_FOREIGN_TT: "Has [Concept('concept_building_level', '$concept_building_levels$')] with non-[GetPlayer.GetAdjectiveNoFormatting] owners"
 BUILDING_FILTER_OWNERSHIP_COMPANY_TT: "Has [Concept('concept_building_level', '$concept_building_levels$')] owned by [GetPlayer.GetAdjective] [Concept('concept_company', '$concept_companies$')]"

 BUILDING_CONTROLLER: "#header Building Controller#!\n[Country.GetName] controls the [Concept('concept_production_method', '$concept_production_methods$')] of this Building"

 CONSTRUCTION_IN_COUNTRY: "#v [Country.GetNumActiveConstructionQueueElements]#! [Concept('concept_building', '$concept_buildings$')] [concept_under_construction]"

 BUILDING_OWNERSHIP_LABEL: "[SelectLocalization(ObjectsEqual(BuildingOwnership.GetOwnedBuilding.Self, BuildingOwnership.GetOwnerBuilding.Self),'BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE','BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE')]"
 BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE: "[BuildingOwnership.GetOwnerBuilding.GetName] in [AddTextIf( Not( ObjectsEqual( BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner )), BuildingOwnership.GetOwnerBuilding.GetState.GetOwner.GetFlagTextIcon )][BuildingOwnership.GetOwnerBuilding.GetState.GetName]"
 BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE: "Local [concept_workforce]"

 OWNERSHIP_SHARE_CHART_TOOLTIP: "[SelectLocalization( BuildingOwnership.IsCountryOwned, 'OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL', 'OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE: "#header $BUILDING_OWNERSHIP_LABEL$#!\n[Concept('concept_privately_owned', '$concept_privately_owns$')] [BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')] ([BuildingOwnership.GetOwnershipRatio|0%] of total)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL: "#header [BuildingOwnership.GetOwnerCountry.GetName]#!\n[Concept('concept_nationally_owned', '$concept_nationally_owns$')] [BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')] ([BuildingOwnership.GetOwnershipRatio|0%] of total)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_SHORT: "[Building.GetName] in [Building.GetState.GetName] is [Concept('concept_privately_owned', '$concept_privately_owned$')] by [GetDataModelSize(Building.GetCappedOwnersShortRest)|v] more [Concept('concept_building', '$concept_buildings$')]"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_LONG: "[Building.GetName] in [Building.GetState.GetName] is [Concept('concept_privately_owned', '$concept_privately_owned$')] by [GetDataModelSize(Building.GetCappedOwnersLongRest)|v] more [Concept('concept_building', '$concept_buildings$')]"

 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN: "[AddLocalizationIf(Not(ObjectsEqual(BuildingOwnership.GetOwnerCountry.Self, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.Self)),'OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT: "\n@foreign_investment![concept_foreign_investment]"

 OWNERSHIP_SHARE_CHART_TOOLTIP_LOCAL_WORKFORCE_HEADER: "$BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE$:"
 OWNERSHIP_SHARE_CHART_TOOLTIP_OWNER_BUILDING_WORKFORCE_HEADER: "[BuildingOwnership.GetOwnerBuilding.GetName] [concept_workforce]:"
 OWNERSHIP_SHARE_CHART_TOOLTIP_WORKFORCE_POP_LINE: "[PopListItem.GetWorkingAdultsPopSize|Dv] [PopListItem.GetPopType.GetName]"


 PROPERTY_SHARE_BUILDING_DESC: "[BuildingOwnership.GetOwnedBuilding.GetName] in [BuildingOwnership.GetOwnedBuilding.GetState.GetName]"
 PROPERTY_SHARE_CHART_TOOLTIP: "#header $PROPERTY_SHARE_BUILDING_DESC$#!\n#v [BuildingOwnership.GetOwnershipRatio|0%]#! ([BuildingOwnership.GetLevel|v] levels) is owned by [BuildingOwnership.GetOwnerBuilding.GetName] in [BuildingOwnership.GetOwnerBuilding.GetState.GetName].\nThat is #v [BuildingOwnership.GetPropertyRatio|0%]#! of [BuildingOwnership.GetOwnerBuilding.GetName] in [BuildingOwnership.GetOwnerBuilding.GetState.GetName]'s total property portfolio."
 PROPERTY_SHARE_ENTRY_LABEL: "[BuildingOwnership.GetOwnedBuilding.GetName] in [AddTextIf( Not( ObjectsEqual( BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner )), BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.GetFlagTextIcon )][BuildingOwnership.GetOwnedBuilding.GetState.GetName]"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_SHORT: "[Building.GetName] in [Building.GetState.GetName] owns [Concept('concept_building_level', '$concept_building_levels_short$')] in [GetDataModelSize(Building.GetCappedAssetsShortRest)|v] more [Concept('concept_building', '$concept_buildings$')]"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_LONG: "[Building.GetName] in [Building.GetState.GetName] owns [Concept('concept_building_level', '$concept_building_levels_short$')] in [GetDataModelSize(Building.GetCappedAssetsLongRest)|v] more [Concept('concept_building', '$concept_buildings$')]"

 BUILDING_OWNERSHIP_DIVIDENDS_TOOLTIP: "#header [concept_dividends]#!\n[BuildingOwnership.GetOwnedBuilding.GetName] in [BuildingOwnership.GetOwnedBuilding.GetState.GetName] pays #v [GetPlayer.GetCustom('currency_symbol')][BuildingOwnership.GetDividendToOwner|D]#! to the [SelectLocalization(BuildingOwnership.IsCountryOwned, BuildingOwnership.GetOwnerCountry.GetName, 'BUILDING_OWNERSHIP_LABEL')] in [concept_dividends]"
 
 BUILDING_OWNERSHIP_INVALID_ENTRY: "Refreshing..."

#TODO PRCAL-27395 - Describe the actual filter selected
 CURRENT_CONSTRUCTION_FILTER_DESC: "[SelectLocalization(MapListBuildingPanel.HasFilter('all'), 'CURRENT_CONSTRUCTION_FILTER_ALL', 'CURRENT_CONSTRUCTION_FILTER_SPECIFIC')]"
 CURRENT_CONSTRUCTION_FILTER_ALL: "Domestic & Abroad"
 CURRENT_CONSTRUCTION_FILTER_SPECIFIC: "[SelectLocalization(MapListBuildingPanel.HasFilter('domestic'), 'CURRENT_CONSTRUCTION_FILTER_DOMESTIC', 'CURRENT_CONSTRUCTION_FILTER_ABROAD')]"
 CURRENT_CONSTRUCTION_FILTER_DOMESTIC: "Domestic - Only [GetPlayer.GetAdjective] [Concept('concept_state','$concept_states$')]"
 CURRENT_CONSTRUCTION_FILTER_ABROAD: "Abroad - Only foreign [Concept('concept_state','$concept_states$')]"

 SHOW_VALUES_FOR_FULL_EMPLOYEMENT: "#tooltippable Values at Full Employment#!"

 LOCATION_FILTER_ALL: "#header All#!\nShow all States"
 LOCATION_FILTER_DOMESTIC: "#header Domestic#!\nShow only States in [GetPlayer.GetName]"
 LOCATION_FILTER_ABROAD: "#header Abroad#!\nShow only States outside of [GetPlayer.GetName]"

 SORT_TRAITS_TOOLTIP: "#header State Traits#!\n$TOOLTIP_DELIMITER$\nThe number of State Traits in this State"
 SORT_CONTROLLER_TOOLTIP: "#header Controller#!\n$TOOLTIP_DELIMITER$\nWhich Country that has the power to change Production Methods in this Building"
 SORT_CONSTRUCTION_EFFICIENCY_TOOLTIP: "#header Construction Efficiency#!\n$TOOLTIP_DELIMITER$\n$state_construction_mult_desc$"
 SORT_EMPLOYMENT_TOOLTIP: "#header Employment#!\n$TOOLTIP_DELIMITER$\nThe number of Pops working in this Building"
 SORT_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\n$TOOLTIP_DELIMITER$\nThe amount of Cash Reserves this Building has"

 OWNER_TYPE_FILTER_GOVERNMENT: "#header Government#!\n$TOOLTIP_DELIMITER$\nShow only Buildings that has Government owners"
 OWNER_TYPE_FILTER_PRIVATE: "#header Private#!\n$TOOLTIP_DELIMITER$\nShow only Buildings that has Private owners"
 OWNER_TYPE_FILTER_WORKERS: "#header Workers#!\n$TOOLTIP_DELIMITER$\nShow only Buildings that has Workers owners"

 FULL: "Full"
 CONDENSED: "Condensed"
 LIST_ITEM: "List item"
 CONSTRUCTION_CONDENSED_OR_FULL: "[SelectLocalization(GetVariableSystem.Exists('construction_list_toggle_full_or_condensed'), 'FULL', 'CONDENSED')]"

 DATAMODEL_INDEX: "[PdxGuiWidget.GetIndexInDataModel]"

 CONTROLLER_FILTER_PLAYER: "#header Controlled by [GetPlayer.GetName]#!\n$TOOLTIP_DELIMITER$\nShow only Buildings controlled by [GetPlayer.GetName]"
 CONTROLLER_FILTER_OTHER: "#header Controlled by Other#!\n$TOOLTIP_DELIMITER$\nShow only Buildings #b not#! controlled by [GetPlayer.GetName]"
 COMMAND_CONFIRMATION_PROMOTE_CHARACTER:4 "Do you want to $PROMOTE_CHARACTER_HEADER$?\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS_TOOLTIP$\n\nThis cannot be undone."
 COMMAND_CONFIRMATION_CAPITULATE:1 "Do you want to capitulate in the [WAR.GetName] war? All [Concept('concept_war_goal', '$concept_war_goals$')] against your country and subjects will be automatically enforced."
 COMMAND_CONFIRMATION_YIELD:1 "Do you want to back down in the [concept_diplomatic_play] against [TARGET_COUNTRY.GetName]? Their [Concept('concept_primary_demand','$concept_primary_demands$')] against us will be enforced."
 COMMAND_CONFIRMATION_DECLARE_NEUTRALITY:0 "Do you want to declare neutrality in this [concept_diplomatic_play]? It will not be possible to rejoin the play later."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY:1 "Do you want to start a [DiplomaticPlayType.GetName] [concept_diplomatic_play]? This can result in a war."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY_WITH_DEFINITION:1 "[DiplomaticPlayType.GetStartDescCountryWithDefinition(GetPlayer,Country.Self,CountryDefinition.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY:2 "[DiplomaticPlayType.GetStartDescCountry(GetPlayer,Country.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_STATE:2 "[DiplomaticPlayType.GetStartDescState(GetPlayer,State.Self)]"

 COMMAND_CONFIRMATION_DISBAND_FORMATION: "Do you want to #r disband#! [MILITARY_FORMATION.GetName]?"
 DISBAND_COMMAND_HEADER: "#r Disbanding#! [MILITARY_FORMATION.GetName] will have the following effects:"
 DISBAND_COMMAND_FORMATION_ENTRY_BEGINNING: "Will be transferred to [MILITARY_FORMATION.GetName]:"
 DISBAND_COMMAND_FORMATION_ENTRY_COMMANDER: "* [CHARACTER.GetFullNameWithTitle]"
 DISBAND_COMMAND_FORMATION_ENTRY_UNIT: "* [COMBAT_UNIT_TYPE.GetIconString] $NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName]"
 DISBAND_COMMAND_ENTRY_BEGINNING: "Transfers "
 DISBAND_COMMAND_UNIT_ENTRY: "[COMBAT_UNIT_TYPE.GetIconString] $NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName]"
 DISBAND_COMMAND_UNIT_ENTRY_END: " to [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_DISBANDED_UNITS_END: " will be disbanded"
 DISBAND_COMMAND_COMMANDER_ENTRY: "Transfers [CHARACTER.GetFullName] to [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_TOO_MANY_COMMANDERS: "You cannot disband this [SelectLocalization(MilitaryFormation.IsArmy,'concept_army','concept_fleet')] since you have too many [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')] and insufficient room in other [SelectLocalization(MilitaryFormation.IsArmy,'concept_armies','concept_fleets')].\n\n#indent_newline:3 Consider retiring these [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')] first:\n$BREAKDOWN$#!"
 DISBAND_COMMAND_DISBAND_COMMANDER_ENTRY: "[Character.GetFullName] ([Character.GetRankName])"
 DISBAND_COMMAND_MENTION_THAT_TRACKING_FORMATIONS_WILL_GO_SOMEWHERE_ELSE: "Formations that are traveling to merge into [MILITARY_FORMATION.GetName] will instead try to find a different formation to merge into and, if one is not found, will instead be stationed in the closest available HQ."
 DISBAND_COMMAND_CONFIRM: "Do you want to continue?"

 COMMAND_CONFIRMATION_MOBILIZE_ARMY: "Do you want to ['concept_mobilize_army', '$concept_mobilize_army_mobilize$')] [MILITARY_FORMATION.GetName]?"
 COMMAND_CONFIRMATION_MOBILIZE_ARMIES: "Do you want to [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')] all of your [Concept('concept_army', '$concept_armies$')]?"

 COMMAND_CONFIRMATION_DEMOBILIZE_ARMY: "Do you want to [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] [MILITARY_FORMATION.GetName]?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 COMMAND_CONFIRMATION_DEMOBILIZE_ARMIES: "Do you want to [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] all of your [Concept('concept_army', '$concept_armies$')]?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 EARLY_DEMOBILIZATION_WARNING: "@warning! Early $concept_mobilize_army_demobilization$ will cause [Concept('concept_army','$concept_armies$')] to travel back to their home [Concept('concept_hq','$concept_hqs$')] where they will be unavailable for [GetDefine('NMilitary','DEMOBILIZATION_TIME_DAYS')|v0] days. [concept_good_consumption] of $concept_mobilize_army_mobilization$ [Concept('concept_good','$concept_goods$')] will gradually decrease during this time."

 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE:0 "Are you sure you want to stop incorporating [STATE.GetName]?"
 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE_UNSPECIFIED:0 "Are you sure you want to stop incorporating this state?"

 COMMAND_CONFIRMATION_DOWNSIZE_LAST_EXIT_PORT:0 "This would destroy the [GetBuildingType('building_port').GetName]. Are you sure you wish to continue?\n\n@information! Demolishing this [GetBuildingType('building_port').GetNameNoFormatting] might isolate [Concept('concept_state','$concept_states$')] from their [concept_market] if they cannot access the [concept_market_capital] through another [GetBuildingType('building_port').GetNameNoFormatting]."

 AGE:0 "Age"
 CHARACTER_AGE:0 "#v [Character.GetAge]#!"
 CHARACTER_AGE_TOOLTIP:0 "#header [Character.GetFullName]#! is #v [Character.GetAge]#! years old\n$TOOLTIP_DELIMITER$\n[Character.GetFirstName] was born on #v [Character.GetBirthday]#!"
 CHARACTER_INTERACTIONS_BUTTON_TOOLTIP: "[SelectLocalization(Not(IsDataModelEmpty(Character.GetInteractions)), 'CHARACTER_INTERACT_WITH', 'CHARACTER_CAN_NOT_INTERACT_WITH')]"
 CHARACTER_INTERACT_WITH: "Interact with [Character.GetFullName]"
 CHARACTER_CAN_NOT_INTERACT_WITH: "No available interactions with [Character.GetFullName]"
 CHARACTER_INTERACTIONS_HEADER: "Actions"
 CHARACTER_HISTORICAL_HEADER: "Historical Character"
 CHARACTER_HISTORICAL_OPEN_URL: "Learn More"
 CHARACTER_HISTORICAL_OPEN_URL_TOOLTIP: "This will open the following link in your web browser\n\n[Character.GetHistoricalUrl|v]"

 DIPLOMATIC_PLAY_NOT_FORCED_WARNING: "If they refuse, this will trigger a [concept_diplomatic_play] which may escalate into a [concept_war]"
 DIPLOMATIC_PLAY_FORCED_WARNING: "This will immediately trigger a [concept_diplomatic_play] which may escalate into a [concept_war]"
 DIPLOMATIC_DEMAND: "[concept_diplomatic_demand]"

 DIPLOMATIC_DEMAND_AI_ACCEPTANCE_BREAKDOWN: "#header $CHANCE|%0$ chance for [COUNTRY.GetName] to accept '$DEMAND_NAME|v$'#!\n$TOOLTIP_DELIMITER$\nTheir acceptance score of $SCORE|=+$ is due to the following factors:\n$DETAILS$"
 DIPLOMATIC_DEMAND_AI_WILL_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #p They will accept#!#!#!"
 DIPLOMATIC_DEMAND_AI_WILL_NOT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #n They will NOT accept#!#!#!"
 DIPLOMATIC_DEMAND_AI_MIGHT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v They might accept ($CHANCE|%0$ chance)#!#!#!"

 DIPLOMATIC_DEMAND_ACCEPTANCE_BASE_VALUE: "$VALUE|=+$ from Base Value"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WARGOAL_IMPACT: "$VALUE|=+$ from Impact of demanded [concept_war_goal]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED: "$VALUE|=+$ from Willingness to be annexed"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED_LIBERTY_DESIRE: "$VALUE|=+$ from Willingness to be annexed by [concept_overlord] at $LIBERTY_DESIRE|0v$ [concept_liberty_desire]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_SUBJUGATED: "$VALUE|=+$ from Willingness to become a #v $SUBJECT_TYPE$#! [concept_subject]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_LOSE_INCORPORATED_STATE: "$VALUE|=+$ from Willingness to cede an [concept_incorporated_state]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_MILITARY_POWER_FACTOR: "$VALUE|=+$ from Expected military power difference"
 DIPLOMATIC_DEMAND_ACCEPTANCE_LOYAL_SUBJECT: "$VALUE|=+$ from Loyal [concept_subject]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_UPPER_BOUND: "Limited to a #b maximum#! of $VALUE|v0$ ($PLAY_NAME$ [concept_diplomatic_play])"

 RELEASE_COUNTRY_HEADER:0 "Release [CountryCreation.GetName]"
 RELEASE_COUNTRY_SUBJECT_DESC:0 "Are you sure you want to release [COUNTRY_CREATION.GetName] as a [concept_subject] [concept_country] to [COUNTRY.GetName]?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_INDEPENDENT_DESC:0 "Are you sure you want to release [COUNTRY_CREATION.GetName] as an independent [concept_country]?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_WILL_RECEIVE_STATES:0 "They will receive the following states:\n[COUNTRY_CREATION.ListReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_WILL_RECEIVE_PROVINCES:0 "They will receive [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) in the [COUNTRY_CREATION.GetCapital.GetName] [concept_state_region]"
 RELEASE_COUNTRY_AS_INDEPENDENT:0 "Release as Independent"
 RELEASE_COUNTRY_AS_OWN_SUBJECT:0 "Release as own [concept_subject] [concept_country]"
 RELEASE_COUNTRY_PLAY_AS:0 "Play as [CountryCreation.GetName]"

 FORCE_DIPLOMATIC_PLAY: "Force [concept_diplomatic_play]"
 FORCE_DIPLOMATIC_PLAY_TOOLTIP: "#header $FORCE_DIPLOMATIC_PLAY$#!\n$TOOLTIP_DELIMITER$\nEnabling this will bypass the [concept_diplomatic_demand] and instantly start a [concept_diplomatic_play], allowing for additional demands to be made against the enemy."

 COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS:2 "#header Recruit [Character.GetFullName]\n#![ConcatIfNeitherEmpty(GetDesc(Character.GetRecruitCommand( PopupManager.GetRecruitFormation )),'\n')]$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n', Character.GetCommanderRank.GetModifiers( Character.Self ))]"
 COMMANDER_RECRUIT_BUTTON_TOOLTIP:2 "$COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS$"

 YES_CHECK:1 "@green_checkmark_box!"
 NO_CHECK:1 "@simple_box!"

 CONFIRM_YES:0 "Yes"
 CONFIRM_NO:0 "No"

 UNLOCK_TOPBAR:1 "Click to #bold Unlock#!"
 LOCK_TOPBAR:1 "Click to #bold Lock#!"

 OUTLINER_PINNED: "Pin"
 OUTLINER_ECONOMY: "Eco"
 OUTLINER_POLITICS: "Pol"
 OUTLINER_DIPLOMACY: "Dip"
 OUTLINER_MILITARY: "Mil"
 OUTLINER_ALL: "All"

 OUTLINER_TOGGLE_PINNED_TOOLTIP: "#header Show Pinned in Outliner#!"
 OUTLINER_TOGGLE_ECONOMY_TOOLTIP: "#header Show Economy in Outliner#!"
 OUTLINER_TOGGLE_POLITICS_TOOLTIP: "#header Show Politics in Outliner#!"
 OUTLINER_TOGGLE_DIPLOMACY_TOOLTIP: "#header Show Diplomacy in Outliner#!"
 OUTLINER_TOGGLE_MILITARY_TOOLTIP: "#header Show Military in Outliner#!"
 OUTLINER_TOGGLE_ALL_TOOLTIP: "#header Show All in Outliner#!"

 BASE_SCRIPT_VALUE_FORMAT:0 "$KEY$: $VALUE|+=0$"
 DECIMAL_SCRIPT_VALUE_FORMAT:0 "$KEY$: $VALUE|+=$"
 NEUTRAL_SCRIPT_VALUE_FORMAT:0 "$KEY$: $VALUE|=0v$"
 NEUTRAL_DECIMAL_SCRIPT_VALUE_FORMAT:0 "$VALUE|=D+$ $KEY$"
 SCRIPT_VALUE_KEY_AFTER_FORMAT:0 "$VALUE|+=0$: $KEY$"
 
 incorporated_state:0 "[concept_incorporated_state]"
 unincorporated_state:0 "[concept_unincorporated_state]"
 colonial_state:1 "[concept_colony]"
 recently_conquered_state: "Recently Conquered"
 recently_liberated_state: "Recently Liberated"

 state_type_colony:1 "[concept_colony]"
 state_type_unincorporated:0 "[concept_unincorporated_state]"
 state_type_incorporated:0 "[concept_incorporated_state]"
 state_type_treaty_port:0 "[concept_treaty_port]"

 STATE_GOODS_POTENTIAL_SUMMARY:0 "Can support $POTENTIAL|v$ [BUILDING_TYPE.GetName] (Current Amount: $CUR|v$): Each building of this type can produce at most $AMOUNT|0v$ [GOODS.GetTextIcon][GOODS.GetName] at base throughput with our current technologies and laws."
 STATE_GOODS_POTENTIALS_TOOLTIP:0 "#header [GOODS.GetTextIcon] [GOODS.GetName] in [STATE.GetName]#!\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|Dv]\n$TOOLTIP_DELIMITER$\nProduction: [STATE.GetNumProduced(GOODS.Self)|1v]\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|1v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_PRODUCTION_TOOLTIP:0 "#header [GOODS.GetTextIcon] [GOODS.GetName] in [STATE.GetName]#!\nProduction: [STATE.GetNumProduced(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|1v]\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_CONSUMPTION_TOOLTIP:0 "#header [GOODS.GetTextIcon] [GOODS.GetName] in [STATE.GetName]#!\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nProduction: [STATE.GetNumProduced(GOODS.Self)|1v]\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_LOCAL_PRICES_TOOLTIP: "[GOODS.GetStatePriceDesc]"

 DIPLOMACY_HOVER_ATTITUDE_COUNTRY:0 "#header Viewing [concept_attitude] from the perspective of [Country.GetName]#!"
 DIPLOMACY_HOVER_RELATIONS_COUNTRY:2 "#header Viewing [concept_relations] from the perspective of [Country.GetName]#!"

 MULT_ICON:0 "#bold ×#!"
 PROFITABILITY_SHORT:0 "Prof"
 SIZE:0 "Size"
 POTENTIAL: "Potential"

 TOOLTIP_AI_STRATEGY:0 "#header [AIStrategy.GetName]#!\n$TOOLTIP_DELIMITER$\n[AIStrategy.GetDesc(Country.Self)]"

 TOOLTIP_DELIMITER:0 "@divider_start!@divider_mid!@divider_mid!@divider_mid!@divider_end!"

 MARKETABLE_GOODS_TOOLTIP:0 "#header Marketable Goods#!\n$TOOLTIP_DELIMITER$\nBecause of its relatively low trading volume, the price of #variable [Goods.GetName]#! is affected by Market pricing to a greater degree than other goods, and thus is less affected by a state having low [concept_market_access]."
 NON_MARKETABLE_GOODS_TOOLTIP:0 "#header Non-Marketable Goods#!\n$TOOLTIP_DELIMITER$\nBecause of its relatively high trading volume, the price of #variable [Goods.GetName]#! is affected by Market pricing to a lesser degree than other goods, and thus is more affected by a state having low [concept_market_access]."

 NON_NEGOTIATORS:0 "Non-Negotiating Participants"

 RESOURCES:0 "Resources"
 BUILDINGS:0 "Buildings"

 POWER_STRUCTURE:0 "Power Structure"
 ECONOMY:0 "Economy"
 HUMAN_RIGHTS:0 "Human Rights"

 UPGRADE:0 "@arrow_up! Upgrading"
 DOWNGRADE:0 "@arrow_down! Downgrading"

 EXCESS:0 "excess"
 LACK:0 "lack of"
 INTEREST_IN:0 "[concept_interest] in"
 PRESTIGE:0 "Prestige"
 RANK:0 "Rank"
 PROGRESS:0 "Progress"

 INSTITUTION_EMPTY_STATE:0 "You have no [Concept('concept_law', '$concept_laws$')] providing any [Concept('concept_institution', 'Institutions')]"
 SHRINK:0 "< Shrink"
 GROW:0 "Grow >"
 TECH_TREE:0 "Technology Tree"
 GRAPHLAYOUT_NODE_DEBUG:1 "#D Key: $KEY$\nLayout node id: $LAYOUT_NODE_ID$\nBase node id: $BASE_NODE_ID$\nIncoming nodes: $INCOMING$\nOutgoing nodes: $OUTGOING$\nLayer: $LAYER$\nWidth: $WIDTH$\nCenterX: $CENTER_X$\nPriority: $PRIORITY$\nPosition: $POSITION$ #!"

 urban_capacity:0 "State [concept_urbanization]"

 BUILDING_GROUP_TITLE:0 "#title $BUILDING_GROUP$#!"
 BUILDING_GROUP_ENTRY_UNCAPPED:0 "$BUILDING$"
 BUILDING_GROUP_ENTRY_CAPPED:0 "$BUILDING$ (Max: #variable $NUM$#!)"
 MILITARY_PANEL_MUNITION_CONTENTS:0 "#title Contents of [Country.GetAcquiredMunitionCrates|1] Munition Crates#!"

 YEARS_COUNT_RANGE: "#V $MIN$-$MAX$ years#!"
 YEARS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ y#!"
 YEARS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ years"
 MONTHS_COUNT_RANGE: "#V $MIN$-$MAX$ months#!"
 MONTHS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ m#!"
 MONTHS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ months"
 WEEKS_COUNT_RANGE: "#V $MIN$-$MAX$ weeks#!"
 WEEKS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ w#!"
 WEEKS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ weeks"
 DAYS_COUNT_RANGE: "#V $MIN$-$MAX$ days#!"
 DAYS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ d#!"
 DAYS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ days"
 YEARS_COUNT_SINGULAR: "#V 1 year#!"
 YEARS_COUNT_SINGULAR_SHORT: "#V 1 y#!"
 YEARS_COUNT_PLURAL: "#V $VALUE$ years#!"
 YEARS_COUNT_PLURAL_SHORT: "#V $VALUE$ y#!"
 YEARS_COUNT_SINGULAR_NO_FORMAT: "1 year"
 YEARS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ years"
 MONTHS_COUNT_SINGULAR: "#V 1 month#!"
 MONTHS_COUNT_SINGULAR_SHORT: "#V 1 m#!"
 MONTHS_COUNT_PLURAL: "#V $VALUE$ months#!"
 MONTHS_COUNT_PLURAL_SHORT: "#V $VALUE$ m#!"
 MONTHS_COUNT_SINGULAR_NO_FORMAT: "1 month"
 MONTHS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ months"
 WEEKS_COUNT_SINGULAR: "#V 1 week#!"
 WEEKS_COUNT_SINGULAR_SHORT: "#V 1 w#!"
 WEEKS_COUNT_PLURAL: "#V $VALUE$ weeks#!"
 WEEKS_COUNT_PLURAL_SHORT: "#V $VALUE$ w#!"
 WEEKS_COUNT_SINGULAR_NO_FORMAT: "1 week"
 WEEKS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ weeks"
 DAYS_COUNT_SINGULAR: "#V 1 day#!"
 DAYS_COUNT_SINGULAR_SHORT: "#V 1 d#!"
 DAYS_COUNT_PLURAL: "#V $VALUE$ days#!"
 DAYS_COUNT_PLURAL_SHORT: "#V $VALUE$ d#!"
 DAYS_COUNT_SINGULAR_NO_FORMAT: "1 day"
 DAYS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ days"

 LESS_THAN_ONE_DAY:0 "less than one day"

 DAYS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! day"
 DAYS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! days"
 WEEKS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! week"
 WEEKS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! weeks"
 MONTHS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! month"
 MONTHS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! months"
 YEARS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! year"
 YEARS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! years"

 MARKET_STATES_PANEL_MARKET_ACCESS_TOOLTIP:1 "#header [concept_market_access] to the [State.GetMarket.GetName]#!\n[State.GetMarketAccessDesc]"
 STATES_PANEL_MARKET_ACCESS_ISOLATED:0 "[concept_market_access]: [concept_isolated_state]"
 ISOLATED_STATE:0 "[concept_isolated_state]"
 DEBUG_MODIFIERS:0 "#title Debug - Modifiers#!"
 STATE_REGION_MARKET_CONNECTION_PATH_ENTRY:0 "Connection at $PATH_STRENGTH|v0$ in [StateRegion.GetName] ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
 STATE_REGION_MARKET_CONNECTION_PATH_WEAK_POINT:1 "Connection becomes $PREV_PATH_STRENGTH|v0$ @arrow_right! $PATH_STRENGTH|v0$ in [StateRegion.GetName] ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
 STATE_REGION_STATE_ITEM:0 "$TAB$[STATE.GetName] ([STATE.GetOwner.GetName])\n"
 COUNTRY_PANEL_MODIFIERS_TAB:0 "$MODIFIERS$"
 MODIFIERS:0 "Modifiers"
 COUNTRY_PANEL_MODIFIERS_TAB_SELECTED:0 "#bold Modifiers#!"
 COUNTRY_PANEL_INFORMATION_TAB:0 "Information"
 COUNTRY_PANEL_INFORMATION_TAB_SELECTED:0 "#bold Information#!"
 COUNTRY_PANEL_DIPLOMACY_TAB:0 "Diplomacy"
 COUNTRY_PANEL_DIPLOMACY_TAB_SELECTED:0 "#bold Diplomacy#!"
 COUNTRY_PANEL_POLITICS_TAB:0 "Domestic"
 COUNTRY_PANEL_POLITICS_TAB_SELECTED:0 "#bold Domestic#!"
 COUNTRY_PANEL_INTERACTIONS_TAB:0 "Interactions"
 COUNTRY_PANEL_INTERACTIONS_TAB_SELECTED:0 "#bold Interactions#!"
 COUNTRY_DIPLOMACY_PANEL_OPEN_SELF:0 "Can't do diplomacy with yourself"
 MODIFIERS_PANEL_NO_TIMED_MODIFIERS:0 "#bold No Timed Modifiers#!"
 MODIFIERS_PANEL_TIMED_MODIFIERS:0 "#bold Timed Modifiers#!"
 DECAYING_DESC:0 "([Concept('concept_decay','$concept_decaying$')])"
 DECAYING_DESC_WITH_SPACE_BEFORE:0 " $DECAYING_DESC$"
 DECAYING_DESC_WITH_SPACE_AFTER:0 "$DECAYING_DESC$ "
 DATA_TIMED_MODIFIER_TITLE:0 "#header $NAME$#!"
 DATA_TIMED_MODIFIER_DURATION:1 "Duration: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_REMAINING:1 "Remaining Time: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_ONELINE:1 "$MODIFIERDESC$ from #title $NAME$#! ($DURATION$)$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 MODIFIERS_PANEL_MODIFIER_ENTRIES:0 "#bold Modifier Entries#!"
 RELIGION_INFO_PANEL_SHOW_GLOBAL: "Globally"
 RELIGION_INFO_PANEL_SHOW_NATIONAL_ONLY: "In [GetPlayer.GetNameNoFormatting]"
 RELIGION_INFO_PANEL_TABOOS: "[Concept('concept_taboo', '$concept_taboos$')]"
 RELIGION_INFO_PANEL_TRAITS: "[Concept('concept_religious_trait', '$concept_religious_traits$')]"
 RELIGION_INFO_PANEL_POPLIST_HEADING: "[Religion.GetNameNoFormatting] $concept_pops$"
 CULTURE_INFO_PANEL_POPLIST_HEADING: "[Culture.GetNameNoFormatting] $concept_pops$"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB:0 "Information"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB_SELECTED:0 "#bold Information#!"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB:0 "Modifiers"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB_SELECTED:0 "#bold Modifiers#!"
 CLICK_TO_CHANGE_RESPONSE:0 "#instruction Click to change our response#!"

 COUNTRY_IN_MARKET_SUBTITLE:0 "[concept_country] in [CountryPanel.AccessCountry.AccessFirstMarket.GetName]"
 STATE_IN_COUNTRY_SUBTITLE:0 "[concept_state] in [State.GetCountry.GetName]"
 BATTLE_SUBTITLE: "[SelectLocalization(Battle.IsNavalBattle, 'NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE', 'BATTLE_ON_FRONT_OR_STATE_SUBTITLE')]"
 NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE: "Sea [concept_battle] on the [Battle.GetProvince.GetStateRegion.GetName]"
 BATTLE_ON_FRONT_OR_STATE_SUBTITLE: "[SelectLocalization(Battle.GetFront.IsValid, 'BATTLE_ON_FRONT_SUBTITLE', 'BATTLE_OR_NAVAL_INVASION_STATE_SUBTITLE')]"
 BATTLE_ON_FRONT_SUBTITLE: "[concept_battle] on [Battle.GetFront.GetName]"
 BATTLE_OR_NAVAL_INVASION_STATE_SUBTITLE: "[SelectLocalization(Battle.IsNavalInvasion, 'NAVAL_INVASION_IN_STATE_SUBTITLE', 'BATTLE_IN_STATE_SUBTITLE')]"
 NAVAL_INVASION_IN_STATE_SUBTITLE: "Naval Invasion in [Battle.GetState.GetName]"
 BATTLE_IN_STATE_SUBTITLE: "[concept_battle] in [Battle.GetState.GetName]"
 FRONT_IN_WAR_SUBTITLE:0 "[concept_front] in [Front.AccessDiplomaticPlay.AccessWar.GetName]"
 FRONT_IN_DP_SUBTITLE:0 "[concept_front] in [Front.AccessDiplomaticPlay.GetName]"
 FRONT_IN_WAR_OR_DP_SUBTITLE:0 "[SelectLocalization(Front.AccessDiplomaticPlay.HasEscalatedIntoWar,'FRONT_IN_WAR_SUBTITLE','FRONT_IN_DP_SUBTITLE')]"

 BATTLE_SIDE_NAME: "$BATTLE_NAME$ - $SIDE$"
 BATTLE_SIDE_ATTACKING_SIDE: "Attacking Side"
 BATTLE_SIDE_DEFENDING_SIDE: "Defending Side"

 INTEREST_GROUP_PANEL_MODIFIERS_TAB:0 "Modifiers"
 INTEREST_GROUP_PANEL_MODIFIERS_TAB_SELECTED:0 "#bold Modifiers#!"
 INTEREST_GROUP_LINE_TWO: "[concept_interest_group] in [InterestGroup.AccessCountry.GetName]"

 BUILDING_DETAILS_LINE_TWO: "[SelectLocalization(Building.IsGovernmentFunded, 'BUILDING_DETAILS_LINE_TWO_GOVERNMENT', 'BUILDING_DETAILS_LINE_TWO_REGULAR')]"
 BUILDING_DETAILS_LINE_TWO_REGULAR: "[concept_building] in [Building.GetState.GetName]"
 BUILDING_DETAILS_LINE_TWO_GOVERNMENT: "[concept_government_building] in [Building.GetState.GetName]"
 BUILDING_SUBSISTENCE_OUTPUT_YEARLY: "#header [concept_subsistence_output] per employee annually#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 GOODS_PANEL_LINE_TWO:1 "in the [GoodsPanel.GetGoods.GetMarket.GetName]"
 GOODS_STATE_PANEL_LINE_TWO:1 "in [GoodsStatePanel.GetGoods.GetState.GetName] ([GoodsStatePanel.GetGoods.GetMarket.GetName])"
 LOCAL_PRICES_PANEL_LINE_TWO: "Local Prices in [GoodsLocalPricesPanel.GetGoods.GetMarket.GetName]"
 GOODS_USAGE_PANEL_LINE_TWO: "[concept_good] in [GetPlayer.GetName]"
 POP_DETAILS_LINE_TWO:1 "[SelectLocalization(Pop.GetBuilding.IsValid,'POP_DETAILS_LINE_TWO_EMPLOYED','POP_DETAILS_LINE_TWO_UNEMPLOYED')]"
 POP_DETAILS_LINE_TWO_EMPLOYED:0 "[concept_pop] in [Pop.GetWorksAt] in [Pop.GetState.GetName]"
 POP_DETAILS_LINE_TWO_UNEMPLOYED:0 "[concept_unemployed] [concept_pop] in [Pop.GetState.GetName]"
 POP_OVERVIEW_HEADER:0 "Overview"
 POP_ECONOMY_HEADER:0 "Economy"
 POP_CONSUMPTION_HEADER:0 "Consumption"
 PERCENTAGE_OF_BUDGET:0 "% of Budget"
 POP_AMOUNT:0 "Amount"
 POP_TOP_GOODS_EXPENDITURES_HEADER:0 "#title Top [GetDefine('NGUI','NUM_TOP_CONSUMPTION_GOODS_SHOWN')|0] [Concept('concept_good','$concept_goods$')] expenditures#!"
 POP_CONSUMPTION_FACTOR_DESC: "Consumption factor #v x$VAL$#! due to:\n$BREAKDOWN$"
 POP_CONSUMPTION_FACTOR_FROM_TYPE: "#v +$VAL$#! for [PopType.GetName]"
 POP_CONSUMPTION_FACTOR_FROM_SIZE: "Multiplied by #v x$VAL|D$#! from the amount of [concept_workforce] and [concept_dependents]"
 POP_SUBSISTENCE_INCOME: "[concept_subsistence_output]: [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#!"
 POP_SUBSISTENCE_INCOME_DESC: "#header [concept_subsistence_output] weekly#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$ (per Working Adult [GetPlayer.GetCustom('currency_symbol')]$PER_ADULT_WEEKLY|v$ x $NUM|Dv$)\n$TOOLTIP_DELIMITER$\nPer Working Adult [GetPlayer.GetCustom('currency_symbol')]$PER_ADULT_WEEKLY|v$ is due to:\n$TAB$Per Working Adult annually [GetPlayer.GetCustom('currency_symbol')]$PER_ADULT_YEARLY|Dv$\n$TAB$Divided by #v 52#! weeks in a year\n\nPer Working Adult annually [GetPlayer.GetCustom('currency_symbol')]$PER_ADULT_YEARLY|Dv$ is due to:\n$BREAKDOWN$"
 STATE_POPULATION_PANEL_LINE_TWO:0 "in [StatePopulationPanel.GetState.GetName]"
 BASE_FROM_POPS:0 "Base from Population: #v $VAL|D=+$#!"
 LEGITIMACY_BASE_VALUE:0 "Base Value: #bold #P $VAL|=+$#!#!"
 LEGITIMACY_GOVT_SIZE:1 "Size of [concept_government]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
 LEGITIMACY_GOVT_SIZE_BREAKDOWN:1 "#header [concept_legitimacy] from size of [concept_government]: #v $VAL|=+$#!#!\nAllowed size: #p $MODIFIER_VALUE|0$#!\n$MODIFIER_DESC$\nActual size: #n $SIZE|0$#!\n$TOOLTIP_DELIMITER$\nExcess [Concept('concept_party','$concept_parties$')] and [Concept('concept_interest_group','$concept_interest_groups$')]\n$BREAKDOWN$#!"
 LEGITIMACY_GOVT_SIZE_PARTY_ENTRY:2 "[Party.GetName] [Party.GetMembersSummary]: #variable $VAL|-$#!"
 LEGITIMACY_GOVT_SIZE_IG_ENTRY:1 "[InterestGroup.GetName]: #variable $VAL|-$#!"

 IDEOLOGICAL_INCOHERENCE: "#header [concept_ideological_incoherence]: #variable $VALUE|-$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 LEGITIMACY_IDEOLOGICAL_INCOHERENCE: "[concept_ideological_incoherence]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"

 INTEREST_GROUP_INCOHERENCE_ENTRY: "[InterestGroup.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#!$PARTY_LABEL$"
 INTEREST_GROUP_INCOHERENCE_ENTRY_PARTY:0 " ($PARTY$$WHIP$)"
 PARTY_WHIP:0 " - [Concept('concept_party_whip','$concept_party_whip_short$')]"
 INCOHERENCE_GROUP_BREAKDOWN:0 "#tooltip_header [LawGroup.GetName]: #n $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 IDEOLOGICAL_INCOHERENCE_ENTRY:1 "[LawType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 IDEOLOGICAL_INCOHERENCE_GROUP_ENTRY:0 "[LawGroup.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 INCOHERENCE_ENTRY_BREAKDOWN:0 "#header [LawType.GetName]: #negative_value $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n@approves! $concept_interest_groups$: #v $SUM_POSITIVE|+=$#!\n$BREAKDOWN_POSITIVE$\n\n@disapproves! $concept_interest_groups$: #v $SUM_NEGATIVE|+=$#!\n$BREAKDOWN_NEGATIVE$"
 INCOHERENCE_LAW_ENTRY_FIRST_FORMAT:0 "#active $BREAKDOWN$#!"
 INCOHERENCE_LAW_ENTRY_OTHERS_FORMAT:0 "#inactive $BREAKDOWN$#!"
 IDEOLOGICAL_INCOHERENCE_VALUE_BREAKDOWN: "$TAB$Base value: $BASE|v$\n$TAB$$MODIFIER$"
 INCOHERENCE_BASE_PENALTY_DESC: "$BASE|0+$ from #bold Base penalty#! due to:\n$TAB$$STANCE|+$ from Stance on [LawType.GetName]\n$TAB$#v x$FACTOR$#! from Base Factor"
 INCOHERENCE_PENALTY_DESC: "#header $VAL|+$ Incoherence Penalty#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INCOHERENCE_WHIP_BASE_ENTRY: "$VAL|+=$ from [concept_party_whip]"
 INCOHERENCE_WHIP_IMPACT_ADD_ENTRY: "$VAL|+=$ from $MODIFIER$ due to:\n$TAB$$BREAKDOWN$"

 LEGITIMACY_HEAD_OF_STATE_VALUE:0 "Head of State's [concept_interest_group] #variable [InterestGroup.GetName]#! [concept_in_government]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|+=0$#!#!#!"
 LEGITIMACY_HEAD_OF_STATE_MODIFIER_BREAKDOWN:0 "Including the [COUNTRY.GetRuler.GetFullName]s [concept_interest_group], [COUNTRY.GetRuler.GetInterestGroup.GetName], [concept_in_government] gives:\n$BREAKDOWN$"
 LEGITIMACY_GOVT_LEADER_CLOUT_VALUE:0 "[concept_clout] of Government Leader: #variable $VAL|+=0$#!\n$TAB$#variable [INTEREST_GROUP.GetName]#! with Clout #variable [INTEREST_GROUP.GetClout|%+2]#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|0+$#!#!#!"
 LEGITIMACY_GOVERNMENT_CLOUT_MODIFIER_BREAKDOWN:0 "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE:0 "Total [concept_clout] of [concept_government]: #variable $VAL|+=0$#!\n$TAB$[concept_government] [concept_clout] #variable $CLOUT|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE_BREAKDOWN:0 "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE:0 "Total percentage of [concept_votes] of [concept_government]: #variable $VAL|+=0$#!\n$TAB$[concept_government] [concept_votes] #variable $VOTES|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE_BREAKDOWN:0 "$BREAKDOWN$"
 LEGITIMACY_GOVT_STRENGTH_ENTRY:0 "#variable $FACTION$#!: #variable $VAL|=$%#!"
 LEGITIMACY_GOVT_STRENGTH_IG_ENTRY:0 "#variable [INTEREST_GROUP.GetName]#! #variable [INTEREST_GROUP.GetClout|=%]#!"
 LEGITIMACY_MIN_CAP: "Legitimacy cannot be lower than $VALUE|v$:\n   $DESC$"
 GOVERNMENT_OPTION_TOOLTIP:0 "#header Government Option#!\n[concept_legitimacy]: #tooltippable #tooltip:$LEGITIMACY_BREAKDOWN_TAG$ $LEGITIMACY|v0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOVERNMENT_OPTION_ENTRY:0 "[InterestGroup.GetName][AddTextIf(Not(StringIsEmpty('$PARTY$')),' ($PARTY$)')]"
 GOVERNMENT_OPTION_TEXT:0 "$LEGITIMACY|v0$: $BREAKDOWN$"
 GOVERNMENT_OPTION_LIST_ENTRY:0 "[InterestGroup.GetTextIcon]"
 GOVERNMENT_OPTION_LIST_ENTRY_DELIMITER:0 ""

 NUM_STATES_TOOLTIP_incorporated:0 "#header [SelectLocalization($MULTIPLE$,'[concept_incorporated_state]','[Concept('concept_incorporated_state','$concept_incorporated_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_unincorporated:0 "#header [SelectLocalization($MULTIPLE$,'[concept_unincorporated_state]','[Concept('concept_unincorporated_state','$concept_unincorporated_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_treaty_port:0 "#header [SelectLocalization($MULTIPLE$,'[concept_treaty_port]','[Concept('concept_treaty_port','$concept_treaty_ports$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_count:0 "#header [SelectLocalization($MULTIPLE$,'[concept_state]','[Concept('concept_state','$concept_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 PROCESS_EXPENSES:0 "Expenses:"
 PROCESS_REVENUE:0 "Revenue:"
 PROCESS_BALANCE:1 "Weekly [concept_building_balance]:"
 VACANCIES:0 "Vacancies"
 NO_VACANCIES:0 "Building Is Fully Employed"

 RESET_GOVERNMENT: "#v [GetPlayer.GetGovernmentLegitimacy]#!: Reset"
 RESET_GOVERNMENT_TOOLTIP: "#header Reset any changes to the [concept_government]#!\nCurrent [concept_legitimacy]: #v #tooltippable #tooltip:[GetPlayer.GetGovernmentLegitimacyLevel.GetTooltipTag],LEGITIMACY_LEVEL_ACTIVE_TOOLTIP [GetPlayer.GetGovernmentLegitimacy]#!#!#!"

 NOTIFICATION_BUILDING_FULLY_EMPLOYED: "[SCOPE.GetRootScope.GetBuilding.GetName] is fully employed in [SCOPE.GetRootScope.GetBuilding.GetState.GetName]"
 NOTIFICATION_HARVEST_CONDITION_FINISHED: "[SCOPE.sHCT('type').GetName] ended in [SCOPE.GetRootScope.GetStateRegion.GetName]"
 NOTIFICATION_HARVEST_CONDITION_STARTED: "[SCOPE.sHCT('type').GetName] started in [SCOPE.GetRootScope.GetStateRegion.GetName]"
 NOTIFICATION_STATE_AVERAGE_SOL_INCREASED: "[concept_sol] increased to [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|+0] in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_AVERAGE_SOL_DECREASED: "[concept_sol] decreased to [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|-0] in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_LITERACY_INCREASED: "[concept_literacy] increased to [SCOPE.GetRootScope.GetState.GetLiteracy|%+0] in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_POPULATION_INCREASED: "[Concept('concept_pop','$concept_population$')] increased to [SCOPE.GetRootScope.GetState.GetPopulationSize|K+] in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_POPULATION_DECREASED: "[Concept('concept_pop','$concept_population$')] decreased to [SCOPE.GetRootScope.GetState.GetPopulationSize|K-] in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_IN_TURMOIL: "[concept_turmoil] started in [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_BUILDING_EXPANDED: "[SCOPE.GetRootScope.GetBuilding.GetName] has been [SelectLocalization(GreaterThan_int32(SCOPE.GetRootScope.GetBuilding.GetExpansionLevel,'(int32)1'),'NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL','NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL')] in [SCOPE.GetRootScope.GetBuilding.GetState.GetName]"
 NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL: "built"
 NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL: "expanded"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT: "[SCOPE.sC('country').GetNameNoFormatting|v] has invested into expanding [SCOPE.GetRootScope.GetBuilding.GetName]"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT_PRIVATIZATION: "[SCOPE.sC('country').GetAdjectiveNoFormatting|v] investors have made acquisitions in [SCOPE.GetRootScope.GetBuilding.GetName]"
 NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE: "The first [SCOPE.sCulture('culture').GetName] $concept_pop$ has moved into [SCOPE.GetRootScope.GetState.GetName]"

 INFRASTRUCTURE:0 "[concept_infrastructure]"
 ARABLE_LAND_AVAILABLE:0 "[concept_arable_land] (should be presented like other resources)"
 FREE_ARABLE_LAND:0 "FAL: $NUM|v$"
 LENS_OPTION_TEXT:0 "[LensOption.GetText]"
 LENS_OPTION_TOOLTIP:0 "[LensOption.GetTooltip]"
 BUILDING_MODIFIERS_PER_LEVEL_COLON:0 "#title Building Modifiers (per level):#!"
 COUNTRY_MODIFIERS_PER_LEVEL_COLON:0 "#title Country Modifiers (per level):#!"
 STATE_MODIFIERS_PER_LEVEL_COLON:0 "#title State Modifiers (per level):#!"
 APPLIES_TO_BUILDING_TYPE:0 "Applies to $BUILDING_TYPE$ ([ProductionMethodGroup.GetName] [concept_production_method])"
 GOODS_PRODUCTION_COLON:0 "#title Goods Production:#!"
 GOODS_CONSUMPTION_COLON:0 "#title Goods Consumption:#!"
 BUILDING_WAGE_PER_LEVEL:0 "Approximately #variable [GetPlayer.GetCustom('currency_symbol')]$PER_LEVEL_WAGE|k$#! per Level in Government Wages"
 BUILDING_WAGE_TOTAL:0 "Approximately #variable [GetPlayer.GetCustom('currency_symbol')]$TOTAL_WAGE|k$#! Total in Government Wages"
 BUILDING_WAGE_RANGE_PER_LEVEL:0 "Approximately #variable [GetPlayer.GetCustom('currency_symbol')]$MIN_PER_LEVEL_WAGE$#! - #variable [GetPlayer.GetCustom('currency_symbol')]$MAX_PER_LEVEL_WAGE$#! per Level in Government Wages"
 BUILDING_WAGE_RANGE_TOTAL:0 "Approximately #variable [GetPlayer.GetCustom('currency_symbol')]$MIN_TOTAL_WAGE$#! - #variable [GetPlayer.GetCustom('currency_symbol')]$MAX_TOTAL_WAGE$#! Total in Government Wages"
 BUILDING_TYPE_NAME_FORMAT:0 "#BOLD #V $NAME$#!#!"
 CONSTRUCTION_MATERIALS_COLON:0 "#title Construction Cost:#!"
 BUILDING_PROVIDES_URBANIZATION_PER_LEVEL:0 "#variable #P +$URBANIZATION$#!#! [concept_urbanization] per Level"
 BUILDING_PROVIDES_URBANIZATION_TOTAL:0 "#variable #P +$URBANIZATION$#!#! [concept_urbanization] Total"
 BUILDING_USES_INFRASTRUCTURE_PER_LEVEL:0 "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] per Level"
 BUILDING_USES_INFRASTRUCTURE_TOTAL:0 "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] Total"
 BUILDING_ARABLE_CAPACITY_PER_LEVEL:0 "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] per Level"
 BUILDING_ARABLE_CAPACITY_TOTAL:0 "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] Total"
 GDP_TOOLTIP:1 "#header [concept_gdp]#!\n[Country.GetAdjective] $GDP_SHORT$: #N [GetPlayer.GetCustom('currency_symbol')][Country.GetGDP|Dv]#! ([Country.GetGDPRanking])\n$TOOLTIP_DELIMITER$\nGDP per Capita: #variable [GetPlayer.GetCustom('currency_symbol')][Country.GetGDPPerCapita|2*]#! ([Country.GetGDPPerCapitaRanking])\n\n"
 MARKET_GDP_PERCENTAGE:1 "#title [GetPlayer.GetAdjectiveNoFormatting] $GDP_SHORT$ Contribution#!\n[Market.GetMarketSharePercentageFor( GetPlayer )|%1v]"
 MARKET_GDP_PERCENTAGE_TOOLTIP:0 "#header Contribution to GDP#!\n[Market.GetName] contributes [Market.GetGDPContributionPercentage( GetPlayer )|%1v] of the GDP in [GetPlayer.GetName]"
 ACTIVE_PRODUCTION_METHOD_HEAD:0 "#header $NAME$#!"
 SWITCH_PRODUCTION_METHOD_HEAD:0 "#header Switch to $NAME$#!"
 PRICE_ICON_ITEM_STATE:0 "([Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )] in [Goods.GetState.GetName])"
 PRICE_ICON_ITEM_RANGE:0 "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MIN$#!#!-#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MAX$#!#! in $NUM$ State Regions)"
 MARKET_TRADE_ROUTE_TOOLTIP:1 "#header [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]#!"
 PRICE_ICON_ITEM_RANGE_SAME:0 "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#! in $NUM$ State Regions)"
 PRICE_ICON_ITEM_MARKET:0 "([Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] in [Goods.GetMarket.GetName])"
 STATE_YEARLY_GDP: "[GetPlayer.GetCustom('currency_symbol')][State.GetYearlyGDP|Dv] $GDP_SHORT$"
 STATE_POPULATION: "[State.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')]"
 STATE_POPULATION_WITH_ICON: "@population! $STATE_POPULATION$"
 STATE_INCORPORATED_SHORT: "[Concept('concept_incorporated_state','$concept_incorporated$')]"
 STATE_UNINCORPORATED_SHORT: "[Concept('concept_unincorporated_state','$concept_unincorporated_state_short$')]"
 STATE_INCORPORATED_SHORT_WITH_ICON: "@incorporated! $STATE_INCORPORATED_SHORT$"
 STATE_UNINCORPORATED_SHORT_WITH_ICON: "@unincorporated! $STATE_UNINCORPORATED_SHORT$"


 DEFAULT_EVENT_OPTION:0 "This option will be picked automatically after $EVENT_REMAINING_DAYS$."

 NO_PROGRESS:0 "No Progress"
 INVALID_OPTIONS:0 "Invalid Options: [GetDataModelSize(MapListPanel.AccessInvalidOptions)|v]"
 FAILED_OPTIONS:0 "Unavailable Options: [GetDataModelSize(MapListPanel.AccessFailedOptions)|v]"

 BUILDING_TYPE_COUNTRY_BREAKDOWN: "[SelectLocalization( GreaterThan_int32( BuildingType.GetNumLevelsInCountryRaw(GetPlayer.Self), '(int32)0' ), 'BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY', 'BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY' )]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY: "There are [BuildingType.GetNumLevelsInCountryFormatted(GetPlayer.Self)] Levels of [BuildingType.GetNameNoFormatting] in [GetPlayer.GetName][SelectLocalization(And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), 'BUILDING_TYPE_PRODUCTIVITY', '')]"
 BUILDING_TYPE_IN_COUNTRY_DESC: "#header [BuildingType.GetName] in [GetPlayer.GetName]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_DESC: "#header [BuildingType.GetName] owned by [Company.GetName]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_EMPTY_DESC: "There are no #v [BuildingType.GetNameNoFormatting]#! owned by [Company.GetName]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY:0 "There are no [BuildingType.GetNameNoFormatting] in [GetPlayer.GetName]"
 BUILDING_TYPE_PRODUCTIVITY:0 "\n[concept_productivity]: [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"

 BUILDING_TYPE_NUM_LEVELS_BREAKDOWN_ENTRY: "Size $LEVELS|v$ [Building.GetName] in [Building.GetState.GetName]"
 BUILDING_TYPE_NUM_LEVELS_IN_QUEUE_BREAKDOWN_ENTRY: "$LEVELS|v$ levels of [Building.GetName] under construction in [Building.GetState.GetName]"
 BUILDING_TYPE_NUM_LEVELS: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$#!#!"
 BUILDING_TYPE_NUM_LEVELS_WITH_CONSTRUCTION: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$+$LEVELS_IN_QUEUE$#!#!"

 PRODUCTION_METHODS_HEADER:0 "Buildings"
 COUNTRY_TOOLTIP:0 "#HEADER [Country.GetName]#!"

 COMMANDER_RANK:0 "Rank: [Character.GetRankName]"
 commander_specific_rank_desc:0 "$NAME$ - $RANK$"

 CULTURE:0 "Culture"
 COUNTRY_CULTURES:1 "#title [Concept('concept_culture', '$concept_cultures$')]#!:\n#variable [Country.GetPrimaryCulturesDesc]#!"
 COUNTRY_CULTURES_ONE_LINE:0 "#title [concept_primary_cultures]#!"

 CULTURE_NAME_AND_PRIMARY: "[Culture.GetNameNoFormatting][AddLocalizationIf(Culture.IsPrimaryCultureIn(GetPlayer), 'CULTURE_NAME_AND_PRIMARY_PRIMARY')]"
 CULTURE_NAME_AND_PRIMARY_PRIMARY: " (Primary)" 

 RELIGION_NAME_AND_STATE_RELIGION: "[Religion.GetNameNoFormatting][AddLocalizationIf(ObjectsEqual(GetPlayer.GetStateReligion.Self, Religion.Self), 'RELIGION_NAME_AND_STATE_RELIGION_STATE')]"
 RELIGION_NAME_AND_STATE_RELIGION_STATE: " (State Religion)" 

 POP_COUNTRY_CULTURES:1 "[concept_primary_cultures] in [Pop.GetCountry.GetName]:#indent_newline:3 \n#variable [Pop.GetCountry.GetPrimaryCulturesDesc]#!#!"
 COUNTRY_RELIGIONS:0 "#title [concept_state_religion]#!:\n#variable [Country.GetStateReligion.GetName]#!"
 COUNTRY_RELIGIONS_ONE_LINE:0 "#title [concept_state_religion]#!"
 COUNTRY_ARABLE_LAND:0 "#title [concept_arable_land]#!:\n#variable [Country.GetArableLand|D]#!"
 COUNTRY_ARABLE_LAND_ONE_LINE:0 "#title [concept_arable_land]#!"
 COUNTRY_ARABLE_LAND_BREAKDOWN: "#header [concept_arable_land] in [Country.GetName]#!\nTotal: [Country.GetArableLand|v]\n$TOOLTIP_DELIMITER$\n#title Per [concept_state]:#!\n[Country.GetArableLandDesc]"
 COUNTRY_ARABLE_LAND_BREAKDOWN_ENTRY: "$TAB$[State.GetArableLandCapacity|v] in [State.GetName]"

 POP_COUNTRY_RELIGIONS:1 "[concept_state_religion]: #variable [Pop.GetCountry.GetStateReligion.GetName]#!"
 COUNTRY_GOVERNMENT:1 "#title [concept_government]#!:\n#tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_GOVERNMENT_NO_LINE_BREAK:0 "#title [concept_government]#!: #tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_RULER:0 "#title [concept_ruler]#!:\n#variable [Country.GetRuler.GetFullName]#!"
 COUNTRY_RANK:0 "#title [concept_rank]#!:\n#variable [Country.GetRank]#! #variable (##[Country.GetCountryScorePositionDesc])#!"
 COUNTRY_RANK_ONE_LINE:0 "#title [concept_rank]#!: [Country.GetRank|v] #variable (##[Country.GetCountryScorePositionDesc])#!"
 COUNTRY_POPULATION:1 "#title [Concept('concept_pop','$concept_population$')]#!:\n#variable [Country.GetTotalPopulation|D]#!"
 COUNTRY_POPULATION_ONE_LINE:1 "#title [Concept('concept_pop','$concept_population$')]#!"
 COUNTRY_SOL_ONE_LINE:0 "#title [concept_sol]#!"
 COUNTRY_GDP:0 "#title $GDP_SHORT$#!:\n#variable [GetPlayer.GetCustom('currency_symbol')][Country.GetGDP|D]#!"
 COUNTRY_GDP_ONE_LINE:0 "#title $GDP_SHORT$#!"
 NO_POP_TYPES_POL_STR:1 "No [concept_pop] with [concept_political_strength]"
 NO_RELIGIONS:0 "No [Concept('concept_religion', '$concept_religions$')]"
 NO_CULTURES_POL_STR:1 "No [Concept('concept_culture', '$concept_cultures$')] with [concept_political_strength]"
 NO_RELIGIONS_POL_STR:1 "No [Concept('concept_religion', '$concept_religions$')] with [concept_political_strength]"
 NO_INTEREST_GROUPS:0 "No [Concept('concept_interest_group', '$concept_interest_groups$')]"
 NO_POP_TYPES:0 "No [Concept('concept_pop', '$concept_pops$')]"
 NO_HARVEST_CONDITIONS: "No [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 NO_STARVATION: "No [concept_starvation]"
 MILD_STARVATION: "[Concept('concept_starvation', '$concept_mild_starvation$')]"
 SEVERE_STARVATION: "[Concept('concept_starvation', '$concept_severe_starvation$')]"

 GOVERNMENT_TYPE_TOOLTIP_DESC:0 "[GovernmentType.GetDesc]"

 POP_CULTURE_CHANGE_ENTRY_POSITIVE:0 "#v $CHANGE|=+$#! assimilating [Pop.GetName] in [Pop.GetState.GetName]"
 POP_CULTURE_CHANGE_ENTRY_NEGATIVE:0 "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] assimilating to [Pop.GetAssimilatingCulture.GetName]"
 CULTURE_POPULATION_CHANGE:0 "[Culture.GetName] in [Country.GetName] Monthly Change: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 POP_RELIGION_CHANGE_ENTRY_POSITIVE:0 "#v $CHANGE|=+$#! converting [Pop.GetName] in [Pop.GetState.GetName]"
 POP_RELIGION_CHANGE_ENTRY_NEGATIVE:0 "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] converting to [Pop.GetConvertingReligion.GetName]"
 RELIGION_NAME_AND_PERCENTAGE:0 "[Religion.GetName] (#v $VAL|2%$#!)"
 RELIGION_POPULATION_CHANGE:0 "[Religion.GetName] in [Country.GetName] Monthly Change: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 DISCRIMINATION_TRAIT_CULTURES:1 "[Concept('concept_culture', '$concept_cultures$')]: [DiscriminationTrait.GetCulturesDesc]"
 DISCRIMINATION_TRAIT_RELIGIONS:1 "[Concept('concept_religion', '$concept_religions$')]: [DiscriminationTrait.GetReligionsDesc]"

 METRICS_OF_PROGRESS_HEADER:0 "#title "Metrics of progress"#! (test)"
 COUNTRY_URBANISATION:0 "#title [concept_urbanization]:#!"
 COUNTRY_INDUSTRIALISATION:0 "#title Industrialisation:#!"
 MILITARY:0 "Military"
 NAVY:0 "Navy"

 PRICE_REPORT_SHORT:0 "$DETAILS$"
 PRICE_REPORT_LONG:0 "$DETAILS$\n#tooltippable #tooltip:$BREAKDOWN_TAG$ Hover to see $NUM_ADDITIONAL|v$ more significant [concept_market_price] changes#!#!"
 PRICE_REPORT_NO_CHANGES:0 "There were no significant [concept_market_price] changes in the [GetPlayer.GetCapital.GetMarket.GetName] over the last month."
 PRICE_REPORT_GOODS_ENTRY:0 "$DIRECTION$ [Goods.GetTextIcon] [GetPlayer.GetCustom('currency_symbol')]$PREV_PRICE|v1$ ($PREV_ICON$) @arrow_right! [GetPlayer.GetCustom('currency_symbol')]$CUR_PRICE|v1$ ($CUR_ICON$) for [Goods.GetName]"
 PRICE_REPORT_DIRECTION_INCREASE:0 "@arrow_up!"
 PRICE_REPORT_DIRECTION_DECREASE:0 "@arrow_down!"

 MAP_MODE:0 "Map Mode"
 LOCAL_PRICE_IN:0 "Local Prices in [GoodsPanel.GetGoods.GetMarket.GetName]"
 LOCAL_PRICE_IN_STATE:0 "Local Prices in [State.GetMarket.GetName]"
 USAGE:0 "Applications"
 LOCAL_PRICE_STATE:0 "Local Prices in [GoodsStatePanel.GetGoods.GetMarket.GetName]"
 TRADE_ROUTES:2 "$concept_trade_routes$"
 TRADE_ROUTES_CONCEPT:0 "[Concept('concept_trade_route','$concept_trade_routes$')]"
 TRADE_ROUTES_HEADER:1 "[GetPlayer.GetFlagTextIcon] [GetPlayer.GetAdjectiveNoFormatting] [Concept('concept_trade_route', '$concept_trade_routes$')]"
 MARKET_TRADE_ROUTES_SUMMARY:1 "#title $TRADE_ROUTES_HEADER$#!"
 GOODS_LOCAL_PRICE_INFO: "#variable [GetPlayer.GetCustom('currency_symbol')][Goods.GetStatePrice|1]#! [Goods.GetCompareIconAgainstBasePriceNoTooltip( Goods.GetStatePrice )]"
 GOODS_LOCAL_PRODUCTION_AND_CONSUMPTION_INFO: "[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),'GOODS_LOCAL_PRODUCTION','')][SelectLocalization(And(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),', ','')][SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0'),'GOODS_LOCAL_CONSUMPTION','')][SelectLocalization(And(EqualTo_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),EqualTo_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),'GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION','')]"
 GOODS_LOCAL_PRODUCTION: "[Concept('concept_good_production', '$concept_good_produces$')] #v [Goods.GetStateProductionWithTooltip]#!"
 GOODS_LOCAL_CONSUMPTION: "[Concept('concept_good_consumption', '$concept_good_consumes$')] #v [Goods.GetStateConsumptionWithTooltip]#!"
 GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION: "No $PRODUCTION$ or $CONSUMPTION$"

 NO_IMPORT_TRADE_ROUTES:0 "You Currently Have No Import Trade Routes"
 NO_EXPORT_TRADE_ROUTES:0 "You Currently Have No Export Trade Routes"
 NO_TRADE_ROUTES:1 "No [MarketGoods.GetGoods.GetName] Trade Routes"
 REMOVE_TRADE_ROUTE:0 "Remove this [concept_trade_route]"
 REMOVE_GOODS_TRADE_ROUTE: "Remove this [Goods.GetTextIcon] [Goods.GetName] $EXPORT_OR_IMPORT$ [concept_trade_route] with the [Market.GetName]"
 TRADE_ROUTE_NAME_OF_GOODS:0 "Sort by name of the traded [concept_good]"
 TRADE_ROUTE_NUMBER_OF_GOODS:0 "Sort by number of [Concept('concept_good', '$concept_goods$')] moved"
 TRADE_ROUTE_DIRECTION:0 "Sort by the direction of each [concept_trade_route], @import! #b import#! or @export! #b export#!"
 TRADE_ROUTE_COUNTRY:0 "Sort by [concept_country]"
 TRADE_ROUTE_CONVOY_COST:0 "Sort by the cost of @convoys! [concept_convoys]"
 TRADE_ROUTE_PRODUCTIVITY:0 "Sort by [concept_productivity] of the [GetBuildingType('building_trade_center').GetName]"
 TRADE_ROUTE_REVENUE:0 "Sort by [concept_trade_revenue] for the [GetBuildingType('building_trade_center').GetName]"
 IMPORT_TRADE_ROUTE:0 "Import [concept_trade_route]"
 EXPORT_TRADE_ROUTE:0 "Export [concept_trade_route]"


 OUTLINER_PANEL_DESCRIPTION:0 "Pin any of the below lists or list items to the Outliner to the right of the screen by hovering any of them and clicking the star (@unpinned_star!) in the right corner.\n\nClick the star (@pinned_star!) again to unpin them."

 COUNTRY_LITERACY:0 "#title [concept_literacy]:#!\n#variable [Country.GetIncorporatedLiteracyRate|%1]#!"
 COUNTRY_LITERACY_ONE_LINE:0 "#title [concept_literacy]#!"
 LITERACY_TOOLTIP:5 "#header [concept_literacy]#!\n#variable [Country.GetNumIncorporatedLiteratePops|*]#! out of #variable [Country.GetIncorporatedPopulation|*]#! living in the [Concept('concept_incorporated_state','$concept_incorporated_states$')] of #variable [Country.GetName]#! are literate, resulting in a Literacy Rate of [Country.GetIncorporatedLiteracyRate|%v] ([Country.GetIncorporatedLiteracyRanking])\n$TOOLTIP_DELIMITER$\nThis results in an [concept_innovation] cap of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INNOVATION_POINTS_MAX_BREAKDOWN @innovation![Country.GetWeeklyMaxInnovation|1]#!#!\nWe are currently generating #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INNOVATION_POINTS_CURRENT_BREAKDOWN #v @innovation![Country.GetWeeklyInnovation|+=1]#!#!#! each week (@innovation![Country.GetWeeklyRawInnovation|+=1] uncapped)\n\nAdditionally, our current [concept_literacy] rate provides us with a [concept_technology_spread] rate of #P #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TECHNOLOGY_SPREAD_RATE_BREAKDOWN [Country.GetMinWeeklyTechnologySpread|1] to [Country.GetMaxWeeklyTechnologySpread|1]#!#!#! worth of @innovation![concept_innovation] each week[SelectLocalization(EqualTo_int64(GetPlayer.GetTotalPopulation,GetPlayer.GetIncorporatedPopulation),'','LITERACY_UNINCORPORATED_TOOLTIP')]"
 LITERACY_UNINCORPORATED_TOOLTIP:2 "\n$TOOLTIP_DELIMITER$\nWhen also factoring in [Concept('concept_unincorporated_state','$concept_unincorporated_states$')], #variable [Country.GetNumTotalLiteratePops|*]#! out of #variable [Country.GetTotalPopulation|*]#! ([Country.GetTotalLiteracyRate|%v]) [Concept('concept_pop','$concept_pops$')] in #variable [Country.GetName]#! are literate ([Country.GetTotalLiteracyRanking])"

 INNOVATION_POINTS_CURRENT_BREAKDOWN:1 "#header @innovation![concept_innovation] generation#!\nWe generate #v @innovation![Country.GetWeeklyInnovation|+2]#!, due to:\n[Country.GetWeeklyInnovationDesc]"
 INNOVATION_POINTS_MAX_BREAKDOWN:1 "#header @innovation![concept_innovation] cap#!\nOur cap of @innovation![Country.GetWeeklyMaxInnovation|v2] is due to:\n[Country.GetWeeklyMaxInnovationDesc]"
 INNOVATION_CAP_BREAKDOWN_ENTRY_TITLE:0 "[concept_innovation] Cap"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED: "#header Weekly #v $CATEGORY$#! Research Speed: $SPEED|v$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED_DETAILS: "Weekly @innovation![concept_innovation] generation: #tooltippable #tooltip:$BREAKDOWN$ $INNOVATION|v$#!#![ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]"
 TECHNOLOGY_GROUP_RESEARCH_SPEED: "$VALUE|%0+=$ from $MODIFIER$ ($BASE|%0+=$ multiplied by $NUM|v$)"

 GOVERNMENT_TRANSFER_OF_POWER_TOOLTIP:0 "#header [GovernmentType.GetTransferOfPowerName]#!\n[GovernmentType.GetTransferOfPowerDesc]"

 LOYALISTS_TOOLTIP_POP:0 "#header $LOYALISTS$#!\nThere are #v [Pop.GetNumLoyalists|K]#! $LOYALISTS$ in this [concept_pop]"
 RADICALS_TOOLTIP_POP:0 "#header $RADICALS$#!\nThere are #v [Pop.GetNumRadicals|K]#! $RADICALS$ in this [concept_pop]"
 SUPPORTING_RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nThere are #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|K]#! $RADICALS$ in this [concept_pop]"
 LOYALISTS_TOOLTIP_POP_LIST: "#header $LOYALISTS$#!\nThere are #v [PopListItem.GetNumLoyalists|d]#! $LOYALISTS$ among these [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
 RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nThere are #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ among these [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
 SUPPORTING_RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nThere are #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ among these #v [PopListItem.GetTotalPopSize|d]#! [PopListItem.GetPopType.GetName]"

 CULTURAL_POSSIBLE_SECESSION_ICON_TOOLTIP:0 "Has a [Culture.GetChanceForSecessionMovement( GetPlayer.Self )|%1v] chance every week to start a #variable [concept_secession] movement#! due to being a non-[concept_primary_cultures] with high [concept_turmoil]!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 CULTURAL_GROWING_SECESSION_ICON_TOOLTIP:0 "The [Culture.GetName] has started a #variable [concept_secession] movement#! against us!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 
 CULTURAL_TURMOIL_TOOLTIP:1 "#header [concept_cultural_turmoil]#!\n$TOOLTIP_DELIMITER$\nGlobal [Culture.GetName] [concept_turmoil]: [Culture.GetTurmoil|-0%]\n[Culture.GetName] [concept_turmoil] in [GetPlayer.GetName]: [GetPlayer.CalcCulturalTurmoil( Culture.Self )|-0%]"
 POP_LIST_TITLE_LABEL: "#bold [PopListItem.GetPopType.GetNameNoIcon]#! [AddLocalizationIf(PopList.HasBuildingContext, 'POP_LIST_POP_TYPE_REPLACED_BY_SLAVES')]"
 POP_LIST_POP_TYPE_REPLACED_BY_SLAVES: "[AddLocalizationIf(Not(StringIsEmpty(PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType))), 'POP_LIST_POP_TYPE_CAN_BE_REPLACED')]"
 POP_LIST_POP_TYPE_CAN_BE_REPLACED: "([PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType)])"
 STATE_POP_PANEL_HEADER:1 "#bold [Concept('concept_pop','$concept_population$')]#!"
 STATE_POP_PANEL_HEADER_LINE_TWO:0 "in [StatePopulationPanel.GetState.GetName]"
 POP_CULTURE_TEXT:0 "Pop Culture: #variable [Pop.GetCulture.GetName]#!"
 POP_RELIGION_TEXT:0 "Pop Religion: #variable [Pop.GetReligion.GetName]#!"
 POP_POL_STR_TEXT:0 "[concept_political_strength]: #variable [Pop.GetPoliticalStrength|1*]#!"
 POP_POL_RADICALS: "[Concept('concept_radical','$concept_radicals$')]: #variable [Pop.GetNumRadicals]#!"
 POP_SUPPORTERS_POL_STR_TEXT: "[concept_political_strength]: #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|D]#!"
 POP_SUPPORTERS_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')]: #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|D-]#!"
 POP_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength]: #variable [PopListItem.GetTotalPolStr|D*]#!"
 POP_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')]: #variable [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength]: #v [PopListItem.GetTotalPolStr|D*]#!"
 POP_SUPPORTERS_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')]: #v [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LITERACY_TEXT: "[concept_literacy]: [Pop.GetLiteracyRate|%1v]"
 CURRENT_GDP_STATE:2 "#header [State.GetOwner.GetAdjectiveNoFormatting] [concept_gdp] from [State.GetName]#!\n$TOOLTIP_DELIMITER$\nCurrent annual GDP contribution: #variable [GetPlayer.GetCustom('currency_symbol')][State.GetGDPContribution|K]#!\n\n[State.GetName] is contributing #variable [State.GetGDPContributionPercentage|%1]#! of [State.GetOwner.GetAdjectiveNoFormatting] $GDP_SHORT$\n\n[State.GetGDPGoodsContributionBreakdown]"
 GDP_OWNERSHIP_RATIO_STATE: "[State.GetGdpRatioOwnedByDesc(GetPlayer.Self)]"
 STATE_GDP_GOODS:1 "Top $GDP_SHORT$ contributing [Concept('concept_good','$concept_goods$')] in [State.GetName] per week\n$BREAKDOWN$"
 STATE_GDP_GOODS_ENTRY:1 "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [GetPlayer.GetCustom('currency_symbol')]$VAL|vD$ ($RATIO|v%0$)"

 POL_STR_MODIFIER_DESC:0 "$DESC$ / Pop"
 TOP_PRODUCED:0 "#title Top Produced#!"
 TOP_DEMANDED:0 "#title Top Demanded#!"
 SEE_ALL_GOODS:0 "See all Goods"
 EXPAND_BUILDING_COST: "@construction![Nbsp][BUILDING_TYPE.GetRequiredConstruction|v0]"
 EXPAND_BUILDING_TOOLTIP:0 "#header [BUILDING_TYPE.GetNameNoFormatting]#!\n[BUILDING_TYPE.GetTooltip]"
 TRADE_LENS_RETARGET_LINK_TOOLTIP:0 "#BOLD #V Retarget Link #!#!\n$TOOLTIP_DELIMITER$\n[concept_retarget_market_desc]"
 TRADE_LENS_MERGE_MARKET_TOOLTIP:0 "#BOLD #V Merge Markets#!#!\n$TOOLTIP_DELIMITER$\n[concept_merge_market_desc]"
 GOODS_POOL_ENTRY:0 "#variable $AMOUNT|D$#! [Goods.GetName]"
 BROWSE_GOODS:0 "Browse [Concept('concept_good', '$concept_goods$')]"
 OPEN_SPECIFIC_MARKET:0 "Open [TradeOverviewPanel.AccessFirstMarket.GetName] details"
 FILTER_STAPLE:0 "$GOOD_CATEGORY_STAPLE$ Goods"
 FILTER_INDUSTRIAL_GOODS:0 "$GOOD_CATEGORY_INDUSTRIAL$ Goods"
 FILTER_MILITARY_GOODS:0 "$GOOD_CATEGORY_MILITARY$ Goods"
 FILTER_LUXURY_GOODS:0 "$GOOD_CATEGORY_LUXURY$ Goods"
 GOOD_CATEGORY_MILITARY:0 "Military"
 GOOD_CATEGORY_STAPLE:0 "Staple"
 GOOD_CATEGORY_INDUSTRIAL:0 "Industrial"
 GOOD_CATEGORY_LUXURY:0 "Luxury"

 DIPLOMATIC_OVERVIEW_TITLE:0 "#BOLD Diplomacy#!"
 OPEN_DIPLOMATIC_BROWSER:0 "Open Country Browser"
 COUNTRIES_TITLE:0 "#BOLD Countries#!"

 POTENTIAL_MAP_MARKER_TOOLTIP:0 "#header [State.GetName] has potential for [Building.GetName]#!\nCurrent size: [State.GetBuilding( BuildingPotentialMarker.GetBuildingType.GetKey).GetExpansionLevelBreakdownDesc]"

 BASE_PRICE:0 "[concept_base_price]"
 MARKET_GOODS:0 "Goods"
 MARKET_TRADED_AMOUNT:0 "Traded Amount"
 MARKET_LEVEL:0 "Level"
 MARKET_CONNECTION:0 "Connection"
 MARKET_DIFFERENCE:0 "Difference"
 MARKET_PRICE:0 "Price"

 CONSOLE_ADD_DISAPPROVAL:0 "From console command"

 PRODUCTION_BUILDING_TOOLTIP:0 "#BOLD #V [Building.GetName]#!#!"
 BUILDINGS_DETAILS_HEADER:0 "#BOLD Buildings in [State.GetName]#!"

 PLAYER_MONEY:1 "#BOLD [GetPlayer.GetGoldReserves|K]#! [GetPlayer.GetPowerDeltaIcon('money')]"
 PLAYER_MONEY_BALANCE:0 "#BOLD [AccessPlayer.PredictWeeklyBalance|1=D]#!"
 WEEKLY_BALANCE_GOOD:0 "#P $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_BAD:0 "#N $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_OKAY:0 "#V $PLAYER_MONEY_BALANCE$#!"
 INTEREST_GROUP_ITEM_TOOLTIP:0 "ID: [InterestGroup.GetID]"

 CULTURES:0 "#bold Country Cultures#!"
 NO_CULTURES:2 "#bold No [concept_country] [Concept('concept_culture', '$concept_cultures$')]#!"

 NO_DIPLO_INFO:0 "#bold No Active Diplomacy#!"

 FORMABLE_COUNTRIES:0 "#bold Formable Countries#!"
 NO_FORMABLE_COUNTRIES:0 "#bold No Possible Country-Formations#!"

 NO_JOURNAL_ENTRIES:1 "Currently no active [Concept('concept_journal_entry', '$concept_journal_entries$')]"
 NO_JOURNAL_ENTRIES_OUTLINER:0 "None Active"
 NO_DECISIONS:0 "#bold No Decisions can be taken#!"

 ACTIVE_JOURNAL_ENTRIES:2 "[Concept('concept_journal_entry', '$concept_journal_entries$')]"
 OTHER_ACTIVE_JOURNAL_ENTRIES:2 "Other [Concept('concept_journal_entry', '$concept_journal_entries$')]"
 JOURNAL_ENTRIES_CONCEPT: "$concept_journal_entries$"
 INACTIVE_JOURNAL_ENTRIES:1 "Potential $concept_journal_entries$"
 NO_INACTIVE_JOURNAL_ENTRIES: "No potential $concept_journal_entries$"

 RELEASE_COUNTRY_NAME:0 "#HEADER [CountryCreation.GetDefinition.GetName]#!"
 RELEASE_COUNTRY_TIER:0 "[CountryCreation.GetDefinition.GetTier]"
 RELEASE_COUNTRY_NUM_STATES:0 "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]#!"
 RELEASE_COUNTRY_REQ_STATES:0 "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]/[CountryCreation.GetNumRequiredStates]#!"
 RELEASE_COUNTRY_TOOLTIP:0 "#title Release [concept_subject]#!\nCultures: #variable [CountryCreation.ListCultures]#!\n$TOOLTIP_DELIMITER$\n[CountryCreation.GetReleaseDesc(GetPlayer)]"
 RELEASE_COUNTRY_DESC:0 "Release #variable [COUNTRY_CREATION.GetName]#! as either a [concept_subject] or as an independent [concept_country].\n\nThey will receive [COUNTRY_CREATION.GetNumReleasableStates(GetPlayer)|v] out of [COUNTRY_CREATION.GetTotalNumStates|v] possible states:\n[COUNTRY_CREATION.ListPotentialReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_PROVINCES_DESC:0 "Release #variable [COUNTRY_CREATION.GetName]#! as either a [concept_subject] or as an independent [concept_country].\n\nThey will receive [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) in the [COUNTRY_CREATION.GetCapital.GetName] [concept_state_region]."
 RELEASABLE_COUNTRIES:0 "#bold Releasable Countries#!"
 NO_RELEASABLE_COUNTRIES:0 "#bold No Releasable Countries#!"
 NO_SUBJECTS: "No [Concept('concept_subject', '$concept_subjects$')]"
 NO_SUBJECTS_OF_THIS_TYPE: "No [SubjectType.GetName] [Concept('concept_subject', '$concept_subjects$')]"
 CANNOT_RELEASE_COUNTRY_AS_INDEPENDENT:0 "We cannot make [COUNTRY_CREATION.GetName] independent due to our diplomatic relationship with [GetPlayer.TryGetOverlordTooltipEntry]"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT:0 "We cannot make [COUNTRY_CREATION.GetName] our [concept_subject] [concept_country] due to our diplomatic relationship with [GetPlayer.TryGetOverlordTooltipEntry]"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT_NO_SUBJECT_TYPE:0 "We cannot make [COUNTRY_CREATION.GetName] our [concept_subject] [concept_country] because there is no valid subject relation that allows that."
 CANNOT_RELEASE_COUNTRY_SAME_CAPITAL:0 "We cannot release [COUNTRY_CREATION.GetName] because their capital of [COUNTRY_CREATION.GetCapital.GetName] is also our capital"
 CANNOT_RELEASE_COUNTRY_NO_CAPITAL:2 "We must control the [COUNTRY_CREATION.GetAdjective] [concept_capital_state] of [COUNTRY_CREATION.GetCapital.GetName] in order to release [COUNTRY_CREATION.GetName]"
 CANNOT_RELEASE_COUNTRY_NOT_ENOUGH_STATES:2 "We need to fully control #variable [COUNTRY_CREATION.GetNumRequiredStates]#! [COUNTRY_CREATION.GetAdjective] core states in order to release #variable [COUNTRY_CREATION.GetName]#!. There are a total of #variable [COUNTRY_CREATION.GetTotalNumStates]#! [COUNTRY_CREATION.GetAdjective] core states in the world:\n[COUNTRY_CREATION.ListPotentialStates(GetPlayer)]"
 CANNOT_RELEASE_COUNTRY_DIPLOMATIC_PLAY: "We cannot release [COUNTRY_CREATION.GetName] because we are involved in a [concept_diplomatic_play]"
 CANNOT_RELEASE_COUNTRY_WAR: "We cannot release [COUNTRY_CREATION.GetName] because we are involved in a [concept_war]"
 RELEASABLE_STATE:0 "[STATE_REGION.GetName]"

 SUBJECT_TYPES_VISUALIZATION: "Subject Types Table"

 COUNTRY_FORMATION_HEADER:0 "Nation Formation"
 COUNTRY_FORMATION_TYPE:0 "[SelectLocalization(CountryFormation.IsMajorFormation, Concept('concept_unification', '$concept_major_unification$'), Concept('concept_unification', '$concept_minor_unification$'))]"
 GO_TO_COUNTRY_FORMATION:0 "Go to #header [CountryFormation.GetAdjective]#! [concept_nation_formation]"

 FORM_COUNTRY:0 "Form [CountryFormation.GetName]"
 FORM_COUNTRY_REQUIRED:0 "Control over at least #v [CountryFormation.GetNumRequiredStates]#! [Concept('concept_state_region', '$concept_state_regions$')] is required to form [CountryFormation.GetName]"
 FORM_COUNTRY_CULTURES:0 "[Concept('concept_culture', '$concept_cultures$')]: [CountryFormation.ListCultures]"
 FORM_COUNTRY_NAME:1 "#HEADER [CountryFormation.GetName]#!"
 FORM_COUNTRY_TIER:0 "[CountryFormation.GetDefinition.GetTier]"
 CANNOT_FORM_COUNTRY_NOT_ENOUGH_STATES:2 "We only control #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! out of #v [COUNTRY_FORMATION.GetNumRequiredStates]#! required [Concept('concept_state_region', '$concept_state_regions$')] to form #v [COUNTRY_FORMATION.GetName]#!:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_TITLE:0 "Independence war ongoing against $NUM_COUNTRIES$ [Concept('concept_country', '$concept_countries$')]:"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_ELEMENT:0 "$TAB$[COUNTRY.GetName]"
 FORM_COUNTRY_REQ_STATES:0 "#bold [CountryFormation.GetNumControlledStates(GetPlayer)]/[CountryFormation.GetNumRequiredStates]#!"
 CAN_FORM_COUNTRY_DESC:2 "We fully control #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! out of the #v [COUNTRY_FORMATION.GetNumRequiredStates]#! required [Concept('concept_state_region', '$concept_state_regions$')] to form #v [COUNTRY_FORMATION.GetName]#!:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 FORM_COUNTRY_TOOLTIP:2 "#header $FORM_COUNTRY$#!\n$FORM_COUNTRY_REQUIRED$\n$TOOLTIP_DELIMITER$\n[CountryFormation.GetFormDesc(GetPlayer)]"
 REQUIRED_STATE_CONTROLLED:1 "@green_checkmark_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED:1 "@simple_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED_OPTIONAL:0 "@simple_box! [STATE_REGION.GetName] (Optional)"

 FORM_COUNTRY_SPLIT_STATE:0 "[Concept('concept_split_state','$concept_split_state_short$')]"
 FORM_COUNTRY_CANDIDATES_HEADER:0 "[Concept('concept_unification_candidate', '$concept_unification_candidates$')]"
 FORM_COUNTRY_CANDIDATES_EMPTY:0 "No Candidates"
 FORM_COUNTRY_STATE_REGIONS_HEADER:0 "We control #v [CountryFormation.GetNumControlledStates(GetPlayer)]#!/#v [CountryFormation.GetTotalNumStates]#! [CountryFormation.GetAdjective] [Concept('concept_state_region', '$concept_state_regions$')]"
 FORM_COUNTRY_STATE_REGIONS_REQUIRED:0 "[CountryFormation.GetNumRequiredStates|v] controlled [Concept('concept_state_region', '$concept_state_regions$')] required to form [CountryFormation.GetName]"
 FORM_COUNTRY_CULTURE_COUNTRIES_HEADER:0 "[CountryFormation.ListCultures] [Concept('concept_country', '$concept_countries$')]"

 FORM_COUNTRY_SUPPORT_CANDIDATE:0 "Support"
 FORM_COUNTRY_SUPPORT_CANDIDATE_TOOLTIP:0 "#header [Concept('concept_unification_supporter', '$concept_unification_support$')] [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nDeclare our support for [Country.GetName] as the unifier of [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE:0 "Stop Supporting"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE_TOOLTIP:0 "#header Stop [Concept('concept_unification_supporter', '$concept_unification_supporting$')] [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nEnd our support for [Country.GetName] as the unifier of [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"

 FORM_COUNTRY_SUPPORT_IS_SUBJECT: "[Country.GetName] is a [concept_subject] and can only support their [concept_overlord] to form [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_DOES_NOT_HAVE_VALID_CULTURE:0 "[Country.GetName] does not share any [concept_primary_cultures] with [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_CANDIDATE:0 "[Country.GetName] is a candidate for unifying [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_ALREADY_SUPPORTING_CANDIDATE:0 "[Country.GetName] is already supporting [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName]"
 FORM_COUNTRY_SUPPORT_DIPLOMATIC_PLAY_STARTED: "[Country.GetName] is already involved in the [concept_diplomatic_play] for [DIPLOMATIC_PLAY_TYPE.GetName|v]"

 FORM_COUNTRY_SUPPORTING_COUNTRY:0 "[Country.GetName] is supporting [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName] as unifier of [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORTING_COUNTRIES:0 "Supporters: #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#!"
 FORM_COUNTRY_SUPPORTING_COUNTRIES_TOOLTIP:0 "#header Unification [Concept('concept_unification_supporter', '$concept_unification_support$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nSupported by #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#! [Concept('concept_country', '$concept_countries$')] as unifier of [CountryFormation.GetName]:\n[CountryFormation.GetSupportingCountriesDesc(Country.Self)]"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES:0 "No Supporters"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES_TOOLTIP:0 "#header Unification [Concept('concept_unification_supporter', '$concept_unification_support$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nNot supported by any other [concept_country] as unifier of [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_BREAKDOWN:0 "[CountryFormation.GetSupportForAllCandidatesDesc(Country.Self)]"
 UNIFICATION_SUPPORT_IS_CANDIDATE:0 "[Country.GetName] is a [concept_unification_candidate] for [CountryFormation.GetName]"
 UNIFICATION_SUPPORT_NO_CANDIDATES:0 "There are currently no [Concept('concept_unification_candidate', '$concept_unification_candidates$')] for [CountryFormation.GetName] that [Country.GetName] may support"
 UNIFICATION_SUPPORT_IS_PLAYER:0 "[Country.GetName] is a human player, and who they support to unify [CountryFormation.GetName] is up to them"

 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY:1 "Launch Unification [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')]"
 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY_TOOLTIP:0 "[CountryFormation.GetTriggerUnificationPlayDesc(GetPlayer)]"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY:0 "Launch Leadership [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')]"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY_TOOLTIP:0 "[CountryFormation.GetTriggerLeadershipPlayDesc(GetPlayer,Country.Self)]"

 COUNTRY_DOES_NOT_EXIST_TOOLTIP: "This [concept_country] does not exist"

 PRODUCTION_AMOUNT:0 "#BOLD [GoodsProductionInfo.GetAmount|D]#! "
 PRODUCTION_AMOUNT_MARKER:0 "#BOLD [GoodsProductionInfo.GetAmount|D]#!"
 PRODUCTION_PRICE:0 "[GetPlayer.GetCustom('currency_symbol')][GoodsProductionInfo.GetPrice|1]"
 PRODUCTION_SOLD_FOR:0 "[GetPlayer.GetCustom('currency_symbol')][GoodsProductionInfo.GetSoldFor|D]"
 PRODUCTION_PANEL_HEADER:0 "#BOLD [concept_good_production] in [State.GetName]#!"
 PRODUCTION_AMOUNT_TITLE:0 "#title Amount#!"
 PRODUCTION_SOLD_FOR_TITLE:0 "#title Sold For#!"
 PRODUCTION_GOOD_TITLE:0 "#title Good#!"

 MARKET:0 "Market"
 MARKETS:0 "Markets"
 TRADE_OVERVIEW_TITLE:0 "#bold Markets#!"
 POPS_OVERVIEW_TITLE:0 "#bold Population#!"
 TRADE_OVERVIEW_MOST_IMPORTED:0 "#title Most Imported#!"
 TRADE_OVERVIEW_MOST_CONSUMPTION_INEFFICIENT:0 "#title [concept_good_consumption] inefficiencies#!"
 TRADE_OVERVIEW_MOST_EXPORTED:0 "#title Most Exported#!"
 TRADE_OVERVIEW_MOST_PRODUCTION_INEFFICIENT:0 "#title [concept_good_production] inefficiencies#!"

 POPS_OVERVIEW_STATISTICS_TAB:0 "Overview"
 POPS_OVERVIEW_POP_LIST_TAB:0 "Detailed List"
 POPS_OVERVIEW_CHARTS:0 "Charts"

 BUILDING_GOVERNMENT_EXPENSES:0 "[concept_government_expenses]:"
 BUILDING_INFRA_USAGE:0 "#variable [Building.CalcInfrastructureUsage|=0]#! [concept_infrastructure_usage]"
 BUILDING_URBANIZATION:0 "[concept_urbanization]:"
 BUILDING_INFRA_USAGE_TOOLTIP:0 "[Building.GetInfrastructureUsageBreakdown]"
 BUILDING_URBANIZATION_TOOLTIP:0 "[Building.GetUrbanizationProvidedBreakdown]"
 BUILDING_BATTALIONS_MOBILIZED:0 "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalions_mobilized$')]:"

 PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP:0 "[Country.GetArmyPowerProjectionDesc]"
 PANEL_MILITARY_ARMY_POWER_PROJECTION: "The total number of [Country.GetAdjective] [Concept('concept_battalion', '$concept_battalions$')] and their technological sophistication results in an Army [concept_power_projection] of #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP [Country.GetArmyPowerProjection|v0]#!#!"
 PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP:0 "[Country.GetNavyPowerProjectionDesc]"
 PANEL_MILITARY_NAVY_POWER_PROJECTION: "The total number of [Country.GetAdjective] [Concept('concept_flotilla', '$concept_flotillas$')] and their technological sophistication results in a Navy [concept_power_projection] of #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP [Country.GetNavyPowerProjection|v0]#!#!"
 PANEL_MILITARY_ARMY_CURRENT_REGULARS:0 "@battalions![Country.GetRegularBattalions|0v]"
 PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS:2 "@battalions![Country.GetConscriptedBattalions|0v]/[Country.CalcConscriptableBattalions|0]"
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS:0 "@battalions![Country.GetBattalions|0v]"

 BORROW_LENDING_SETTING_HEADER: "#title Borrowing and Lending [Concept('concept_battalion','$concept_battalions$')]#!"

 BORROW_LENDING_SETTING_OPTION_TOOLTIP: "[MilitaryFormationBorrowSetting.GetName]\n[SelectLocalization(StringIsEmpty(GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand)), 'BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT', GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand))]\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT: "#i Click to select#!"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_SELECTED: "[MilitaryFormationBorrowSetting.GetName] #i (Currently active)#!\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"

 BORROW_LENDING_SETTING_ANY_NAME: "Any friendly [concept_army]"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_NAME: "Only [GetPlayer.GetAdjective] [Concept('concept_army','$concept_armies$')]"
 BORROW_LENDING_SETTING_NONE_NAME: "None"

 BORROW_LENDING_SETTING_ANY_DESC: "Allows [Concept('concept_battalion','$concept_battalions$')] from [MilitaryFormation.GetName] to be borrowed by any other friendly #b advancing#! [Concept('concept_army','$concept_armies$')] on the same [concept_front] as [MilitaryFormation.GetName]\n\n(Defending [Concept('concept_army','$concept_armies$')] may always borrow [Concept('concept_battalion','$concept_battalions$')])"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_DESC: "Allows [Concept('concept_battalion','$concept_battalions$')] from [MilitaryFormation.GetName] to #b only#! be borrowed by other [GetPlayer.GetAdjective] #b advancing#! [Concept('concept_army','$concept_armies$')]\n\n(Defending [Concept('concept_army','$concept_armies$')] may always borrow [Concept('concept_battalion','$concept_battalions$')])"
 BORROW_LENDING_SETTING_NONE_DESC: "Disallows [Concept('concept_battalion','$concept_battalions$')] from [MilitaryFormation.GetName] to be borrowed for other #b advancing#! [Concept('concept_army','$concept_armies$')]\n\n(Defending [Concept('concept_army','$concept_armies$')] may always borrow [Concept('concept_battalion','$concept_battalions$')])"

 POWER_PROJECTION_FROM_MILITARY_FORMATION: "#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP $VALUE|=+0$#!#! from [MILITARY_FORMATION.GetName]"
 MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP: "[MilitaryFormation.GetPowerProjectionDesc]"
 MILITARY_FORMATION_POWER_PROJECTION_DESC: "#header [concept_power_projection]: $TOTAL_POWER_PROJECTION|v0$\n$TOOLTIP_DELIMITER$\nAverage [concept_offense] and [concept_defense] of $AVERAGE_CE|1v$ spread across $TOTAL_MANPOWER|D1$ [concept_manpower] results in $TOTAL_POWER_PROJECTION|v0$ $concept_power_projection$ for the formation."

 REGULARS_AND_CONSCRIPTS: "Regulars & Conscripts"

 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_WITH_ICON: "[MilitaryFormation.GetUnitIcon]$MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS$"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS: "#v [MilitaryFormation.GetNumCombatUnits]#!/[SelectLocalization(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), 'INSUFFICIENT_COMMAND_LIMIT', 'SUFFICIENT_COMMAND_LIMIT')]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_NO_LIMIT: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 INSUFFICIENT_COMMAND_LIMIT: "#r [MilitaryFormation.GetCommandLimitRaw]#!"
 SUFFICIENT_COMMAND_LIMIT: "[MilitaryFormation.GetCommandLimitRaw]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_BATTALIONS_TOOLTIP', 'MILITARY_FORMATION_FLOTILLAS_TOOLTIP')]"

 POTENTIAL_CONSCRIPTS: "@conscripts!#v [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]#! unraised [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 NOT_RAISED_CONSCRIPT: "@conscripts! Not raised [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')]"

 PANEL_MILITARY_NATIVE_POTENTIAL_BATTALIONS_TOOLTIP:1 "In the event of [Concept('concept_tension', '$concept_tensions$')] escalating into a [concept_native_uprising], [Country.GetName] will be able to field up to @battalions![Country.CalcConscriptableBattalions|0] [Concept('concept_battalion', '$concept_battalions$')] of warriors."

 PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP: "#header [Country.GetAdjective] [Concept('concept_battalion', '$concept_battalions$')] and [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]#!\n@battalions![Country.GetRegularBattalions|v] [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetFullyMobilizedBattalionsPercentageRaw|0%]#!@mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])\n@conscripts![Country.GetConscriptedBattalions|v] out of [Country.CalcConscriptableBattalions|v] raised [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$\n\n[Concept('concept_army','$concept_armies$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"

 NO_ARMIES_IN_COUNTRY: "No [Concept('concept_army','$concept_armies$')] in [Country.GetName]"
 ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetArmiesBreakdown]"
 ARMY_ENTRY_FORMAT: "$TAB$@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$ #!#! $FORMATION_NAME$"

 MILITARY_FORMATION_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumCombatUnits|v] in total $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] [concept_command_limit]\n$TOOLTIP_DELIMITER$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumRegulars|v]#!#! Regular [Concept('concept_battalion', '$concept_battalions$')]\n@conscripts!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumConscripts|v]#!#! raised out of #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetMaxConscripts|v]#!#! potential [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP: "#header Regulars [Concept('concept_battalion', '$concept_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegulars|v] in total\n@battalions![MilitaryFormation.GetNumFullyMobilizedRegulars|v] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')] ([MilitaryFormation.GetRegularsMobilizationPercentage|%v])\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetRegularsGroupsBreakdown]"

 INCOMING_NUMBER_OF_REGULARS_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegulars), 'INCOMING_NUMBER_OF_REGULARS', 'NO_INCOMING_NUMBER_OF_REGULARS')]"
 INCOMING_NUMBER_OF_REGULARS: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegulars|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')])"
 NO_INCOMING_NUMBER_OF_REGULARS: ""

 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)), 'INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE', 'NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE')]"
 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')])"
 NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: ""

 UNIT_GROUP_ENTRY_FORMAT_REGULAR_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$ #!#! $GROUP_NAME$"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegularsUnitsInGroup(COMBAT_UNIT_GROUP.Self)|v] Regular [MilitaryFormation.GetUnitLabel] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"
 UNIT_GROUP_REGULAR_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$There are no eligible [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] for Regulars [MilitaryFormation.GetUnitLabel] in [MilitaryFormation.GetName]"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegularsUnitsInGroup(CombatUnitGroup.Self)|v] Regular [MilitaryFormation.GetUnitLabel] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( CombatUnitGroup.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( CombatUnitGroup.Self )), 'NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$No Regular [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@conscripts![MilitaryFormation.GetNumConscriptsUnitsInGroup(CombatUnitGroup.Self)|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( CombatUnitGroup.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( CombatUnitGroup.Self )), 'NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$No [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]"

 UNIT_LABEL_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
 UNIT_LABEL_NAVY: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 UNIT_LABEL_CONSCRIPTS: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"

 UNIT_GROUP_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@flotillas![MilitaryFormation.GetNumTotalCombatUnitsInGroup(CombatUnitGroup.Self)|v] [MilitaryFormation.GetUnitLabel] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown( CombatUnitGroup.Self )]"

 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName] [MilitaryFormation.GetUnitLabel]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"
 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetUnitIcon]#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] Regular [MilitaryFormation.GetUnitLabel] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"
 NO_UNITS_OF_UNIT_TYPE: "$TAB$No [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]"
 UNIT_TYPE_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@battalions!#v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! Regular [MilitaryFormation.GetUnitLabel] in total $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$No [CombatUnitType.GetName] in [MilitaryFormation.GetName]"

 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@flotillas! #v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [MilitaryFormation.GetUnitLabel] in total $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI_ON_MILITARY_PANEL: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n@flotillas! #v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] [MilitaryFormation.GetUnitLabel] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"

 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE')]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_RAISED: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_GROUP_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumExpectedConscriptsUnitsInGroup( CombatUnitGroup.Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 NOT_RAISED_CONSCRIPTS: "#r Not yet raised#!"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE: "$TAB$No [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$No [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitType.GetName] in [MilitaryFormation.GetName]"

 MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumConscripts|v] raised out of [MilitaryFormation.GetMaxConscripts|v] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetConscriptsGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_CONSCRIPT_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$ #!#! $GROUP_NAME$"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName] [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')]#!\n@battalions![MilitaryFormation.GetNumConscripts|v] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$There are no eligible [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] for [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] in [MilitaryFormation.GetName]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName] [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"

 UNIT_TYPE_ENTRY_FORMAT_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_ENTRY_FORMAT: "$TAB$@manpower! #tooltippable #tooltip:$UNIT_MANPOWER_BREAKDOWN_TAG$ $UNIT_MANPOWER|v$#!#! $UNIT_NAME$"

 BATTLE_UNIT_TYPE_REGULARS_TOOLTIP: "There are @battalions! [BattleUnitType.GetNumberOfRegularUnits|v] [CombatUnitType.GetName] [Concept('concept_battalion', '$concept_battalions$')] in this battle"
 BATTLE_UNIT_TYPE_CONSCRIPT_TOOLTIP: "There are @conscripts! [BattleUnitType.GetNumberOfConscriptUnits|v] [CombatUnitType.GetName] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] in this battle"
 BATTLE_UNIT_TYPE_WARSHIPS_TOOLTIP: "There are @flotillas! [BattleUnitType.GetNumberOfRegularUnits|v] [CombatUnitType.GetName] [Concept('concept_battalion', '$concept_battalions$')] in this battle"
 BATTLE_UNIT_TYPE_AVERAGE_MORALE: "Average morale of units is #[GetMoraleColorString( BattleUnitType.GetAverageMorale )] [BattleUnitType.GetAverageMorale|0%]#!"
 BATTLE_MILITARY_FORMATION_TOOLTIP: "#header [concept_manpower]#!\n@manpower![BattleMilitaryFormation.GetCurrentManpowerFromFormation|vK] / #maximum [BattleMilitaryFormation.GetMaxManpowerFromFormation|vK]#! [concept_manpower]"
 BATTLE_MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n@unit_offense! [BattleMilitaryFormation.GetAverageOffense|1v] [concept_offense] on average"
 BATTLE_MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n@unit_defense! [BattleMilitaryFormation.GetAverageDefense|1v] [concept_defense] on average"
 BATTLE_MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nAverage $concept_morale$ of [Concept('concept_unit','$concept_units$')] in [MilitaryFormation.GetName] is #BOLD #[GetMoraleColorString( BattleMilitaryFormation.GetCurrentMorale )] [BattleMilitaryFormation.GetCurrentMorale|0%]#!#!\nCurrent [concept_supply] of [MilitaryFormation.GetName] is [MilitaryFormation.GetSupply]"

 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS: "@flotillas! [Country.GetWarships|0v]"

 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP: "#header [Country.GetAdjective] [Concept('concept_flotilla','$concept_flotillas$')]#!\nCurrent: @flotillas! [Country.GetWarships|v] ([Country.GetFlotillasRanking])\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_NAVY_POWER_PROJECTION$\n\n[Concept('concept_fleet','$concept_fleets$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsFleet), 'NO_FLEETS_IN_COUNTRY', 'FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_LEFT: "#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n[WarPanel.GetLeftLeader.GetName] currently has @flotillas! [WarPanel.GetLeftLeader.GetWarships|v] Flotillas\n\n[WarPanel.GetLeftLeader.GetWarshipsBreakdown]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_RIGHT: "#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n[WarPanel.GetRightLeader.GetName] currently has @flotillas! [WarPanel.GetRightLeader.GetWarships|v] Flotillas\n\n[WarPanel.GetRightLeader.GetWarshipsBreakdown]"

 NO_FLEETS_IN_COUNTRY: "No [Concept('concept_fleet','$concept_fleets$')] in [Country.GetName]"
 FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetFleetsBreakdown]"
 FLEET_ENTRY_FORMAT: "$TAB$@flotillas!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_FLOTILLAS_TOOLTIP $NUM_FLOTILLAS|v$ #!#! $FORMATION_NAME$"
 MILITARY_FORMATION_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla','$concept_flotillas$')] in [MilitaryFormation.GetName]#!\n@flotillas! [MilitaryFormation.GetNumCombatUnits|v] in total $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@flotillas! #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] [concept_command_limit]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetFlotillaGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_FLOTILLAS: "$TAB$@flotillas! #tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$ #!#! $GROUP_NAME$"
 UNIT_GROUP_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName] [Concept('concept_flotilla', '$concept_flotillas$')]#!\n@flotillas![MilitaryFormation.GetNumCombatUnits|v] in total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"

 UNIT_TYPE_ENTRY_FORMAT_FLOTILLAS: "$TAB$@flotillas! #tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_GROUP_FLOTILLAS_NO_ELIGIBLE_GROUPS: "$TAB$There are no eligible [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] for [Concept('concept_flotilla', '$concept_flotillas$')] in [MilitaryFormation.GetName]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName] [Concept('concept_flotilla', '$concept_flotillas$')]#!\n@flotillas! $NUM_UNITS_OF_TYPE|v$ int total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"

 UNIT_MANPOWER_TOOLTIP: "#header $UNIT_NAME$ [concept_manpower]#!\nCurrent: @manpower! $UNIT_MANPOWER|v$\n$TOOLTIP_DELIMITER$\n$UNIT_MORALE|v%$ [concept_morale]\n@manpower! $UNIT_DEMORALIZED|v$ [concept_morale_demoralized]\n@unit_offense! $UNIT_OFFENSE|v$ [concept_offense]\n@unit_defense! $UNIT_DEFENSE|v$ [concept_defense]"

 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP:4 "#header [Country.GetAdjective] [Concept('concept_battalion', '$concept_battalions$')]#!\nCurrent: @battalions!#v [Country.GetBattalions]#!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsDesc]\n\n[Concept('concept_army','$concept_armies$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_ARMY_CURRENT_TOTAL_BATTALIONS_DESC:3 "$COUNTRY$ currently has @battalions!$BATTALIONS|v$ ([Country.GetBattalionsRanking])\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$"
 PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS_DESC:1 "$COUNTRY$ has raised @battalions!$CONSCRIPTS|v$ Conscripts out of their maximum of $POTENTIAL|v$ [Concept('concept_potential_battalions','$concept_potential_conscripts$')]."
 PANEL_MILITARY_ARMY_CURRENT_REGULARS_DESC:1 "$COUNTRY$ currently has @battalions!$REGULAR_BATTALIONS|v$ out of their maximum of $POTENTIAL|v$ [Concept('concept_potential_battalions','$concept_potential_regulars$')]."
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_MOBILIZED_DESC:0 "$COUNTRY$ currently has @battalions!$REGULAR_BATTALIONS|v$ Regular Battalions and @battalions!$CONSCRIPT_BATTALIONS|v$ Conscript Battalions."
 PANEL_MILITARY_ARMY_SIZE_CAPACITY_TOOLTIP:0 "The amount of #variable Battalions#! we could potentially train"
 BATTALION_TRAVEL_DESC:0 "#variable +[CHARACTER.GetCombatUnitsTypeIcon] $VALUE|v$#! in #variable $DAYS$#! days"
 BATTALION_TRAVEL_BREAKDOWN:0 "[CHARACTER.GetCombatUnitsTypeIcon] #variable $VALUE$#! from [BUILDING.GetState.GetName]"
 BATTALION_SOURCES_BREAKDOWN_SUPPLY:0 "#BOLD #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
 BATTALION_SOURCES_UNIT_NAME_ARMY:1 "[Concept('concept_battalion', '$concept_battalions$')]"
 BATTALION_SOURCES_UNIT_NAME_NAVY:2 "[Concept('concept_flotilla','$concept_flotillas$')]"
 BATTALION_SOURCES_BREAKDOWN_UNITS:0 "[GetUnitStrengthHeader( $CURRENT$, $MAX$, $ICON$ )]"
 BATTALION_SOURCES_BREAKDOWN:0 "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ from [BUILDING.GetState.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] and $SUPPLY$)"
 BATTALION_SOURCES_BREAKDOWN_CLEAN:0 "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ from [BUILDING.GetState.GetName]"
 BATTALION_CAPACITY_DESC:1 "@battalions! $COUNT|v$ [Concept('concept_battalion', '$concept_battalions$')]"
 FLOTILLAS_CAPACITY_DESC:3 "@flotillas! $COUNT|v$ [Concept('concept_flotilla','$concept_flotillas$')]"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN:0 "@battalions! $COUNT|v$ in [STATE.GetName]"
 FLOTILLAS_CAPACITY_SOURCES_BREAKDOWN:1 "@flotillas! $COUNT|v$ in [STATE.GetName]"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN_UNUSED:0 " (room for #variable @$ICON_STR$! $REMAINING_CAPACITY|1$#! more)"

 NAVAL_INVASION_PLANNER_HEADER: "Naval Invade [NavalInvasionPlannerPopup.GetTargetState.GetCountry.GetFlagTextIcon] [NavalInvasionPlannerPopup.GetTargetState.GetName]"
 SELECT_ARMY: "Select [concept_army]"
 SELECT_FLEET: "Select [concept_fleet]"
 SELECT_MILITARY_FORMATION: "Select [concept_military_formation]"
 ARMY: "$concept_army$"
 ARMIES: "$concept_armies$"
 FLEET: "$concept_fleet$"
 FLEETS: "$concept_fleets$"
 NAVAL_INVASION_NAME: "[concept_naval_invasion][AddLocalizationIf(State.IsValid, 'NAVAL_INVASION_IN')]"
 NAVAL_INVASION_IN: " in [State.GetName]"
 NAVAL_INVASION_PLANNER_ARMY_WILL_MOBILIZE: "[MilitaryFormation.GetName] will [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')]"
 NAVAL_INVASION_PLANNER_ARMY_NOT_MOBILIZED: "#r Not yet#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 NAVAL_INVASION_PLANNER_ARMY_IS_MOBILIZED: "[MilitaryFormation.GetName] is [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 NAVAL_INVASION_PLANNER_TRAVEL_TIME_LABEL: "Travel time: #v $TIME$#!"
 NAVAL_INVASION_PLANNER_EFFICIENCY_LABEL: "Estimated to have [NavalInvasionPlannerPopup.GetEfficiencyRaw|%1v] Naval Invasion efficiency."
 NAVAL_INVASION_PLANNER_PENALTIES_LABEL: "@warning! You have too few @flotillas! [Concept('concept_flotilla','$concept_flotillas$')] for this [concept_army]!\nThis results in a penalty of #r -[NavalInvasionPlannerPopup.GetLandingPenaltyModifierMultiplier|%1]#! invasion efficiency."
 NAVAL_INVASION_PLANNER_CONFIRM_TOOLTIP: "#header Confirm this Naval Invasion#!\n[ConcatIfNeitherEmpty(NavalInvasionPlannerPopup.GetCommandValidityDesc,'\n')][AddLocalizationIf(LessThan_CFixedPoint(NavalInvasionPlannerPopup.GetEfficiencyRaw,'(CFixedPoint)1'),'NAVAL_INVASION_PLANNER_PENALTIES_LABEL')]\n$NAVAL_INVASION_PLANNER_EFFICIENCY_LABEL$\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(NavalInvasionPlannerPopup.HasSelectedNecessaryFormations,NavalInvasionPlannerPopup.GetTravelDaysDesc)]"
 NAVAL_INVASION_PLANNER_TRAVEL_DAYS_DESC: "#v $TIME$#! travel time to [NavalInvasionPlannerPopup.GetTargetState.GetCountry.GetFlagTextIcon] [NavalInvasionPlannerPopup.GetTargetState.GetName]\n\n[AddLocalizationIf(NavalInvasionPlannerPopup.HasSelectedNecessaryFormations,NavalInvasionPlannerPopup.GetFleetDaysDesc)]\n[AddLocalizationIf(NavalInvasionPlannerPopup.HasSelectedNecessaryFormations,NavalInvasionPlannerPopup.GetArmyDaysDesc)]"
 NAVAL_INVASION_PLANNER_FLEET_DAYS_DESC: "Fleet:\n$TAB$$TIME$ - [NavalInvasionPlannerPopup.GetSlowestFleet.GetName]: @flotillas! [NavalInvasionPlannerPopup.GetSlowestFleet.GetNumCombatUnits|v]"
 NAVAL_INVASION_PLANNER_ARMY_DAYS_DESC: "Army:\n$TAB$$TIME$ - [NavalInvasionPlannerPopup.GetSlowestArmy.GetName]: @battalions! [NavalInvasionPlannerPopup.GetSlowestArmy.GetNumCombatUnits|v]"
 ADD_MILITARY_FORMATION_ARMY: "Add an [concept_army] to this #b Naval Invasion#!"
 ADD_MILITARY_FORMATION_FLEET: "Add a [concept_fleet] to this #b Naval Invasion#!"

 TRANSFER_POPUP_HEADER: "Transfer Units"
 CHANGE_A_FORMATION: "Click to change [concept_military_formation] to transfer [Concept('concept_unit','$concept_units$')] #b to / from#!"
 CHANGE_B_FORMATION: "Click to change [concept_military_formation] to transfer [Concept('concept_unit','$concept_units$')] #b to / from#!"
 SELECT_MILITARY_FORMATION_TO_SEND_FROM: "Select a [concept_military_formation] to transfer [Concept('concept_unit','$concept_units$')] #b to / from#!"
 SELECT_MILITARY_FORMATION_TO_SEND_TO: "Select a [concept_military_formation] to transfer [Concept('concept_unit','$concept_units$')] #b to / from#!"
 TRANSFER_FORMATION_SELECT_ARMY: "#header Select [MilitaryFormation.GetName]#!\n@green_checkmark_box! Select an [concept_army] to transfer #b to / from#!"
 TRANSFER_FORMATION_SELECT_FLEET: "#header Select [MilitaryFormation.GetName]#!\n@green_checkmark_box! Select a [concept_fleet] to transfer #b to / from#!"
 TRANSFER_FORMATION_TRAVEL_TIME_LABEL: "Travel time: #v $TIME$#!"
 TRANSFER_FORMATION_COMMANDER_LIST_HEADER: "#header Selected Commanders:#!"
 TRANSFER_FORMATION_COMMANDER_LIST_FORMAT: "$TRANSFER_FORMATION_COMMANDER_LIST_HEADER$\n$SELECTED_COMMANDERS$"
 TRANSFER_FORMATION_UNIT_LIST_HEADER: "#header Selected Units:#!"
 TRANSFER_FORMATION_UNIT_LIST_FORMAT: "$TRANSFER_FORMATION_UNIT_LIST_HEADER$\n$SELECTED_UNITS$"
 TRANSFER_COMMANDER: "$TAB$$COMMANDER_NAME$"
 TRANSFER_BATTALION: "$TAB$@battalions! $NUM|v$ - $UNIT_NAME$"
 TRANSFER_FLOTILLA: "$TAB$@flotillas! $NUM|v$ - $UNIT_NAME$"
 TRANSFER_EFFECT_SPLIT: "This will transfer the selected [Concept('concept_commander', '$concept_commanders$')] and [Concept('concept_unit', '$concept_units$')] into their own [concept_military_formation] and will [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the $concept_commanders$ and $concept_units$ while transfering them."
 TRANSFER_EFFECT_LOCAL_TRANSFER: "This will transfer the selected [Concept('concept_commander', '$concept_commanders$')] and [Concept('concept_unit', '$concept_units$')] from $SOURCE_FORMATION_NAME$ to $TARGET_FORMATION_NAME$ and will [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the $concept_commanders$ and $concept_units$ while transfering them."
 TRANSFER_EFFECT_REMOTE_TRANSFER: "This will transfer the selected [Concept('concept_commander', '$concept_commanders$')] and [Concept('concept_unit', '$concept_units$')] into their own [concept_military_formation] that will immediately begin traveling towards $TARGET_FORMATION_NAME$. When the two [Concept('concept_military_formation', '$concept_military_formations$')] rendezvous, the selected [Concept('concept_commander', '$concept_commanders$')] and [Concept('concept_unit', '$concept_units$')] will transfer to $TARGET_FORMATION_NAME$, as long as the newly-generated [concept_military_formation] wasn't ordered to do something else in the meantime. This will [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the $concept_commanders$ and $concept_units$ while transfering them."
 TRANSFER_FORMATION_GO_HOME_WARNING: "@warning! This will cause [MILITARY_FORMATION.GetName] to be stationed in [HQ.GetName]"
 TRANSFER_NEW_FORMATION_GO_HOME_WARNING: "@warning! This will cause the new [concept_military_formation] to be stationed in [HQ.GetName]"
 TRANSFER_CONFIRM: "[AddTextIf(Not(StringIsEmpty(TransferFormationPopup.GetWarningsDesc)), Concatenate('@warning!', ' '))]$CONFIRM$"

 TRANSFER_FORMATION_POPUP_CONFIRM_TOOLTIP: "[SelectLocalization(StringIsEmpty(GetDesc(TransferFormationPopup.Confirm)), TransferFormationPopup.GetConfirmDesc, GetDesc(TransferFormationPopup.Confirm))]"
 TRANSFER_FORMATION_POPUP_CONFIRM_DESC: "#header Confirm this transfer#![ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetWarningsDesc)][ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetHintDesc)]\n[ConcatIfNeitherEmpty(AddTextIf(IsValid(TransferFormationPopup.Confirm), TransferFormationPopup.GetTravelTimeDesc), '\n')]$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(TransferFormationPopup.CanReset, 'TRANSFER_RESULTING_NUMBERS_DESC'), '\n\n')][ConcatIfNeitherEmpty(TransferFormationPopup.GetOrganizationImpactDesc,'\n\n')]$VISIBLE_EFFECT_EXPLANATION$"
 TRANSFER_RESULTING_NUMBERS_DESC: "#title This will result in:#!\n[TransferFormationPopup.GetLeftStagedFormation.GetResultingNumbersDesc]\n\n[TransferFormationPopup.GetRightStagedFormation.GetResultingNumbersDesc]"
 TRANSFER_RESULT_FORMAT: "$TRANSFER_RESULT_FORMATION$:\n[StagedFormation.GetFormationResultBreakdown]"
 TRANSFER_RESULT_FORMATION: "[SelectLocalization(StagedFormation.HasValidFormation, 'TRANSFER_RESULT_HAS_FORMATION', 'TRANSFER_RESULT_NO_FORMATION')#!]"
 TRANSFER_RESULT_HAS_FORMATION: "[StagedFormation.GetName]"
 TRANSFER_RESULT_NO_FORMATION:  "New [concept_military_formation]"

 TRANSFER_RESULT_NO_COMMANDERS: "@warning! No [Concept('concept_commander','$concept_commanders$')]"
 TRANSFER_RESULT_NO_UNITS: "@warning! No [Concept('concept_unit','$concept_units$')]"
 TRANSFER_RESULT_NOTHING: "This [concept_military_formation] will be #r disbanded#!"
 TRANSFER_RESULT_COMMANDER: "$CHARACTER_FULL_NAME$ will be transferred here"
 TRANSFER_RESULT_UNIT_TYPE: "$UNIT_ICON$ #v $RESULTING_UNIT_NUMBER$#! $UNIT_TYPE_NAME$"

 COMMANDER_TRANSFER_LIMIT_REACHED: "@red_cross! The other side has reached the max of [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [Concept('concept_commander','$concept_commanders$')]"
 MOVE_AT_LEAST_ONE_UNIT: "@simple_box! Move at least [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v 1#! [concept_unit] or a [concept_commander] to the other side"
 TRANSFER_FORMATION_CONFIRMATION_SOURCE_WILL_BE_GONE: "Are you sure you want to transfer the entirety of $SOURCE_NAME|v$ into $TARGET_NAME|v$?"
 SELECT_UNIT_TYPE_TO_TRANSFER: "Select this [concept_combat_unit_type] for transfer"
 SELECT_UNIT_TO_TRANSFER: "Select this [concept_unit] for transfer"
 NO_FORMATION_SELECTED: "No [concept_military_formation] selected"
 NO_FORMATION_COMMANDERS: "No [Concept('concept_commander','$concept_commanders$')] in this [concept_military_formation]"
 THIS_WILL_CREATE_A_NEW_MILITARY_FORMATION: "Moving [Concept('concept_unit','$concept_units$')] and [Concept('concept_commander', '$concept_commanders$')] here with no [concept_military_formation] selected would create a new $concept_military_formation$ if confirmed"
 TRANSFER_FORMATION_SELECT_UNITS_TO_TRANSFER: "Select $concept_units$ to Transfer"
 TRANSFER_FORMATION_SELECT_COMMANDERS_TO_TRANSFER: "Select $concept_commanders$ to Transfer"
 SELECT_COMMANDER_TO_TRANSFER: "Select this [concept_commander]"
 NO_COMMANDERS_IN_MILITARY_FORMATION: "No [Concept('concept_commander','$concept_commanders$')] in this [concept_military_formation]"
 NO_UNITS_IN_MILITARY_FORMATION: "No [Concept('concept_unit','$concept_units$')] in this [concept_military_formation]"
 NO_UNITS_IN_UNIT_GROUP: "No #b [CombatUnitGroup.GetName]#! [Concept('concept_unit','$concept_units$')]"
 TRANSFER_FORMATION_MOVE_UNITS_TOOLTIP: "#header Move [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v [StagedUnitsWithType.GetNumSelectedRegulars]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')] to the other [concept_military_formation]#![ConcatIfNeitherEmpty( '\n\n', StagedUnitsWithType.GetInvalidRegularTransferDesc )]"
 TRANSFER_FORMATION_NO_UNITS_SELECTED: "@simple_box! Select at least [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v 1#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALION', 'CONCEPT_FLOTILLA')] in this [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')] to be moved"
 CONCEPT_REGULAR_BATTALION: "Regular [concept_battalion]"
 CONCEPT_REGULAR_BATTALIONS: "Regular [Concept('concept_battalion','$concept_battalions$')]"
 CONCEPT_FLOTILLA: "[concept_flotilla]"
 CONCEPT_FLOTILLAS: "[Concept('concept_flotilla','$concept_flotillas$')]"
 REMOVE_SOURCE_FORMATION: "Deselect [TransferFormationPopup.GetLeftFormation.GetName]"
 REMOVE_TARGET_FORMATION: "Deselect [TransferFormationPopup.GetRightFormation.GetName]"
 TRANSFER_FORMATION_MOVE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header Move @conscripts! #v [StagedUnitsWithType.GetNumSelectedConscripts]#! to the other [concept_military_formation]#![ConcatIfNeitherEmpty( '\n\n', StagedUnitsWithType.GetInvalidConscriptTransferDesc )]"
 TRANSFER_FORMATION_NO_CONSCRIPTS_SELECTED: "@simple_box! Select at least @conscripts! #v 1#! [concept_conscript_battalion] in this [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')] to be moved"
 TRANSFER_FORMATION_MOVE_COMMANDER_TOOLTIP: "#header Move [StagedCommanderTransfer.GetCommander.GetFirstName] to the other [concept_military_formation]#![ConcatIfNeitherEmpty( '\n\n', TransferFormationPopup.GetInvalidCommanderTransferDesc(StagedCommanderTransfer.AccessSelf))]"
 MOVE: "Move"
 BY_NAME: "Name"
 BY_ALL_STATES: "All [Concept('concept_state','$concept_states$')]"
 BY_SPECIFIC_STATE: "By one [concept_state]"
 BY_SPECIFIC_STATE_SELECTED: "By [StagedUnitsWithType.GetStateFilter.GetName]"
 TRANSFER_UNIT_TYPE_NAME: "#tooltippable_name [CombatUnitType.GetNameNoFormatting]#![AddTextIf(StagedUnitsWithType.HasMoved, ' #i Moved#!')]"
 CREATE_NEW_ARMY: "New [concept_army]"
 CREATE_NEW_FLEET: "New [concept_fleet]"
 SELECT_NEW_FORMATION: "Create a new [concept_military_formation] to transfer to"
 SELECT_NEW_FORMATION_SELECTED: "Create a new [concept_military_formation] to transfer to\n#i Currently selected#!"
 SELECT_NEW_ARMY: "Create a new [concept_army] to transfer to"
 SELECT_NEW_ARMY_SELECTED: "Create a new [concept_army] to transfer to\n#i Currently selected#!"
 SELECT_NEW_FLEET: "Create a new [concept_fleet] to transfer to"
 SELECT_NEW_FLEET_SELECTED: "Create a new [concept_fleet] to transfer to\n#i Currently selected#!"
 CURRENTLY_SELECTED: "#i Currently Selected#!"
 UNIT_TYPE_UNITS_IN_STATE: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState( State.AccessSelf )]#![AddLocalizationIf(MilitaryFormation.IsArmy, 'UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE')]"
 UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE: " | @conscripts! #v [StagedUnitsWithType.GetNumConscriptsInState( State.AccessSelf )]#!"
 SELECT_STATE_TO_FILTER_ON: "Select [concept_state] to filter on"
 FILTER_UNITS_IN_STATE_TOOLTIP: "#header Show [StagedUnitsWithType.GetUnitType.GetName] [Concept('concept_unit','$concept_units$')] in [State.GetName]#!\n$FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN$"
 FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState( State.AccessSelf )]#! [SelectLocalization(MilitaryFormation.IsArmy, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')] [AddLocalizationIf(MilitaryFormation.IsArmy, 'FILTER_ARMY_UNITS_TOOLTIP')]"
 FILTER_ARMY_UNITS_TOOLTIP: "\n@conscripts! #v [StagedUnitsWithType.GetNumConscriptsInState( State.AccessSelf )]#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 TRANSFER_RESET_BUTTON_TOOLTIP: "Reset all changes made"
 TRANSFER_CANNOT_RESET_BUTTON_TOOLTIP: "No changes made"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS: "#v [StagedFormation.GetNumCombatUnitsIfTransferred]#!/[SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')]"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "This [SelectLocalization(TransferFormationPopup.HasArmyContext, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')] will end up with:\n[SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v [StagedFormation.GetNumCombatUnitsIfTransferred]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'BATTALIONS_CONCEPT', 'FLOTILLAS_CONCEPT')]\n[AddLocalizationIf(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), '@warning!')]@organization! [SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')] [concept_command_limit]"
 TRANSFER_FORMATION_NO_UNITS_AVAILABLE: "No [CombatUnitType.GetName] from [StagedUnitsWithType.GetStateFilter.GetName]"
 BATTALIONS_CONCEPT: "[Concept('concept_battalion','$concept_battalions$')]"
 FLOTILLAS_CONCEPT: "[Concept('concept_flotilla','$concept_flotillas$')]"
 TRANSFER_FORMATION_WILL_DISBAND: "Will disband!"

 LEFT_SIDE_MOVE_ALL: "All @transfer_all_right!"
 LEFT_SIDE_MOVE_HALF: "Half @transfer_half_right!"
 RIGHT_SIDE_MOVE_ALL: "@transfer_all_left! All"
 RIGHT_SIDE_MOVE_HALF: "@transfer_half_left! Half"
 LEFT_SIDE_MOVE_ALL_TOOLTIP: "Move all [Concept('concept_unit','$concept_units_short$')] and [Concept('concept_commander','$concept_commanders$')] to the right side"
 LEFT_SIDE_MOVE_HALF_TOOLTIP: "Move half of the [Concept('concept_unit','$concept_units_short$')] and [Concept('concept_commander','$concept_commanders$')] to the right side, rounded down"
 RIGHT_SIDE_MOVE_ALL_TOOLTIP: "Move all [Concept('concept_unit','$concept_units_short$')] and [Concept('concept_commander','$concept_commanders$')] to the left side"
 RIGHT_SIDE_MOVE_HALF_TOOLTIP: "Move half of the [Concept('concept_unit','$concept_units_short$')] and [Concept('concept_commander','$concept_commanders$')] to the left side, rounded down"

 TRANSFER_INSUFFICIENT_COMMAND_LIMIT: "#r [StagedFormation.GetCommandLimitRawIfTransferred]#!"
 TRANSFER_SUFFICIENT_COMMAND_LIMIT: "#g [StagedFormation.GetCommandLimitRawIfTransferred]#!"

 DEFAULT_UNIT_TYPE_BUTTON_LABEL: "[SelectLocalization(MilitaryFormation.HasSelectedUnitTypeForGroup( CombatUnitGroup.Self ), 'COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME', 'NO_DEFAULT_UNIT_TYPE_AVAILABLE')]"
 COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME: "Default: [CombatUnitGroup.GetDefaultUnitType.GetName]"
 NO_DEFAULT_UNIT_TYPE_AVAILABLE: "No Default Unit Type"
 MILITARY_FORMATION_UNIT_GROUP_DEFAULT_UNIT_TOOLTIP: "#header Default [concept_combat_unit_type]#!\nCurrent: #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n$TOOLTIP_DELIMITER$\nThis is the #b Default#! $concept_combat_unit_type$ for [CombatUnitGroup.GetName] that will be built if more units are added to this [concept_combat_unit_group]."

 MILITARY_FORMATION_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]#!#!"
 MILITARY_FORMATION_SUPPLY_TOOLTIP: "#header [concept_supply]#!\nCurrent $concept_supply$ of [MilitaryFormation.GetName] is [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty('$BREAKDOWN$','\n\n')][concept_supply_desc]"
 MILITARY_FORMATION_SUPPLY_FROM_SHIPPING_LANE: "[concept_shipping_lane]"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGES: "[Concept('concept_shortage','$concept_input_goods_shortages$')]"
 MILITARY_FORMATION_SUPPLY_FROM_FLEET_SUPPORT: "$concept_fleet_support$"

 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE: "#header Set the Default Military Unit Type to [CombatUnitType.GetName]#!\n[MilitaryFormation.GetEffectOfDefaultUnitTypeChange(CombatUnitType.Self)]$TOOLTIP_DELIMITER$\n[CombatUnitType.GetDesc]"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL: "@warning! Changing the Default Unit Type to [CombatUnitType.GetName] will force the following unit types to stop upgrading:\n"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL_ENTRY: "[CombatUnitType.GetName]\n"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGE_ENTRY: "#indent_newline:3 [BUILDING.GetName] in [BUILDING.GetState.GetName] suffers a $SHORTAGE|-%0$ [Concept('concept_shortage','$concept_input_goods_shortage$')]\nPrimary cause: [GOODS.GetTextIcon][Nbsp][GOODS.GetName]\nAffecting $RATIO|v%0$ of the [Concept('concept_army','$concept_army_possessive$')] [Concept('concept_unit','$concept_units$')]#!"
 MILITARY_FORMATION_SUPPLY_FROM_RECOVERING_SHORTAGE_ENTRY: "#indent_newline:3 [BUILDING.GetName] in [BUILDING.GetState.GetName] is recovering from a $SHORTAGE|-%0$ [Concept('concept_shortage','$concept_input_goods_shortage$')]\nAffecting $RATIO|v%0$ of the [Concept('concept_army','$concept_army_possessive$')] [Concept('concept_unit','$concept_units$')]#!"

 FRONT_MORALE_TOOLTIP: "$COUNTRY_NAME|v$ morale is #BOLD #$MORALE_COLOR$ $VAL|0%$#!#! in $FRONT_NAME$"
 MILITARY_FORMATION_MORALE: "@morale! #[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_NO_ICON: "#[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nAverage $concept_morale$ of [Concept('concept_unit','$concept_units$')] in [MilitaryFormation.GetName] is #BOLD #[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!#!\nCurrent [concept_supply] of [MilitaryFormation.GetName] is [MilitaryFormation.GetSupply]"
 MORALE_TOOLTIP: "[Country.GetAdjectiveNoFormatting|v] morale is #BOLD #[GetMoraleColorString( FrontMarker.GetFront.GetMorale( Country.Self ) )] [FrontMarker.GetFront.GetMorale( Country.Self )|0%]#!#! in [FrontMarker.GetFront.GetName]"

 COMBAT_UNIT_MORALE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #[GetMoraleColorString('(CFixedPoint)$VALUE$')] #variable $VALUE|0%$#!#!#!#!"
 COMBAT_UNIT_MORALE_RECOVERY_PER_DAY: "[CombatUnit.GetName] recovers #v $VALUE|+1%$#! [concept_morale] each day.[AddTextIf(GreaterThan_CFixedPoint('(CFixedPoint)$SLOW_RECOVERY$','(CFixedPoint)0'),'$SLOW_RECOVERY|-1%$ is due to exceeding the $concept_supply$ of their $concept_military_formation$.')]"
 COMBAT_UNIT_MORALE_RECOVERY_IN_BATTLE: "[CombatUnit.GetName] is currently in [concept_battle] and will not recover [concept_morale]."
 COMBAT_UNIT_MORALE_RECOVERY_MAX_MORALE: "[CombatUnit.GetName] is at max [concept_morale] and cannot gain more."
 COMBAT_UNIT_MORALE_TOOLTIP: "#header Current [concept_morale]: #tooltippable #tooltip:$MORALE_GAIN$ #$COLOR_STR$ #variable $MORALE|0%$#!#!#!#!#!\n\n[CombatUnit.GetMoraleModifierBreakdown]$TOOLTIP_DELIMITER$\nTotal manpower: $MANPOWER$\nDemoralized: $DEMORALIZED|v$"
 COMBAT_UNIT_MORALE_GAIN_TOOLTIP: "#header [concept_morale] Gain#!\nTomorrow [CombatUnit.GetName] will gain $VALUE|+=^%$ $concept_morale$ and reach $TOTAL|v^%$[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n','$BREAKDOWN$')]"
 COMBAT_UNIT_ENEMY_MORALE_DAMAGE_DESC: "$VALUE|=-0%$ from enemy side $unit_morale_damage_mult$"
 MORALE_LOSS_HEADER: "#title $NAME$ when in [concept_battle]#!"
 MORALE_RECOVERY_HEADER: "#title $NAME$ when not in [concept_battle]#!"

 MILITARY_FORMATION_COMMAND_LIMIT_DESC: "[MilitaryFormation.GetCommandLimitDesc]"
 MILITARY_FORMATION_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(EqualTo_int32('(int32)$INSUFFICIENT_COMMAND_LIMIT$', '(int32)1'),'#negative_value $VALUE$#!','#variable $VALUE$#!')]#!#!"
 MILITARY_FORMATION_COMMAND_LIMIT_TOOLTIP_COMMANDERS: "#title [concept_command_limit]\nValue: $VALUE|v$\n$TOOLTIP_DELIMITER$\n$DESC$ [ConcatIfNeitherEmpty('\n\n','$ORGANIZATION_MAX$')]"
 MILITARY_FORMATION_COMMAND_LIMIT_TOOLTIP_NO_COMMANDERS: "#title [concept_command_limit]\nValue: $VALUE|v$ [ConcatIfNeitherEmpty('\n\n','$ORGANIZATION_MAX$')]"
 MILITARY_FORMATION_COMMAND_LIMIT_TOOLTIP_ORGANIZATION_MAX: "#indent_newline:3 @warning! Due to insufficient [concept_command_limit] the following applies to the [concept_military_formation]:\n[GetStaticModifier('low_command_limit').GetDesc]#!\n\n$BREAKDOWN$#!"
 MILITARY_FORMATION_COMMANDER_COMMAND_LIMIT_ENTRY: "[Character.GetFullName]: [SelectLocalization(Character.IsGeneral, '@battalions!', '@flotillas!')] [Character.GetCommandLimit]"

 MILITARY_FORMATION_ORGANIZATION: "[MilitaryFormation.GetOrganization][AddLocalizationIf(LessThan_CFixedPoint(MilitaryFormation.GetOrganizationRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX')]"
 MILITARY_FORMATION_ORGANIZATION_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v^2$#!#!"
 MILITARY_FORMATION_MAX_ORGANIZATION_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(EqualTo_int32('(int32)$LOW_MAX_ORGANIZATION$', '(int32)1'),'#negative_value $VALUE|1$#!','#variable $VALUE|1$#!')]#!#!"
 MILITARY_ORGANIZATION_SLASH_MAX: "#maximum /[GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')|0]#!"
 MILITARY_FORMATION_ORGANIZATION_TOOLTIP: "#header [concept_organization]#!\nCurrent: @organization! [MilitaryFormation.GetOrganizationRaw|1v]\nMaximum: @organization! [MilitaryFormation.GetMaxOrganization][AddLocalizationIf(LessThan_CFixedPoint(MilitaryFormation.GetMaxOrganizationRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX')][AddLocalizationIf(GreaterThan_CFixedPoint(MilitaryFormation.GetDailyOrganizationGain,'(CFixedPoint)0'),'MILITARY_FORMATION_DAILY_ORGANIZATION_GAIN')]\n$TOOLTIP_DELIMITER$\n[MilitaryFormation.GetDailyOrganizationGainDesc][ConcatIfNeitherEmpty('\n\n',MilitaryFormation.GetLowOrganizationDesc)]"
 MILITARY_FORMATION_DAILY_ORGANIZATION_GAIN: "\nDaily [concept_organization] Gain: #v [MilitaryFormation.GetDailyOrganizationGain|2=+]#!"
 MILITARY_FORMATION_ORGANIZATION_GAIN_ALREADY_AT_MAX: "[MilitaryFormation.GetName] has reached max [concept_organization] of #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v^2$#!#![AddLocalizationIf(LessThan_CFixedPoint('(CFixedPoint)$VALUE$',GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX']"
 MILITARY_FORMATION_ORGANIZATION_GAIN_NOT_WHILE_TRAVELING: "[MilitaryFormation.GetName] will not regain [concept_organization] while traveling."
 MILITARY_FORMATION_ORGANIZATION_GAIN_NO_UNITS: "[MilitaryFormation.GetName] will not gain [concept_organization] for as long as it has no [Concept('concept_unit','$concept_units$')]."
 MILITARY_FORMATION_ORGANIZATION_GAIN_UNITS_IN_BATTLE: "$PERCENT_UNITS_IN_BATTLE|v%1$ of the [Concept('concept_unit','$concept_units$')] in [MilitaryFormation.GetName] is currently in [concept_battle]."
 MILITARY_FORMATION_ORGANIZATION_GAIN_ALREADY_AT_EFFECTIVE_MAX: "[concept_organization] of [MilitaryFormation.GetName] is currently limited to #tooltippable #tooltip:$BREAKDOWN_TAG$ $EFFECTIVE_MAX|v^2$#!#!"
 MILITARY_FORMATION_ORGANIZATION_LIMIT_AT_MAX: "[MilitaryFormation.GetName] has adequate [concept_command_limit] to retain a maximum [concept_organization] of [GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')|v^2]."
 MILITARY_FORMATION_ORGANIZATION_LIMIT_AT_MIN: "Minimum [concept_organization]: [GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MIN')|v^2]"

 TOO_MANY: "#r Too many#!"
 ARMY_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! The [concept_organization] limit for [MilitaryFormation.GetName] is impacted due to having more #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#! and #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#! combined than it has #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n\n#title Total numbers of [Concept('concept_unit','$concept_units$')] in each [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Current + [Concept('concept_incoming_units', '$concept_incoming_units_short$')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#!\n\n$MAXIMUM_ORGANIZATION$"
 ARMY_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Once the number of [Concept('concept_special_unit','$concept_special_units$')] currently [Concept('concept_incoming_units', '$concept_incoming_units_short$')] have joined, the [concept_organization] limit for [MilitaryFormation.GetName] will be impacted due to having more #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#! and #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#! combined than it has #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n\n#title Total numbers of [Concept('concept_unit','$concept_units$')] in each [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Current + [Concept('concept_incoming_units', '$concept_incoming_units_short$')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#!\n\n$MAXIMUM_ORGANIZATION$"
 FLEET_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! The [concept_organization] limit for [MilitaryFormation.GetName] is impacted due to having more #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#! and #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#! combined than it has #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n\n#title Total numbers of [Concept('concept_unit','$concept_units$')] in each [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Current + [Concept('concept_incoming_units', '$concept_incoming_units_short$')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#!\n\n$MAXIMUM_ORGANIZATION$"
 FLEET_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Once the number of [Concept('concept_special_unit','$concept_special_units$')] currently [Concept('concept_incoming_units', '$concept_incoming_units_short$')] have joined, the [concept_organization] limit for [MilitaryFormation.GetName] will be impacted due to having more #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#! and #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#! combined than it has #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n\n#title Total numbers of [Concept('concept_unit','$concept_units$')] in each [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Current + [Concept('concept_incoming_units', '$concept_incoming_units_short$')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#!\n\n$MAXIMUM_ORGANIZATION$"
 MAXIMUM_ORGANIZATION: "Maximum: @organization! [MilitaryFormation.GetMaxOrganization][AddLocalizationIf(LessThan_CFixedPoint(MilitaryFormation.GetMaxOrganizationRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX')][AddLocalizationIf(GreaterThan_CFixedPoint(MilitaryFormation.GetDailyOrganizationGain,'(CFixedPoint)0'),'MILITARY_FORMATION_DAILY_ORGANIZATION_GAIN')]"

 MILITARY_FORMATION_ORGANIZATION_LIMIT: "#indent_newline:3 @warning! [concept_organization] maximum is limited to #v $VALUE|-^2$#! due to:\n$BREAKDOWN$"
 MILITARY_FORMATION_ORGANIZATION_LIMIT_COMMAND_LIMIT_TITLE: "insufficient [concept_command_limit]"
 MILITARY_FORMATION_ORGANIZATION_LIMIT_COMMAND_LIMIT: "#header Insufficient [concept_command_limit]#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Penalty to max [concept_organization]#! from:\nCurrent number of [Concept('concept_unit','$concept_units$')]: $NUM_UNITS|v$\nCurrent [concept_command_limit]: $COMMAND_LIMIT|v$#!#!"
 MILITARY_FORMATION_ORGANIZATION_LIMIT_SPECIAL_UNITS_TITLE: "too many [Concept('concept_special_unit','$concept_special_units$')]"
 MILITARY_FORMATION_ORGANIZATION_LIMIT_SPECIAL_UNITS: "#header Too many [Concept('concept_special_unit','$concept_special_units$')]#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Penalty to max [concept_organization]#! from:\nCurrent number of [Concept('concept_special_unit','$concept_special_units$')]: $NUM_SPECIAL_UNITS|v$\nCurrent number of [Concept('concept_default_unit','$concept_default_units$')]: $NUM_DEFAULT_UNITS|v$#!#!"
 MILITARY_FORMATION_LOW_ORGANIZATION_IMPACT: "#indent_newline:3 Due to low [concept_organization], [MilitaryFormation.GetName] suffers the following effects:\n$DESC$#!"

 MILITARY_FORMATION_NEW_ORGANIZATION_AFTER_MERGE: "#indent_newline:3 After the merge, [MilitaryFormation.GetName] will have $VALUE|v^2$ [concept_organization] due to:\n$TARGET_NUM_UNITS|v0$ initial number of [Concept('concept_unit','$concept_units$')] with $TARGET_ORGANIZATION|v^2$ [concept_organization]\n$SOURCE_NUM_UNITS|v0$ transfering number of [Concept('concept_unit','$concept_units$')] with $SOURCE_ORGANIZATION|v^2$ [concept_organization][AddTextIf(GreaterThan_int32('(int32)$MOBILIZATION_OPTION_DIFFERENCES$','(int32)0'),'\n#tooltippable #tooltip:$MOBILIZATION_OPTION_DIFFERENCES_BREAKDOWN$ $MOBILIZATION_OPTION_DIFFERENCES|0v$#!#! differences in $concept_mobilization_options$')]#!"
 MERGE_FORMATIONS_NEW_ORGANIZATION_INFO: "After the merge, [MilitaryFormation.GetName] will have #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v^2$#!#! [concept_organization]."

 MOBILIZATION_OPTION_DIFFERENCES: "#header [concept_organization] penalty from different [Concept('concept_mobilization_option','$concept_mobilization_options$')]#!\nNumber of differences: #negative_value $NUM_DIFFERENCES|0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 MOBILIZATION_OPTION_DIFFERENCE_ENTRY: "#negative_value -[GetDefine('NMilitary','MOBILIZATION_OPTION_DIFFERENCE_ORGANIZATION_IMPACT')]#!: [MilitaryFormation.GetName] has [MobilizationOption.GetName]"

 MILITARY_FORMATION_COMMANDERS: "Commanders"
 MILITARY_FORMATION_COMMANDERS_CONCEPT: "[Concept('concept_commander', '$concept_commanders$')]"
 MILITARY_FORMATION_COMMANDERS_TOOLTIP_TITLE: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_GENERALS_CONCEPT', 'MILITARY_FORMATION_ADMIRALS_CONCEPT')]"
 MILITARY_FORMATION_GENERALS_CONCEPT: "[Concept('concept_general','$concept_generals$')]"
 MILITARY_FORMATION_ADMIRALS_CONCEPT: "[Concept('concept_admiral','$concept_admirals$')]"
 MILITARY_FORMATION_NO_GENERALS: "This [concept_army] has no [Concept('concept_general','$concept_generals$')], consider recruiting one"
 MILITARY_FORMATION_RECRUIT_GENERAL: "Recruit a [concept_general]"
 MILITARY_FORMATION_NO_ADMIRALS: "This [concept_fleet] has no [Concept('concept_admiral','$concept_admirals$')], consider recruiting one"
 MILITARY_FORMATION_RECRUIT_ADMIRAL: "Recruit an [concept_admiral]"

 MILITARY_FORMATION_IS_FULLY_MOBILIZED: "Fully Mobilized"
 MILITARY_FORMATION_IS_MOBILIZING: "Mobilizing: #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_IS_MOBILIZING_TOOLTIP: "[MilitaryFormation.GetName] is [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilizing$')]: #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_MOBILIZED_TOOLTIP: "#header This [concept_army] is [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]#!\n\nCost / Week:\n[MilitaryFormation.GetEstimatedMobilizationCostDesc]"
 MILITARY_FORMATION_ARMY_CONCEPT: "[concept_army]"
 MILITARY_FORMATION_FLEET_CONCEPT: "[concept_fleet]"
 MILITARY_FORMATION_NO_UNITS: "[MILITARY_FORMATION.GetName] has no [Concept('concept_unit','$concept_units_short$')]"
 MILITARY_FORMATION_NO_COMMANDER: "[MILITARY_FORMATION.GetName] has no [Concept('concept_commander', '$concept_commanders$')]"
 NO_COMMANDER: "No [concept_commander]"
 MOBILIZE_ALL_MILITARY_FORMATIONS: "Mobilize all $concept_armies$"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS: "Demobilize all $concept_armies$"

 MOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 MOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$' )] all [Concept( 'concept_army', '$concept_armies$' )]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc( Country.MobilizeAllArmies ))]"

 DEMOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$' )] all [Concept( 'concept_army', '$concept_armies$' )]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc( Country.DemobilizeAllArmies ))]"

 MILITARY_FORMATION_PANEL_TITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS', 'MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION')]"
 MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION: "[FormationPanel.GetFormation.GetName]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES', 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS')]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept( 'concept_army', '$concept_armies$' )]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept( 'concept_fleet', '$concept_fleets$' )]"
 MILITARY_FORMATION_SUBTITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY', 'MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY')]"
 MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')] from [FormationPanel.GetFormation.GetCountry.GetName]"
 MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'concept_armies', 'concept_fleets')] from [FormationPanel.GetFormation.GetCountry.GetName]"

 MILITARY_FORMATION_NUMBER_OF_FLEET_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_MOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_IS_MOBILIZING_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')] $concept_mobilize_army_mobilizing$"
 MILITARY_FORMATION_DEMOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"

 COMBAT_UNIT_GROUP_CONCEPT: "[concept_combat_unit_group]"
 COMBAT_UNIT_GROUPS_CONCEPT: "[Concept('concept_combat_unit_group','$concept_combat_unit_groups$')]"

 MILITARY_FORMATION_MOBILIZATION_MODIFIER_NAME: "$FORMATION_NAME$ - [Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')]"

 MILITARY_FORMATION_ATTRITION_FORMAT: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ [MilitaryFormation.GetAttritionFormatted]"
 MILITARY_FORMATION_ATTRITION_VALUE_TOOLTIPPABLE: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ #v #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ATTRITION_TOOLTIP [MilitaryFormation.GetAverageAttritionPerWeek|%1^-]#!#!#!"
 MILITARY_FORMATION_ATTRITION_TOOLTIP: "[MilitaryFormation.GetAttritionRiskDesc]"
 MILITARY_FORMATION_MORALE_VALUE_TOOLTIPPABLE: "#[GetMoraleColorString( MilitaryFormation.GetMorale )] #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_MORALE_TOOLTIP [MilitaryFormation.GetMorale|0%]#!#!#!"
 MILITARY_FORMATION_ORGANIZATION_VALUE_TOOLTIPPABLE: "#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ORGANIZATION_TOOLTIP, [MilitaryFormation.GetOrganizationPercentage|%v0]#!#!"
 MILITARY_FORMATION_TROOP_ATTRITION_LEVEL: "$MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL$"

 PIN_MILITARY_FORMATION: "Pin [MilitaryFormation.GetName] to outliner"
 UNPIN_MILITARY_FORMATION: "Unpin [MilitaryFormation.GetName] from outliner"
 ZOOM_TO_MILITARY_FORMATION: "Zoom to current location[AddLocalizationIf( MilitaryFormation.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED' )]"

 MILITARY_FORMATION_IN_LOCATION_SUBTITLE: "[SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY','MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET')] in [MilitaryFormation.GetCurrentHQ.GetNameNoFlag]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY: "[concept_army]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET: "[concept_fleet]"

 MILITARY_FORMATION_PANEL_INFORMATION_TAB: "Information"
 MILITARY_FORMATION_PANEL_INFORMATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_INFORMATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB: "Mobilization"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MOBILIZATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB: "Modifiers"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MODIFIERS_TAB$#!"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB: "Buildings"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_BUILDINGS_TAB$#!"

 MILITARY_FORMATION_EXPENSE: "#v [GetPlayer.GetCustom('currency_symbol')][MilitaryFormation.GetGoodsConsumptionCostRaw|0-K]#!"
 MILITARY_FORMATION_EXPENSE_TOOLTIP_TAG: "[MilitaryFormation.GetGoodsConsumptionDesc]"
 MILITARY_FORMATION_EXPENSE_TOOLTIP: "#header [MilitaryFormation.GetName] Upkeep#!\nWeekly cost: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|0-K$#!\n$TOOLTIP_DELIMITER$\nExpenses by [Concept('concept_good','$concept_goods$')]:\n$BREAKDOWN_BY_GOODS$\n\nExpenses by [Concept('concept_building','$concept_buildings$')]:\n$BREAKDOWN_BY_BUILDING$"
 MILITARY_FORMATION_EXPENSE_BY_GOODS: "#v [GetPlayer.GetCustom('currency_symbol')]$VAL|0-K$#! for [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 MILITARY_FORMATION_EXPENSE_BY_BUILDING: "#v [GetPlayer.GetCustom('currency_symbol')]$VAL|0-K$#! from [Building.GetName] in [Building.GetState.GetName]"
 MILITARY_FORMATION_BUILDABLE_UNITS: "Buildable Units"
 MILITARY_FORMATION_UNITS_RECRUITMENT: "Unit Default Types & Recruitment"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL: "Upgrade All Units"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY', 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY')]"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY: "This will upgrade all units that can into:\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).Self)] for Infantry\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).Self)] for Artillery\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).Self)] for Cavalry"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY: "This will upgrade all units that can into:\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).Self)] for Light Ships\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).Self)] for Capital Ships"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_ALL: "Upgrade All units in all military formations that are able to do so"
 MILITARY_FORMATION_UNITS: "Unit Details"
 MILITARY_FORMATION_CURRENT_UNITS: "Current Units"
 CHANGE_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName( 'gerund' )]#!\nCurrent [concept_order] of [Character.GetFullName] is #b [Character.GetOrderType.GetName]#!\n#i Click to change $concept_order$#!"
 CHANGE_NEXT_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (currently [Character.GetOrderType.GetAltName( 'gerund' )])#!\n[Character.GetFirstNamePossessive] next [concept_order] will be to #b [Character.GetNextOrderType.GetName]#!\nThe current [concept_battle] in [Character.GetBattle.GetLocationName] must conclude first\n#i Click to change $concept_order$#!"
 COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName( 'gerund' )]#!\n[Character.GetFirstName] current [concept_order] is to #b [Character.GetOrderType.GetName]#!"
 COMMANDER_NEXT_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (currently [Character.GetOrderType.GetAltName( 'gerund' )])#!\n[Character.GetFirstNamePossessive] next [concept_order] will be to #b [Character.GetNextOrderType.GetName]#!\nThe current [concept_battle] in [Character.GetBattle.GetLocationName] must conclude first"
 MILITARY_FORMATION_ARMY_BUILDING: "Barrack"
 MILITARY_FORMATION_ARMY_BUILDINGS: "Barracks"
 MILITARY_FORMATION_NAVAL_BUILDING: "Naval Base"
 MILITARY_FORMATION_NAVAL_BUILDINGS: "Naval Bases"
 MILITARY_FORMATION_REMOVE_UNIT_TOOLTIP: "#header Disband #b [CombatUnitType.GetName]#!#!\n[ConcatIfNeitherEmpty(GetDesc( MilitaryFormation.GetDisbandUnitTypeRegularCommand( CombatUnitType.Self ) ),'\n')]$TOOLTIP_DELIMITER$\nThis will disband the least experienced [CombatUnitType.GetName] [Concept('concept_unit','$concept_unit_short$')] in [MilitaryFormation.GetName] from which ever [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDING', 'MILITARY_FORMATION_NAVAL_BUILDING')] it was created from. [AddLocalizationIf(MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).IsValid, 'MILITARY_FORMATION_REMOVE_UNIT_DESC' )]\n\n@information! Disbanding more than [CombatUnitType.GetIconString] #v 1#! $concept_unit_short$ may disband $concept_units_short$ from other [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDINGS', 'MILITARY_FORMATION_NAVAL_BUILDINGS')].\n\n#instruction Click to disband 1 $concept_unit_short$\n#instruction $SHORTCUT_KEY_MOD_shift$Click to disband 5 $concept_units_short$\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to disband 10 $concept_units_short$#!"
 MILITARY_FORMATION_REMOVE_UNIT_DESC: "The currently least experienced [CombatUnitType.GetName] comes from the [MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).GetBuilding.GetName] in [MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).GetBuilding.GetState.GetName]."
 MILITARY_FORMATION_RECRUIT_UNIT_TOOLTIP: "Recruit #b [CombatUnitType.GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForType(CombatUnitType.Self).Self)]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip( CombatUnitType.Self ) ) ]"
 UPGRADING_UNIT_TYPE: "Upgrading  #b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! to #b [MilitaryFormation.GetSelectedUnitTypeForGroup( MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self ).GetName] #!"
 UPGRADE_UNIT_TYPE: "Upgrade #b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! to #b [MilitaryFormation.GetSelectedUnitTypeForGroup( MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self ).GetName]#!\n\nThis will [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the units while upgrading them."
 MILITARY_FORMATION_UPGRADE_UNIT_TOOLTIP: "[SelectLocalization( MilitaryFormation.IsRegularUnitTypeUpgrading( MilitaryFormationUnitEntry.GetUnitType.Self ), 'UPGRADING_UNIT_TYPE', 'UPGRADE_UNIT_TYPE' )] [ConcatIfNeitherEmpty('\n\n', GetDesc( MilitaryFormation.GetUpgradeRegularUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType.Self ) ))]"
 CANNOT_UPGRADE_UNIT_TO_TYPE: "[COMBAT_UNIT_TYPE.GetName] cannot be upgraded to [TARGET_COMBAT_UNIT_TYPE.GetName] as the unit types are too different."

 MILITARY_FORMATION_UPGRADE_GROUP_TOOLTIP: "[SelectLocalization(MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).IsValid, 'UPGRADE_GROUP_VALID_HEADER','UPGRADE_GROUP_INVALID_HEADER')][ConcatIfNeitherEmpty( '\n', AddLocalizationIf( Not( IsValid( MilitaryFormation.GetUpgradeUnitGroupCommand( CombatUnitGroup.Self ) ) ), GetDesc(  MilitaryFormation.GetUpgradeUnitGroupCommand( CombatUnitGroup.Self )     ) ) )]"
 UPGRADE_GROUP_VALID_HEADER: "#header Upgrade all [CombatUnitGroup.GetName] [Concept('concept_unit', '$concept_units_short$')] to [MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n\nThis will also [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the $concept_units_short$."
 UPGRADE_GROUP_INVALID_HEADER: "#header Upgrade all [CombatUnitGroup.GetName] [Concept('concept_unit', '$concept_units_short$')]#!"

 UPGRADE_UNIT_GROUP: "Upgrade all #b [CombatUnitGroup.GetName]#! units to #b [MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n\nThis will [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] the units while upgrading them."
 CANNOT_UPGRADE_UNITS_IN_GROUP: "There are no #b [COMBAT_UNIT_GROUP.GetName]#! units that can be upgraded to [TARGET_COMBAT_UNIT_TYPE.GetName]."
 CANNOT_UPGRADE_UNITS_IN_GROUP_ALL_UPGRADING: "All possible #b [COMBAT_UNIT_GROUP.GetName]#! units are already being upgraded."
 UPGRADE_ALL_UNIT_GROUP: "Upgrade all [CombatUnitGroup.GetName]"

 MILITARY_FORMATION_REMOVE_CONSCRIPT_UNIT_TOOLTIP: "#header Disband one #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [CombatUnitType.GetName]#!#!\n[ConcatIfNeitherEmpty(GetDesc( MilitaryFormation.GetDisbandUnitTypeConscriptCommand( CombatUnitType.Self ) ),'\n')]$TOOLTIP_DELIMITER$\n#instruction Click to disband 1 [Concept('concept_unit','$concept_unit_short$')]\n#instruction $SHORTCUT_KEY_MOD_shift$Click to disband 5 $concept_units_short$\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to disband 10 $concept_units_short$#!"
 MILITARY_FORMATION_RECRUIT_CONSCRIPT_UNIT_TOOLTIP: "Recruit #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [CombatUnitType.GetName]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip( CombatUnitType.Self ) ) ]"
 MILITARY_FORMATION_UPGRADE_CONSCRIPT_UNIT_TOOLTIP: "Upgrade #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [CombatUnitType.GetName]#!"

 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_TOOLTIP: "Recruit #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ) ) ]"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_TOOLTIP: "Disband #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!"
 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "Recruit #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ) ) ]"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "Disband #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName]#!"
 MILITARY_FORMATION_NO_DEFAULT_UNIT_TYPE_TO_RECRUIT: "@red_cross! No #b default#! [concept_combat_unit_type] selected for this [CombatUnitGroup.GetName]"
 MILITARY_FORMATION_NUMBER_OF_UNITS: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_NUMBER_OF_BATTALIONS', 'MILITARY_FORMATION_NUMBER_OF_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_BATTALIONS: "@battalions!#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS: "@conscripts!#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')]"
 CONSCRIPTS_CONCEPT: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"
 RAISE_ALL_CONSCRIPTS: "Raise @conscripts![MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"
 RAISE_ALL_CONSCRIPTS_TOOLTIP: "Raise a total of @conscripts! [MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')]. Conscripts will remain active until army is [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')].[ConcatIfNeitherEmpty('\n\n', GetDesc( MilitaryFormation.RaiseConscripts ) )]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits)]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]"
 MILITARY_FORMATION_NUMBER_OF_UNITS_IN_DEFAULT_TYPE: "[MilitaryFormation.GetCombatUnitsTypeIcon] #v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_RAISED: "@conscripts! #v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_NOT_RAISED: "@conscripts! #v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE: " + [Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ))]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_NOT_RAISED: "@conscripts! #v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS: " + [Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ))]"
 MILITARY_FORMATION_NUMBER_OF_FLOTILLAS: "@flotillas! #v [MilitaryFormationUnitEntry.GetCurrentNumTotalUnits]#! [AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS: "+ [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_EXPECTED_BATTALIONS: "+ [Subtract_int32(CombatUnitGroup.GetExpectedNumUnits, CombatUnitGroup.GetCurrentNumUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_FLOTILLAS: "@flotillas! #v [CombatUnitGroup.GetCurrentNumUnits]#! [CombatUnitGroup.GetExpectedNumUnits]"

 MILITARY_FORMATION_DISBAND_TOOLTIP: "#r Disband#! [MilitaryFormation.GetName][ConcatIfNeitherEmpty('\n\n',GetDesc( MilitaryFormation.Disband ))]"
 MILITARY_FORMATION_DISBAND: "Disband"
 MILITARY_FORMATION_TRANSFER_UNIT_TOOLTIP: "Transfer [Concept('concept_unit', '$concept_units$')] to another [SelectLocalization( MilitaryFormation.IsArmy, 'MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP', 'MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP')]"
 MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP: "[concept_army]"
 MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP: "[concept_fleet]"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION_SHORT: "Preparing [concept_naval_invasion], traveling to [NAVAL_INVASION.GetSeaNodeName] ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION: "Preparing the [NAVAL_INVASION.GetName], traveling to [NAVAL_INVASION.GetSeaNodeName] ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT: "Trying to intercept and [concept_battle] the enemy [Concept('concept_fleet', '$concept_fleets$')] in the Baltic for the [NAVAL_INVASION.GetName]. All enemy [Concept('concept_fleet', '$concept_fleets$')] must be [concept_admiral_defeated]"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT_SHORT: "Trying to intercept and [concept_battle] the enemy [Concept('concept_fleet', '$concept_fleets$')] in [NAVAL_INVASION.GetSeaNodeName]"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT: "@warning! At [MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName], the [NAVAL_INVASION.GetName] might not proceed unless one [concept_admiral] has an [concept_order] with #tooltippable_name #tooltip:character_interception_add_desc $character_interception_add$#!#!. All enemy [Concept('concept_fleet', '$concept_fleets$')] must be [concept_admiral_defeated]"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT_SHORT: "@warning! [concept_naval_invasion] might not proceed unless one [concept_admiral] has an [concept_order] with #tooltippable_name #tooltip:character_interception_add_desc $character_interception_add$#!#!"
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS_SHORT: "Ready for [concept_naval_invasion], waiting for enemy [Concept('concept_fleet', '$concept_fleets$')] to be [concept_admiral_defeated]"
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS: "Ready for [NAVAL_INVASION.GetName], waiting for enemy [Concept('concept_fleet', '$concept_fleets$')] to be [concept_admiral_defeated] and [NAVAL_INVASION.GetSeaNodeName] to be controlled by [MilitaryFormation.GetCountry.GetName]"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE: " Trying to control [NAVAL_INVASION.GetSeaNodeName] for [NAVAL_INVASION.GetName]. All enemy [Concept('concept_fleet', '$concept_fleets$')] must be [concept_admiral_defeated]"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE_SHORT: "Trying to control [NAVAL_INVASION.GetSeaNodeName] [concept_naval_invasion]"
 FORMATION_STATUS_CONTROLLING_SEA_NODE: "Has control of [NAVAL_INVASION.GetSeaNodeName] for the [NAVAL_INVASION.GetName]"
 FORMATION_STATUS_CONTROLLING_SEA_NODE_SHORT: "Has control of [NAVAL_INVASION.GetSeaNodeName] for the [concept_naval_invasion]"
 FORMATION_STATUS_DEFENDING_INVASION: "At $LOCATION_NAME$ currently defending the [COUNTRY.GetAdjective] [NAVAL_INVASION.GetName]"
 FORMATION_STATUS_DEFENDING_INVASION_SHORT: "Defending against the [NAVAL_INVASION.GetName]"
 FORMATION_STATUS_LANDING: "Navally Invading [NAVAL_INVASION.GetEnemyState.GetName] ([NAVAL_INVASION.GetLandingProgress|v%0])"
 FORMATION_STATUS_LANDING_SHORT: "Navally Invading [NAVAL_INVASION.GetEnemyState.GetName], currently has [NAVAL_INVASION.GetLandingProgress|v%0] [concept_landing_progress]"
 FORMATION_STATUS_TRAVELING_TO_FRONT: "Traveling to [Front.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] days left, currently in [MilitaryFormation.GetLocationString])"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE: "Traveling to [Province.GetStateRegion.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] days left, currently in [MilitaryFormation.GetLocationString])"
 FORMATION_STATUS_TRAVELING_TO_HQ: "Traveling to [HQ.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] days left, currently in [MilitaryFormation.GetLocationString])[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED_SHORT'))]"
 FORMATION_STATUS_AT_FRONT: "At [Front.GetName]"
 FORMATION_STATUS_AT_HQ: "Stationed at [HQ.GetName][AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'ARMY_STATUS_READY_DEFEND_INVASION')]"
 FORMATION_STATUS_AT_SEA_NODE: "At [Province.GetStateRegion.GetName] ([concept_presence]: [MilitaryFormation.GetSeaPresence|v%0])[AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'FLEET_STATUS_READY_DEFEND_INVASION')]"
 ARMY_STATUS_READY_DEFEND_INVASION: ", ready to defend any [Concept('concept_naval_invasion', '$concept_naval_invasions$')] targeting [MilitaryFormation.GetCurrentHQ.GetName]"
 FLEET_STATUS_READY_DEFEND_INVASION: ", ready to defend any [Concept('concept_naval_invasion', '$concept_naval_invasions$')] targeting [MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName]"

 MILITARY_FORMATION_OFFENSE: "@unit_offense! [MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v]"
 MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n@unit_offense! [MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v] [concept_offense] on average\n$TOOLTIP_DELIMITER$\n@unit_offense! [MilitaryFormation.GetAverageOffense|1v] [concept_offense] on average at full [concept_manpower]"
 MILITARY_FORMATION_DEFENSE: "@unit_defense! [MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v]"
 MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n@unit_defense! [MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v] [concept_defense] on average\n$TOOLTIP_DELIMITER$\n@unit_defense! [MilitaryFormation.GetAverageDefense|1v] [concept_defense] on average at full [concept_manpower]"

 FORMATION_STATUS_TRAVELING_TO_FRONT_SHORT: "Traveling to [Front.GetName] ([MilitaryFormation.GetTravelDaysLeft|v]d)"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_SHORT: "Traveling to [Province.GetStateRegion.GetName] ([MilitaryFormation.GetTravelDaysLeft|v]d)"
 FORMATION_STATUS_TRAVELING_TO_HQ_SHORT: "Traveling to [HQ.GetName] ([MilitaryFormation.GetTravelDaysLeft|v]d)"
 FORMATION_STATUS_AT_FRONT_SHORT: "At [Front.GetName]"
 FORMATION_STATUS_AT_HQ_SHORT: "Stationed at [HQ.GetName]"
 FORMATION_STATUS_AT_SEA_NODE_SHORT: "At [Province.GetStateRegion.GetName] ([concept_presence]: [MilitaryFormation.GetSeaPresence|v%0])"

 COMBAT_UNIT_TYPES_CONCEPT: "[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]"
 COMBAT_UNITS_CONCEPT: "[Concept('concept_unit', '$concept_units$')]"

 MILITARY_FORMATION_ATTRITION_RISK_ICON: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"

 MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'High @high_attrition!', 'Normal @attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'High @high_attrition!', 'Normal @attrition!')]"

 MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ [MilitaryFormation.GetAverageAttritionPerWeek|%1^-]"
 MILITARY_FORMATION_ATTRITION_DESC: "#header [concept_attrition] in [MilitaryFormation.GetName]#!\nCurrent: $MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$[Nbsp][MilitaryFormation.GetAverageAttritionPerWeek|%1^-]\n$TOOLTIP_DELIMITER$\n#indent_newline:3 [Concept('concept_unit', '$concept_units$')] in [MilitaryFormation.GetName] will suffer [MilitaryFormation.GetAverageAttritionPerWeek|%1^-] [concept_casualties] per week (#v $CASUALTIES|0-$#! @manpower![Nbsp][concept_manpower]) on average, due to:\n#indent_newline:3 $MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$[Nbsp]$VAL|0%-$ weekly [concept_attrition] risk\n$BREAKDOWN$#!\n$MIN|0%v$ to $MAX|0%v$ $concept_casualties$ when subjected to $concept_attrition$#!"
 MILITARY_FORMATION_ATTRITION_DESC_BASE: "$TAB$Base Attrition Risk: #v $VAL|%0-$#!"
 MILITARY_FORMATION_ATTRITION_DESC_GENERAL_ADD: "$TAB$#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|=-$#!#! from [Character.GetFullName]"
 MILITARY_FORMATION_ATTRITION_DESC_GENERAL_MULT: "$TAB$#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0=-%$#!#! from [Character.GetFullName]"

 MILITARY_PANEL_ACTIVATE_CONSCRIPTS:0 "Activate conscripts"
 MILITARY_PANEL_GARRISON_TOTAL_DEFENSES:0 "Total defenses"
 MILITARY_PANEL_HQ_HEADER_FORMAT:0 "#variable [Hq.GetName]#!"
 MILITARY_PANEL_HQ_AVAILABLE:0 "Available"
 MILITARY_PANEL_HQ_STATE_NAME_FORMAT:0 "[State.GetName]"
 MILITARY_PANEL_NO_BATTALIONS:0 "No [Concept('concept_battalion', '$concept_battalions$')] available in this [concept_hq]"
 MILITARY_PANEL_COMMANDER_NAME_FORMAT:0 "[Character.GetFullName]"
 MILITARY_PANEL_BUILDING_TROOP_NAME:0 "[Building.GetCustom('troop_name')] in [Building.GetState.GetName]"
 MILITARY_PANEL_MOBILIZED:1 "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"

 SUPPLY_NETWORK_MAPMARKER_HEADER:2 "[GetPlayer.GetAdjectiveNoFormatting] [concept_supply_network] details:"
 SEA_NODE_DAMAGE_DESC:2 "@warning! [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] have recently sunk #v $NUM_SUNK_CONVOYS|-$#! of the [concept_convoys] passing through this node, reducing [concept_shipping_lane] efficiency by an average of #v $DAMAGE|-%$#!. We currently estimate it will take us #v $DAYS_TO_RECOVER$#! day(s) to fully replace the lost [concept_convoys]."
 SUPPLY_NETWORK_DESC:2 "$SUPPLY_NETWORK_MAPMARKER_HEADER$\n$NUM_CONVOYS_NO_DAMAGE$\n$USED_CONVOYS$\n$NUM_SEA_NODES$\n$SUPPLY_NETWORK_STRENGTH$"
 SEA_NODE_TOOLTIP: "#header [concept_sea_node] in [StrategicRegion.GetNameNoFormatting]#!\n$TOOLTIP_DELIMITER$\nThere are #v $NUM_CONVOYS$#! [concept_convoys] belonging to our [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] that pass through this node[ConcatIfNeitherEmpty('\n','$SEA_NODE_DAMAGE$')]\n\n$SUPPLY_NETWORK$[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"

 MOVEMENT_MARKER_ALLIED_FLEETS_HEADER: "#title Allied [Concept('concept_fleet', '$concept_fleets$')]:#!"
 MOVEMENT_MARKER_ENEMY_FLEETS_HEADER: "#title Enemy [Concept('concept_fleet', '$concept_fleets$')]:#!"
 MOVEMENT_MARKER_NEUTRAL_FLEETS_HEADER: "#title Neutral [Concept('concept_fleet', '$concept_fleets$')]:#!"

 MOVEMENT_MARKER_ALLIED_ARMIES_HEADER: "#title Allied [Concept('concept_army', '$concept_armies$')]:#!"
 MOVEMENT_MARKER_ENEMY_ARMIES_HEADER: "#title Enemy [Concept('concept_army', '$concept_armies$')]:#!"
 MOVEMENT_MARKER_NEUTRAL_ARMIES_HEADER: "#title Neutral [Concept('concept_army', '$concept_armies$')]:#!"

 MOVEMENT_MARKER_FORMATION_LIST_ENTRY: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetUnitIcon]#v [MilitaryFormation.GetNumCombatUnits]#! [MilitaryFormation.GetName]"
 MOVEMENT_MARKER_TRAVEL_TIME_BREAKDOWN_ENTRY: "#v $TRAVEL_TIME$#! days - $MOVEMENT_MARKER_FORMATION_LIST_ENTRY$"

 SEA_NODE_MOVEMENT_MARKER_TOOLTIP: "#header [SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetName]#!\n[SelectLocalization(SeaNodeMovementMarker.HasActiveSupplyNetwork, SeaNodeMovementMarker.GetActiveSupplyNetworkDesc, 'NO_ACTIVE_SUPPLY_NETWORK')][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetConvoyRaidingDesc)][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetNavalInvasionDesc)]\n$TOOLTIP_DELIMITER$\n[GetDesc(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(SeaNodeMovementMarker.IsAllSelectedFormationsTarget, 'SEA_NODE_TRAVEL_TIME'))][AddLocalizationIf(IsValid(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand), 'SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(SeaNodeMovementMarker.GetPresentFormationsBreakdown)), 'SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_CONVOY_RAIDED: "@warning! Our [concept_supply_network] at [SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetNameNoFormatting] is being reduced by [SeaNodeMovementMarker.GetConvoyRaidingEnemyFleetsDesc]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_NAVALLY_INVADED: "@warning! Our enemies are commencing a [concept_naval_invasion]. The [concept_sea_node] is currently [SeaNodeMovementMarker.GetNavalInvasionSeaNodeStatus]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_SUPPLY_NETWORK: "#v $SUPPLY_NETWORK_STRENGTH|%$#! [concept_supply_network] strength"
 SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Right-click to deploy selected [Concept('concept_fleet', '$concept_fleets$')] here#!\n\n#title Travel time:#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#![ConcatIfNeitherEmpty('\n\n' , SeaNodeMovementMarker.GetPresentFormationsBreakdown)]"
 SEA_NODE_TRAVEL_TIME: "#title Travelling here, will arrive in:#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#!"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_RAIDING_FLEET: "[Concept('concept_raid_convoys', 'concept_convoy_raiding')] [MilitaryFormation.GetName]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_MULTIPLE_RAIDING_FLEETS: "#v #tooltippable #tooltip:$BREAKDOWN$ $COUNT$#!#!#! [Concept('concept_raid_convoys', 'concept_convoy_raiding')] [Concept('concept_fleet', '$concept_fleets$')]"
 NO_ACTIVE_SUPPLY_NETWORK: "#title You have no active [concept_supply_network] here#!"
 SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Present [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[SeaNodeMovementMarker.GetPresentFormationsBreakdown]#!"

 HQ_MOVEMENT_MARKER_TOOLTIP: "#header [Hq.GetName]#!\n$TOOLTIP_DELIMITER$\n[GetDesc(Hq.GetStationSelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(HQMovementMarker.IsAllSelectedFormationsTarget, 'HQ_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Hq.GetStationSelectedFormationsCommand), 'HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 HQ_TRAVEL_TIME: "#title Travelling here, will arrive in:#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Right-click to station the selected [Concept('concept_military_formation', '$concept_military_formations$')] here#!\n\n#title Travel time:#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Present [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[HQMovementMarker.GetPresentFormationsBreakdown]#!"

 HQ_MOVEMENT_MARKER_NON_PLAYER_COUNTRY_TOOLTIP: "#header [Hq.GetCountry.GetAdjective] [Hq.GetNameNoFlag]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"

 FRONT_MOVEMENT_MARKER_TOOLTIP: "#header [Front.GetName]#!\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty( Front.GetPlayerAdvantageDesc )), 'DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN')]\n\n[GetDesc(Front.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(FrontMovementMarker.IsAllSelectedFormationsTarget, 'FRONT_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Front.GetDeploySelectedFormationsCommand), 'FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(FrontMovementMarker.GetPresentFormationsBreakdown)), 'FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 FRONT_MOVEMENT_MARKER_ADVANTAGE_LABEL: "#tooltippable #tooltip:[Front.GetTooltipTag],DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN #v [Front.GetPlayerAdvantageRaw|+]#!#!#!"
 FRONT_TRAVEL_TIME: "#title Travelling here, will arrive in:#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Right-click to deploy the selected [Concept('concept_military_formation', '$concept_military_formations$')] to this [concept_front]#!\n\n#title Travel time:#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Present [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[FrontMovementMarker.GetPresentFormationsBreakdown]#!"

 FRONT_MARKER_TOOLTIP: "#header [Front.GetName]#!\n$TOOLTIP_DELIMITER$\n[FrontMarker.GetFront.GetPlayerAdvantageDesc]"

 UNITS_PROVIDED_FROM_BUILDING: "[Building.GetCombatUnitsIcon] [Building.GetNumCombatUnitsProvidedToFormation(MilitaryFormation.Self)|v] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING_SHORT', '')]"
 UNITS_PROVIDED_FROM_BUILDING_TOOLTIP: "#header [Building.GetName] in [Building.GetState.GetName]#!\nProvides [Building.GetCombatUnitsIcon] [Building.GetNumCombatUnitsProvidedToFormation(MilitaryFormation.Self)|v] to [MilitaryFormation.GetName] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING', '')]\n$TOOLTIP_DELIMITER$\n[Building.GetCombatUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]"
 UNITS_INCOMING_FROM_BUILDING_SHORT: "(+[MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v])"
 UNITS_INCOMING_FROM_BUILDING: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')])"
 COMBAT_UNITS_PROVIDED_TO_FORMATION_LIST_ITEM: "[BUILDING.GetCombatUnitsIcon] $NUM|v$ [COMBAT_UNIT_TYPE.GetName]"
 MILITARY_FORMATION_BUILDINGS_DESC_LIST_ITEM: "#tooltippable #tooltip:[BUILDING.GetTooltipTag]|[MILITARY_FORMATION.GetTooltipTag],UNITS_PROVIDED_FROM_BUILDING_TOOLTIP [BUILDING.GetCombatUnitsIcon][BUILDING.GetNumCombatUnitsProvidedToFormation(MilitaryFormation.Self)|v]#!#! from [BUILDING.GetState.GetName]"

 CONVOY_TOPBAR_TOOLTIP:0 "#header @convoys! [concept_convoys]#!\nBalance: [Country.GetNumAvailableConvoys|=+D]\n[Country.GetConvoyEffectDesc]\n$TOOLTIP_DELIMITER$\n$NUM_CONVOYS_BREAKDOWN$"
 NUM_CONVOYS_BREAKDOWN:0 "Your total generation of #v [Country.GetNumConvoys|D+=]#! @convoys! [concept_convoys] are due to:\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]\n\n$USED_CONVOYS_TOOLTIP_SHORT$"
 CONVOY_EFFECT_REDUCED_SUPPLY_NETWORK:0 "Reduces [concept_supply_network] strength to #n $SUPPLY_NETWORK_STRENGTH|0%$#!"
 NUM_CONVOYS_NO_DAMAGE:1 "Available Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumConvoys|D]#!#!"
 NUM_CONVOYS_NO_DAMAGE_NUMBER:1 "@convoys![Country.GetRequiredConvoys|vD]/[Country.GetNumConvoys|vD]"
 NUM_CONVOYS_DAMAGE:2 "Usable Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumUsableConvoys|D]#!#! (#R @convoys![Country.GetNumDamagedConvoys] sunk#!)"
 NUM_CONVOYS_TOOLTIP:1 "#header Number of [concept_convoys] produced#!\n$TOOLTIP_DELIMITER$\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]"
 NUM_CONVOYS_TOOLTIP_EXTENDED:6 "#header @convoys! [concept_convoys]#!\n$TOOLTIP_DELIMITER$\nBalance: [Country.GetNumAvailableConvoys|=+D]\n\n$NUM_CONVOYS_BREAKDOWN$"
 CONVOY_DAMAGE_TOOLTIP_ENTRY_LINGERING: "Lingering convoy raiding damage in [StrategicRegion.GetName]: @convoys!$VALUE|+=$"
 USED_CONVOYS:1 "Required Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP @convoys![Country.GetRequiredConvoys|D]#!#!"
 USED_AVAILABE_CONVOYS_TEXT:1 "Required Convoys:"
 USED_AVAILABE_CONVOYS_VALUE:2 "@convoys! #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP [Country.GetRequiredConvoys|D]#!#! / #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumUsableConvoys|D]#!#!"
 USED_CONVOYS_TOOLTIP:1 "Number of Convoys required by the [Country.GetAdjective|v] [concept_supply_network]\n[Country.GetRequiredConvoysBreakdown]"
 USED_CONVOYS_TOOLTIP_SHORT:1 "Your total usages of #v [Negate_int32(Country.GetRequiredConvoys)|D+=]#! @convoys! [concept_convoys] are due to:\n[Country.GetRequiredConvoysBreakdown]"
 SUPPLY_NETWORK_STRENGTH_COLOR:0 "[GetSupplyNetworkColorstring( Country.GetSupplyNetworkStrength )]"
 SUPPLY_NETWORK_STRENGTH:0 "Supply Network Strength: #$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TEXT:0 "Supply Network Strength:"
 SUPPLY_NETWORK_STRENGTH_VALUE:0 "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TOOLTIP:1 "How many [concept_convoys] are available versus required"
 NUM_SEA_NODES:1 "Sea Nodes: #v [Country.GetSupplyNetworkNumSeaNodes]#!"
 NUM_SEA_NODES_TEXT:0 "Sea Nodes:"
 NUM_SEA_NODES_VALUE:0 "[Country.GetSupplyNetworkNumSeaNodes]"
 NUM_SEA_NODES_TOOLTIP:1 "The [Country.GetAdjectiveNoFormatting|v] [concept_supply_network] spans across [Country.GetSupplyNetworkNumSeaNodes] Sea Nodes.\n\n[Country.GetSupplyNetworkNumSeaNodesDesc]"

 SHIPPING_LANE_TOOLTIP: "#header [ShippingLane.GetTypeDescription]#!\nConnecting [ShippingLane.GetEndState.GetOwner.GetFlagTextIcon] [ShippingLane.GetEndState.GetName] to the [ShippingLane.GetBeginState.GetMarket.GetName] ([ShippingLane.GetBeginState.GetOwner.GetFlagTextIcon] [ShippingLane.GetBeginState.GetName])\n\n[concept_shipping_lane_effectiveness]: [ShippingLane.GetEffectivenessFormatted]\n[concept_convoy_cost]: [ShippingLane.GetConvoyCostFormattedShort]"

 REQUIRED_CONVOYS_BREAKDOWN:2 "$TAB$#v [Negate_int32('(int32)$TRADE_ROUTE_CONVOYS$')|=+]#! from [Concept('concept_trade_route', '$concept_trade_routes$')]\n$TAB$#v [Negate_int32('(int32)$PORT_CONNECTION_CONVOYS$')|=+]#! from [Concept('concept_port_connection', '$concept_port_connections$')]\n$TAB$#v [Negate_int32('(int32)$SUPPLY_ROUTE_CONVOYS$')|=+]#! from [Concept('concept_supply_route', '$concept_supply_routes$')]"

 NO_SUPPLY_NETWORK:1 "No [Concept('concept_country', '$concept_countries$')] use this [concept_supply_network]"
 NOT_PART_OF_ANY_MILITARY_FORMATION: "Not part of any [concept_military_formation]"

 CONVOYS_FROM_MARKET_MEMBERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE|+=$#!#!#! from [Concept('concept_country','$concept_countries$')] in [Country.GetMarket.GetName]"
 CONVOYS_FROM_MARKET_MEMBER: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#! from [Country.GetName] (#tooltippable #tooltip:$BREAKDOWN_TAG$ $CONTRIBUTION|v%0$#!#! contribution)"
 CONVOYS_FROM_MARKET_MEMBER_BREAKDOWN: "#header @convoys![Nbsp]#v $VALUE|+=$#! [concept_convoys] Contribution from [Country.GetName]#!\n$TOOLTIP_DELIMITER$\n$CONTRIBUTION_DESC$\n$BREAKDOWN$"
 NO_CONVOYS_FROM_MARKET_MEMBERS: "No [concept_convoys] from other [Concept('concept_country','$concept_countries$')] in [Country.GetMarket.GetName]"

 TRADE_ROUTE_CONVOY_COST_TOOLTIP:0 "#header [TradeRoute.GetGoods.GetName] Route Convoy Usage#!\nThe total use of @convoys! #v [TradeRoute.GetNumUsedConvoys]#! is due to:\n[TradeRoute.GetNumUsedConvoysBreakdown]"

 MAIN_MENU_DISCLAIMER: "#header Open Beta 1.5.3#!\n#r Please note:#! With a few exceptions noted in the Known Issues document (linked on our Discord), all features scheduled for final 1.5 release should now be available and working. While testing this update you should focus on how fun the game is to play with the new features. If anything detracts from the gameplay experience it may be removed.\n\nWe will spend the time up to 1.5 final release tweaking features, fixing bugs, and doing balance updates. Your input is valuable and highly appreciated! Please report bugs and other feedback here:"
 MAIN_MENU_DISCLAIMER_DISCORD_LINK: "@discord! Discord"
 URL_TOOLTIP_OPEN_LINK: "\n$TOOLTIP_DELIMITER$\nOpens the following link in your web browser:\n"
 DISCORD_URL: "#header Join the Victoria 3 Discord Server#!\nChat with other players, discuss the game and get advice$URL_TOOLTIP_OPEN_LINK$[GetDiscordUrl]"
 WIKI_URL: "#header Open the Victoria 3 Wiki#!\nRead and contribute to the Wiki, with explanations of the game's mechanics$URL_TOOLTIP_OPEN_LINK$[GetWikiUrl]"
 PLAYER_RESOURCES_URL: "#header Read the Victoria 3 Player Resources#!\nCollection of useful information for new and old players$URL_TOOLTIP_OPEN_LINK$[GetPlayerResourcesUrl]"
 YOUTUBE_CHANNEL_URL: "#header Watch the Victoria 3 Youtube Channel#!\nVideo updates and a peek behind the scenes$URL_TOOLTIP_OPEN_LINK$[GetYoutubeChannelUrl]"

 SUPPLY_NETWORK_HEADER:0 "#title [concept_supply_network]#!"
 ACTIVE_BATTLES_HEADER:0 "#title Active Battles#!"
 ACTIVE_LAND_BATTLES_HEADER: "#title Active Land Battles#!"
 ACTIVE_NAVAL_BATTLES_HEADER: "#title Active Naval Battles#!"
 ENDED_BATTLES_HEADER:0 "#title Ended Battles#!"
 ENDED_LAND_BATTLES_HEADER: "#title Ended Land Battles#!"
 ENDED_NAVAL_BATTLES_HEADER: "#title Ended Naval Battles#!"
 SEA_REGION_PANEL_ADMIRALS:1 "#title Admiral Activity#!"

 NO_ACTIVE_LAND_BATTLES: "No Active Land Battles"
 NO_ACTIVE_NAVAL_BATTLES: "No Active Naval Battles"
 NO_ENDED_LAND_BATTLES: "No Ended Land Battles"
 NO_ENDED_NAVAL_BATTLES: "No Ended Naval Battles"
 SHIPPING_LANES:0 "Shipping Lanes"
 NO_CONVOY_RAIDING_ADMIRALS:0 "No [Concept('concept_admiral', '$concept_admirals$')] are [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] here"
 NO_INTERCEPTING_ADMIRALS:0 "No [Concept('concept_admiral', '$concept_admirals$')] are patrolling here"
 NO_FLOTILLAS_IN_HQ:0 "No @flotillas! [Concept('concept_flotilla', '$concept_flotillas$')] in this [concept_hq]"
 NO_BATTALIONS_IN_HQ:0 "No @battalions! [Concept('concept_battalion', '$concept_battalions$')] in this [concept_hq]"

 ORIGIN_STATE_NAME:0 "[State.GetName]"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES:0 "(#v [GetDataModelSize( State.AccessShippingLanesFromThisState(SeaRegionPanel.GetProvince.Self) )]#!)"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES_TOOLTIP:0 "The total number of [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] to/from [State.GetName] through this sea region"
 ORIGIN_STATE_TOTAL_CONVOYS_USED:0 "@convoys! #v [State.GetTotalConvoysFromShippingLanesViaState(SeaRegionPanel.GetProvince.Self)|D]#!"
 ORIGIN_STATE_TOTAL_CONVOYS_USED_TOOLTIP:0 "Total number of [concept_convoys] used by [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] to/from [State.GetName] through this sea region"
 ORIGIN_STATE_TOTAL_NUMBER_OF_PORT_CONNECTIONS:0 "#v [State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self)]#! [SelectLocalization(GreaterThan_int32( State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self), '(int32)1'), Concept('concept_port_connection', '$concept_port_connections$'), concept_port_connection )]"

 COUNTRY_SHIPPING_LANES:0 "[Country.GetAdjectiveNoFlag] [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]"
 COUNTRY_SHIPPING_LANES_NETWORK_STRENGTH:0 "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SHIPPING_LANE_GOODS_TRADED:0 "[TradeRoute.GetGoods.GetName]"
 SHIPPING_LANE_NUMBER_GOODS_TRADED:0 "#v [TradeRoute.GetTradeQuantity|D]#! [TradeRoute.GetGoods.GetTextIcon]"
 SHIPPING_LANE_END_STATE:0 "[SelectLocalization(TradeRoute.IsImport, 'From', 'To')] [ShippingLane.GetEndState.GetName]"
 SHIPPING_LANE_SUPPLIED_STATE:0 "In [ShippingLane.GetEndState.GetName]"
 PORT_CONNECTION:0 "$concept_port_connection$"

 CONVOY_COST:0 "Convoys"
 SHIPPING_LANE_EFFECTIVENESS_SHORTHAND:0 "Effectiveness"
 SHIPPING_LANE_STATE_BEGIN_END:0 "[concept_shipping_lane] From [ShippingLane.GetBeginState.GetName] to [ShippingLane.GetEndState.GetName]"
 SHIPPING_LANE_NAME_TRADE_ROUTE:0 "[TradeRoute.GetDescriptionForActingMarket]"
 SHIPPING_LANE_NAME_SUPPLY_ROUTE: "[MilitaryFormation.GetName] [concept_supply_route]"
 SHIPPING_LANE_NAME_PORT_CONNECTION:0 "Overseas [concept_port_connection]"
 SHIPPING_LANE_NAME_INVALID:0 "Invalid Shipping Lane"
 SHIPPING_LANE_CONVOY_COST:0 "[Concept('concept_convoys', '$CONVOY_COST$')]: #tooltippable #tooltip:$BREAKDOWN_TAG$  @convoys!$VALUE$#!#!"
 SHIPPING_LANE_CONVOY_COST_SHORT:1 "#tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$VALUE|vD$#!#!"
 SHIPPING_LANE_EFFECTIVENESS_BASE:4 "#header [concept_shipping_lane_effectiveness]#!\n#$COLOR_TAG$ $VALUE|%0$#! Supply Network Strength"
 SHIPPING_LANE_FULL_EFFECT:0 "This [concept_shipping_lane] is working at full effect"
 SHIPPING_LANE_NOT_FULL_EFFECT:0 "This [concept_shipping_lane] is not working at full effect. Depending of the type of $concept_shipping_lane$, this means it is either reducing [concept_supply], [concept_market_access], or the amount of [Concept('concept_good', '$concept_goods$')] being moved."
 SHIPPING_LANE_EFFECTIVENESS_CONVOY_RAIDING_DMG:1 "[Concept('concept_raid_convoys', '$concept_convoy_raiding$')]: $VALUE|%2+$"
 SHIPPING_LANE_EFFECTIVENESS:2 "#$COLOR_TAG$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%0$#!#!#!"
 SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_GOODS_QUANTITY:2 "Traded Quantity: $VALUE|Dv$"
 SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_LAND_TRADE_CAPACITY:0 "[concept_land_trade_capacity]: $VALUE|1v$"
 SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_GOODS_MULTIPLIER:2 "Convoy Multiplier: #variable x$VALUE|2$#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_NUM_BATTALIONS:0 "[Concept('concept_battalion', '$concept_battalions$')]: $VALUE|v$"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_BASE_BATTALION_COST:0 "Base Battalion cost: #variable x$VALUE|1$#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_EFFIENCY:0 "Commander Supply Efficiency: #variable x$VALUE|1$#!"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_INFRA:0 "Overseas [concept_infrastructure_usage]: $VALUE|0v$"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_DEFINE:0 "[concept_infrastructure_usage] Cost: #variable x$VALUE|1$#!"
 SHIPPING_LANE_BREAKDOWN_NUM_SEA_NODES:3 "Passing through #v $NUM_NODES$#! Sea Nodes: #variable x$VALUE$#! (#v +x$MULT$#! for each Sea Node after the first)"
 SHIPPING_LANE_PREDICTION_ESTABLISH_PORT_CONNECTION:0 "Will establish a [concept_port_connection] between [STATE.GetName] and [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_REMOVE_PORT_CONNECTION:0 "Will remove [concept_port_connection] between [STATE.GetName] and [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_INCREASE_DESC:0 "Will use #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|-$#!#! between [STATE.GetName] and [STATE_OTHER.GetName] for [COUNTRY.GetName]"
 SHIPPING_LANE_PREDICTION_DECREASE_DESC:0 "Will free up #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|+$#!#! for [COUNTRY.GetName]"
 SHIPPING_LANE_PREDICTION_SUPPLY_STRENGTH:0 "Estimated new [COUNTRY.GetAdjectiveNoFormatting] [concept_supply_network] strength: #$SUPPLY_NETWORK_STRENGTH_COLOR$ $NEW_STRENGTH|%0$#!"
 SHIPPING_LANE_LAST_CAPITAL_MARKET_PORT:1 "#N This is the last [GetBuildingType('building_port').GetName] in the [concept_market_capital] region. Removing this will invalidate all [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]"

 SEA_REGION_PANEL_ADMIRAL_DELAY:1 "Base Interception delay is [GetDefine('NMilitary', 'INTERCEPTION_DELAY_BASE_DAYS')|v] days plus up to [GetDefine('NMilitary', 'INTERCEPTION_DELAY_MAX_RANDOM_DAYS_FACTOR')|v] random days"
 SEA_REGION_PANEL_INTERCEPTION_CHANCE:2 "There is a [GetDefine('NMilitary', 'INTERCEPTION_BASE_CHANCE')|v%0] chance each attempt to start a Naval Battle"
 SEA_REGION_PANEL_CONVOY_RAIDERS:1 "Convoy Raiding $concept_admirals$"
 SEA_REGION_PANEL_INTERCEPTING_ADMIRALS:2 "$concept_admirals$ Patrolling their Coast here"

 SEA_REGION_PANEL_ENTRY_HEADER:0 "[SeaRegionSupplyNetworkEntry.AccessCountry.GetName] has Supply Network in this Sea Node"
 SEA_REGION_PANEL_ENTRY_IS_RAIDED:3 "[SeaRegionSupplyNetworkEntry.AccessCountry.GetName] #N is losing [concept_convoys] here to enemy [Concept('concept_flotilla','$concept_flotillas$')]!#!"
 SEA_REGION_PANEL_ENTRY_TRADE_ROUTE:0 "[TradeRoute.GetDirectionName] [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName] from [SelectLocalization(TradeRoute.IsExport, TradeRoute.GetActingMarket.GetName, TradeRoute.GetRemoteMarket.GetName)] to [SelectLocalization(TradeRoute.IsExport, TradeRoute.GetRemoteMarket.GetName, TradeRoute.GetActingMarket.GetName)]"
 SEA_REGION_PANEL_ENTRY_COMMANDER:0 "Commander [Character.GetFullName] is tracing [concept_supply]"

 CONVOYS_ENTRY_NAME:0 "$NAME$: $NUM_CONVOYS|v$"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_MARKET_NAME:0 "[FIRSTMARKET.GetName] to [SECONDMARKET.GetName]: $NUM_NODES|v$ Sea Nodes"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_COMMANDER_NAME:0 "[Character.GetFullName]: $NUM_NODES|v$ Sea Nodes"
 SUPPLY_NETWORK_STRENGTH_ENTRY_MARKET_NAME:0 "Trade Route [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_COMMANDER_NAME:0 "Supply Line for [Character.GetFullName]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_BASE:0 "Base Supply Network Strength is #$COLOR_FORMAT$ $VALUE|%0$#!"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_LOCAL:1 "This is reduced by #BOLD $VALUE|%+=0$#! due to [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] by enemy [Concept( 'concept_admiral', '$concept_admirals$' )]"

 SUPPLY_NETWORK_DELTA_HEADER:0 "Supply Network Changes: $DELTA_NUM_CHANGES|v$ Sea Nodes"
 SUPPLY_NETWORK_DELTA_ADDED:0 "Will add [StrategicRegion.GetName]"
 SUPPLY_NETWORK_DELTA_REMOVED:0 "Will remove [StrategicRegion.GetName]"
 SUPPLY_NETWORK_DELTA_STRENGTH:0 "Supply Network Strength: $NEW_STRENGTH|%0v$ ($STRENGTH_DELTA|%0+=$)"

 LAW_EVENT_TITLE_OUTCOME: "[GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 LAW_EVENT_FAIL_BREAKDOWN: "\n$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_EVENT_REMAINING_DAYS: "[SelectLocalization(LessThan_int32(Event.GetNumRemainingDays, GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays), 'NORMAL_EVENT_REMAINING_DAYS', 'LAW_REMAINING_DAYS')]"
 LAW_REMAINING_DAYS: "#v [GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays] days#!"
 EVENT_REMAINING_DAYS:2 "[SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_REMAINING_DAYS', 'NORMAL_EVENT_REMAINING_DAYS')]"
 NORMAL_EVENT_REMAINING_DAYS: "#v [Event.GetRemainingDays] days#!"
 DAYS_UNTIL_ELECTION:0 "[concept_election]"
 ELECTION_REMAINING_DAYS:1 "@clock! #v [AccessPlayer.GetDaysUntilElection] days#!"

 EVENT_TOOLTIP: "#header [Event.GetTitle]#![ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('revolution'), 'REVOLUTION_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(Event.HasCategory('enactment')), 'EVENT_LOCATION'))]\n\nWill auto resolve in: $EVENT_REMAINING_DAYS$"
 EVENT_LOCATION: "Location: [Event.GetState.GetName]"
 LAW_EVENT_TOOLTIP: "[Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enactment$')] event for [GetPlayer.GetLawBeingEnacted.GetName][ConcatIfNeitherEmpty('\n' , SelectLocalization(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, 'LAW_EVENT_OUTCOME', ''))]"
 LAW_EVENT_OUTCOME: "Outcome: [GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 REVOLUTION_EVENT_TOOLTIP: "Event for the [AccessPlayer.GetGrowingCivilWar.GetPoliticalMovement.GetName] [concept_revolution]"
 EVENT_DEBUG_TOOLTIP: "$TOOLTIP_DELIMITER$\nEvent ID: [EVENT.GetKey|v]"

 ADVANCEMENT_COMMANDER_CONTRIBUTION_ADD:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|2+=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_MULT:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|%0=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_ORIGIN:0 "from [Character.GetFullName]"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_ADD:0 "#v $NUM_UNITS|0$#! mobilized [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|2+=$#!"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_MULT:0 "#v $NUM_UNITS|0$#! mobilized [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|%0=$#!"
 ADVANCEMENT_PROGRESS_BAR_TOOLTIP_INFO:0 "[concept_advancement_progress] out of a required #v [Front.GetRequiredAdvanceProgressForBattle|0+]#! to launch a new [concept_battle]. Will only advance once war has broken out."
 ADVANCEMENT_PROGRESS_BAR_LEFT_FORMATIONS_TOOLTIP: "#header [concept_advancement_progress] for the [Front.AccessLeftTheater.GetOwner.GetAdjective] side#!\nProgress: #v [Front.GetLeftAdvanceProgressFormations|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!#!"
 ADVANCEMENT_PROGRESS_BAR_RIGHT_FORMATIONS_TOOLTIP: "#header [concept_advancement_progress] for the [Front.AccessRightTheater.GetOwner.GetAdjective] side#!\nProgress: #v [Front.GetRightAdvanceProgressFormations|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!"

 ADVANCEMENT_PROGRESS_NUM_ENTRY:0 "@battalions! $NUM$"
 ADVANCEMENT_PROGRESS_MIN_MAX_ENTRY:0 "@battalions! $MIN$ - $MAX$"

 HAS_GENERALS_TOOLTIP:0 "This side has at least one Commander"
 ALLIES:0 "Allies:"
 ALLIES_TRAVELING:0 "Allies Traveling:"


 JOBSEEKERS: "[Concept('concept_jobseeker', '$concept_jobseekers$')]: "

 JOBSEEKERS_BREAKDOWN_HEADER: "#header [Concept('concept_jobseeker', '$concept_jobseekers$')] in [STATE.GetName]#!\n$NUM|Kv$ [concept_working_adults] are looking for a new job\n#variable [State.GetNumUnemployedWorkingAdults|D]#! of these are [concept_unemployed]\n$TOOLTIP_DELIMITER$\n"
 JOBSEEKERS_POP_TYPE_LIST_ITEM: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM|Kv$#!#! [POP_TYPE.GetName] ([GetPlayer.GetCustom('currency_symbol')]#v $AVG_WAGE|1$#!)"
 JOBSEEKERS_BREAKDOWN_FOOTER: "\n$TOOLTIP_DELIMITER$\n$STATE_QUALIFICATIONS$"

 JOBSEEKERS_POP_TYPE_BREAKDOWN_HEADER: "#header [Concept('concept_jobseeker', '$concept_jobseeking$')] [POP_TYPE.GetName] in [STATE.GetName]#!\n$NUM|vK$ [POP_TYPE.GetName] are looking for a new job\n[concept_average_wage]: [GetPlayer.GetCustom('currency_symbol')]#v $AVG_WAGE|1$#!\n$TOOLTIP_DELIMITER$"
 JOBSEEKERS_POP_LIST_ITEM: "[Pop.GetNumWorkforce|Kv] [POP.GetName] - [POP.GetWorksAt]\n[concept_job_satisfaction]: #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|+]#!#!, [concept_average_wage]: [GetPlayer.GetCustom('currency_symbol')][Pop.GetAverageAnnualWage|v1]\n"

 SELECT_COMMANDER_ORDER:0 "#title Commander Orders#!"
 GENERAL_LOCATION_TITLE:1 "#title General Location (Debug)#!"
 GENERAL_LOCATION_PRESENT_DESC:3 "[Character.GetOrderType.GetAltName( 'gerund' )|v] at $LOCATION|v$$ADDITIONAL_LOCATION_INFO$"
 GENERAL_LOCATION_PRESENT_DESC_WITHOUT_EXTRA_INFO:1 "[Character.GetOrderType.GetAltName( 'gerund' )|v] at $LOCATION|v$"
 GENERAL_TRAVELING_DAYS_BREAKDOWN:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#! "
 GENERAL_TRAVELING_ARRIVAL:1 "#header Arrival at Front#!\nWill arrive at $DATE$"
 GENERAL_NAVAL_INVASION_TOOLTIP:1 "#header $naval_invasion$#!\nAccompanying #variable $naval_invasion$#! order on [Character.GetNavalInvasion.GetEnemyState.GetName|v]\n\n[Character.GetNavalInvasion.GetStatus]"
 FORMATION_BUSY_NAVAL_INVASION: "[MilitaryFormation.GetName] is already involved in the [MilitaryFormation.GetNavalInvasion.GetName]"
 FORMATION_BUSY_BATTLE: "[MilitaryFormation.GetName] is #b not#! engaged in [concept_battle]"
 FORMATION_FULLY_DEFEATED: "[MilitaryFormation.GetName] is fully [concept_admiral_defeated] and must return to its [concept_hq] to repair and regroup. Repair progress: [MilitaryFormation.GetRepairProgress|0%v]"
 FORMATION_FULLY_DEFEATED_SHORT: "Currently [concept_admiral_defeated]"
 COMMANDER_BUSY:0 "[Character.GetFullName] is [concept_busy]"
 ADMIRAL_BUSY_NAVAL_INVASION:1 "#warning @warning! Changing orders will cancel #variable $naval_invasion$#! order on [Character.GetNavalInvasion.GetEnemyState.GetName|v] accompanied by [Character.GetNavalInvasion.GetGeneral.GetFullName].#!"
 COMMANDER_HAS_NO_BATTALIONS:0 "$NAME$ has no [Concept('concept_battalion', '$concept_battalions$')]"
 COMMANDER_HAS_NO_FLOTILLAS:0 "$NAME$ has no [Concept('concept_flotilla','$concept_flotillas$')]"
 NAVAL_INVASION_MISSING_ARMY: "Naval Invasion is missing [Concept('concept_battalion', '$concept_battalions$')]"
 NAVAL_INVASION_MISSING_FLEET: "Naval Invasion is missing [Concept('concept_flotilla','$concept_flotillas$')]"
 NAVAL_INVASION_REDUNDANT: "[State.GetName] is already being invaded by [Country.GetName]"
 COMMANDER_LOCATION_ADDITIONAL_INFO_FORMAT:0 "\n($INFO$)"
 ADMIRAL_PREPARATION_DATE_TOOLTIP: "Estimated departure: [Date.GetString]"

 NAVAL_INVASION_NO_GENERAL_ADVANCING_WARNING: "@warning! This [concept_naval_invasion] will be unable to gain any [concept_landing_progress] because no invading [concept_general] has an #b Advance#! [concept_order].\n\nMake sure at least one of the invading [Concept('concept_general', '$concept_generals$')] is set to #b Advance#!."
 NAVAL_INVASION_NO_ADMIRAL_INTERCEPTION_CHANCE_WARNING: "@warning! This [concept_naval_invasion] will be unable to to progress to landing [Concept('concept_unit','$concept_units$')] because no invading [concept_admiral] has [Concept('concept_order', '$concept_orders$')] that allows them to start a [concept_battle].\n\nYou should change the $concept_order$ of at least one of your $concept_admirals$ to ones that allow them to start [Concept('concept_battle', '$concept_battles$')], such as #v $interception_coast$#!."

 COMBAT_UNITS_TYPE_AND_NUM: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "[MilitaryFormation.GetCombatUnitsTypeIcon]#v [MilitaryFormation.GetNumCombatUnits]#!"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM: "#v [FormationMarker.CalcTotalNumCombatUnits]#!"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "[FormationMarker.GetCombatUnitsTypeIcon]#v [FormationMarker.CalcTotalNumCombatUnits]#!"
 FRONT_STATUS:0 "[SelectLocalization(MilitaryFormation.IsAdvancing,'FRONT_STATUS_ADVANCING','FRONT_STATUS_DEFENDING')]"
 FRONT_STATUS_ADVANCING: "Advancing the [concept_front]"
 FRONT_STATUS_DEFENDING: "Defending the [concept_front]"
 FRONT_FORMATION_ORDER_NAME: "#TODO[MilitaryFormation.GetFormationOrder.GetType.GetAltName( 'gerund' )] the [concept_front]#!"
 CURRENT_ORDER_STATUS: "#i #b (Current Order)#!#!"
 NEXT_ORDER_STATUS: " #i #b (Next Order)#!#!"

 MILITARY_FORMATION_MARKER_FORMATION_SUMMARY: "#header $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_MANPOWER: "#header [concept_manpower] of $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_OFFENSE: "#header [concept_offense] of $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_DEFENSE: "#header [concept_defense] of $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ORGANIZATION: "#header [concept_organization] of $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_SUMMARY: "[COUNTRY.GetFlagTextIcon] [MILITARY_FORMATION.GetUnitIcon] [MILITARY_FORMATION.GetNumCombatUnits|v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_MANPOWER: "[COUNTRY.GetFlagTextIcon] @manpower![MILITARY_FORMATION.GetCurrentManpower|vK] / #maximum [MILITARY_FORMATION.GetMaxManpower|vK]#! ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_OFFENSE: "[COUNTRY.GetFlagTextIcon] @unit_offense! [MILITARY_FORMATION.GetAverageOffense|1v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_DEFENSE: "[COUNTRY.GetFlagTextIcon] @unit_defense! [MILITARY_FORMATION.GetAverageDefense|1v] ([MILITARY_FORMATION.GetName])""
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_ORGANIZATION: "[COUNTRY.GetFlagTextIcon] @organization! [MILITARY_FORMATION.GetOrganizationRaw|1v] / #maximum [MILITARY_FORMATION.GetMaxOrganization|1v]#! ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_ALLY_FORMATIONS: "Allied [Concept( 'concept_military_formation', '$concept_military_formations$' )] $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_ENEMY_FORMATIONS: "Enemy [Concept( 'concept_military_formation', '$concept_military_formations$' )] $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_POSITION_HQ: "in [HQ.GetName]"
 MILITARY_FORMATION_MARKER_POSITION_FRONT: "at [FRONT.GetName]"
 MILITARY_FORMATION_MARKER_POSITION_LOCATION: "in $LOCATION$"
 MILITARY_FORMATION_MARKER_SELECT_FORMATION: "Select [SelectLocalization(FormationMarker.IsEnemies,'MILITARY_FORMATION_MARKER_ENEMY_LABEL','MILITARY_FORMATION_MARKER_ALLIED_LABEL')] [concept_military_formation]"
 MILITARY_FORMATION_MARKER_ENEMY_LABEL: "Enemy"
 MILITARY_FORMATION_MARKER_ALLIED_LABEL: "Allied"
 MILITARY_FORMATION_MARKER_RIGHT_CLICK_ITEM_DESC: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetName] [MilitaryFormation.GetUnitIcon] [MilitaryFormation.GetNumCombatUnits|v]"

 NAVAL_INVASION_PANEL_SUBTITLE: "[NavalInvasion.GetInvaderCountry.GetName] invading [NavalInvasion.GetInvadedCountry.GetName]"

 ### Commander Orders
 defend:0 "Defend Front"
 defend_gerund:1 "Defending"
 defend_desc: "Order this Commander to defend a [concept_front], trying to hold all of its provinces."
 defend_tooltip:1 "#header $defend$#!"

 defend_dig_in: "Adamant Defence"
 defend_dig_in_gerund: "Defending Adamantly"
 defend_dig_in_desc: "Order this Commander to defend a [concept_front], trying to hold all of its provinces by digging in."
 defend_dig_in_tooltip: "#header $defend_dig_in$#!"

 advance:0 "Advance Front"
 advance_gerund:1 "Advancing"
 advance_desc: "Order this Commander to advance a [concept_front], trying to invade enemy territory.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_tooltip:0 "#header $advance$#!"

 advance_reckless: "Reckless Advance"
 advance_reckless_gerund: "Advancing Recklessly"
 advance_reckless_desc: "Order this Commander to advance a [concept_front], trying to invade enemy territory in a reckless manner.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_reckless_tooltip: "#header $advance_reckless$#!"

 advance_heavy_barrage: "Heavy Barrage"
 advance_heavy_barrage_gerund: "Shelling the Enemy"
 advance_heavy_barrage_desc: "Order this Commander to advance a [concept_front], trying to invade enemy territory with overwhelming firepower.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_heavy_barrage_tooltip: "#header $advance_heavy_barrage$#!"

 defend_desperate_charge: "Counter Charge"
 defend_desperate_charge_gerund: "In a Desperate Charge"
 defend_desperate_charge_desc: "Order this Commander to defend a [concept_front], trying to charge the enemy and cause as much damage as possible."
 defend_desperate_charge_tooltip: "#header $defend_desperate_charge$#!"

 advance_cavalry_assualt: "Rapid Advance"
 advance_cavalry_assualt_gerund: "Charging with Mobile Units"
 advance_cavalry_assualt_desc: "Order this Commander to advance a [concept_front] by using fast units to secure territory.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_cavalry_assualt_tooltip: "#header $advance_cavalry_assualt$#!"

 advance_pillager: "Pillage"
 advance_pillager_gerund: "Pillaging"
 advance_pillager_desc: "Order this Commander to advance a [concept_front] cause as much damage to the enemy as possible.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_pillager_tooltip: "#header $advance_pillager$#!"

 advance_cautious: "Cautious Advance"
 advance_cautious_gerund: "Advancing Cautiously"
 advance_cautious_desc: "Order this Commander to advance a [concept_front], trying to invade enemy territory in a cautious manner.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_cautious_tooltip: "#header $advance_cautious$#!"

 advance_tank_assualt: "Heavy Advance"
 advance_tank_assualt_gerund: "Assualting with Tanks"
 advance_tank_assualt_desc: "Order this Commander to advance a [concept_front] using heavy tanks to crush all that stands in their way.\nA Commander with an Advance Order can still partake in defensive battles."
 advance_tank_assualt_tooltip: "#header $advance_tank_assualt$#!"

 defend_last_stand: "Last Stand"
 defend_last_stand_gerund: "In a Desperate Charge"
 defend_last_stand_desc: "Order this Commander to defend a [concept_front], trying to hold their position as possible at the expense of their men's lives."
 defend_last_stand_tooltip: "#header $defend_last_stand$#!"

 defend_guerilla_warfare: "Delaying Tactics"
 defend_guerilla_warfare_gerund: "Is delaying the enemy advance"
 defend_guerilla_warfare_desc: "Order this Commander to defend a [concept_front], trying to delay the enemy and slow their advance at the expense of your own territory."
 defend_guerilla_warfare_tooltip: "#header $defend_guerilla_warfare$#!"

 interception_coast:0 "Interception"
 interception_coast_gerund:0 "Intercepting"
 interception_coast_desc: "Seek out and destroy any enemy vessels."
 interception_coast_tooltip:0 "#header $interception_coast$#!"

 interception_coast_agressive: "Aggressive Interception"
 interception_coast_agressive_gerund: "Intercepting Aggressively"
 interception_coast_agressive_desc: "Aggressively seek out and destroy any enemy vessels at the expense of readiness."
 interception_coast_agressive_tooltip: "#header $interception_coast_agressive$#!"

 interception_carrier_assualt: "Carrier Sorties"
 interception_carrier_assualt_gerund: "Sortieing with Carriers"
 interception_carrier_assualt_desc: "Seek out and destroy any enemy vessels with a concentrated carrier attacks."
 interception_carrier_assualt_tooltip: "#header $interception_carrier_assualt$#!"

 interception_coordinated_attack: "Coordinated Interception"
 interception_coordinated_attack_gerund: "Launching a Coordinated Attack"
 interception_coordinated_attack_desc: "Patiently seek out enemy vessels and atttack in a coordinated, well prepared battle."
 interception_coordinated_attack_tooltip: "#header $interception_coordinated_attack$#!"

 raid_convoys:0 "Raid Convoys"
 raid_convoys_gerund:0 "Raiding Convoys"
 raid_convoys_desc: "Reduce the strength of an enemy [concept_supply_network] by raiding their [concept_convoys]."
 raid_convoys_tooltip:0 "#header $raid_convoys$#!"

 raid_unrestricted_sub:0 "Wolf Packs"
 raid_unrestricted_sub_gerund:0 "Raiding Convoys with Submarines"
 raid_unrestricted_sub_desc: "Reduce the strength of an enemy [concept_supply_network] by raiding their [concept_convoys] with submarines."
 raid_unrestricted_sub_tooltip:0 "#header $raid_unrestricted_sub$#!"

 escort_convoys:0 "Escort Convoys"
 escort_convoys_gerund:0 "Escorting Convoys"
 escort_convoys_desc: "Protect [Concept('concept_shipping_lane','$concept_shipping_lanes$')] against convoy raiders."
 escort_convoys_tooltip:0 "#header $escort_convoys$#!"

 escort_convoys_advanced: "Organized Merchant Convoys"
 escort_convoys_advanced_gerund: "Organizing Merchant Convoys"
 escort_convoys_advanced_desc: "Protect [Concept('concept_shipping_lane','$concept_shipping_lanes$')] against convoy raiders in a more organized manner."
 escort_convoys_advanced_tooltip: "#header $escort_convoys_advanced$#!"

 # new Military Formation Orders
 standby_army: "Stand By"
 standby_army_gerund: "Standing by"
 standby_army_desc: "#todo TODO#!"
 standby_army_tooltip: "#todo TODO#!"
 anchor_fleet: "Anchor Fleet"
 anchor_fleet_gerund: "Anchoring Fleet"
 anchor_fleet_desc: "#todo TODO#!"
 anchor_fleet_tooltip: "#todo TODO#!"

 commander_status_traveling_front:0 "Traveling"
 commander_status_order_in_hq:0 "[Character.GetOrderType.GetName]"
 commander_status_order_on_front:0 "[Character.GetOrderType.GetName]"
 commander_status_order_in_strategic_region:0 "[Character.GetOrderType.GetName]"
 commander_status_attacking_in_battle:0 "Is Attacking in the [Character.GetBattle.GetName|v] on the [Character.GetBattle.GetFront.GetName]"
 commander_status_defending_in_battle:0 "Is Defending in the [Character.GetBattle.GetName|v] on the [Character.GetBattle.GetFront.GetName]"

 troop_name_regular:0 "Regular Troops"
 troop_name_conscript:0 "Conscript Troops"

 COMBAT_UNIT_GROUP_DEFAULT: "$NAME$ (default)"

 combat_unit_regular:1 "Regular Battalions"
 combat_unit_conscript:1 "Conscript Battalions"
 combat_unit_flotilla:1 "Flotillas"

 combat_unit_group_infantry: "Infantry"
 combat_unit_group_infantry_desc: "The bulk of your army. These brave men fight for your country."
 combat_unit_group_artillery: "Artillery"
 combat_unit_group_artillery_desc: "Fires at enemy positions from afar to cause havoc and destruction."
 combat_unit_group_cavalry: "Cavalry"
 combat_unit_group_cavalry_desc: "Fires at enemy positions from afar to cause havoc"
 combat_unit_group_light_ship: "Light Ships"
 combat_unit_group_light_ship_desc: "Light Ships are mostly used for patrolling and escort missions."
 combat_unit_group_capital_ship: "Capital Ships"
 combat_unit_group_capital_ship_desc: "Majestic ships that dominate the seas with raw firepower"
 combat_unit_group_support_ship: "Support Vessels"
 combat_unit_group_support_ship_desc: "These vessels fulfill special roles to support the rest of your Fleet."

 combat_unit_type_irregular_infantry: "Irregular Infantry"
 combat_unit_type_irregular_infantry_desc: "Units that do not follow traditional military organization standards."
 combat_unit_type_line_infantry: "Line Infantry"
 combat_unit_type_line_infantry_desc: "Organized in two to four ranks of soldiers to maximize their firepower."
 combat_unit_type_skirmish_infantry: "Skirmish Infantry"
 combat_unit_type_skirmish_infantry_desc: "Light Infantry which is positioned in a loose formation, allowing a high degree of flexibility."
 combat_unit_type_trench_infantry: "Trench Infantry"
 combat_unit_type_trench_infantry_desc: "These units make use of dug trenches to fortify their position."
 combat_unit_type_squad_infantry: "Squad Infantry"
 combat_unit_type_squad_infantry_desc: "Small groups that can act independently from their army organization."
 combat_unit_type_mechanized_infantry: "Mechanized Infantry"
 combat_unit_type_mechanized_infantry_desc: "Supported by heavily armored vehicles to provide cover."

 combat_unit_type_cannon_artillery: "Cannon Artillery"
 combat_unit_type_cannon_artillery_desc: "Large cannons that fire big projectiles at their enemy."
 combat_unit_type_mobile_artillery: "Mobile Artillery"
 combat_unit_type_mobile_artillery_desc: "Higher degree of mobility to allow quicker repositioning."
 combat_unit_type_shrapnel_artillery: "Shrapnel Artillery"
 combat_unit_type_shrapnel_artillery_desc: "The shrapnel shells these units fire wreak havoc among enemy infantry."
 combat_unit_type_siege_artillery: "Siege Artillery"
 combat_unit_type_siege_artillery_desc: "Using superior firepower to ensure destruction of enemy fortifications."
 combat_unit_type_heavy_tank: "Heavy Tanks"
 combat_unit_type_heavy_tank_desc: "Heavily armored and equipped with high explosive shells."

 combat_unit_type_hussars: "Hussars"
 combat_unit_type_hussars_desc: "Light and mobile cavalry armed with sabres."
 combat_unit_type_dragoons: "Dragoons"
 combat_unit_type_dragoons_desc: "Mounted infantry for increased mobility on the battlefield."
 combat_unit_type_cuirassiers: "Cuirassiers"
 combat_unit_type_cuirassiers_desc: "Armored cavalry that is fighting on the front row."
 combat_unit_type_lancers: "Lancers"
 combat_unit_type_lancers_desc: "Mobile cavalry equipped with long lances that is designed for spearhead attacks to disrupt enemy formations."
 combat_unit_type_light_tanks: "Light Tanks"
 combat_unit_type_light_tanks_desc: "A lighter version of the tank which is focussed more on mobility rather than armor and firepower."

 combat_unit_type_frigate: "Frigates"
 combat_unit_type_frigate_desc: "Only lightly armed sailing ship and mostly used for scouting, patrolling and escorting missions. "
 combat_unit_type_destroyer: "Destroyers"
 combat_unit_type_destroyer_desc: "Designed for quick maneuvers, allowing the hunt of submarines and escorting valuable targets."
 combat_unit_type_torpedo_boat: "Torpedo Boats"
 combat_unit_type_torpedo_boat_desc: "Built to counter heavy and slow moving ships with torpedo attacks."
 combat_unit_type_scout_cruiser: "Scout Cruisers"
 combat_unit_type_scout_cruiser_desc: "Lightly armored cruisers built for overseas service."

 combat_unit_type_man_o_war: "Man-o-wars"
 combat_unit_type_man_o_war_desc: "Sailing ship armed with cannons."
 combat_unit_type_ironclad: "Ironclads"
 combat_unit_type_ironclad_desc: "Propelled with steam and covered in metal armor plates."
 combat_unit_type_monitor: "Monitors"
 combat_unit_type_monitor_desc: "Small ship that carries very large guns, mostly used near shores."
 combat_unit_type_dreadnought: "Dreadnoughts"
 combat_unit_type_dreadnought_desc: "Large and heavy ship with multiple heavy-calibre guns."
 combat_unit_type_battleship: "Battleships"
 combat_unit_type_battleship_desc: "The heaviest ship, armed with an unmatched battery of large caliber guns."

 combat_unit_type_submarine: "Submarines"
 combat_unit_type_submarine_desc: "Half submersed vessels, armed with torpedoes."
 combat_unit_type_carrier: "Carriers"
 combat_unit_type_carrier_desc: "A mighty ship from which even airplanes can operate."

 CONVOY_RAIDING_ENEMIES_TOOLTIP:0 "Hostile Supply Networks:"
 CONVOY_RAIDING_ENEMIES_TOOLTIP_ENTRY:0 "[Country.GetName]"

 NAVAL_BATTLE_MARKER:0 "$SEA_REGION$"
 NAVAL_INVASION_WAITING_FOR_FORMATION: "Waiting for [MilitaryFormation.GetName] to arrive at [concept_sea_node] in $REGION_NAME$"
 NAVAL_INVASION_WAITING_FOR_MOBILIZATION: "Waiting for [MilitaryFormation.GetName] to mobilize their forces:\n$JOM_BULLET_WITH_TAB$[MilitaryFormation.GetMobilizationPercentageFormatted]#!"
 NAVAL_INVASION_NAVAL_BATTLE:1 "Fighting enemy [Concept( 'concept_fleet', '$concept_fleets$' )] in the [Battle.GetName|v]"
 NAVAL_INVASION_LAND_BATTLE:1 "Fighting enemy [Concept( 'concept_army', '$concept_armies$' )] in the [Battle.GetName|v]"
 NAVAL_INVASION_WAITING_FOR_MORALE_AND_ORGANIZATION: "Waiting for invading [concept_army] to recover [concept_morale] and [concept_organization]"
 NAVAL_INVASION_WAITING_FOR_MORALE: "Waiting for invading [concept_army] to recover [concept_morale]"
 NAVAL_INVASION_WAITING_FOR_ORGANIZATION: "Waiting for invading [concept_army] to recover [concept_organization]"
 NAVAL_INVASION_READY_FOR_NAVAL_BATTLE: "Attempting to take control of the [concept_sea_node] in $REGION_NAME$"
 NAVAL_INVASION_READY_FOR_LAND_BATTLE: "Attempting to take control of [STATE.GetName]"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS: "Invasion is Stalled"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS_TOOLTIP: "#header $NAVAL_INVASION_STALLED_DUE_TO_ORDERS$#!\n$TOOLTIP_DELIMITER$\n[concept_naval_invasion] cannot progress because no invading [concept_admiral] has an order with Interception behavior"

 WAR_PANEL_PARTICIPANT_DEAD:0 "[concept_dead]: #variable #N -[WarParticipant.GetNumDead|K-]#!#!"
 WAR_PANEL_PARTICIPANT_WOUNDED:0 "[concept_wounded]: #variable #N -[WarParticipant.GetNumWounded|K-]#!#!"

 WAR_PANEL_PARTICIPANT_DEAD_TOOLTIP:1 "#header [concept_dead]#!\n[WarParticipant.GetNumDead|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting] have died in the #v [War.GetName] War#!:\n$TAB$[WarParticipant.GetNumDeadFromBattle|-] in [concept_battle]\n$TAB$[WarParticipant.GetNumDeadFromAttrition|-] due to [concept_attrition]"
 WAR_PANEL_PARTICIPANT_WOUNDED_TOOLTIP:1 "#header [concept_wounded]#!\n[WarParticipant.GetNumWounded|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting] have been wounded in the #v [War.GetName] War#!:\n$TAB$[WarParticipant.GetNumWoundedFromBattle|-] in [concept_battle]\n$TAB$[WarParticipant.GetNumWoundedFromAttrition|-] due to [concept_attrition]"

 WOUNDED_BREAKDOWN:0 "#header Total number of [concept_wounded]: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 WOUNDED_HEADER_ENTRY_ATTRITION:0 "From [concept_attrition]: $NUM|-D$"
 WOUNDED_HEADER_ENTRY_BATTLE:0 "From [concept_battle]: $NUM|-D$"
 WOUNDED_BREAKDOWN_ENTRY_ATTRITION:0 "[Country.GetName] $concept_attrition$: $NUM|-K$"
 WOUNDED_BREAKDOWN_ENTRY_BATTLE:0 "[Country.GetName] $concept_battle$: $NUM|-K$"

 DEAD_BREAKDOWN:0 "#header Total number of [concept_dead]: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEAD_HEADER_ENTRY_ATTRITION:0 "From [concept_attrition]: $NUM|-D$"
 DEAD_HEADER_ENTRY_BATTLE:0 "From [concept_battle]: $NUM|-D$"
 DEAD_BREAKDOWN_ENTRY_ATTRITION:0 "[Country.GetName] $concept_attrition$: $NUM|-K$"
 DEAD_BREAKDOWN_ENTRY_BATTLE:0 "[Country.GetName] $concept_battle$: $NUM|-K$"

 MILITARY_UNITS_PRODUCTION:2 "#header [SelectLocalization(Building.IsBuildingType('building_naval_base'), Concept('concept_flotilla', '$concept_flotillas$'), Concept('concept_battalion', '$concept_battalions$'))]#!\n[Building.GetCombatUnitProduction] to [Building.GetState.GetOwner.GetName]\n$TOOLTIP_DELIMITER$\n[Building.GetCombatUnitProductionBreakdown]"
 FLOTILLAS_SOURCES_BREAKDOWN:1 "From $SOURCE|v$: @flotillas! #variable $VALUE|0$#!"

 UNITS_HEADER:0 "#title Combat Units#!"
 FORMATIONS_PROVIDED_WITH_UNITS: "Formations provided with Units"

 OFFENSE:0 "[concept_offense]"
 OFFENSE_RIGHT_VALUE:0 "#v [FrontPanel.AccessFront.GetAverageRightBattalionOffenseRaw|0]#!"
 OFFENSE_LEFT_VALUE:0 "#v [FrontPanel.AccessFront.GetAverageLeftBattalionOffenseRaw|0]#!"
 DEFENSE:0 "[concept_defense]"
 DEFENSE_RIGHT_VALUE:0 "#v [FrontPanel.AccessFront.GetAverageRightBattalionDefenseRaw|0]#!"
 DEFENSE_LEFT_VALUE:0 "#v [FrontPanel.AccessFront.GetAverageLeftBattalionDefenseRaw|0]#!"

 AVERAGE_UNIT_OFFENSE: "#title Average [concept_offense]: $VALUE|v0$#!\nThe average $concept_offense$ of the $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] advancing is $VALUE|v0$."
 AVERAGE_UNIT_DEFENSE: "#title Average [concept_defense]: $VALUE|v0$#!\nThe average $concept_defense$ of the $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] defending is $VALUE|v0$."

 COMBAT_UNIT_OFFENSE_FORMATTED:0 "@unit_offense! $VALUE|0v$"
 COMBAT_UNIT_DEFENSE_FORMATTED:0 "@unit_defense! $VALUE|0v$"
 COMBAT_UNIT_MANPOWER_TOOLTIP:1 "$NAME$ has $COMBAT_UNIT_MANPOWER$ manpower available"
 MANPOWER_FORMAT: "@manpower! $VAL$"

 COMBAT_UNITS_BUILDING_HEADER:1 "#title [SelectLocalization(Building.IsBuildingType('building_naval_base'), '@flotillas!', '@battalions!')] #v #tooltippable #tooltip:MILITARY_UNITS_PRODUCTION [Building.GetNumberOfCombatUnits]#!#!#! [SelectLocalization(Building.IsBuildingType('building_naval_base'), '$concept_flotillas$', '$concept_battalions$')]#!"
 COMBAT_UNIT_BATTLE_TOOLTIP:0 "In the Battle of #variable [CombatUnit.GetBattle.GetName]#!"
 COMBAT_UNIT_MORALE_ONE_DAY_TOOLTIP:0 "(#variable 1#! day remaining)"
 COMBAT_UNIT_MORALE_DAYS_TOOLTIP:0 "($DAYS|v$ days remaining)"
 COMMANDER_SUPPLY_TOOLTIP_HEADER:0 "Supply of $NAME$: #$COLOR_STRING$ $VALUE|0%$#!"
 COMMANDER_SUPPLY_FORMATTED:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ #$COLOR_STRING$ $VALUE|0%$#!#!#!"
 COMMANDER_SUPPLY_ISOLATED:0 "#R Unable to reach [HQ.GetName]#!"
 COMMANDER_SUPPLY_REACH_BY_LAND:0 "Has overland supply route to [HQ.GetName]"

 MILITARY_FORMATION_CHARACTER_HEADER: "#title Part of [Character.GetMilitaryFormation.GetName|v](#todo make me tooltippable#!)#!"

 SHIPPING_LANE_CHARACTER_HEADER:0 "#title [concept_supply_route]#!"
 SHIPPING_LANES_HEADER:0 "#title [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]#!"

 COMBAT_UNIT_SOURCES_BREAKDOWN_SUPPLY:0 "#BOLD #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
 COMBAT_UNIT_SOURCES_BREAKDOWN_VERBOSE:0 "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ from [STATE.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] and $SUPPLY$)"
 COMBAT_UNIT_SOURCES_BREAKDOWN_CLEAN:0 "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ from [STATE.GetName]"

 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED:0 "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP:0 "[CombatUnit.GetName] is currently [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING:0 "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] ([CombatUnit.GetMobilization|v%0])"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP:0 "[CombatUnit.GetName] is currently [CombatUnit.GetMobilization|v%0] done [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED:0 "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP:0 "[CombatUnit.GetName] is fully [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"

 COMBAT_UNIT_BATTALION_CONSCRIPTS:0 "Conscripts"
 COMBAT_UNIT_BATTALION_NAME_ONE:0 "$NUM|O$ $ORIGIN$"
 COMBAT_UNIT_BATTALION_NAME_TWO:0 "$COMBAT_UNIT_TYPE$[ConcatIfNeitherEmpty(' ', '$CONSCRIPT$')]"
 COMBAT_UNIT_BATTALION_FULL_NAME:0 "$COMBAT_UNIT_BATTALION_NAME_ONE$ $COMBAT_UNIT_BATTALION_NAME_TWO$"

 COMBAT_UNIT_FLOTILLA_NAME_ONE:1 "[ConcatIfNeitherEmpty('$PREFIX$', ' ')]$NAME$[ConcatIfNeitherEmpty(' ', '$NUM_STR$')]"
 COMBAT_UNIT_FLOTILLA_NAME_TWO:0 "$BUILDING_PM$"
 COMBAT_UNIT_FLOTILLA_FULL_NAME:0 "$COMBAT_UNIT_FLOTILLA_NAME_ONE$ $COMBAT_UNIT_FLOTILLA_NAME_TWO$"

 FORMATIONS_NAME: "$NUM|O$ $COUNTRY_ADJECTIVE$ $TYPE$"

 HQ_HEADER:0 "#title [Concept('concept_hq', 'Headquarters')]#!"
 HQ_HEADER_CHARACTER:0 "$HQ_HEADER$"
 HQ_HEADER_MILITARY_PANEL:0 "$HQ_HEADER$"
 HQ_HEADER_EMPTY_HQS:0 "Empty Headquarters"

 FRONT_PARTICIPANT_COMBATUNITS:2 "@battalions! $NUM_UNITS|v$"
 FRONT_PARTICIPANT_COMBATUNITS_TOOLTIP:2 "[Character.GetFirstName|v] has @battalions! $NUM_UNITS|v$ in [Front.GetName]"

 FRONT_SIDE_COMBATUNITS:4 "#header [COUNTRY.GetFlagTextIcon] [Front.GetName]#!\n@battalions! $NUM_UNITS|v$ in total at the [FRONT.GetName]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 FRONT_SIDE_COMBATUNITS_TRAVELING:2 "There are @battalions! $NUM_UNITS|v$ more traveling towards [FRONT.GetName]"

 FRONT_COUNTRY_COMBATUNITS:2 "[Country.GetName] has @battalions!#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$ #!#! at the [FRONT.GetName]"
 FRONT_COUNTRY_COMBATUNITS_TRAVELING:2 "[Country.GetName] has @battalions!#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$ #!#! more traveling towards [FRONT.GetName]"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER: "#header [Country.GetAdjective] [Concept('concept_army', '$concept_armies$')] at [Front.GetName]#!\n@battalions!$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')] in total\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER_TRAVELING: "#header [Country.GetAdjective] [Concept('concept_army', '$concept_armies$')] traveling to [Front.GetName]#!\n@battalions!$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')] in total\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY: "@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$ #!#! $FORMATION_NAME$"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY_TRAVELING: "@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$ #!#! $FORMATION_NAME$ ($TRAVEL_TIME$ days)"

 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_HEADER:0 "$NUM_ARMIES|v=$ additional [Concept('concept_army', '$concept_armies$')] at $FRONT_NAME$"
 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_ENTRY:0 "[MILITARY_FORMATION.GetName] - @battalions! $MOB_STRING$ [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized_manpower$')]"

 FRONT_PLAYER_SIDE_COMBATUNITS_TOOLTIP: "#header [FRONT.GetName]#!\n$TOOLTIP_DELIMITER$\nOurs:[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsTravelingBreakdown)]\n\nAllies:[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsTravelingBreakdown)]"

 ACTIVE_BATTLES:1 "Active [Concept('concept_battle', '$concept_battles$')]"
 ENDED_BATTLES:1 "Ended [Concept('concept_battle', '$concept_battles$')]"
 ENDED_LAND_BATTLES:0 "Ended Land [Concept('concept_battle', '$concept_battles$')]"
 ENDED_SEA_BATTLES:0 "Ended Sea [Concept('concept_battle', '$concept_battles$')]"
 BATTLE_VICTORY:0 "Victory!"
 BATTLE_DEFEAT:0 "Defeat!"
 BATTLE_DRAW:0 "Draw!"
 BATTLE_INCONCLUSIVE: "Inconclusive!"
 BATTLE_VICTOR:0 "Victor:"
 BATTLE_TERRAIN:0 "[concept_terrain]: [Battle.GetTerrain]"
 BATTLE_ADVANCING:0 "Advancing"
 BATTLE_DEFENDING:0 "Defending"
 BATTLE_OFFENSE_TITLE:0 "Offense"
 BATTLE_DEFENSE_TITLE:0 "Defense"
 ADVANCEMENT_PROGRESS_HEADER:0 "Advancement"
 SUCCESSFUL_ADVANCE:0 "#G Successful attack#!"
 SUCCESSFUL_DEFENSE:0 "#G Successful defense#!"
 FAILED_ADVANCE:0 "#R Failed attack#!"
 FAILED_DEFENSE:0 "#R Failed defense#!"
 BATTLE_END_LEFT_SIDE:0 "[SelectLocalization( Battle.IsWinner( Battle.GetAttacker ), '$SUCCESSFUL_ADVANCE$', '$FAILED_ADVANCE$' )]"
 BATTLE_END_RIGHT_SIDE:0 "[SelectLocalization( Battle.IsWinner( Battle.GetDefender ), '$SUCCESSFUL_DEFENSE$', '$FAILED_DEFENSE$' )]"

 BATTLE_END_ATTACKER_OUTCOME: "[SelectLocalization( Battle.IsWinner( Battle.GetAttacker ), 'SUCCESSFUL_ADVANCE_BATTLE_ITEM', 'FAILED_ADVANCE_BATTLE_ITEM' )]"
 SUCCESSFUL_ADVANCE_BATTLE_ITEM: "Successful [Battle.GetAttacker.GetAdjectiveNoFlag] attack"
 FAILED_ADVANCE_BATTLE_ITEM: "Failed [Battle.GetAttacker.GetAdjectiveNoFlag] attack"

 BATTLE_LAND_MAX_OFFENSE:0 "[GetGlobalMaxLandOffense|v]"
 BATTLE_LAND_MAX_DEFENSE:0 "[GetGlobalMaxLandDefense|v]"
 BATTLE_NAVAL_MAX_OFFENSE:0 "[GetGlobalMaxNavalOffense|v]"
 BATTLE_NAVAL_MAX_DEFENSE:0 "[GetGlobalMaxNavalDefense|v]"
 BATTLE_OFFENSE_TOOLTIP:3 "#header Average [concept_offense]#!\nThe $concept_offense$ of attacking [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )] is [Battle.GetOffenseRaw|v].\nThe highest Offense in the world is [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_OFFENSE', 'BATTLE_LAND_MAX_OFFENSE' )]"
 BATTLE_DEFENSE_TOOLTIP:3 "#header Average [concept_defense]#!\nThe $concept_defense$ of defending [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )] is [Battle.GetDefenseRaw|v].\nThe highest Defense in the world is [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_DEFENSE', 'BATTLE_LAND_MAX_DEFENSE' )]"

 BATTLE_ARMY_OFFENSE_TOOLTIP:0 "Average Offense of attacking $concept_battalions$ is [Battle.GetOffenseRaw|v]. The highest Offense in the world is [GetGlobalMaxLandOffense|v]"
 BATTLE_ARMY_DEFENSE_TOOLTIP:0 "Average Defense of defending $concept_battalions$ is [Battle.GetDefenseRaw|v]. The highest Defense in the world is [GetGlobalMaxLandDefense|v]"
 BATTLE_NAVAL_OFFENSE_TOOLTIP:1 "Average Offense of attacking $concept_flotillas$ is [Battle.GetOffenseRaw|v]. The highest Offense in the world is [GetGlobalMaxNavalOffense|v]"
 BATTLE_NAVAL_DEFENSE_TOOLTIP:1 "Average Defense of defending $concept_flotillas$ is [Battle.GetDefenseRaw|v]. The highest Defense in the world is [GetGlobalMaxNavalDefense|v]"

 FRONT_UNITS:0 "The number of units [COUNTRY.GetName] has on this Front"
 ATTACKING_MEN_STILL_FIGHTING:0 "Men still fighting: [Battle.CalcCurrentAttackerManpower|v]"
 DEFENDING_MEN_STILL_FIGHTING:0 "Men still fighting: [Battle.CalcCurrentDefenderManpower|v]"


 WAR_SUPPORT_ATTACKER_SIDE:0 "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_DEFENDER_SIDE:0 "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_LEFT_SIDE:0 "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_RIGHT_SIDE:0 "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"

 NO_ALLIES:0 "No Allies"
 WAR_LEADER:0 "[concept_war_leader]"

 WAR_LEFT_SIDE_NUM_BATTALIONS: "@battalions! [WarPanel.GetLeftAvailableBattalionsRaw|v]/[WarPanel.GetLeftPotentialBattalionsRaw|v] (@mobilization![WarPanel.GetLeftMobilizationRatioRaw|0%])"
 WAR_LEFT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] on the [WarPanel.GetLeftLeader.GetAdjective] side#!\n@battalions! [WarPanel.GetLeftAvailableBattalionsRaw|v] in total\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftBattalionsBreakdown]"
 WAR_RIGHT_SIDE_NUM_BATTALIONS: "@battalions! [WarPanel.GetRightAvailableBattalionsRaw|v]/[WarPanel.GetRightPotentialBattalionsRaw|v] (@mobilization![WarPanel.GetRightMobilizationRatioRaw|0%])"
 WAR_RIGHT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] on the [WarPanel.GetRightLeader.GetAdjective] side#!\n@battalions! [WarPanel.GetRightAvailableBattalionsRaw|v] in total\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightBattalionsBreakdown]"

 COUNTRY_ENTRY_BATTALIONS_FORMAT: "@battalions!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [COUNTRY.GetBattalions|v]#!#! [COUNTRY.GetName] (#v [COUNTRY.GetFullyMobilizedBattalionsPercentageRaw|0%]#![AddLocalizationIf(COUNTRY.IsMobilized, '@mobilization!')])"

 WAR_LEADER_LEFT_NUM_BATTALIONS: "@battalions! #v [WarPanel.GetLeftLeader.GetBattalions]#! (#v [WarPanel.GetLeftLeader.GetFullyMobilizedBattalionsPercentageRaw|0%]#![AddLocalizationIf(WarPanel.GetLeftLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_RIGHT_NUM_BATTALIONS: "@battalions! #v [WarPanel.GetRightLeader.GetBattalions]#! (#v [WarPanel.GetRightLeader.GetFullyMobilizedBattalionsPercentageRaw|0%]#![AddLocalizationIf(WarPanel.GetRightLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_LEFT_NUM_FLOTILLAS: "@combat_unit_flotilla! #v [WarPanel.GetLeftLeader.GetWarships]#!"
 WAR_LEADER_RIGHT_NUM_FLOTILLAS: "@combat_unit_flotilla! #v [WarPanel.GetRightLeader.GetWarships]#!"

 WAR_LEFT_SIDE_NUM_FLOTILLAS:0 "@combat_unit_flotilla! #variable [WarPanel.GetLeftFlotillasRaw]#!"
 WAR_LEFT_SIDE_NUM_FLOTILLAS_TOOLTIP:0 "#header [Concept('concept_flotilla', '$concept_flotillas$')] on the [WarPanel.GetLeftLeader.GetAdjective] side#!\n@flotillas! [WarPanel.GetLeftFlotillasRaw|v] in total\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftFlotillasBreakdown]"

 WAR_RIGHT_SIDE_NUM_FLOTILLAS:0 "@combat_unit_flotilla! #variable [WarPanel.GetRightFlotillasRaw]#!"
 WAR_RIGHT_SIDE_NUM_FLOTILLAS_TOOLTIP:0 "#header [Concept('concept_flotilla', '$concept_flotillas$')] on the [WarPanel.GetRightLeader.GetAdjective] side#!\n@flotillas! [WarPanel.GetRightFlotillasRaw|v] in total\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightFlotillasBreakdown]"

 COUNTRY_ENTRY_FLOTILLAS_FORMAT: "@flotillas! #tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [COUNTRY.GetWarships|v]#!#! [COUNTRY.GetName]"

 WAR_LEFT_SIDE_DEAD_NUMBER:0 "#variable [WarPanel.GetLeftDeadRaw|-D]#!"
 WAR_LEFT_SIDE_WOUNDED_NUMBER:0 "#variable [WarPanel.GetLeftWoundedRaw|-D]#!"

 WAR_RIGHT_SIDE_DEAD_NUMBER:0 "#variable [WarPanel.GetRightDeadRaw|-D]#!"
 WAR_RIGHT_SIDE_WOUNDED_NUMBER:0 "#variable [WarPanel.GetRightWoundedRaw|-D]#!"

 COST_OF_WAR:0 "Cost of War:"
 COST_OF_WAR_LEFT_SIDE_NUMBER:0 "#variable [GetPlayer.GetCustom('currency_symbol')][WarPanel.GetLeftCostOfWarRaw|-D]#!"
 COST_OF_WAR_RIGHT_SIDE_NUMBER:0 "#variable [GetPlayer.GetCustom('currency_symbol')][WarPanel.GetRightCostOfWarRaw|-D]#!"

 WAR_ALLIES:0 "Your Allies"
 WAR_ENEMIES:0 "Enemy Allies"
 WAR_TARGET_ALLIES:0 "[Country.GetAdjectiveNoFlag] Allies"
 WAR_INITIATOR_ALLIES:0 "[Country.GetAdjectiveNoFlag] Allies"

 ACTIVE_FRONTS:0 "Active [Concept('concept_front', '$concept_fronts$')]"
 FRONT_UNDEFENDED: "#header @warning! This [concept_front] may be undefended!#!\n$TOOLTIP_DELIMITER$\nYou have no [Concept('concept_army', '$concept_armies$')] present on the [Front.GetName]. If none of your allies have any $concept_armies$ on this $concept_front$, your enemy may advance this $concept_front$ without any resistance.\n\nConsider sending an $concept_army$ with $concept_battalions$ here."

 FRONT_SIDE_NUM_UNITS_FORMAT:0 "@battalions! #variable #tooltippable #tooltip:$BREAKDOWN_TAG$ $NUM_UNITS$#!#!#!"
 FRONT_SIDE_FIRST_NUM_UNITS:0 "@battalions! [Front.GetNumFirstCombatUnits|0v]"
 FRONT_SIDE_SECOND_NUM_UNITS:0 "[Front.GetNumSecondCombatUnits|0v] @battalions!"
 FRONT_SIDE_LEFT_NUM_UNITS:1 "@battalions! [Front.GetNumLeftCombatUnitsRaw|0v] from [Concept( 'concept_army', '$concept_armies$' )]"
 FRONT_SIDE_FORMATIONS_LEFT_NUM_UNITS: "@battalions! [Front.GetNumLeftCombatUnitsFromFormationsRaw|0v] From Formations"
 FRONT_SIDE_RIGHT_NUM_UNITS:1 "From [Concept( 'concept_army', '$concept_armies$' )] [Front.GetNumRightCombatUnitsRaw|0v] @battalions!"
 FRONT_SIDE_FORMATION_RIGHT_NUM_UNITS: "From Formations [Front.GetNumRightCombatUnitsFromFormationsRaw|0v] @battalions!"

 FRONT_SIDE_NO_ARMIES: "No [Concept( 'concept_army', '$concept_armies$' )]"

 FRONT_SIDE_ADVANCING_UNITS_DESC:1 "#header @battalions! advancing#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_DEFENDING_UNITS_DESC:1 "#header @battalions! defending#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_UNIT_ENTRY:0 "@battalions!$NUM_UNITS|v$ from $UNIT_ORIGIN|v$"
 FRONT_SIDE_TOTAL_UNITS:0 "Total: @battalions!$NUM_UNITS|v$"
 FRONT_COUNTRIES_PRESENT:0 "Countries Present"
 FRONT_YOUR_SIDE:0 "Your side"
 FRONT_ENEMY_SIDE:0 "Enemy side"
 FRONT_LEFT_ADJECTIVE_SIDE:0 "[WarPanel.GetLeftLeader.GetAdjectiveNoFlag] side"
 FRONT_RIGHT_ADJECTIVE_SIDE:0 "[WarPanel.GetRightLeader.GetAdjectiveNoFlag] side"
 FRONT_NO_ACTIVE_BATTLES:1 "No active [concept_battle]"
 FRONT_NO_ENDED_BATTLES:0 "No ended [Concept('concept_battle', '$concept_battles$')]"
 FRONT_PRESENT_FORMATIONS_PLAYER: "#v [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_military_formation', '$concept_military_formations$' )] (You)"
 FRONT_PRESENT_FORMATIONS_ENEMY: "#v [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_military_formation', '$concept_military_formations$' )] (Enemy)"
 FRONT_PRESENT_FORMATIONS_INITIATOR: "#v [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_military_formation', '$concept_military_formations$' )] (Initiator)"
 FRONT_PRESENT_FORMATIONS_TARGET: "#v [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_military_formation', '$concept_military_formations$' )] (Target)"
 NO_ACTIVE_FRONTS:0 "Currently no active [Concept('concept_front', '$concept_fronts$')]"
 FRONT_PANEL_BATTLES:0 "Battles"

 FRONT_PRESENT_ARMIES_PLAYER: "#v [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_army', '$concept_armies$' )] (You)"
 FRONT_PRESENT_ARMIES_ENEMY: "#v [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_army', '$concept_armies$' )] (Enemy)"
 FRONT_PRESENT_ARMIES_INITIATOR: "#v [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_army', '$concept_armies$' )] (Initiator)"
 FRONT_PRESENT_ARMIES_TARGET: "#v [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_army', '$concept_armies$' )] (Target)"

 SEA_REGION_PANEL_NO_PRESENT_FLEETS: "No present [Concept( 'concept_fleet', '$concept_fleets$' )] on this side"
 SEA_REGION_PANEL_NO_PRESENT_NEUTRAL_FLEETS: "No present neutral [Concept( 'concept_fleet', '$concept_fleets$' )]"
 SEA_REGION_WAR_HEADER: "[SeaRegionWar.GetWar.GetName]"
 NEUTRAL_FLEETS_HEADER: "Neutral [Concept( 'concept_fleet', '$concept_fleets$' )] Present"
 SUPPLY_NETWORK_WAR_HEADER: "[Concept('concept_supply_network', '$concept_supply_networks$')]"
 SUPPLY_NETWORK_COUNTRY: "[SelectLocalization(LessThan_CFixedPoint(Country.GetSupplyNetworkStrength, '(CFixedPoint)1'), '@warning! ', '')]$SUPPLY_NETWORK_STRENGTH_VALUE$ - [Country.GetName]"

 STRENGTH_SUPPLY_TOOLTIP:1 "[SeaRegionNavalPresence.GetCountry.GetAdjectiveNoFormatting|v] Supply Flotillas at #BOLD #[GetMoraleColorString( SeaRegionNavalPresence.GetStrength )] [SeaRegionNavalPresence.GetStrength|0%]#!#! strength in [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]"
 BATTLE_MORALE_TOOLTIP:1 "[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|v] morale is #BOLD #[GetMoraleColorString( BattleParticipant.GetMorale )] [BattleParticipant.GetMorale|0%]#!#!"
 BATTLE_MANPOWER_ATTACKER_TOOLTIP:1 "#header [concept_manpower]#!\n[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|v] [concept_manpower] is @manpower! #v [Battle.CalcCurrentAttackerManpower]#!"
 BATTLE_MANPOWER_DEFENDER_TOOLTIP:1 "#header [concept_manpower]#!\n[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|v] [concept_manpower] is @manpower! #v [Battle.CalcCurrentDefenderManpower]#!"
 BATTLE_ATTACKER_LIST_NAME:0 "Attacking Units"
 BATTLE_DEFENDER_LIST_NAME:0 "Defending Units"
 BATTLE_ATTACKER_STARTING_UNITS:1 "[Battle.GetAttacker.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetStartingAttackerUnits|v]#!"
 BATTLE_ATTACKER_ENDING_UNITS:1 "[Battle.GetAttacker.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetFinalAttackerUnits|v]#!"
 BATTLE_DEFENDER_STARTING_UNITS:1 "[Battle.GetDefender.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetStartingDefenderUnits|v]#!"
 BATTLE_DEFENDER_ENDING_UNITS:1 "[Battle.GetDefender.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetFinalDefenderUnits|v]#!"
 BATTLE_NO_ATTACKER_MODIFIERS:0 "No Attacker Modifiers"
 BATTLE_NO_DEFENDER_MODIFIERS:0 "No Defender Modifiers"
 BATTLE_NO_UNITS_UNDER_COMMAND:0 "No Units Under Command"
 BATTLE_NO_BORROWED_UNITS:0 "No Borrowed Units"
 BATTLE_BORROWED_UNITS_HEADER: "Borrowed Units"
 BATTLE_ATTACKING_FORMATION_HEADER: "Attacking Formation"
 BATTLE_DEFENDING_FORMATION_HEADER: "Defending Formation"

 COMBAT_UNIT_CURRENT_LESS_THAN_MAX:1 "$CURRENT|Kv$/#maximum $MAX|K$#!"
 COMBAT_UNIT_CURRENT_EQUAL_MAX:0 "$CURRENT|Kv$"

 MANPOWER_PACKAGE_COMMANDER_CE_BREAKDOWN:0 "#variable [CHARACTER.GetFullName]:#!"

 INTEREST_INACTIVE:1 "This is an [concept_inactive_interest]"
 INTEREST_ACTIVE:1 "This is an [concept_active_interest]"
 INTEREST_DECLARED:1 "This is a [concept_declared_interest]"

 INTEREST_SOURCE_DECLARED:0 "Maintained by [concept_declared_interest]"
 INTEREST_SOURCE_OWNED_STATES:0 "Maintained through territorial control of $STATES$"
 INTEREST_SOURCE_SUBJECT_STATES:0 "Maintained through [concept_subject] territorial control of $STATES$"

 INTEREST_MARKER_TOOLTIP:2 "#header [Interest.GetOwner.GetAdjectiveNoFormatting] [concept_interest] in [Interest.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n[Interest.GetInterestStatusName][ConcatIfNeitherEmpty('\n',Interest.GetInterestSourceDesc)][ConcatIfNeitherEmpty('\n',Interest.GetProgressBarTooltip)]"
 NO_COUNTRIES_WITH_INTEREST:0 "No [concept_country] have an [concept_interest] in [StrategicRegion.GetNameNoFormatting]"
 COUNTRIES_WITH_INTEREST:0 "[Concept('concept_country', '$concept_countries$')] with an [concept_interest] in [StrategicRegion.GetNameNoFormatting]:"
 INTEREST_MARKER_HAS_PP:0 "Power Projection from the following Commander(s) supports the [concept_interest] here:"
 INTEREST_MARKER_PP_COMMANDER:0 "[CHARACTER.GetFullName]"
 INTEREST_MARKER_NO_UNITS_TOOLTIP:1 "[concept_interest] is currently not supported by any [Concept('concept_battalion', '$concept_battalions$')], [concept_power_projection] or #variable $INTEREST_DOMINANT_INTEREST$#!"
 INTEREST_SUPPORTED_BY_DOMINANT:0 "Is supported by [INTEREST.GetInterestStatusName|v] in [INTEREST.GetStrategicRegion.GetName]"

 INTEREST_ICON_TOOLTIP_HAS:0 "[INTEREST.GetOwner.GetName] has a #variable [INTEREST.GetInterestStatusName]#! in [INTEREST.GetStrategicRegion.GetName]\n$TOOLTIP_DELIMITER$"
 INTEREST_ICON_TOOLTIP_HAS_NOT:0 "[INTEREST.GetOwner.GetName] is establishing an [concept_interest] in [INTEREST.GetStrategicRegion.GetName]"
 INTEREST_PROGRESS_ACTIVATING_TOOLTIP:0 "Progress towards becoming an [concept_active_interest]: #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_PROGRESS_DEACTIVATING_TOOLTIP:0 "Progress towards becoming an [concept_inactive_interest]: #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_MAINTAIN_TOOLTIP:0 "Maintaining #variable [Interest.GetInterestStatusName]#!"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_HEADER:0 "#header $GOODS_NAME$#!\n$TOOLTIP_DELIMITER$"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_MARKET_ENTRY:0 "\n$MARKET_NAME$: #variable $VALUE|K$#! (Local Price: #variable [GetPlayer.GetCustom('currency_symbol')]$PRICE|1$#!)"

 EXPECTED_SOL_SHORT:0 "[Concept('concept_expected_sol', '$concept_expected_sol_short$')]"
 SOL_LOWER:1 "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingPoor,State.GetExpectedStandardOfLivingPoor)|v]"
 SOL_MIDDLE:1 "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingMiddle,State.GetExpectedStandardOfLivingMiddle)|v]"
 SOL_UPPER:1 "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingRich,State.GetExpectedStandardOfLivingRich)|v]"
 STANDARD_OF_LIVING_TOOLTIP:0 "#header [concept_sol]#!\n$TOOLTIP_DELIMITER$\n[concept_sol_desc]"
 AVG_STANDARD_OF_LIVING_POOR:3 "$AVG_SOL_HEADER$ for the $lower$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsPoor|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_POOR [State.GetAverageStandardOfLivingPoor|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_POOR [State.GetExpectedStandardOfLivingPoor|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_MIDDLE:3 "$AVG_SOL_HEADER$ for the $middle$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsMiddle|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_MIDDLE [State.GetAverageStandardOfLivingMiddle|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_MIDDLE [State.GetExpectedStandardOfLivingMiddle|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_RICH:3 "$AVG_SOL_HEADER$ for the $upper$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsRich|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_RICH [State.GetAverageStandardOfLivingRich|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_RICH [State.GetExpectedStandardOfLivingRich|v1]#!#!)"
 SOL_BY_POPULATION_AVERAGE_SHORT:0 "#title Avg. SoL:#!"
 SOL_BY_POPULATION_AVERAGE:0 "#title [concept_sol]:#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPopulation)|v] ([Country.GetAverageSoLByPopulation|v1])"
 AVG_STANDARD_OF_LIVING_COUNTRY:1 "$AVG_SOL_HEADER$ in [Country.GetName]\nAverage Current: [Country.GetFormattedStandardOfLivingLabelAll|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_ALL [Country.GetFormattedStandardOfLivingAll|v]#!#!) ([Country.GetStandardOfLivingRanking])\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_ALL [Country.GetExpectedSoLByPopulation|v1]#!#!)\n$TOOLTIP_DELIMITER$\n$COUNTRY_STRATAS_AVG_SOL$"

 COUNTRY_STRATAS_AVG_SOL:1 "$lower$: [Country.GetFormattedStandardOfLivingLabelPoor|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_LOW,CountryStandardOfLivingLower #v [Country.GetFormattedStandardOfLivingPoor]#!#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_LOW [Country.GetExpectedStandardOfLivingPoor|v1]#!#! $EXPECTED_SOL_SHORT$)\n$middle$: #v [Country.GetFormattedStandardOfLivingLabelMiddle]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_MIDDLE,CountryStandardOfLivingMiddle #v [Country.GetFormattedStandardOfLivingMiddle]#!#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_MIDDLE [Country.GetExpectedStandardOfLivingMiddle|v1]#!#! $EXPECTED_SOL_SHORT$)\n$upper$: #v [Country.GetFormattedStandardOfLivingLabelRich]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_UPPER,CountryStandardOfLivingUpper [Country.GetFormattedStandardOfLivingRich|v]#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_UPPER [Country.GetExpectedStandardOfLivingRich|v1]#!#! $EXPECTED_SOL_SHORT$)"
 COUNTRY_AVG_STANDARD_OF_LIVING_STRATA:0 "$STRATA$: #v $LABEL_FOR_SOL$#! (#tooltippable #tooltip:$TOOLTIP_TAG$ #v $SOL_VALUE|1$#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_STRATA:1 "#header Standard of Living for $STRATA$ in [GetPlayer.GetName]#!\n$ADDITIONAL_FACTORS$"

 AVG_STANDARD_OF_LIVING_COUNTRY_LOWER:1 "Average [concept_sol] for [concept_lower_strata] in [Country.GetName]"
 AVG_STANDARD_OF_LIVING_COUNTRY_MIDDLE:1 "Average [concept_sol] for [concept_middle_strata] in [Country.GetName]"
 AVG_STANDARD_OF_LIVING_COUNTRY_UPPER:1 "Average [concept_sol] for [concept_upper_strata] in [Country.GetName]"

 POPULATION_COUNTRY_LOWER:1 "[Concept('concept_pop','$concept_population$')] of the [concept_lower_strata] in [Country.GetName]"
 POPULATION_COUNTRY_MIDDLE:1 "[Concept('concept_pop','$concept_population$')] of the [concept_middle_strata] in [Country.GetName]"
 POPULATION_COUNTRY_UPPER:1 "[Concept('concept_pop','$concept_population$')] of the [concept_upper_strata] in [Country.GetName]"

 COUNTRY_SOL_ALL_LABEL:2 "[Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll|v])"
 COUNTRY_SOL_LOW_LABEL:2 "[Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor|v])"
 COUNTRY_SOL_MIDDLE_LABEL:2 "[Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle|v])"
 COUNTRY_SOL_UPPER_LABEL:2 "[Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich|v])"

 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL:0 "[GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomePoor|v1] Income"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL:0 "[GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeMiddle|v1] Income"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL:0 "[GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeRich|v1] Income"
 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL_TOOLTIP:0 "#header Average Income#!\nThese Pops make an average of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomePoor|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL_TOOLTIP:0 "#header Average Income#!\nThese Pops make an average of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeMiddle|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL_TOOLTIP:0 "#header Average Income#!\nThese Pops make an average of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeRich|v1]"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL:0 "[PopsOverviewPanel.GetTaxBurdenPoor|v1%] Taxes"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL:0 "[PopsOverviewPanel.GetTaxBurdenMiddle|v1%] Taxes"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL:0 "[PopsOverviewPanel.GetTaxBurdenRich|v1%] Taxes"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL_TOOLTIP:0 "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenPoor|v1%] of their Income in Taxes"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL_TOOLTIP:0 "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenMiddle|v1%] of their Income in Taxes"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL_TOOLTIP:0 "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenRich|v1%] of their Income in Taxes"
 TAX_BURDEN_TYPE_INCOME:0 "$BUDGET_INCOME_TAXES$"
 TAX_BURDEN_TYPE_CONSUMPTION:0 "$BUDGET_CONSUMPTION_TAXES$"
 TAX_BURDEN_TYPE_DIVIDEND:1 "$BUDGET_DIVIDENDS_TAXES$"
 TAX_BURDEN_TYPE_POLL:0 "$BUDGET_POLL_TAXES$"
 TAX_BURDEN_ITEM_LABEL:0 "[TaxBurdenItem.GetValue|v1%]"
 TAX_BURDEN_ITEM_LABEL_TOOLTIP:0 "#header [TaxBurdenItem.GetTaxType]#!\nThese Pops pay an average of [TaxBurdenItem.GetValue|v1%] of their Income as [TaxBurdenItem.GetTaxType]"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL:0 "[PopsOverviewPanel.GetGoodsExpensesPoor|v1%] Needs"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL:0 "[PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] Needs"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL:0 "[PopsOverviewPanel.GetGoodsExpensesRich|v1%] Needs"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL_TOOLTIP:0 "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesPoor|v1%] of their Income on their Needs"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL_TOOLTIP:0 "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] of their Income on their Needs"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL_TOOLTIP:0 "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesRich|v1%] of their Income on their Needs"
 GOODS_EXPENSE_ITEM_LABEL:0 "[GoodsExpenseItem.GetExpenseRatio|v1%]"
 GOODS_EXPENSE_ITEM_TOOLTIP:1 "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nThese Pops spend an average of [GoodsExpenseItem.GetExpenseRatio|v1%] of their Net Income on [Goods.GetName]. The average price is [GetPlayer.GetCustom('currency_symbol')][GoodsExpenseItem.GetPrice|v1] #tooltippable #tooltip:COIN_STACK_TOOLTIP [LabelingHelper.GetPriceCompareIcon(GoodsExpenseItem.GetRelativePriceDiff)]#!#!, which is [GoodsExpenseItem.GetRelativePriceDiff|=-%1] compared to the Base Price for [Goods.GetName]"

 POPS_OVERVIEW_REMAINDER_POOR:0 "#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
 POPS_OVERVIEW_REMAINDER_MIDDLE:0 "#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
 POPS_OVERVIEW_REMAINDER_RICH:0 "#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
 POPS_OVERVIEW_REMAINDER_POOR_TOOLTIP:0 "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomePoor|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"
 POPS_OVERVIEW_REMAINDER_MIDDLE_TOOLTIP:0 "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeMiddle|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"
 POPS_OVERVIEW_REMAINDER_RICH_TOOLTIP:0 "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! of [GetPlayer.GetCustom('currency_symbol')][PopsOverviewPanel.GetAverageIncomeRich|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"

 COUNTRY_SOL_ALL:0 "#header Average [concept_sol] for all [Concept('concept_pop', '$concept_pops$')] in [Country.GetName]#!\n#v [Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescAll]"
 COUNTRY_SOL_LOW:2 "#header [Country.GetAdjective] [concept_lower_strata] [concept_sol]#!\n[GetTrendValue(Country.GetLowerStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescPoor]"
 COUNTRY_SOL_MIDDLE:2 "#header [Country.GetAdjective] [concept_middle_strata] [concept_sol]#!\n[GetTrendValue(Country.GetMiddleStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescMiddle]"
 COUNTRY_SOL_UPPER:2 "#header [Country.GetAdjective] [concept_upper_strata] [concept_sol]#!\n[GetTrendValue(Country.GetUpperStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescRich]"
 COUNTRY_EXPECTED_SOL_ALL:0 "#header Average [concept_expected_sol] for all [Concept('concept_pop', '$concept_pops$')] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)] ([Country.GetExpectedSoLByPopulation|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescAll]"
 COUNTRY_EXPECTED_SOL_LOW:0 "#header Average [concept_expected_sol] for the [concept_lower_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)] ([Country.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescPoor]"
 COUNTRY_EXPECTED_SOL_MIDDLE:0 "#header Average [concept_expected_sol] for the [concept_middle_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)] ([Country.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescMiddle]"
 COUNTRY_EXPECTED_SOL_UPPER:0 "#header Average [concept_expected_sol] for the [concept_upper_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)] ([Country.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescRich]"

 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING:1 "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoL)|v] (#v [Culture.CalcAvgSoL|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_CLASS:1 "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForPoor)|v] (#v [Culture.CalcAvgSoLForPoor|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS:1 "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForMiddle)|v] (#v [Culture.CalcAvgSoLForMiddle|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_CLASS:1 "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForRich)|v] (#v [Culture.CalcAvgSoLForRich|1]#!)"

 FACTORS_AFFECTING_SOL_GLOBALLY:0 ""
 GLOBAL_FACTORS_AFFECTING_POOR:0 ""
 GLOBAL_FACTORS_AFFECTING_MIDDLE:0 ""
 GLOBAL_FACTORS_AFFECTING_RICH:0 ""

 GLOBAL_AVERAGE_HEADER:0 "#bold Global Average:#!"
 GLOBAL_CLASS_AVERAGE_HEADER:0 "#bold Global Class Average:#!"
 COUNTRY_AVERAGE_HEADER:0 "#bold Average in [GetPlayer.GetName]:#!"
 COUNTRY_CLASS_AVERAGE_HEADER:0 "#bold Class Average in [GetPlayer.GetName]:#!"

 GLOBAL_AVG_STANDARD_OF_LIVING_TOOLTIP:0 "Average [concept_sol] of all [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
 GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP:0 "Average [concept_sol] of all [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
 GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP:0 "Average [concept_sol] of all [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
 GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP:0 "Average [concept_sol] of all [concept_upper_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"

 COUNTRY_AVG_STANDARD_OF_LIVING_TOOLTIP:0 "Average [concept_sol] of all [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP:0 "Average [concept_sol] of all [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP:0 "Average [concept_sol] of all [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP:0 "Average [concept_sol] of all [concept_upper_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"

 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING:1 "#v [GetPlayer.GetFormattedStandardOfLivingLabelAllWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],FACTORS_AFFECTING_SOL_COUNTRY_CULTURE #v [GetPlayer.GetFormattedStandardOfLivingAllWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS:1 "#v [GetPlayer.GetFormattedStandardOfLivingLabelPoorWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_POOR #v [GetPlayer.GetFormattedStandardOfLivingPoorWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS:1 "#v [GetPlayer.GetFormattedStandardOfLivingLabelMiddleWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE #v [GetPlayer.GetFormattedStandardOfLivingMiddleWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_CLASS:1 "[GetPlayer.GetFormattedStandardOfLivingLabelRichWithCulture(Culture.Self)|v] (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_RICH #v [GetPlayer.GetFormattedStandardOfLivingRichWithCulture(Culture.Self)]#!#!#!)"

 FACTORS_AFFECTING_SOL_COUNTRY:0 "#title Factors affecting the [concept_sol] in [Country.GetName]#!\n[Country.GetAdditionalSOLFactorsDesc]"

 COUNTRY_AVG_STANDARD_OF_LIVING_POOR:0 "$lower$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_POOR #v [Country.GetAverageStandardOfLivingPoor|1]#!#!#!)"

 COUNTRY_FACTORS_AFFECTING_POOR:0 "Factors affecting $lower$:\n[Country.GetAdditionalSOLFactorsDescPoor]"

 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE:0 "$middle$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_MIDDLE #v [Country.GetAverageStandardOfLivingMiddle|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_MIDDLE:0 "Factors affecting $middle$:\n[Country.GetAdditionalSOLFactorsDescMiddle]"

 COUNTRY_AVG_STANDARD_OF_LIVING_RICH:0 "$upper$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_RICH #v [Country.GetAverageStandardOfLivingRich|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_RICH:0 "Factors affecting $upper$:\n[Country.GetAdditionalSOLFactorsDescRich]"

 FACTORS_AFFECTING_SOL_COUNTRY_CULTURE:0 "#title Factors affecting the [concept_sol] for [Culture.GetName] in [GetPlayer.GetName]#!\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulture(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_POOR:1 "Factors affecting $lower$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulturePoor(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE:1 "Factors affecting $middle$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureMiddle(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_RICH:1 "Factors affecting $upper$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureRich(Culture.Self)]"

 SOL_BY_CLOUT_AVERAGE:0 "#title [concept_sol] (by Clout):#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPoliticalStrength)|v] ([Country.GetAverageSoLByPoliticalStrength|v])"
 AVG_SOL_HEADER:0 "#header [concept_sol]#!"
 OVERVIEW:0 "Overview"
 GOVERNMENT:0 "Government"
 INTEREST_GROUPS:0 "[Concept('concept_interest_group', '$concept_interest_groups$')]"
 LAWS:0 "Laws"
 INSTITUTIONS:0 "Institutions"
 REFORM_GOVERNMENT:0 "Reform Government"
 EXIT_REFORM_GOVERNMENT:0 "Exit Reform Government"
 REFORM_GOVERNMENT_CIVIL_WAR_ERROR:0 "@red_cross! [Country.GetName] is in a [concept_civil_war]"
 REFORM_GOVERNMENT_MOVE_TO_GOVERNMENT_BUTTON_TOOLTIP:0 "@red_cross! [InterestGroup.GetName] supports an ongoing [concept_revolution]"
 IN_OPPOSITION_TITLE:0 "#title Opposition#!"
 IN_GOVERNMENT_TITLE:0 "#title Government#!"
 ELECTION_TITLE:0 "#title Elections#!"
 MARGINAL_TITLE:0 "#title [concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')]#!"
 MARGINAL_TITLE_ACCORDION:0 "[concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')] (#v [GetDataModelSize( AccessPlayer.AccessMarginalInterestGroups)]#!)"
 LAWS_TITLE:0 "#title Enacted [Concept('concept_law', '$concept_laws$')]#!"
 ABOLISHED_LAWS_TITLE:0 "#title Abolished [Concept('concept_law', '$concept_laws$')]#!"
 STATE_TITLE:0 "#title [concept_state]#!"

 STATE_EXPLAINER:0 "#header State#!\n#instruction Click to sort on [concept_state] name#!"
 AVERAGE_POP_WAGE_EXPLAINER:0 "#header Average Wage for [concept_pop]s#!\n#instruction Click to sort on the average wage for the Pops in the [concept_state]#!"
 EXPENSES_EXPLAINER:0 "#header Expenses#!\n#instruction Click to sort on the total expenses for this [concept_state]#!"
 STATE_INCOME_TAX_REVENUE_EXPLAINER:0 "#header Income from Taxes#!\n#instruction Click to sort on the total income from the taxes in the [concept_state]#!"

 TAX_CAPACITY_USAGE:1 "#header [concept_tax_capacity] Usage#!\n[State.GetName] uses $USAGE|1v$ [concept_tax_capacity]\n$TOOLTIP_DELIMITER$\nOne point of [concept_tax_capacity] is required per $POPS_PER_CAPACITY|vK$ [Concept('concept_pop', '$concept_pops$')] and [State.GetName] has a total population of $TOTAL_POPS|vK$"
 STATE_TAX_CAPACITY:2 "[concept_tax_capacity]\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_BUILDING: "#header [Building.GetState.GetName] [concept_tax_capacity]#!\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_DESC:4 "#header [concept_tax_capacity]#!\nThe $concept_tax_capacity$ balance in [State.GetName] is [State.CalcTaxCapacityBalance|1+=]\n$TOOLTIP_DELIMITER$\n$concept_tax_capacity$: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|1+]#!#!\n$concept_tax_capacity$ Usage: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|1-]#!#![SelectLocalization(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT_LONG', '')]"
 STATE_TAX_CAPACITY_USAGE_TOOLTIP:0 "[State.GetTaxCapacityUsageDesc]"
 STATE_TAX_CAPACITY_TOOLTIP:1 "#header [concept_tax_capacity]#!\n[State.GetName] has a [concept_tax_capacity] of [State.CalcTaxCapacity|+0]\n$TOOLTIP_DELIMITER$\n[State.GetTaxCapacityDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT:0 "\n[State.GetTaxCapacityEffectsDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT_LONG:0 "\n\n@warning! Because usage is higher than capacity, the following effects are applied to the [concept_state]:\n[State.GetTaxCapacityEffectsDesc]"

 EVENT_OPTION_TOOLTIP:0 "#header "[EventOption.GetText]"#!\n$TOOLTIP_DELIMITER$\n[EventOption.GetDesc]"

 POP_VOTING_POWER_WEALTH_TOO_LOW:0 "@warning! Not eligible to vote due to [concept_wealth] $WEALTH|v0$ below the cutoff of $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_WEALTH_SUFFICIENT:0 "[concept_wealth] $WEALTH|v0$ meets the voting cutoff of $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_POPULATION:0 "x$NUM|v0$ potentially eligible voters"
 POP_VOTING_INCORPORATION_LEVEL:0 "x$INCORPORATION|v%$ [Concept('concept_incorporated_state','$concept_incorporation$')] of [State.GetName]"
 POP_VOTING_POWER:0 "Number of [concept_votes]: #v $VAL|+D0$#!\n$BREAKDOWN$"

 DOES_NOT_ALLOW_ELECTIONS: "Current [concept_government_type] does not allow [concept_election]"
 NEXT_ELECTION_DATE:0 "Next [concept_election]: [AccessPlayer.GetNextElectionDate|v]"
 PREVIOUS_ELECTION_RESULTS:0 "Previous [concept_election] results"
 PARTY_ELECTION_TOOLTIP:0 "Candidates from [Party.GetNameNoFormatting|v] received [Party.GetCurrentVotingPowerShare|%1v] of the [concept_votes] last [concept_election]"
 ELECTION_ENTRY:1 "#header [Party.GetName] [Party.GetMembersSummary]#!\n[concept_votes]: $VOTING_POWER_SHARE|%1v$"
 ELECTION_POLL_ENTRY:0 "$ELECTION_ENTRY$\n[concept_momentum]: #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_BREAKDOWN [Party.GetMomentum|%=+0]#!#!\n\n"
 MOMENTUM_BREAKDOWN:1 "[Party.GetMomentumDesc]"
 IG_ELECTION_MOMENTUM:1 "#header [concept_momentum]#!\nCurrent value: $MOMENTUM|%=+0$\n$TOOLTIP_DELIMITER$\nA value that is randomized at start of Election + changes from Events: $RAW|%=+0$[ConcatIfNeitherEmpty(SelectLocalization(Not(EqualTo_CFixedPoint(Character.GetPopularity, '(CFixedPoint)0')),'CHARACTER_POPULARITY_HEADER',''), '$POPULARITY_ADJUSTMENT|%=+0$')]"
 CHARACTER_POPULARITY_HEADER:0 "\nAdjustment from [Character.GetFullName]'s [concept_popularity]: "
 CHARACTER_POPULARITY:0 "#v [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#! (#v [Character.GetPopularity|+0]#!)"
 CHARACTER_POPULARITY_LABEL: "[concept_popularity]: #v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|+0]#!#!#!)"
 POPULARITY:0 "[concept_popularity]"
 POPULARITY_ICON: "@popularity! [concept_popularity]"
 IDEOLOGY_CONCEPT:0 "[concept_ideology]"
 CHARACTER_IDEOLOGY:1 "#v [Ideology.GetNameNoFormatting]#!"
 RELIGION:0 "[concept_religion]"
 CHARACTER_RELIGION:1 "#v [Religion.GetNameNoFormatting]#!"
 CHARACTER_PANEL_CULTURE_LABEL:0 "[concept_culture]"
 CHARACTER_CULTURE:0 "#v [Culture.GetNameNoFormatting]#!"
 CHARACTER_INTEREST_GROUP_OR_LEADER: "[SelectLocalization(Character.IsIGLeader, 'CHARACTER_INTEREST_GROUP_LEADER', 'CHARACTER_INTEREST_GROUP')]"
 CHARACTER_INTEREST_GROUP_LEADER: "[concept_leader] of [concept_interest_group]"
 CHARACTER_INTEREST_GROUP: "[concept_interest_group]"

 CHARACTER_PANEL_TAB_OVERVIEW:0 "Overview"
 CHARACTER_PANEL_TAB_OVERVIEW_SELECTED:0 "#b Overview#!"
 CHARACTER_PANEL_TAB_MODIFIERS:0 "Modifiers"
 CHARACTER_PANEL_TAB_MODIFIERS_SELECTED:0 "#b Modifiers#!"
 CHARACTER_PANEL_TRAITS_HEADER:0 "Character Traits"

 JOURNAL_ENTRY_PROGRESSBAR_FROM_ZERO:0 "Progress: [JournalEntry.GetGoalProgressPercent|%1v]  ([JournalEntry.GetGoalProgressValue|D]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_FROM_BASE:0 "Progress: [JournalEntry.GetGoalProgressPercent|%1v]  ([JournalEntry.GetBaselineValue|D][JournalEntry.GetGoalProgressValue|D=v]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_MONTHS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromMonths( FixedPointToInt( JournalEntry.GetRemainingProgressValue ), '(int32)2', '' )] remaining"
 JOURNAL_ENTRY_PROGRESSBAR_WEEKS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromWeeks( FixedPointToInt( JournalEntry.GetRemainingProgressValue ), '(int32)2', '' )] remaining"

 URBANIZATION_TOOLTIP: "#header [concept_urbanization]#!\nTotal: #tooltippable #tooltip:[State.GetTooltipTag],URBANIZATION_BREAKDOWN [State.GetUrbanization|v]#!#!\n$TOOLTIP_DELIMITER$\nEach [State.GetUrbanizationNeededPerLevelFormatted] [concept_urbanization] will provide #b +1#! [GetBuildingType('building_urban_center').GetName] for the [concept_state]"
 URBANIZATION_BREAKDOWN: "#header [concept_urbanization] in [State.GetName]#!\nTotal: [State.GetUrbanization|v]\nOne level of [GetBuildingType('building_urban_center').GetName] is created for each [State.GetUrbanizationNeededPerLevelRaw|v] [concept_urbanization] in the [concept_state]\n$TOOLTIP_DELIMITER$\n[State.GetUrbanizationDesc]"

 LAND_TEXT:0 "[concept_arable_land]: [State.GetNumFreeArableLand|v]"
 LAND_TEXT_TOOLTIP:1 "#header [concept_arable_land]#!\nAvailable: [State.GetNumFreeArableLand|v][ConcatIfNeitherEmpty( '\n', State.GetFreeArableLandAfterInactiveQueuedEntry )]\n$TOOLTIP_DELIMITER$\n$LAND_TEXT_TOOLTIP_BREAKDOWN$\n\n$LAND_TEXT_TOOLTIP_CONCEPT$"
 LAND_TEXT_TOOLTIP_AFTER_INACTIVE_QUEUED:0 "After [concept_construction_queue] finishes: $VALUE|v$"
 LAND_TEXT_TOOLTIP_BREAKDOWN:1 "[State.GetArableLandCapacity|v=] from local geography[ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandFullyBuiltEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandUnderConstructionEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumInactiveQueuedArableLandEntry )]"
 LAND_TEXT_TOOLTIP_BREAKDOWN_FULLY_BUILT:0 "-$VALUE|v$ from built buildings"
 LAND_TEST_TOOLTIP_BREAKDOWN_CONSTRUCTION_DETAIL:1 "-$VALUE|v$ from buildings under construction"
 LAND_TEXT_NUM_INACTIVE_QUEUED_ARABLE_LAND:0 "-$VALUE|v$ [concept_arable_land] reserved for queued buildings"
 LAND_TEXT_TOOLTIP_CONCEPT:1 "Any available [concept_arable_land] in [State.GetName] is occupied by [State.GetSubsistenceBuilding.GetName]."
 SUBSISTENCE_CONCEPT:0 "#concept $SUBSISTENCE_CONCEPT_CLEAN$#!"
 SUBSISTENCE_CONCEPT_CLEAN:0 "This is a [concept_subsistence_building], which is a highly inefficient Building that appears when there is unused [concept_arable_land] in a State. As soon as you start exploiting the potential it is using, this Building will automatically get downsized."
 SUBSISTENCE_CREATION_EXPLANATION:1 "One level of [concept_subsistence_building] is automatically created for each unused [concept_arable_land] in the [concept_state].\n[Building.GetState.GetName] has #tooltippable #tooltip:[Building.GetState.GetTooltipTag],LAND_TEXT_TOOLTIP [Building.GetState.GetNumFreeArableLand|v]#!#! unused [concept_arable_land]"
 URBAN_CENTER_EXPLANATION:1 "This is an [GetBuildingType('building_urban_center').GetName], which automatically appears when there is enough [concept_urbanization] in the [concept_state]. $URBAN_CENTER_CREATION_EXPLANATION$"
 URBAN_CENTER_CREATION_EXPLANATION: "One level of [GetBuildingType('building_urban_center').GetName] is created for each [Building.GetState.GetUrbanizationNeededPerLevelFormatted] [concept_urbanization] in the [concept_state].\n[Building.GetState.GetName] has #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization|v]#!#! [concept_urbanization]"
 LOCAL_WORKFORCE_OWNERSHIP_EXPLANATION: "The [concept_building_owners] of any [Building.GetName] are always the local [concept_workforce]"

 UNUSED_TRADE_ROUTES:0 "You have [Market.GetNumberOfUnusedTradeRoutes(GetPlayer.Self)|v] unused Levels of Trade Routes in [Market.GetName]"

 EXPENSIVE_GOODS_IN_MARKET_ELEMENT:0 "$TAB$[State.GetName] - [Goods.GetMarketPriceWithTooltip|1]"

 URBAN_PART_OF_STATE:0 "Urban Buildings"
 NON_URBAN_PART_OF_STATE:0 "Rural Buildings"
 INFRA_PART_OF_STATE:0 "Development"

 URBAN_CENTER:0 "Urban Center"
 LEVEL:0 "Size:"
 STANDARD_OF_LIVING_TITLE:0 "[concept_sol]:"
 UNEMPLOYED_TITLE:0 "[concept_unemployed]:"
 TOOLTIP_VIEW_GRID:0 "#header View Grid#!"
 TOOLTIP_VIEW_LIST:0 "#header View List#!"
 TOOLTIP_PIE_CHART: "#header View Pie Chart#!"
 TOOLTIP_AREA_CHART: "#header View Area Chart"

 REFORM_PREV:0 "#bold [ReformGroup.GetPrevious.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"
 REFORM_NEXT:0 "#bold [ReformGroup.GetNext.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"

 HAS_DIPLO_POWER:0 "@inf! $COMPARATOR$ to #BOLD $NUM|0$#!"
 HAS_NOT_DIPLO_POWER:0 "#N $HAS_DIPLO_POWER$#!"

 EXPAND:1 "#header Expand#!"
 COLLAPSE:0 "#header Collapse#!"
 UNPIN:0 "#header Unpin#! from outliner"
 PIN:0 "#header Pin#! to outliner"
 buildings_expand:0 "Expand"
 buildings_expand_tooltip:0 "#BOLD #V Expand#!#!\n$TOOLTIP_DELIMITER$\n[concept_building_desc]"
 buildings_upgrade:0 "Upgrade"
 buildings_upgrade_tooltip:0 "#BOLD #V Upgrade#!#!"
 factorys_tooltip:0 "#BOLD #V Factories#!#!"
 rgos_tooltip:0 "#BOLD #V Resource Gathering Operations#!#!"

 MAP_LIST_NO_AVAILABLE_OPTIONS:0 "No available options"

 OUTLINER_ENTRY_INSTRUCTION_OPEN:0 "#instruction Click#! to expand or collapse"
 OUTLINER:0 "Outliner"
 OUTLINER_TOOLTIP:0 "#bold Outliner#!"
 MAP_LIST_DECREE_COST:1 "@aut! #v [MapListOption.GetDecreeData.GetCost]#!"
 MAP_LIST:1 "Ledger"
 MAP_LIST_TOOLTIP:2 "#bold Ledger#!"
 establish_colony:0 "Establish Colony"
 establish_colony_tooltip:1 "#HEADER Establish Colony#!\n$TOOLTIP_DELIMITER$\n[concept_colony_desc]"
 declare_interest:1 "Declare Interests"
 declare_interest_tooltip:1 "Create an [concept_interest] in a [concept_strategic_region] where we do not control any territory"
 diplomatic_plays:0 "Diplomatic Plays"
 diplomatic_plays_tooltip:0 "#header $diplomatic_plays$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_play_desc]"
 diplomatic_actions:0 "Diplomatic Actions"
 diplomatic_actions_tooltip:0 "#header Propose [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 PARTIES_ALREADY_IN_GOV:0 "#N Is already the current government#!"
 PARTIES_NO_PARTIES_SELECTED:0 "#N No parties selected to form government#!"
 DECLARE_INTEREST_BUTTON: "$declare_interest$ ([GetPlayer.GetNumDeclaredInterests|v] / [GetPlayer.CalcMaxNumDeclaredInterests|v])"

 buildings_lens_tab:0 "Buildings"
 buildings_lens_tab_tooltip:0 "Build or Expand Buildings\n$TOOLTIP_DELIMITER$\n#concept You can Build new or Expand existing [Concept('concept_building', '$concept_buildings$')] to be able to employ more people.#!"
 special_buildings_lens_tab:0 "Special Buildings"
 special_buildings_lens_tab_tooltip:0 "Build Special Buildings\n$TOOLTIP_DELIMITER$\n#concept Special [Concept('concept_building', '$concept_buildings$')] include [Concept('concept_canal', '$concept_canals$')] and [Concept('concept_monument', '$concept_monuments$')].#!"
 agriculture_lens_tab:0 "Agriculture"
 agriculture_lens_tab_tooltip:0 "Build Agricultural Buildings\n$TOOLTIP_DELIMITER$\n#concept Agricultural [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to produce [Concept('concept_good', '$concept_goods$')] using the [concept_arable_land] in a [concept_state].#!"
 resources_lens_tab:0 "Resources"
 resources_lens_tab_tooltip:0 "Build Resource Buildings\n$TOOLTIP_DELIMITER$\n#concept Resource [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to produce [Concept('concept_good', '$concept_goods$')] using the [Concept('concept_resource_potential', '$concept_resource_potentials$')] in a [concept_state].#!"
 industry_lens_tab:0 "Industry"
 industry_lens_tab_tooltip:0 "Build Industrial Buildings\n$TOOLTIP_DELIMITER$\n#concept Industrial [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to convert one or many types of [Concept('concept_good', '$concept_goods$')] into one or many other types of $concept_goods$.#!"
 decrees_lens_tab:0 "Decrees"
 decrees_lens_tab_tooltip:0 "Enact Decrees\n$TOOLTIP_DELIMITER$\n#concept You can set a [concept_decree] in your states, providing a variety of benefits.#!"
 state_actions_lens_tab:0 "State Actions"
 state_actions_lens_tab_tooltip:0 "Interact with your [Concept( 'concept_state', '$concept_states$' )]"
 diplomatic_plays_lens_tab:1 "Diplomatic Demands"
 diplomatic_plays_lens_tab_tooltip:1 "#header $concept_diplomatic_demands$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_demand_desc]"
 diplomatic_actions_lens_tab:0 "Diplomatic Actions"
 diplomatic_actions_lens_tab_tooltip:0 "#header Propose [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 army_lens_tab:0 "Army"
 army_lens_tab_tooltip:0 "Interact with your Army"
 navy_lens_tab:0 "Navy"
 navy_lens_tab_tooltip:0 "Interact with your Navy"
 show_supply_areas_lens_tab:0 "Show Supply Areas"
 show_supply_areas_lens_tab_tooltip:0 "Show Supply Areas\n$TOOLTIP_DELIMITER$\n#b DEBUG#!"
 trade_actions_lens_tab:0 "Trade Actions"
 trade_actions_lens_tab_tooltip:0 "Take actions pertaining to Trade"
 import_routes_lens_tab:0 "Import Trade Routes"
 import_routes_lens_tab_tooltip:0 "#header $import_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nEstablish a semi-permanent trade route between two markets, importing goods to a market you own or control ports in"
 export_routes_lens_tab:0 "Export Trade Routes"
 export_routes_lens_tab_tooltip:0 "#header $export_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nEstablish a semi-permanent trade route between two markets, exporting goods from a market you own or control ports in"
 interests_lens_tab:1 "Regional Actions"
 interests_lens_tab_tooltip:1 "Interact with [Concept('concept_strategic_region','$concept_strategic_regions$')]"

 JOURNAL_WINDOW_HEADER:0 "Journal"
 JOURNAL_ENTRY_HEADING:0 "[concept_journal_entry]"

 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES:0 "You have #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! unpinned [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries)), '(int32)1'), 'challenge', 'challenges')]"

 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT:0 "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! unpinned"

 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES:0 "You have #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! unpinned [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'JOURNAL_ENTRY_HEADING', 'ACTIVE_JOURNAL_ENTRIES')]"

 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT:0 "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! unpinned"

 EFFECT_RATIO_BELOW_MAX:0 "#v $EFFECT_RATIO|0%$#!"
 EFFECT_RATIO_ABOVE_MAX:0 "#v $EFFECT_RATIO|0%$#! or more"

 POWER_TOOLTIP:0 "#tooltip_header $POWER_TYPE$#!\nBalance: #variable $VAL|+=0$#![ConcatIfNeitherEmpty( '\n', '$EFFECT$' )]"
 POWER_EXCESS_EFFECT_HEADER:0 "$TOOLTIP_DELIMITER$\nEffects from $EFFECT_RATIO_DESC$ #g excess#! $POWER_TYPE$ (generation is higher than usage):\n$BREAKDOWN$"
 POWER_DEFICIT_EFFECT_HEADER:0 "$TOOLTIP_DELIMITER$\nEffects from $EFFECT_RATIO_DESC$ $POWER_TYPE$ #n deficit#! (usage is higher than generation):\n$BREAKDOWN$"
 BUREAUCRACY_TOOLTIP:1 "[GetPlayer.GetPowerTooltip('bureaucracy')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'BUREAUCRACY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
 AUTHORITY_TOOLTIP:1 "[GetPlayer.GetPowerTooltip('authority')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'AUTHORITY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
 INFLUENCE_TOOLTIP:1 "[GetPlayer.GetPowerTooltip('influence')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'INFLUENCE_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
 BUREAUCRACY_TOOLTIP_DELAYED:1 "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('bureaucracy')|D+0=]#! @bur![Nbsp][concept_bureaucracy] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('bureaucracy'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('bureaucracy'))]"
 AUTHORITY_TOOLTIP_DELAYED:1 "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('authority')|D+0=]#! @aut![Nbsp][concept_authority] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('authority'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('authority'))]"
 INFLUENCE_TOOLTIP_DELAYED:1 "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('influence')|D+0=]#! @inf![Nbsp][concept_influence] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('influence'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('influence'))]"
 BUREAUCRACY_LAWS:0 "Laws: #variable $COST|+=$#!\n"
 BUREAUCRACY_BUILDINGS:0 "Buildings: #variable $COST|+=$#!\n"
 AUTHORITY_FROM_RULER_POPULARITY:0 "#v $VAL|+=0$#! from [concept_popularity] of [Character.GetFullNameWithTitle]"

 CAPITAL_POLITICAL_EXPENSES_CHANGE_RELATIONS:0 "Changing our Peoples Opinion of $COUNTRY_NAME$: #N #BOLD -$POWER_COST|1$ #!#!\n"
 CAPITAL_MONEY:1 "#tooltip_header [concept_money]#!\nBalance: #variable [GetPlayer.GetCustom('currency_symbol')][AccessPlayer.PredictWeeklyBalance|D=+]#![GetPlayer.GetPowerDeltaIcon('money')]\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetPrincipal, '(CFixedPoint)0'), 'CREDIT_DESC', 'GOLD_RESERVES_DESC')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'CAPITAL_MONEY_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
 GOLD_RESERVES_DESC:1 "[concept_gold_reserves]: #tooltippable #tooltip:GOLD_RESERVES_BREAKDOWN [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetGoldReserves|Dv]#!#!"
 CREDIT_DESC:0 "[concept_credit]: #tooltippable #tooltip:CREDIT_PROGRESS #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPrincipal|K]#!#!#! / #maximum [GetPlayer.GetMaxCredit|K]#!"
 CREDIT_LIMIT:1 "[concept_credit]: #variable [GetPlayer.GetMaxCredit|2*]#!"

 CAPITAL_MONEY_DELAYED:2 "\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetUnrealizedTaxes, '(CFixedPoint)0'), 'UNREALIZED_TAXES', '')][GetPlayer.GetIncomeBreakdown]\n\n[GetPlayer.GetExpensesBreakdown]"
 UNREALIZED_TAXES:1 "[concept_unrealized_taxes]: #tooltippable #tooltip:UNREALIZED_TAXES_BREAKDOWN #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetUnrealizedTaxes|D-]#!#!#!\n$TOOLTIP_DELIMITER$\n"
 UNREALIZED_TAXES_BREAKDOWN:1 "#header [concept_unrealized_taxes]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetUnrealizedTaxes|D-]#!\n$TOOLTIP_DELIMITER$\nAverage Uncollected Taxes: #tooltippable #tooltip:AVG_STATE_COLLECTION_MULT_BREAKDOWN #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!#!\nAverage [concept_tax_waste]: #tooltippable #tooltip:AVG_TAX_WASTE_BREAKDOWN #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!#!"
 AVG_STATE_COLLECTION_MULT_BREAKDOWN:1 "#header Average Uncollected Taxes: #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageStateTaxCollectionMultBreakdown]"
 STATE_TAX_COLLECTION_MULT_SINGLE_STATE:1 "[GetPlayer.GetCustom('currency_symbol')]$UNCOLLECTED_TAX|Dv$ (#tooltippable #tooltip:$STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY_TAG$ $TAX_COLLECTION_MULT|+%0$#!#!) in $STATE_NAME$"
 STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY:0 "#header Tax Collection Malus in $STATE_NAME$ is $TAX_COLLECTION_MULT|+%0$ due to#!:\n$TOOLTIP_DELIMITER$\n$SUMMARY$"
 AVG_TAX_WASTE_BREAKDOWN:1 "#header Average [concept_tax_waste]: #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageTaxWasteBreakdown]"
 STATE_TAX_WASTE_SINGLE_STATE:1 "$STATE_NAME$: $TAX_WASTE_VALUE|D-$ ($TAX_WASTE_PERCENT|-%0$)"

 GOLD_RESERVES_BREAKDOWN:1 "[AccessPlayer.GetGoldProgressDesc]"
 POWER_BASE_INCOME:0 "Base Income: #variable #P +$POWER_BASE_GENERATION|1$ #!#!\n"
 CAPITAL_TRUST:0 "#tooltip_header Trust#!\nCurrent: #HEADER [GetPlayer.GetTrust|2]#!\nMonthly decay: #BOLD #V [GetPlayer.GetMonthlyTrustChange|+=3]#!#!"
 CAPITAL_TRUST_DELAYED:0 "\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetTrustBreakdown]\nMax amount: #variable 100#!\n\n$TRUST_CONCEPT$"
 POP_TOOLTIP:2 "#tooltip_header [Concept('concept_pop','$concept_population$')]#!\nCurrent: [Country.GetTotalPopulation|*2v] ([Country.GetPopulationRanking])\n[Country.GetPopGrowthDesc]$POP_TOOLTIP_DELAYED$"
 RADICALS_TOOLTIP:1 "#tooltip_header $RADICALS$#!\nThere are #v [Country.GetNumRadicals|D]#! $RADICALS$ in the total population of #v [Country.GetTotalPopulation|D]#! in [Country.GetName]\n$TOOLTIP_DELIMITER$\nThe number of $RADICALS$ changed by #v #tooltippable #tooltip:[Country.GetTooltipTag],RADICALS_CHANGE_TOOLTIP [Country.GetTotalNumRadicalsChange|D=-]#!#!#! since [Country.GetRadicalsLoyalistsChangeStartDate|v].\nThe most impactful factors are [Country.GetRadicalsChangeSummary]\n\n[Country.GetRadicalsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( GreaterThan_int32(Country.CalcNumStatesInTurmoil, '(int32)0'), 'STATES_IN_TURMOIL', '' ))][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromRadicals, 'RADICALS_IG_APPROVAL', '' ))]"
 LOYALISTS_TOOLTIP:1 "#tooltip_header $LOYALISTS$#!\nThere are #v [Country.GetNumLoyalists|D]#! $LOYALISTS$ in the total population of #v [Country.GetTotalPopulation|D]#! in [Country.GetName]\n$TOOLTIP_DELIMITER$\nThe number of $LOYALISTS$ changed by #v #tooltippable #tooltip:[Country.GetTooltipTag],LOYALISTS_CHANGE_TOOLTIP [Country.GetTotalNumLoyalistsChange|D=+]#!#!#! since [Country.GetRadicalsLoyalistsChangeStartDate|v]\nThe most impactful factors are [Country.GetLoyalistsChangeSummary]\n\n[Country.GetLoyalistsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromLoyalists, 'LOYALISTS_IG_APPROVAL', '' ))]"

 RADICALS_SUMMARY_IG_HEADER: "\n\n$concept_radicals$ by [concept_interest_group]:"
 LOYALISTS_SUMMARY_IG_HEADER: "\n\n$concept_loyalists$ by [concept_interest_group]:"
 RADICALS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_LOYALISTS_SUMMARY_IG_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in other [Concept('concept_interest_group', '$concept_interest_groups$')]"

 RADICALS_SUMMARY_POP_TYPE_HEADER: "$concept_radicals$ by [concept_profession]:"
 LOYALISTS_SUMMARY_POP_TYPE_HEADER: "$concept_loyalists$ by [concept_profession]:"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_LOYALISTS_SUMMARY_POP_TYPE_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in other [Concept('concept_profession','$concept_professions$')]"

 RADICALS_LOYALISTS_SUMMARY_POLITICALLY_UNALIGNED_LIST_ITEM: "\n$TAB$$VAL|vD$ [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]"
 NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nThere are #v [Country.GetNumNeutrals|*2]#! $NEUTRALS$ in the total population of #v [Country.GetTotalPopulation|*2]#! in [Country.GetName]"
 IG_RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nThere are #v [InterestGroup.GetNumRadicals|-*2]#! $RADICALS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumRadicalsRatio|%2r] of #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! supporting [Concept('concept_pop', '$concept_pops$')]"
 IG_LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nThere are #v [InterestGroup.GetNumLoyalists|+*2]#! $LOYALISTS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumLoyalistsRatio|%2g] of #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! supporting [Concept('concept_pop', '$concept_pops$')]"
 IG_NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nThere are #v [InterestGroup.GetNumNeutrals|*2]#! $NEUTRALS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumNeutralsRatio|%2v] of #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! supporting [Concept('concept_pop', '$concept_pops$')]"
 POP_TOOLTIP_DELAYED:0 "\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int64( GetPlayer.GetPeopleAbroad, '(int64)0' ), 'INCORPORATED_POPULATION', ''), '\n')][ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int64( GetPlayer.GetPeopleAbroad, '(int64)0' ), 'UNINCORPORATED_POPULATION', ''), '\n\n')]$POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL$"
 POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL:0 "Gainfully Employed: #variable [Country.GetSalariedWorkingAdults|K]#!\nPeasants: [Country.GetSubsistingWorkingAdults|Kv]\n[concept_unemployed]: [Country.GetUnemployedWorkingAdults|Kv]\n[concept_dependents]: #variable [Country.GetDependents|K]#!"
 COST_POLITICAL:0 "@aut!#BOLD #V $COST|1$#!#!"
 COST_DIPLOMATIC:0 "@inf!#BOLD #V $COST|1$#!#!"
 MISSING_RESOURCES_COLON:0 "#N Missing Resources:#! "
 CAPITAL_ADMINISTRATIVE_COLONIAL_MAINTENANCE:0 "Colonial maintenance: #N #BOLD -$MAINTENANCE|1$ #!#!\n"
 WEEKLY_GDP:0 "Weekly GDP"
 POPULATION:1 "$concept_population$"
 SUPPORTING_POPULATION: "Supporting $concept_pops$"
 TOTAL_INDIVIDUALS_SUPPORT: "Total number of [Concept('concept_individual', '$concept_individuals$')] [Concept('concept_political_movement_support','$concept_political_movement_supporting$')] this [Concept('concept_political_movement','$concept_political_movement_short$')]"
 POLITICALLY_UNALIGNED: "[Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]"
 SUPPORTING_POLITICALLY_UNALIGNED_POPULATION: "[Concept('concept_political_movement_support','$concept_political_movement_support_short$')] by $POLITICALLY_UNALIGNED$"
 POPULATION_TOOLTIP:0 "[Concept('concept_pop', '$concept_population$')]"
 RADICALS:1 "[Concept('concept_radical', '$concept_radicals$')]"
 NO_RADICALS:1 "You currently have no [Concept('concept_radical', '$concept_radicals$')]"
 LOYALISTS:1 "[Concept('concept_loyalist', '$concept_loyalists$')]"
 NO_LOYALISTS:1 "You currently have no [Concept('concept_loyalist', '$concept_loyalists$')]"
 NEUTRALS: "[Concept('concept_neutral', '$concept_neutrals$')]"
 AVG_STANDARD_OF_LIVING:0 "Average [concept_sol]"
 MONEY:0 "[concept_gold_reserves]"
 TENSION:0 "[concept_tension]"
 INFAMY:0 "[concept_infamy]"
 TAXATION:0 "[Concept('concept_taxes','$concept_taxation$')]"

 NO_ACTIVE_INTERACTION: "No Active Interaction or Map Mode"

 INACTIVE_TREATY_PORT: "Inactive [concept_treaty_port]"

 CORE_IDEOLOGY_HEADER: "[Ideology.GetName] - [concept_core_movement_ideology]"
 CHARACTER_IDEOLOGIES_HEADER: "Possible Character $concept_ideologies$"
 MOVEMENT_ENDORSE_ICON_TOOLTIP: "The [PoliticalMovement.GetName] @approves! [Concept('concept_endorse_oppose','$concept_endorses$')] [Concept('concept_law', '$concept_laws$')] in this column"
 MOVEMENT_INDIFFERENT_ICON_TOOLTIP: "The [PoliticalMovement.GetName] is @indifferent! [Concept('concept_endorse_oppose', '$concept_indifferent$')] towards [Concept('concept_law', '$concept_laws$')] in this column"
 MOVEMENT_OPPOSE_ICON_TOOLTIP: "The [PoliticalMovement.GetName] @disapproves! [Concept('concept_endorse_oppose','$concept_opposes$')] [Concept('concept_law', '$concept_laws$')] in this column"
 MOVEMENT_AFFECTED_INTEREST_GROUPS: "[Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')] [Concept('concept_interest_group','$concept_interest_groups$')]:"
 MOVEMENT_AFFECTED_INTEREST_GROUPS_DESC: "New [Concept('concept_leader', '$concept_leaders$')] may appear in the [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')] [Concept('concept_interest_group','$concept_interest_groups$')] with any of the above [concept_character] [Concept('concept_ideology','$concept_ideologies$')]"
 NO_PRESSURED_INTEREST_GROUPS: "No [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')] [Concept('concept_interest_group','$concept_interest_groups$')]"
 NO_POSSIBLE_CHARACTER_IDEOLOGIES: "No Possible [concept_character] [Concept('concept_ideology','$concept_ideologies$')]"

 STATES_IN_TURMOIL:1 "There are #tooltippable #tooltip:[Country.GetTooltipTag],STATES_IN_TURMOIL_TOOLTIP [Country.CalcNumStatesInTurmoil|v]#!#! [Concept('concept_state', '$concept_states$')] that are in [concept_turmoil] due to $RADICALS$"
 STATES_IN_TURMOIL_TOOLTIP:0 "#header [concept_turmoil]#!\n$TOOLTIP_DELIMITER$\n[Country.GetStatesInTurmoilBreakdown]"
 STATES_IN_TURMOIL_BREAKDOWN_NONE:1 "No [Concept('concept_state', '$concept_states$')] are in [concept_turmoil]"
 STATES_IN_TURMOIL_BREAKDOWN:1 "The following [Concept('concept_state', '$concept_states$')] are in [concept_turmoil]:\n$BREAKDOWN$"

 RADICALS_CHANGE_TOOLTIP:0 "#header $RADICALS$#![ConcatIfNeitherEmpty('\n', Country.GetRadicalsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetRadicalsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumRadicalsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumRadicalsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_CHANGE_TOOLTIP:0 "#header $LOYALISTS$#![ConcatIfNeitherEmpty('\n', Country.GetLoyalistsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetLoyalistsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumLoyalistsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumLoyalistsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_RADICALS_NO_CHANGE:0 "No recent changes"
 RADICALS_INCREASE_other:1 "#v #n +$AMOUNT|D$#!#! from events and other reasons"
 RADICALS_INCREASE_standard_of_living_reduction:1 "#v #n +$AMOUNT|D$#!#! from decreases in [concept_sol]"
 RADICALS_INCREASE_low_standard_of_living:1 "#v #n +$AMOUNT|D$#!#! from having a [concept_sol] below expected minimum"
 RADICALS_INCREASE_political_movement_demands:1 "#v #n +$AMOUNT|D$#!#! from [Concept('concept_political_movement', '$concept_political_movements$')] with high [concept_activism]"
 RADICALS_INCREASE_discrimination:1 "#v #n +$AMOUNT|D$#!#! from low [concept_acceptance]"
 RADICALS_INCREASE_slavery:2 "#v #n +$AMOUNT|D$#!#! from being [Concept('concept_slavery', '$concept_enslaved$')]"
 RADICALS_INCREASE_conquest:1 "#v #n +$AMOUNT|D$#!#! from being conquered by a foreign [concept_country]"
 RADICALS_INCREASE_bankruptcy:1 "#v #n +$AMOUNT|D$#!#! from declaring [concept_bankruptcy]"
 RADICALS_INCREASE_lost_job:1 "#v #n +$AMOUNT|D$#!#! from being fired from [Concept('concept_building', '$concept_buildings$')]"
 RADICALS_INCREASE_lost_ownership_job:1 "#v #n +$AMOUNT|D$#!#! from being fired from [Concept('concept_building', '$concept_buildings$')] where they had [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
 RADICALS_INCREASE_building_downsized:1 "#v #n +$AMOUNT|D$#!#! from downsizing of [concept_state] [Concept('concept_building', '$concept_buildings$')] where their [concept_profession] has [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
 RADICALS_INCREASE_legitimacy:1 "#v #n +$AMOUNT|D$#!#! from low [concept_legitimacy]"
 RADICALS_INCREASE_government_reform:1 "#v #n +$AMOUNT|D$#!#! from recent change of [concept_government]"
 RADICALS_INCREASE_nationalize: "#v #n +$AMOUNT|D$#!#! from [Concept('concept_nationalize','$concept_nationalization$')] of [Concept('concept_building', '$concept_buildings$')]"
 RADICALS_INCREASE_starvation: "#v #n +$AMOUNT|D$#!#! from [concept_starvation]"

 RADICALS_DECREASE_other:1 "#v #p -$AMOUNT|D$#!#! from [Concept('concept_pop', '$concept_pops$')] dying, events and other reasons"
 RADICALS_DECREASE_standard_of_living_increase:1 "#v #p -$AMOUNT|D$#!#! from increases in [concept_sol]"
 RADICALS_DECREASE_political_movement_success:2 "#v #p -$AMOUNT|D$#!#! from enacting [Concept('concept_law', '$concept_laws$')] backed by [Concept('concept_political_movement', '$concept_political_movements$')]"
 RADICALS_DECREASE_legitimacy:1 "#v #p -$AMOUNT|D$#!#! from high [concept_legitimacy]"
 RADICALS_DECREASE_external_movement: "#v #p -$AMOUNT|D$#!#! from external [concept_migration]"

 LOYALISTS_INCREASE_other:1 "#v #p +$AMOUNT|D$#!#! from events and other reasons"
 LOYALISTS_INCREASE_standard_of_living_increase:1 "#v #p +$AMOUNT|D$#!#! from increases in [concept_sol]"
 LOYALISTS_INCREASE_political_movement_success:2 "#v #p +$AMOUNT|D$#!#! from enacting [Concept('concept_law', '$concept_laws$')] backed by [Concept('concept_political_movement', '$concept_political_movements$')]"
 LOYALISTS_INCREASE_legitimacy:1 "#v #p +$AMOUNT|D$#!#! from high [concept_legitimacy]"

 LOYALISTS_DECREASE_other:1 "#v #n -$AMOUNT|D$#!#! from [Concept('concept_pop', '$concept_pops$')] dying, events and other reasons"
 LOYALISTS_DECREASE_standard_of_living_reduction:1 "#v #n -$AMOUNT|D$#!#! from decreases in [concept_sol]"
 LOYALISTS_DECREASE_low_standard_of_living:1 "#v #n -$AMOUNT|D$#!#! from having a [concept_sol] below expected minimum"
 LOYALISTS_DECREASE_political_movement_demands:1 "#v #n -$AMOUNT|D$#!#! from [Concept('concept_political_movement', '$concept_political_movements$')] with high [concept_activism]"
 LOYALISTS_DECREASE_discrimination:1 "#v #n -$AMOUNT|D$#!#! from low [concept_acceptance]"
 LOYALISTS_DECREASE_slavery:2 "#v #n -$AMOUNT|D$#!#! from being [Concept('concept_slavery', '$concept_enslaved$')]"
 LOYALISTS_DECREASE_conquest:1 "#v #n -$AMOUNT|D$#!#! from being conquered by a foreign [concept_country]"
 LOYALISTS_DECREASE_bankruptcy:1 "#v #n -$AMOUNT|D$#!#! from declaring [concept_bankruptcy]"
 LOYALISTS_DECREASE_lost_job:1 "#v #n -$AMOUNT|D$#!#! from losing their jobs"
 LOYALISTS_DECREASE_lost_ownership_job:1 "#v #n -$AMOUNT|D$#!#! from losing jobs in [Concept('concept_building', '$concept_buildings$')] where they had [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
 LOYALISTS_DECREASE_building_downsized:2 "#v #n -$AMOUNT|D$#!#! from downsizing of [concept_state] [Concept('concept_building', '$concept_buildings$')] where their [concept_profession] has [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
 LOYALISTS_DECREASE_government_reform:1 "#v #n -$AMOUNT|D$#!#! from [concept_government_reform]"
 LOYALISTS_DECREASE_legitimacy:1 "#v #n -$AMOUNT|D$#!#! from low [concept_legitimacy]"
 LOYALISTS_DECREASE_external_movement: "#v #n -$AMOUNT|D$#!#! from external [concept_migration]"

 LOYALISTS_IG_APPROVAL:0 "Effects of $LOYALISTS$ on [concept_interest_group] approval:\n[Country.GetIGApprovalFromLoyalistsBreakdown]"
 RADICALS_IG_APPROVAL:0 "Effects of $RADICALS$ on [concept_interest_group] approval:\n[Country.GetIGApprovalFromRadicalsBreakdown]"
 LOYALISTS_OR_RADICALS_IG_APPROVAL_ENTRY:1 "[InterestGroup.GetName]: #v $VALUE|=+$#! approval"

 INCORPORATED_POPULATION:0 "Incorporated Population: [GetPlayer.GetIncorporatedPopulation|Kv]"
 UNINCORPORATED_POPULATION:0 "Unincorporated Population: [GetPlayer.GetPeopleAbroad|Kv]"

 POWER_EXPENSE_HEADER:1 "Your total usage of #v $VAL|D+=$#! $EXPENSE_ICON$ [$EXPENSE_CONCEPT$] is due to:\n$BREAKDOWN$"

 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM:1 "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! from $PACT$ with [Country.GetName]"
 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM_BREAKDOWN:0 "#header [Country.GetName] - $PACT$#!\nThe total cost of #variable $COST|0$#! is due to:\n$BREAKDOWN$"
 DIPLOMATIC_PACT_BASE_COST:0 "Base Cost: #variable $COST|0$#!"
 DIPLOMATIC_PACT_INFAMY_COST:0 "Our [concept_infamy]: $COST|=-0$"
 DIPLOMATIC_PACT_RANK_COST:0 "$OTHER$ $RANK_NAME$ Rank: $COST|=-0$"
 DIPLOMATIC_PACT_PRO_LOBBY_COST: "[concept_clout] of Pro-[COUNTRY.GetAdjectiveNoFormatting] [Concept('concept_political_lobby', '$concept_political_lobbies_short$')]: $COST|=-0$"
 DIPLOMATIC_PACT_ANTI_LOBBY_COST: "[concept_clout] of Anti-[COUNTRY.GetAdjectiveNoFormatting] [Concept('concept_political_lobby', '$concept_political_lobbies_short$')]: $COST|=-0$"
 COUNTRY_INFAMY_MAP_TOOLTIP:0 "[SelectLocalization(State.GetCountry.IsColonizable, GetPlayer.GetTensionTooltip(State.GetCountry), State.GetCountry.GetInfamyDesc)]"


 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $POPULATION|Kv$ people in $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from [Concept('concept_institution', '$concept_institutions$')] across $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
 BUREAUCRACY_EXPENSE_FROM_TRADE_ROUTES:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $NUM_TRADE_ROUTES|v$ [Concept('concept_trade_route', '$concept_trade_routes$')]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $NUM_GENERALS|v$ [Concept('concept_general', '$concept_generals$')] and $NUM_ADMIRALS|v$ [Concept('concept_admiral', '$concept_admirals$')]"
 BUREAUCRACY_EXPENSE_FROM_BUILDINGS:0 "$COST|+=0$ from $NUM_LEVELS|v$ [concept_nationally_owned] [Concept('concept_building_level', '$concept_building_levels$')]"

 BUREAUCRACY_EXPENSE_PER_INSTITUTION:0 "$COST|+=0$ from [INSTITUTION.GetName] ([INSTITUTION.GetInvestmentLevel|v])"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS_TOOLTIP:0 "#header @bur![concept_bureaucracy] cost of [Concept('concept_institution', '$concept_institutions$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 TOTAL_INSTITUTION_INVESTMENT_LEVELS:0 "Total Institution [Concept('concept_investment_level', '$concept_investment_levels$')]: #v $LEVELS|0$#!"
 BUREAUCRACY_EXPENSE_INSTITUTIONS:0 "$INCORPORATEDCOST$\n$INSTITUTION_LEVELS$\n$BREAKDOWN$"

 BUREAUCRACY_EXPENSE_PER_STATE:0 "$TOTAL_COST|+=0$ from [State.GetName] ($STATE_COST|+=0$ base, $POPULATION_COST|+=0$ from $POPULATION|Kv$ people)"
 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION_TOOLTIP:0 "#header @bur![concept_bureaucracy] cost of [Concept('concept_pop', '$concept_pops$')] in [Concept('concept_incorporated_state', '$concept_incorporated_states$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 BUREAUCRACY_EXPENSE_PER_TRADE_ROUTE:0 "$COST|+=0$ from [TradeRoute.GetName]"
 BUREAUCRACY_EXPENSE_FROM_TRADE_ROUTES_TOOLTIP:0 "#header @bur![concept_bureaucracy] cost of [Concept('concept_trade_route', '$concept_trade_routes$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 BUREAUCRACY_EXPENSE_PER_COMMANDER:0 "$COST|+=0$ from [Character.GetCombatUnitsTypeIcon] [Character.GetFullName]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS_TOOLTIP:0 "#header @bur![concept_bureaucracy] cost of [Concept('concept_commander', '$concept_commanders$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 BUREAUCRACY_EXPENSE_LIST_ITEM:1 "#tooltippable #tooltip:$TOOLTIP_TAG$ #variable $COST|+0$#!#!#! from [State.GetName]"

 INSTITUTION_GROWING:0 "Growing: [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_SHRINKING:0 "Shrinking: [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_INVESTMENT_LEVEL:0 "Investment Level: [Institution.GetInvestmentLevel|v]"

 INSTITUTION_GROWTH_TOOLTIP:0 "This Institution is currently growing."
 INSTITUTION_SHRINKING_TOOLTIP:0 "This Institution is currently shrinking."

 SUPPRESSED_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from [Concept('concept_suppress','$concept_suppressing$')] the [POLITICAL_MOVEMENT.GetName]"
 BOLSTERED_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from [Concept('concept_bolster','$concept_bolstering$')] the [POLITICAL_MOVEMENT.GetName]"
 GOODS_EMBARGO_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from [Concept('concept_embargo', '$concept_embargoing$')] [GOODS.GetName]"
 GOODS_ENCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [GOODS.GetName]"
 GOODS_DISCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [GOODS.GetName]"
 GOODS_TAX_EXPENSE_LIST_ITEM:2 " #variable #N -$VAL|0$#!#! from Collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [GOODS.GetName]"

 STATE_POP_GROWTH:0 "$concept_pop_growth$ #v [State.GetPopNetGrowth|K=+]#!"

 TOOLTIP_POP_GROWTH_COMMON:0 "Annual projected [concept_pop_growth]: #variable $NETGROWTHRATE|+=%$ #! (#variable $NETGROWTH|=*$#!)"
 TOOLTIP_COUNTRY_POP_GROWTH:1 "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_GROWTH:1 "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_MIGRATION:2 "Annual projected [concept_migration]: #variable $ANNUALNETGROWTHRATE|+=%$#! (#variable $ANNUALNETGROWTH|=*$#!)"
 HEADER_CULTURAL_COMMUNITIES: "[Concept('concept_cultural_community','$concept_cultural_communities$')]"

 MIGRATION_PULL_DESC:0 "[State.GetMigrationPullDesc]"
 STATE_MIGRATION_PULL_BREAKDOWN:0 "[State.GetMigrationPullDesc]"
 COUNTRY_MASS_MIGRATION_PULL_DESC: "[SelectLocalization(State.GetCountry.IsColonizable, State.GetMigrationPullDesc, State.GetCountry.GetMassMigrationAttractionDesc)]"
 MASS_MIGRATION_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\nThe [Country.GetAdjective] $concept_mass_migration_pull$ of #b $MASS_MIGRATION_ATTRACTION|1$#! is based on the average [concept_migration_pull] of the following [Concept('concept_migration_target', '$concept_mass_migration_eligible$')] $concept_states$:\n\n[COUNTRY.GetMassMigrationAttractionBreakdown]\n\n$concept_countries$ with less than #b $PENALTY_THRESHOLD$#! $concept_mass_migration_eligible$ $concept_states$ suffer an additional penalty to their $concept_mass_migration_pull$.\n\nYour $concept_mass_migration_pull$ can also be further affected by your current [GetLawGroup('lawgroup_migration').GetName] and [GetLawGroup('lawgroup_citizenship').GetName] [Concept('concept_law', '$concept_laws$')] if they hinder the $concept_culture$ in question of migrating to your $concept_country$."
 MASS_MIGRATION_ZERO_PULL_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\n[Country.GetName] has no attractive $concept_mass_migration_eligible$ $concept_states$ to be targeted by a [Concept('concept_migration_target', '$concept_mass_migration$')]."
 STATE_MM_ENTRY_FORMAT: "[STATE.GetName]: [STATE.GetMigrationLabel]"

 MIGRATION_PULL_FROM_EMPTY_STATE:0 "$TAB$Depopulated State: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_SOL:1 "$TAB$[concept_sol]: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_UNEMPLOYMENT:1 "$TAB$[Concept('concept_unemployed','$concept_unemployment$')]: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_EMPLOYMENT:0 "$TAB$Unused [concept_arable_land] employment: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT:0 "$TAB$Available Employment: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_COLONY:0 "$TAB$Is a Colony: #P #v ×$VAL|1$#!#!"

 TOOLTIP_STATE_MIGRATION_PULL_DESC:1 "#header [concept_migration_pull]#!\n$TOOLTIP_DELIMITER$\nThe [State.GetName] [concept_migration_pull] of #v [State.GetMigrationPull|1]#! is due to:\n$DETAILS$\n[State.GetMigrationDetailsDesc]"

 LABEL_STATE_MIGRATION_ISOLATED:0 "[concept_isolated_state]"
 LABEL_STATE_MIGRATION_PULL_HIGH:0 "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #P #b High ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_MEDIUM:0 "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #V #b Medium ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_LOW:0 "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #N #b Low ($STATE_VALUE|1$)#!#!#!#!"

 TOOLTIP_STATE_MIGRATION_ISOLATED:1 "[STATE.GetName] is an [concept_isolated_state], and will not experience any migration"
 TOOLTIP_STATE_MIGRATION_PULL_HIGH:2 "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_HIGH$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may receive immigrants from other states in the [State.GetMarket.GetName]\n\n[concept_migration] can be affected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"
 TOOLTIP_STATE_MIGRATION_PULL_MEDIUM:2 "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_MEDIUM$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may send a limited number of emigrants to other states within the [State.GetMarket.GetName]\n\n$concept_migration$ can be affected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"
 TOOLTIP_STATE_MIGRATION_PULL_LOW:2 "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_LOW$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may send emigrants to other states in the [State.GetMarket.GetName]\n\n$concept_migration$ can be affected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"

 TOOLTIP_STATE_IMMIGRATION_STATES:0 "[STATE.GetName] received a total of #variable $AMOUNT|D+$#! immigrants from $STATES_LIST$ last week"
 TOOLTIP_STATE_EMIGRATION_STATES:0 "[STATE.GetName] sent a total of #variable $AMOUNT|D-$#! emigrants to $STATES_LIST$ last week"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET:0 "[STATE.GetName] is a [Concept('concept_migration_target', '$concept_mass_migration_target$')] for the [CULTURE.GetName] culture and will potentially receive vast numbers of migrants"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET_ADJACENCY:0 "[STATE.GetName] is adjacent to a $concept_mass_migration_target$ for the [CULTURE.GetName] culture and will potentially receive large numbers of migrants"
 TOOLTIP_STATE_ELIGIBLE_MASS_MIGRATION: "@green_checkmark! [STATE.GetName] is #b eligible#! as a [Concept('concept_migration_target', '$concept_mass_migration_target$')]."
 TOOLTIP_STATE_NOT_ELIGIBLE_MASS_MIGRATION: "@red_cross! [STATE.GetName] is #b not eligible#! as a [Concept('concept_migration_target', '$concept_mass_migration_target$')]."

 SOCIETY_OVERVIEW: "Society"
 COUNTRY_INFO:0 "Information"
 DIPLOMATIC_ACTIONS:0 "Actions"
 NATION_FORMATION:0 "Nation Formation"
 RELEASE_SUBJECT:0 "Release Subject"

 ACCEPTANCE_STATUSES: "Statuses"
 ACCEPTANCE_CULTURES: "Cultures"
 ACCEPTANCE_RELIGIONS: "Religions"
 ACCEPTANCE_CLASSES: "Classes"

 NO_SOCIAL_HIERARCHY: "No Special [concept_social_hierarchy]"
 DEFAULT_SOCIAL_HIERARCHY_EXTRA_DESC: "[Concept('concept_pop', '$concept_pops$')] are assigned a [concept_social_class] based on their [concept_profession]."

 EXILE_POOL: "Exile Pool"
 EXILE_HOME_COUNTRY: "[SelectLocalization( Character.GetHomeCountry.IsValid, 'EXILE_HOME_COUNTRY_EXISTS', 'EXILE_HOME_COUNTRY_NOT_EXISTS' )]"
 EXILE_HOME_COUNTRY_EXISTS: "Home Country: [Character.GetHomeCountry.GetName]"
 EXILE_HOME_COUNTRY_NOT_EXISTS: "Home Country: #tooltippable #tooltip:COUNTRY_DOES_NOT_EXIST_TOOLTIP [Character.GetHomeCountryDefinition.GetName]#!#!"

 FORM_NATION_STATE_REGION_CONTROL_DESC:0 "#header [Country.GetAdjective] control over [STATE_REGION.GetName]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 FORM_NATION_STATE_CONTROL_REASON_OWNERSHIP:0 "@green_checkmark! [State.GetName]: [Country.GetName] owns the [concept_state]"
 FORM_NATION_STATE_CONTROL_REASON_CANDIDATE_SUPPORT:0 "@green_checkmark! [State.GetName]: [State.GetName]: [State.GetOwner.GetName] supports [Country.GetName] as [concept_unification_candidate]"
 FORM_NATION_STATE_CONTROL_REASON_SUBJECT:0 "@green_checkmark! [State.GetName]: [State.GetOwner.GetName] is a non-autonomous [concept_subject] ($SUBJECT_TYPE$) of [Country.GetName]"
 FORM_NATION_STATE_NO_CONTROL_REASON_AUTONOMOUS_SUBJECT:0 "@red_cross! [State.GetName]: [State.GetOwner.GetName] is too autonomous a [concept_subject] ($SUBJECT_TYPE$) to count as being controlled by [Country.GetName]"
 FORM_NATION_STATE_NO_CONTROL_REASON_GENERIC:0 "@red_cross! [State.GetName]: [Country.GetName] does not exert any control over [State.GetOwner.GetName]"

 PLAYER_CULTURE:0 "In [GetPlayer.GetNameNoFormatting]"
 GLOBAL_CULTURE:0 "Globally"

 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] of [Culture.GetNameNoFormatting] [Concept('concept_pop','$concept_population$')] in [GetPlayer.GetNameNoFormatting]"
 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] of [Culture.GetNameNoFormatting] [Concept('concept_pop','$concept_population$')]:"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] of [Religion.GetNameNoFormatting] [Concept('concept_pop','$concept_population$')] in [GetPlayer.GetNameNoFormatting]"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] of [Religion.GetNameNoFormatting] [Concept('concept_pop','$concept_population$')]:"

 HOMELANDS_HEADER:0 "Homelands ([GetDataModelSize(Culture.AccessHomelands)])"

 MUSIC_PLAYER_VOLUME_LABEL_V3:0 "$MUSIC_PLAYER_VOLUME_LABEL$:"
 SETTING_MUSIC_DENSITY_V3:0 "$SETTING_MUSIC_DENSITY$:"
 MUSIC_PLAYER_PLAY:0 "Play"
 MUSIC_PLAYER_PAUSE:0 "Pause"
 MUSIC_PLAYER_HEADER:0 "Music Player"
 MUSIC_PLAYER_PLAY_TRACK:1 "[SelectLocalization(MusicTrack.IsPlaying, 'MUSIC_PLAYER_IS_PLAYING_TRACK', 'MUSIC_PLAYER_CLICK_TO_PLAY_TRACK')]"
 MUSIC_PLAYER_CLICK_TO_PLAY_TRACK:1 "Click to play #v [MusicTrack.GetName]#! now"
 MUSIC_PLAYER_IS_PLAYING_TRACK:1 "#v [MusicTrack.GetName]#! is playing!"
 MUSIC_PLAYER_ENABLE_TRACK:1 "Enable/Disable #v [MusicTrack.GetName]#! to be in the queue of music tracks"
 MUSIC_PLAYER_ENABLE_CATEGORY:1 "Enable/Disable all music tracks in the #v [MusicPlayerCategory.GetName]#! category"
 MUSIC_PLAYER_SKIP_TO_NEXT_TRACK:0 "Skip to the next track"
 MUSIC_PLAYER_SELECT_CATEGORY:1 "Select to see the music tracks in #v [MusicPlayerCategory.GetName]#!"
 MUSIC_PLAYER_CATEGORY_ENABLED_DISABLED_TEXT:1 "[MusicPlayerCategory.GetName] [SelectLocalization( MusicPlayerCategory.IsEnabled, 'MUSIC_PLAYER_CATEGORY_ENABLED_V3', 'MUSIC_PLAYER_CATEGORY_DISABLED_V3')]"
 MUSIC_PLAYER_CATEGORY_ENABLED_V3:1 "#g Enabled#!"
 MUSIC_PLAYER_CATEGORY_DISABLED_V3:1 "#r Disabled#!"
 MUSIC_PLAYER_DENSITY:0 "#header Music Density#!\nControls the balance between full songs, silence, and mood music segments\n$TOOLTIP_DELIMITER$\n#b Intense#! - Mostly full songs playing one after the other, similar to a radio station\n\n#b Balanced#! - The perfect balance between songs, silence, and mood music segments\n\n#b Relaxed#! - Mostly mood music segments that provide a calmer experience and less sense of repetition after several hours of playing"

 AND_SPACED:0 " and "
 COMMA_SPACED:0 ", "
 MAP_INFO:0 "#header Map#!\n$TOOLTIP_DELIMITER$\nPress and hold #bold "Tab"#! to zoom out fully. Releasing it will zoom you back in to your previous zoom level."
 MAP_INFO_MAP_MODE_LOCKED:0 "$MAP_INFO$\n\n#instruction Click to clear locked Map Mode.#!"
 LOCATION_FINDER:0 "#header Location Finder#!"
 ZOOM_TO_BUILDING_STATE:1 "Zoom to [Building.AccessState.GetName][AddLocalizationIf( Building.AccessState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_EVENT_WINDOW_STATE:1 "Zoom to [EventWindow.GetEvent.GetState.GetName][AddLocalizationIf( EventWindow.GetEvent.GetState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_COUNTRY_CAPITAL:1 "Zoom to [Country.AccessCapital.GetName][AddLocalizationIf( Country.AccessCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_MARKET_CAPITAL:2 "Zoom to [Market.AccessMarketCapital.GetName] ([concept_market_capital])[AddLocalizationIf( Market.AccessMarketCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_STATE:2 "Zoom to [State.GetName][AddLocalizationIf( State.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_BATTLE: "Zoom to [Battle.GetName][AddLocalizationIf( Battle.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_DISABLED: "\n@red_cross! Already there!"
 ZOOM_TO_ORDERTARGET: "Zoom to location[AddLocalizationIf( Character.IsZoomingToOrderTarget, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_HQ: "Zoom to location[AddLocalizationIf( Hq.IsZoomingToHQ, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_FRONT: "Zoom to location[AddLocalizationIf( Front.IsZoomingToFront, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_STATE_NO_REASON: "Zoom to [State.GetName]"
 ZOOM_TO_COUNTRY_CAPITAL_NO_REASON: "Zoom to [Country.AccessCapital.GetName]"
 ZOOM_TO_NAVAL_INVASION: "Zoom to the [NavalInvasion.GetName]"
 ZOOM_TO_LOCATION: "Zoom to location"
 ZOOM_TO_POWER_BLOC: "Zoom to the [concept_capital_state] of the [concept_power_bloc_leader]"

 NAVAL_INVASION_MARKER_TOOLTIP: "#header [NavalInvasion.GetName]#!\n[NavalInvasion.GetInvaderCountry.GetName] invading [NavalInvasion.GetInvadedCountry.GetName]\n$TOOLTIP_DELIMITER$\n$NAVAL_INVASION_FAIL_CONDITIONS$\n\n[NavalInvasion.GetInvaderCountry.GetName]:\n$TAB$[SelectLocalization(EqualTo_int32(NavalInvasion.GetNumInvadingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(NavalInvasion.GetNumInvadingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES')]\n\n[NavalInvasion.GetInvadedCountry.GetName]:\n$TAB$[SelectLocalization(EqualTo_int32(NavalInvasion.GetNumDefendingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(NavalInvasion.GetNumDefendingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES')]\n\n[NavalInvasion.GetSeaNodeName]:\n$TAB$$NAVAL_INVASION_SEA_REGION_STATUS$\n\n[NavalInvasion.GetEnemyState.GetName]:\n$TAB$$NAVAL_INVASION_LANDING_PROGRESS$"
 NAVAL_INVASION_FAIL_CONDITIONS: "This Naval Invasion will fail if:\n$TAB$@simple_box! [NavalInvasion.GetFleet.GetName] is [concept_admiral_defeated]\n$TAB$@simple_box! [NavalInvasion.GetInvaderCountry.GetName] lose #v [NavalInvasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! land [SelectLocalization(EqualTo_int32(NavalInvasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')] with #v 0%#! [concept_landing_progress] (#v [NavalInvasion.GetNumLandBattleDefeatsAtZeroOccupation]/[NavalInvasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! lost currently)"
 NAVAL_INVASION_FAIL_CONDITIONS_SHORT: "This Naval Invasion will fail if:\n$TAB$@simple_box! [NavalInvasion.GetFleet.GetName] is [concept_admiral_defeated]\n$TAB$@simple_box! [NavalInvasion.GetInvaderCountry.GetName] lose #v [NavalInvasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! land [SelectLocalization(EqualTo_int32(NavalInvasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')] with #v 0%#! [concept_landing_progress]"
 NO_FLEETS: "@flotillas! #red 0#!"
 NO_ARMIES: "@battalions! #red 0#!"
 SEA_NODE_NAME: "[concept_sea_node] in $STRATEGIC_REGION_NAME$"
 LANDING_PROGRESS: "Landing Progress"
 NAVAL_INVADING: "Navally Invading"
 INVADER_NAME: "[NavalInvasion.GetInvaderCountry.GetNameNoFlag][ConcatIfNeitherEmpty(' ', AddLocalizationIf(NavalInvasion.GetInvaderCountry.IsLocalPlayer, 'YOU'))]"
 DEFENDER_NAME: "[ConcatIfNeitherEmpty(AddLocalizationIf(NavalInvasion.GetInvadedCountry.IsLocalPlayer, 'YOU'), ' ')][NavalInvasion.GetInvadedCountry.GetNameNoFlag]"
 NAVAL_INVASION_LANDING_PROGRESS: "[SelectLocalization(NavalInvasion.IsFightingNavalBattle, 'NAVAL_INVASION_LANDING_PROGRESS_STALLED', 'NAVAL_INVASION_LANDING_PROGRESS_ONGOING')]"
 NAVAL_INVASION_LANDING_PROGRESS_ONGOING: "[NavalInvasion.GetLandingProgress|v%0] [NavalInvasion.GetInvaderCountry.GetAdjective] [concept_landing_progress]"
 NAVAL_INVASION_LANDING_PROGRESS_STALLED: "[NavalInvasion.GetInvaderCountry.GetAdjective] [concept_landing_progress] is stalled due to enemy [Concept('concept_fleet', '$concept_fleets$')]!"
 NAVAL_INVASION_LANDING_PROGRESS_BAR_TOOLTIP: "Landing progress [NavalInvasion.GetLandingProgress|v%0]"
 NAVAL_INVASION_HAS_CONCLUDED: "This Naval Invasion has concluded."
 NAVAL_INVASION_SEA_REGION_STATUS: "[SelectLocalization(NavalInvasion.HasBlockingEnemyFleetOnSeaNode, 'NAVAL_INVASION_SEA_REGION_CONTESTED', 'NAVAL_INVASION_SEA_REGION_CONTROLLED')]"
 NAVAL_INVASION_SEA_REGION_STATUS_TOOLTIP: "[SelectLocalization(NavalInvasion.HasBlockingEnemyFleetOnSeaNode, 'NAVAL_INVASION_SEA_REGION_CONTESTED_TOOLTIP', 'NAVAL_INVASION_SEA_REGION_CONTROLLED_TOOLTIP')]"
 NAVAL_INVASION_SEA_REGION_CONTROLLED: "Controlled by [NavalInvasion.GetInvaderCountry.GetNameNoFlag]"
 NAVAL_INVASION_SEA_REGION_CONTROLLED_TOOLTIP: "There are no [Concept('concept_fleet', '$concept_fleets$')] defending [NavalInvasion.GetSeaNodeName]"
 NAVAL_INVASION_SEA_REGION_CONTESTED: "Contested!"
 NAVAL_INVASION_SEA_REGION_CONTESTED_TOOLTIP: "This [concept_naval_invasion] will not progress while there are defending fleets in [NavalInvasion.GetSeaNodeName]."
 INVADER: "Invader"
 NAVAL_INVASION_NUMBER_OF_INVADING_FLEETS: "[NavalInvasion.GetNumInvadingFleets|v] [NavalInvasion.GetInvaderCountry.GetAdjective] [Concept('concept_fleet','$concept_fleets$')]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_FLEETS: "[NavalInvasion.GetNumBlockingFleets|v] [NavalInvasion.GetInvadedCountry.GetAdjective] [Concept('concept_fleet','$concept_fleets$')]"
 NAVAL_INVASION_NUMBER_OF_NON_BLOCKING_FLEETS: "[NavalInvasion.GetNumNonBlockingFleets|v] Too Weak [SelectLocalization(EqualTo_int32(NavalInvasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS: "@flotillas! [NavalInvasion.GetNumInvadingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS: "@flotillas! [NavalInvasion.GetNumBlockingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_NON_BLOCKING_FLEETS: "@flotillas! [NavalInvasion.GetNumNonBlockingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_INVADING_ARMIES: "[NavalInvasion.GetNumInvadingArmies|v] [NavalInvasion.GetInvaderCountry.GetAdjective] [Concept('concept_army','$concept_armies$')]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_ARMIES: "[NavalInvasion.GetNumDefendingArmies|v] [NavalInvasion.GetInvadedCountry.GetAdjective] [Concept('concept_army','$concept_armies$')]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES: "@battalions! [NavalInvasion.GetNumInvadingArmiesUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES: "@battalions! [NavalInvasion.GetNumDefendingArmiesUnits|v]"
 NAVAL_INVASION_INVADING_FLEETS_TOOLTIP: "#header Invading [NavalInvasion.GetInvaderCountry.GetAdjective] [Concept('concept_fleet','$concept_fleets$')]#!\nCurrent: [NavalInvasion.GetNumInvadingFleets|v] [SelectLocalization(EqualTo_int32(NavalInvasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[NavalInvasion.GetInvadingFleetsTooltipBreakdown]"
 NAVAL_INVASION_BLOCKING_FLEETS_TOOLTIP: "#header Defending [NavalInvasion.GetInvadedCountry.GetAdjective] [Concept('concept_fleet','$concept_fleets$')]#!\nCurrent: [NavalInvasion.GetNumBlockingFleets|v] [SelectLocalization(EqualTo_int32(NavalInvasion.GetNumBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NON_BLOCKING_FLEETS_TOOLTIP: "#header [Concept('concept_fleet','$concept_fleets$')] too weak to defend#!\nCurrent: [NavalInvasion.GetNumNonBlockingFleets|v] [SelectLocalization(EqualTo_int32(NavalInvasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_int32(NavalInvasion.GetNumNonBlockingFleets, '(int32)1'), 'THIS_FLEET_HAS', 'THESE_FLEETS_HAVE')] a [concept_power_projection] less than [GetDefine('NWar', 'NAVAL_INVASION_MIN_POWER_PROJECTION_RATIO_TO_BLOCK_LANDING')|%v0] of the [NavalInvasion.GetNumInvadingFleets|v] invading [NavalInvasion.GetInvaderCountry.GetAdjective] [SelectLocalization(EqualTo_int32(NavalInvasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_INVADING_ARMIES_TOOLTIP: "#header [NavalInvasion.GetInvaderCountry.GetName] Invading [Concept('concept_army','$concept_armies$')]#!\nCurrent: [NavalInvasion.GetNumInvadingArmies|v] [Concept('concept_army', '$concept_armies$')]\n$TOOLTIP_DELIMITER$\n[NavalInvasion.GetInvadingArmiesTooltipBreakdown]"
 NAVAL_INVASION_DEFENDING_ARMIES_TOOLTIP: "#header [NavalInvasion.GetInvadedCountry.GetName] Defending [Concept('concept_army','$concept_armies$')]#!\nCurrent: [NavalInvasion.GetNumDefendingArmies|v] [Concept('concept_army', '$concept_armies$')]\n$TOOLTIP_DELIMITER$\n[NavalInvasion.GetDefendingArmiesTooltipBreakdown]"
 FLEET_BREAKDOWN_FORMAT: "@flotillas! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 ARMY_BREAKDOWN_FORMAT: "@battalions! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 THESE_FLEETS_HAVE: "These $concept_fleets$ have"
 THIS_FLEET_HAS: "This $concept_fleet$ has"

 CANCEL_NAVAL_INVASION: "Cancel Naval Invasion"
 CANCEL_NAVAL_INVASION_TOOLTIP: "#header Cancel this [NavalInvasion.GetName]#!"
 CANCEL_NAVAL_INVASION_CONFIRMATION: "Cancelling the [NavalInvasion.GetName] will cancel any ongoing land and sea [Concept('concept_battle','$concept_battles$')] and send your [concept_army] and [concept_fleet] back to their home [concept_hq].\nAny gained [concept_landing_progress] will be lost.\n\nAre you sure?"


 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION: "#b Deploy#! [concept_fleet]"
 ADD_ADDITIONAL_DEFENDING_FLEETS_TO_NAVAL_INVASION: "#b Station#! additional [Concept('concept_fleet','$concept_fleets$')]"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION: "#b Station#! [concept_army]"
 ADD_ADDITIONAL_DEFENDING_ARMIES_TO_NAVAL_INVASION: "#b Station#! additional [Concept('concept_army','$concept_armies$')]"
 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION_TOOLTIP: "Select a [concept_fleet] to deploy to the [NavalInvasion.GetSeaNodeName] and defend this #b Naval Invasion#!"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION_TOOLTIP: "Select an [concept_army] to #b Station#! at the [NavalInvasion.GetDefenderHQ.GetName] to defend this #b Naval Invasion#!"
 SELECT_FLEET_TO_SEND: "Deploy a [concept_fleet] to the [NavalInvasion.GetSeaNodeName]"
 SELECT_ARMY_TO_SEND: "Station an [concept_army] in the [NavalInvasion.GetDefenderHQ.GetName]"

 POLITICS:0 "Politics"
 BUTTON_POLITICS:0 "#header Politics#!\n$LAW_ENACTMENT_PROGRESS_TOPBAR$"
 BUTTON_POPULATION:0 "#header Population#!"
 BUTTON_TRADE_OVERVIEW:1 "#header Market#!"
 BUTTON_SOCIETY_OVERVIEW:1 "#header Society#!"
 BUTTON_BUDGET:0 "#header Budget#!"
 BUTTON_MILITARY:0 "#header Military#!"
 BUTTON_TECHNOLOGY:0 "#header Technology#!\n[SelectLocalization( Technology.IsValid, 'RESEARCHING', 'NOT_RESEARCHING' )]"
 UNLOCK_MAP_MODE:0 "Clear locked Map Mode"
 UNLOCK_MAP_MODE_TOOLTIP:0 "#header Clear locked Map Mode#!\n[GetSelectedMapModeName] Map Mode is currently locked."

 POWER_BLOC: "Power Bloc"
 POWER_BLOC_SUBHEADER: "[SelectLocalization(PowerBlocPanel.IsPowerBlocSelected, 'POWER_BLOC_CONCEPT', 'IN_THE_WORLD')]"
 POWER_BLOC_CONCEPT: "[concept_power_bloc]"
 POWER_BLOC_LEADER_LABEL: "[Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')]: [PowerBloc.GetLeader.GetName]"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS: "@warning! [Concept('concept_power_struggle','$concept_power_struggling$')] ([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] months)"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS_CENTERED: "[Concept('concept_power_struggle','$concept_power_struggling$')]\n([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] months)"
 IN_THE_WORLD: "In the World"
 YOUR_LEVERAGE: "Your [concept_power_bloc_leverage]"
 NO_POWER_BLOC_TOOLTIP: "[Country.GetName] is not a [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] of any [concept_power_bloc]"
 PLAYER_IS_NOT_IN_A_POWER_BLOC: "You are not part of any [concept_power_bloc] that has any [concept_power_bloc_leverage] over [Country.GetName]"
 COUNTRY_PANEL_LEVERAGE_LABEL: "Unaligned"
 COUNTRY_PANEL_LEVERAGE_VALUE: "[SelectLocalization(GetPlayer.IsInPowerBloc, 'COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC', 'COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC')]"
 COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC: "#v [GetPlayer.GetPowerBloc.GetLeverageAdvantage(Country.Self)|0=+]#!"
 COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC: "#title $NONE$#!"
 POWER_BLOC_NUMBER_OF_COUNTRIES_TOOLTIP: "#header [PowerBloc.GetNumMembers] [Concept('concept_country','$concept_countries$')] in [PowerBloc.GetName]#!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetMembersBreakdown]"
 POWER_BLOC_GDP_TOOLTIP: "#header Total [Concept('concept_gdp', '$concept_gdp_short$')] in [PowerBloc.GetName]#!\n[GetPlayer.GetCustom('currency_symbol')]#v [PowerBloc.GetGdp|D]#! currently\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_gdp', '$concept_gdp_short$')] per [concept_country]:#!\n[PowerBloc.GetGdpDesc]"
 POWER_BLOC_GDP_ENTRY: "$TAB$[GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$ - [Country.GetName]"
 POWER_BLOC_INVITABLE_COUNTRIES_TOOLTIP: "#v [PowerBlocPanel.GetNumInvitableCountries|+]#! available [Concept('concept_country', '$concept_countries$')] to invite"
 ANSWER_INVITATION: "Answer the Invitation"
 ANSWER_INVITATION_TOOLTIP: "Click to see your options"
 REQUEST_TO_JOIN: "Request to Join"
 REQUEST_SENT: "Request sent, awaiting answer"
 POWER_BLOC_REQUEST_TO_JOIN_TOOLTIP: "#header Request to join [PowerBloc.GetName]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(PowerBloc.RequestToJoin))]"
 POWER_BLOC_TOOLTIP: "#header $NAME$#!\nLeader: $LEADER_NAME$"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY_LEADER: "[Country.GetName] - [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')]\n\n"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY: "[Country.GetName]"
 POWER_BLOC_MEMBER_COUNTRY_NAME: "[Country.GetNameNoFlag] [AddLocalizationIf(Country.IsLocalPlayer, 'YOU')]"
 POWER_BLOC_KICK_MEMBER: "Remove from [concept_power_bloc]"
 POWER_BLOC_KICK_MEMBER_TOOLTIP: "#header Remove [Country.GetName] from [Country.GetPowerBloc.GetName]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(Country.GetPowerBloc.Kick(Country.Self)))]"
 POWER_BLOC_ARMY_NUMBERS_TOOLTIP: "#header [PowerBloc.GetName] [Concept('concept_battalion', '$concept_battalions$')]#!\nCurrent: @battalions! [PowerBloc.GetBattalions|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetBattalionsBreakdown]"
 POWER_BLOC_NAVY_NUMBERS_TOOLTIP: "#header [PowerBloc.GetName] [Concept('concept_flotilla','$concept_flotillas$')]#!\nCurrent: @flotillas! [PowerBloc.GetFlotillas|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetFlotillasBreakdown]"
 POWER_BLOC_BATTALIONS_BREAKDOWN_ENTRY: "@battalions! #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP $TOTAL|v$#!#! - [Country.GetName] ([Country.GetBattalionsRanking])"
 POWER_BLOC_FLOTILLAS_BREAKDOWN_ENTRY: "@flotillas! #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP $TOTAL|v$#!#! - [Country.GetName] ([Country.GetFlotillasRanking])"
 RANK_FORMATTING: "#v ##$RANK$#!"
 POWER_BLOC_RANK_FORMATTED: "#tooltippable #tooltip:[Country.GetPowerBloc.GetTooltipTag],DATA_POWER_BLOC_RANK_TOOLTIP [Country.GetPowerBloc.GetRankFormatted]#!#!"

 BUTTON_POWER_BLOC: "#header Power Bloc#!"
 POWER_BLOC_PANEL_HEADER: "[SelectLocalization(PowerBloc.IsValid, PowerBloc.GetName, 'Power Blocs')]"
 POWER_BLOC_TAB_OVERVIEW: "Overview"
 POWER_BLOC_TAB_MEMBERS: "Members ([PowerBloc.GetNumMembers])"
 POWER_BLOC_TAB_ALL_POWER_BLOCS: "All Blocs"
 POWER_BLOC_TAB_MODIFIERS: "Modifiers"
 POWER_BLOC_PANEL_LEADER_MODIFIER_ENTRIES: "Leader Modifiers"
 POWER_BLOC_PANEL_NON_LEADER_MODIFIER_ENTRIES: "Non-leader Modifiers"
 FORM_POWER_BLOC: "Form a Power Bloc"
 FORM_POWER_BLOC_DESC: "#title [concept_power_bloc_identity]:#!\n$TAB$[PowerBlocIdentity.GetName]\n\n#title [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]:#!#indent_newline:3 \n$PRINCIPLES$#!\n\n[ConcatIfNeitherEmpty('$EFFECT$','\n\n')]Are you sure you want to form the\n#v $NAME$#! [concept_power_bloc]?"
 FORM_THIS_POWER_BLOC: "Form this Power Bloc"
 INVITE_TO_BLOC: "Invite Countries"
 POWER_BLOC_FORMATION_HEADER: "Form a Power Bloc"
 POWER_BLOC_FORMATION_COOLDOWN_UNTIL: "Cannot form a new Power Bloc until #v $DATE$#!"
 POWER_BLOC_FORMATION_CHOOSE_NAME: "#header Choose Name:#!"
 POWER_BLOC_FORMATION_CLICK_TO_CHANGE_NAME: "Click to change name..."
 POWER_BLOC_FORMATION_INVALID_NAME: "Invalid Name:\n$DESC$"
 RANDOMIZE_POWER_BLOC_NAME: "Randomize $concept_power_bloc$ name"
 POWER_BLOC_FORMATION_NAME_IN_USE: "Name is already in use by [PowerBloc.GetName]"
 CUSTOMIZE_STATUE: "Customize the $concept_power_bloc$ statue"
 CUSTOMIZE_EMBLEM: "Customize the $concept_power_bloc$ emblem"
 EMBLEM_AND_COLORS: "Emblem & Colors"
 STATUE: "Statue"
 OPEN_COLOR_PICKER: "Open color picker"
 COLOR_PICKER_HEADER: "Pick a color"
 RANDOMIZE: "Randomize"
 POWER_BLOC_COA_SELECT_ITEM: "Select #v [PowerBlocCoaPieceSelector.GetName]#!"
 POWER_BLOC_MAP_TEXTURE_SELECT_ITEM: "Select $POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL$"
 CENTRAL_IDENTITY: "$concept_power_bloc_identity$"
 SELECT_A_CENTRAL_IDENTITY: "Select a [concept_power_bloc_identity]"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR1_LABEL: "Primary Color"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR2_LABEL: "Secondary Color"
 POWER_BLOC_COA_PIECE_CENTER_COLOR1_LABEL: "Emblem Color"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_LABEL: "Shield Pattern"
 POWER_BLOC_COA_PIECE_SHIELD_FRAME_LABEL: "Shield Frame"
 POWER_BLOC_COA_PIECE_CENTER_LABEL: "Center"
 POWER_BLOC_COA_PIECE_SIDE_LABEL: "Side"
 POWER_BLOC_COA_PIECE_TOP_LABEL: "Top"
 POWER_BLOC_COA_PIECE_ITEM_TOOLTIP: "#header [PowerBlocCoaPiece.GetName]#!\n[SelectLocalization(PowerBlocCoaPiece.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_ITEM_TOOLTIP: "#header [PowerBlocMapTexture.GetName]#!\n[SelectLocalization(PowerBlocMapTexture.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL: "Map Pattern"
 POWER_BLOC_MAP_TEXTURE_NAME: "Pattern $VALUE$"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED: "#i Currently selected#!"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED: "#i Click to select#!"
 FORM_POWER_BLOC_CONFIRM_BUTTON_TOOLTIP: "Form the #header [ConcatIfNeitherEmpty(PowerBlocFormation.GetChosenName,' ')]#! [concept_power_bloc][AddTextIf(Not(StringIsEmpty(GetDesc(PowerBlocFormation.Confirm))),'\n$TOOLTIP_DELIMITER$\n')][GetDesc(PowerBlocFormation.Confirm)]"
 POWER_BLOC_CUSTOMIZATION_CONFIRM_BUTTON_TOOLTIP: "#header Confirm#!\n[ConcatIfNeitherEmpty(PowerBlocCustomizationPopup.ConfirmGetDesc, '\n\n')]"
 POWER_BLOC_CHOOSE_A_NAME_PROMPT: "#i Add a name#!"
 POWER_BLOC_FORMATION_SELECT_IDENTITY_TITLE: "#header Select [concept_power_bloc_identity]:#!"
 POWER_BLOC_IDENTITY_NOT_SELECTED: "[concept_power_bloc_identity] is not selected"
 POWER_BLOC_IDENTITY_CANNOT_SELECT: "Cannot select #v [PowerBlocIdentity.GetName]#!:\n$TAB$[PowerBlocIdentity.GetIsPossibleDesc]"
 POWER_BLOC_PRINCIPLE_CANNOT_SELECT: "Cannot select #v [PowerBlocPrinciple.GetName]#!:\n$TAB$[PowerBlocPrinciple.GetIsPossibleDesc]"
 POWER_BLOC_IDENTITY_COUNTRY_CANNOT_JOIN: "[Country.GetName] cannot join [PowerBloc.GetName] with #v [PowerBlocIdentity.GetName]#! [concept_power_bloc_identity] due to:\n$DESC$"

 POWER_BLOC_COUNTRY_CANNOT_LEAVE_DUE_TO_IDENTITY: "[COUNTRY.GetName] cannot leave [POWER_BLOC.GetName] with #v [PowerBlocIdentity.GetName]#! [concept_power_bloc_identity]. Conditions to be able to leave:\n$DESC$"
 POWER_BLOC_COUNTRY_CANNOT_LEAVE_ON_COOLDOWN: "[Country.GetName] cannot leave [PowerBloc.GetName] until [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_IN_POWER_STRUGGLE: "[Country.GetName] is in an ongoing [concept_power_struggle] against the leader"
 POWER_BLOC_KICK_MEMBER_COMMAND_CONFIRMATION: "[Country.GetName] will be removed from [PowerBloc.GetName]\n\nAdditional Effects:\n$EFFECT$"

 POWER_BLOC_FORMATION_SELECT_PRINCIPLES_TITLE: "#header Select [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]:#!"
 POWER_BLOC_FORMATION_PRINCIPLE_POINTS_REMAINING: "Remaining points: #v [PowerBlocFormation.GetPrinciplePointsRemainingRaw]/[GetDefine('NPowerBlocs', 'INITIAL_PRINCIPLE_LEVELS')]#!"
 POWER_BLOC_FORMATION_HAS_SAME_GROUP_PRINCIPLES: "A [concept_power_bloc] cannot have [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] of the same group"
 POWER_BLOC_FORMATION_INSUFFICIENT_INFLUENCE: "Insufficient @inf![Nbsp][concept_influence] (@inf!$REQUIRED_VALUE|v0$ required / @inf!$CURRENT_VALUE|v0$ available)"
 POWER_BLOC_FORMATION_UNSPENT_PRINCIPLE_POINTS: "Use all available [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 POWER_BLOC_PRINCIPLE_IS_LOCKED_BY_IDENTITY: "[PowerBlocPrinciple.GetGroup.GetName] requires $IDENTITIES$"
 POWER_BLOC_PRINCIPLE_IS_BLOCKED_BY_IDENTITY: "[PowerBlocPrinciple.GetGroup.GetName] cannot be selected under the [POWER_BLOC_IDENTITY.GetName] [concept_power_bloc_identity]"
 POWER_BLOC_PRINCIPLES_SLOTS_EXCEED_MAX_COUNT: "A [concept_power_bloc] cannot have more than #v [GetDefine('NPowerBlocs', 'MAX_PRINCIPLES')]#! [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]"
 POWER_BLOC_COUNTRY_CANNOT_JOIN_ON_COOLDOWN: "[Country.GetName] cannot join [PowerBloc.GetName] until [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_POWER_BLOC_LEADER: "[Country.GetName] is the leader of a [concept_power_bloc]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_ANOTHER_POWER_BLOC: "[Country.GetName] is already in another [concept_power_bloc]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_POWER_BLOC: "[Country.GetName] is already in [PowerBloc.GetName] [concept_power_bloc]"
 POWER_BLOC_COUNTRY_IS_SUBJECT: "[Country.GetName] is a [concept_subject] of [Country.GetOverlord.GetName] and cannot be in a [concept_power_bloc] different from its [concept_overlord]"
 POWER_BLOC_CANNOT_SWITCH_SIDE: "[COUNTRY.GetName] cannot oppose [TARGET_COUNTRY.GetName] due to:\n$TAB$$BREAKDOWN$"
 POWER_BLOC_CANNOT_SIDE_AGAINST_OVERLORD: "[SCOPE.GetRootScope.GetCountry.GetName] cannot take the side against an [concept_overlord] of another [concept_power_bloc_member] due to:\n$TAB$$modifier_power_bloc_disallow_war$"
 POWER_BLOC_COHESION: "[concept_power_bloc_cohesion]"
 POWER_BLOC_COHESION_LEVEL: "[Country.GetPowerBloc.GetCohesion|v0]"
 POWER_BLOC_COHESION_TOOLTIP: "#header [concept_power_bloc_cohesion]#!\nValue: $VALUE$\n$TOOLTIP_DELIMITER$$BREAKDOWN$"

 POWER_BLOC_COHESION_PREDICTION_JOIN: "Target [concept_power_bloc_cohesion] of [POWER_BLOC.GetName] will change by #v $VALUE|=+$#! if [COUNTRY.GetName] joins"
 POWER_BLOC_COHESION_PREDICTION_REMOVE: "Target [concept_power_bloc_cohesion] of [POWER_BLOC.GetName] will change by #v $VALUE|=+$#! if [COUNTRY.GetName] is removed"

 POWER_BLOC_IDENTITY_HEADER: "Central Identity Pillar"
 PICK_AT_LEAST_ONE_PRIMARY: "@information! #title One $concept_power_bloc_primary_principle_group_extra_short$ $concept_power_bloc_principle$ is required#!"
 POWER_BLOC_PRINCIPLES_HEADER: "Principles"
 POWER_BLOC_LEADER_HEADER: "Leader"
 POWER_BLOC_MEMBERS_HEADER: "Members"
 POWER_BLOC_NO_MEMBERS: "No Members"
 POWER_BLOC_MEMBER_COUNTRY_NAME_HEADER_TOOLTIP: "Sort members by name"
 POWER_BLOC_MEMBER_PRESTIGE_HEADER_TOOLTIP: "Sort members by [concept_prestige]"
 POWER_BLOC_MEMBER_LEVERAGE_HEADER_TOOLTIP: "Sort members by [concept_power_bloc_leverage]"
 POWER_BLOC_MANDATE_PROGRESS_TOOLTIP: "#header [concept_power_bloc_mandate_progress]#!\nCurrent $concept_power_bloc_mandate_progress$: [PowerBloc.GetCurrentMandateProgress|v0]/[GetDefine('NPowerBlocs', 'MAX_MANDATE_PROGRESS')] (#v [PowerBloc.GetCurrentMandateProgressPercentage|%0]#!)\nWill gain [concept_power_bloc_mandate] in [LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '')]\n$TOOLTIP_DELIMITER$\nWeekly $concept_power_bloc_mandate_progress$: [PowerBloc.GetWeeklyMandateProgress|v0]#indent_newline:3 \n[PowerBloc.GetWeeklyMandateProgressDesc]#!"
 POWER_BLOC_MANDATE_PROGRESS_TIMER: "[LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '_SHORT')]"
 POWER_BLOC_MANDATE_PROGRESS_BASE: "From [PowerBloc.GetRankFormatted] Ranking"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP From [concept_great_power] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP: "Number of [concept_great_power] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_great_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP From [concept_major_power] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP: "Number of [concept_major_power] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_major_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP From [concept_minor_power] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP: "Number of [concept_minor_power] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_minor_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP From [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP: "Number of [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_major_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP From [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP: "Number of [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_regional_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP From [concept_unrecognized_power] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP: "Number of [concept_unrecognized_power] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP From [concept_insignificant_power] members#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP: "Number of [concept_insignificant_power] members: [PowerBloc.MakeScope.ScriptValue('power_bloc_insignificant_power_non_leader_members')]\nAdd: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_add')]\nMult: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_mult')]"
 PRINCIPLE: "#bold [Principle.GetNameNoFormatting]#!"
 ADD_NEW_PRINCIPLE_DURING_FORMATION: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'ADD_NEW_PRINCIPLE', 'NO_MANDATES')]"
 ADD_NEW_PRINCIPLE_DURING_FORMATION_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 NO_MANDATES: "No $concept_power_bloc_mandates$"
 NO_MANDATES_TOOLTIP: "@simple_box! Have at least #v 1#! available [concept_power_bloc_mandate]"
 ADD_NEW_PRINCIPLE_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBloc.GetNumMandates, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 ADD_NEW_PRINCIPLE: "Add Principle"
 NO_NEW_PRINCIPLE: "No Principle"
 LOCKED_PRINCIPLE_SLOT: "Locked"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT: "This [concept_power_bloc_principle] slot will become available if:\n[PowerBlocPrincipleSlot.GetUnlockDesc]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_DURING_FORMATION: "More [concept_power_bloc_principle] slots will become available as your [concept_power_bloc] achieves a higher [concept_power_bloc_rank] and acquires more [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_3_DURING_FORMATION: "Available when your [concept_power_bloc_rank] is #v ##5#! or better and you have at least #v 5 #! [Concept('concept_power_bloc_member', '$concept_power_bloc_members_short$')]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_4_DURING_FORMATION: "Available when your [concept_power_bloc_rank] is #v ##3#! or better and you have at least #v 10 #! [Concept('concept_power_bloc_member', '$concept_power_bloc_members_short$')]"
 AVAILABLE_MANDATES: "[PowerBloc.GetNumMandates|v] Available [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 POWER_BLOC_FORMATION_CUSTOMIZATION: "Customization"
 LEAVE_POWER_BLOC: "Leave"
 TOOLTIP_LEAVE_POWER_BLOC: "Click to leave the [PowerBloc.GetName].[ConcatIfNeitherEmpty( '\n\n', GetDesc( GetPlayer.LeavePowerBloc ))]"
 LEAVE_POWER_BLOC_CONFIRMATION: "Are you sure you want to leave [PowerBloc.GetName]? This will reduce our [concept_relations] with all other [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]."
 POWER_BLOC_COUNTRY_NOT_IN_POWER_BLOC: "[Country.GetName] is not in a [concept_power_bloc]"
 POWER_BLOC_COUNTRY_NOT_POWER_BLOC_LEADER: "[Country.GetName] is not the leader of [PowerBloc.GetName]"
 POWER_BLOC_COUNTRY_NOT_A_POWER_BLOC_LEADER: "[Country.GetName] is not a leader of a [concept_power_bloc]"
 POWER_BLOC_COUNTRIES_NOT_IN_THE_SAME_POWER_BLOC: "[Country.GetName] is not in the same [concept_power_bloc] as [TARGET_COUNTRY.GetName]"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE: "[PowerBlocPrinciple.GetName] is already active in another [concept_power_bloc_principle] slot"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE_SAME_SLOT: "[PowerBlocPrinciple.GetName] is already active in this [concept_power_bloc_principle] slot"
 POWER_BLOC_HAS_PRINCIPLE_OF_SAME_GROUP: "A [PowerBlocPrincipleGroup.GetName] [concept_power_bloc_principle] is already active in another [concept_power_bloc_principle] slot"
 POWER_BLOC_NOT_ENOUGH_MANDATES: "Have at least #v $COST|0$#! available [SelectLocalization(EqualTo_int32('(int32)$COST$', '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]"
 POWER_BLOC_NO_PRIMARY_PRINCIPLES_SELECTED: "None of the [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] from the [Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_groups$')] for the [POWER_BLOC_IDENTITY.GetName] [Concept('concept_power_bloc_identity','$concept_power_bloc_identity_extra_short$')] has been selected"
 POWER_BLOC_PRINCIPLE_ON_COOLDOWN: "[POWER_BLOC_PRINCIPLE.GetName] is on cooldown and cannot be changed until [DATE.GetString|v]"
 POWER_BLOC_PRINCIPLE_IS_INCOMPATIBLE: "[POWER_BLOC_PRINCIPLE.GetName] is not compatible with [POWER_BLOC_PRINCIPLE_OTHER.GetName]"
 POWER_BLOC_LEADER_EXPENSE_LIST_ITEM: "#negative_value -$VAL|0$#! from [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')] of [PowerBloc.GetName]"

 POWER_BLOC_COUNTRY_IS_COLONIZABLE: "[Country.GetName] is a [concept_decentralized_nation]."

 EXISTING_POWER_BLOCS_HEADER: "Power Blocs in the World"

 POWER_BLOC_PLAYER_HAS_THIS_IDENTITY: "@green_checkmark_box! [GetPlayer.GetPowerBloc.GetName] has this [concept_power_bloc_identity]"
 POWER_BLOC_IDENTITY_POWER_BLOC_EFFECT: "#title [concept_power_bloc]:#!\n$DESC$"
 POWER_BLOC_IDENTITY_MEMBER_EFFECT: "#title All [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]:#!\n$DESC$"
 POWER_BLOC_IDENTITY_LEADER_EFFECT: "#title [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')] only:#!\n$DESC$"
 POWER_BLOC_IDENTITY_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')]:#!\n$DESC$"
 POWER_BLOC_PLAYER_CAN_UPGRADE_THIS_PRINCIPLE: "@arrow_up! You can upgrade this [concept_power_bloc_principle]"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE: "@green_checkmark_box! [GetPlayer.GetPowerBloc.GetName] has this $concept_power_bloc_principle$"
 POWER_BLOC_HAS_THIS_PRINCIPLE: "@green_checkmark_box! [PowerBloc.GetName] has this $concept_power_bloc_principle$"
 POWER_BLOC_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! #v [PowerBloc.GetName]#! already has another [PowerBlocPrincipleGroup.GetName] $concept_power_bloc_principle$"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE: "@green_checkmark_box! [PowerBlocFormation.GetChosenName] has this $concept_power_bloc_principle$"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! #v [PowerBlocFormation.GetChosenName]#! already has selected another [PowerBlocPrincipleGroup.GetName] $concept_power_bloc_principle$"
 POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN: "#italic This $concept_power_bloc_principle$ has been recently selected and cannot be changed until [AccessPlayer.AccessPowerBloc.GetPrincipleData(PowerBlocPrinciple.Self).GetCooldownDate.GetString|v]#!"
 POWER_BLOC_PLAYER_PRINCIPLE_INFO: "$POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(GetPlayer.GetPowerBloc.IsPrincipleOnCooldown(PowerBlocPrinciple.Self), 'POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN'))]"
 POWER_BLOC_PRINCIPLE_POWER_BLOC_EFFECT: "#title [concept_power_bloc]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_MEMBER_EFFECT: "#title All [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_LEADER_EFFECT: "#title [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')] only:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_INSTITUTION_EFFECT: "Provides [InstitutionType.GetName] with:\n$DESC$"
 POWER_BLOC_PRINCIPLE_ON_SELECTED_LABEL: "#title When selected:#!"
 POWER_BLOC_PRINCIPLE_ON_MEMBER_JOINED_LABEL: "#title When a [concept_country] joins:#!"
 POWER_BLOC_PRINCIPLE_INCOMPATIBLE_PRINCIPLES: "Incompatible with the following: $LIST$"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE_GROUP: "@green_checkmark! [GetPlayer.GetPowerBloc.GetName] has a [concept_power_bloc_principle] from this [concept_power_bloc_principle_group]"
 POWER_BLOC_PRINCIPLE_GROUP_LEVELS: "Has the following levels: $LIST$"

 POWER_BLOC_CAN_INVITE_COUNTRY: "Can be invited to [PowerBloc.GetNameNoFormatting]"
 POWER_BLOC_CANNOT_INVITE_COUNTRY: "@red_cross! Can not currently be invited to [PowerBloc.GetNameNoFormatting] due to:\n$DESC$"
 POWER_BLOC_NON_MEMBER_COUNTRY_TOOLTIP: "#header [Country.GetName]#!\nIs not part of any [concept_power_bloc][ConcatIfNeitherEmpty('\n', '$INVITE_DESC$')][ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n',Country.GetLeverageBreakdown)]"

 POWER_BLOC_ACTIVE_LEVERAGE_GAIN_DESC: "From [PowerBloc.GetName]'s [concept_power_bloc_leverage_advantage] Gain of #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=0$#!#!"
 POWER_BLOC_ACTIVE_LEVERAGE_COUNTER_GAIN_DESC: "From competing [PowerBloc.GetName]'s [concept_power_bloc_leverage_advantage] Gain of #tooltippable #tooltip:$BREAKDOWN_TAG$ [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0]#!#!"
 POWER_BLOC_LEVERAGE_ADVANTAGE_TOOLTIP: "[concept_power_bloc_leverage_advantage] by [concept_power_bloc] on another [concept_country]"

 POWER_BLOC_LEVERAGE_ADVANTAGE_PLAYER_TOOLTIP: "#header [concept_power_bloc_leverage_advantage] over [GetPlayer.GetName]#!\n#v [PowerBloc.GetLeverageAdvantage(GetPlayer.Self)|+=0]#! for [PowerBloc.GetName]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetLeverageAdvantageDesc(GetPlayer.Self)]"
 POWER_BLOC_LEVERAGE_SELF_ADVANTAGE: "Currently in the lead"
 POWER_BLOC_LEVERAGE_OTHER_ADVANTAGE: "[POWER_BLOC_OTHER.GetName] is currently in the lead"
 POWER_BLOC_LEVERAGE_NOBODY_ADVANTAGE: "No [concept_power_bloc] is currently in the lead"
 POWER_BLOC_LEVERAGE_COUNTRY_ADVANTAGE: "#todo 999 (99%)#! #b #tooltip:country_leverage_resistance_add_desc $country_leverage_resistance_add$#!#! of [COUNTRY.GetName] currently exceeds the [concept_power_bloc_leverage] from all [Concept('concept_power_bloc','$concept_power_blocs$')]"
 POWER_BLOC_LEVERAGE_ADVANTAGE_BREAKDOWN: "$BREAKDOWN$"

 POWER_BLOC_LEVERAGES_HEADER: "[concept_power_bloc_leverage] trends for [Concept('concept_power_bloc','$concept_power_blocs$')]:"
 POWER_BLOC_LEVERAGE_ENTRY: "#v [PowerBloc.GetLeverageAdvantage(Country.Self)|+=0]#! [PowerBloc.GetName]: #v $CURRENT_LEVERAGE|0$#! @arrow_right! #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TARGET_LEVERAGE|0$#!#!#! ($TARGET_LEVERAGE_SHARE|%1$)"
 POWER_BLOC_UNCLAIMED_LEVERAGE: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $UNCLAIMED_LEVERAGE|v0$#!#! ($UNCLAIMED_LEVERAGE_SHARE|%1$) @arrow_right! [Country.GetUnclaimedLeverageTarget|v0] ([Country.GetUnclaimedLeverageShareTarget|%1]) [concept_power_bloc_unclaimed_leverage]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_INTEREST: "[SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName] [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] has an [concept_interest] in [SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_GAIN_NO_CAPITAL_INTEREST: "No [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] of [SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName] has an [concept_interest] in [SCOPE.sCountry('target').GetName]'s [Concept( 'concept_capital_state', '$concept_capital_state_short$' )] [SCOPE.sCountry('target').GetCapital.GetName]"
 POWER_BLOC_LEVERAGE_GAIN_DECAY: "No [concept_interest] in [SCOPE.sCountry('target').GetName]"
 POWER_BLOC_INACTIVE_LEVERAGE_GAIN_DECAY: "[SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName]'s inactive status"
 POWER_BLOC_LEVERAGE_GAIN_FORMAT: "$VALUE|+=0$ from $KEY$"
 POWER_BLOC_LEVERAGE_COUNTER_GAIN_FORMAT: "[Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0] from $KEY$"
 POWER_BLOC_LEVERAGE_GAIN_FROM_LOBBY_CLOUT: "#v $VALUE|+=0$#! from [POLITICAL_LOBBY.GetName] [concept_clout]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|%=+1$#! from [DIPLOMATIC_PACT.GetName]"
 POWER_BLOC_ADDED_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|+=0$#! from [DIPLOMATIC_PACT.GetName]"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_EXPELLED_DIPLOMATS: "Expelled diplomats"
 POWER_BLOC_LEVERAGE_GAIN_IN_COMMON_WAR: "Common [concept_war]"
 POWER_BLOC_LEVERAGE_GAIN_NOT_IN_COMMON_WAR: "No common [concept_war]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_ECONOMIC_DEPENDENCE: "[concept_economic_dependence] on [SCOPE.GetRootScope.GetCountry.GetName] ([SCOPE.sCountry('target').GetEconomicDependenceOn(SCOPE.GetRootScope.GetCountry.Self)])"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_PRIMARY_CULTURE: "[Concept('concept_primary_cultures','$concept_primary_culture$')] with low [concept_acceptance]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_MEMBERSHIP: "Already a [concept_power_bloc_member]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_CULTURAL_PROXIMITY: "Shared [Concept('concept_cultural_trait','$concept_cultural_traits$')]"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_RELIGION: "[concept_state_religion] with low [concept_acceptance]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_SHARED_RELIGION: "Shared [concept_state_religion]"
 POWER_BLOC_LEVERAGE_GAIN_NO_SHARED_RELIGION: "Different [Concept('concept_state_religion','$concept_state_religions$')]"
 LEVERAGE_ON_LEADER_NOT_APPLICABLE: "[concept_power_bloc_leverage] is not applicable on a [concept_power_bloc_leader]"
 LEVERAGE_ON_PLAYER_LEADER_NOT_APPLICABLE: "[concept_power_bloc_leverage] is not applicable on you since you are a [concept_power_bloc_leader]"

 POWER_BLOC_LEVERAGE_NO_INTEREST: "No [concept_power_bloc_member] of [PowerBloc.GetName] has an [concept_interest] in [Country.GetName]"
 POWER_BLOC_LEVERAGE_DECENTRALIZED: "No [concept_power_bloc] can gain [concept_power_bloc_leverage] in [Country.GetName] since it is a [concept_decentralized_nation]"

 POWER_BLOC_LEVERAGE_HAS_TREATY_PORT: "[concept_treaty_port]"
 POWER_BLOC_LEVERAGE_HAS_WAR_WITH: "being at [concept_war] against [SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_ADJACENT_TO_LEADER: "[concept_power_bloc_leader] being adjacent to [SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_STRATEGIC_ADJACENCY: "strategic adjacency to [SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_PENALTY_INFAMY: "high [concept_infamy]"
 POWER_BLOC_LEVERAGE_UNRECOGNIZED_LEADER_RECOGNIZED_TARGET: "[SCOPE.sCountry('target').GetName] being [Concept('concept_recognized_power','$concept_recognized_power_short$')] while [concept_power_bloc_leader] [SCOPE.GetRootScope.GetCountry.GetNameNoFlag] is [Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')]"

 POWER_BLOC_LEDGER_COLUMN_LEADER: "Leader"
 POWER_BLOC_LEDGER_COLUMN_MEMBERS: "Members"
 POWER_BLOC_LEDGER_COLUMN_IDENTITY: "Identity"
 POWER_BLOC_LEDGER_COLUMN_PRINCIPLES: "Principles"
 SHOW_SPECIFIC_POWER_BLOCS_MAP_MODE: "Show selected [concept_power_bloc] on map."
 SHOW_ALL_POWER_BLOCS_MAP_MODE: "Show all [Concept('concept_power_bloc','$concept_power_blocs$')] on map."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_LEADER: "Click to change or upgrade [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]."
 TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER: "Click to add a new [concept_power_bloc_principle] to this slot."
 TOOLTIP_NO_PRINCIPLE_SLOT: "#header Empty [concept_power_bloc_principle] slot#!\n[AddLocalizationIf(Not(PowerBloc.IsLeader(GetPlayer.Self)), 'TOOLTIP_NO_PRINCIPLE_SLOT_OTHER')]"
 TOOLTIP_NO_PRINCIPLE_SLOT_LEADER: "Empty [concept_power_bloc_principle] slot"
 TOOLTIP_NO_PRINCIPLE_SLOT_OTHER: "@red_cross! You can only add a new [concept_power_bloc_principle] if you are the [concept_power_bloc_leader]."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_MEMBER: "You can only change or upgrade [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] if you are the [concept_power_bloc_leader]."

 PRINCIPLE_SELECTION_HEADER: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT', 'PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT')]"
 PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT: "Choose a $concept_power_bloc_principle$"
 PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT: "Change or Upgrade [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 AVAILABLE_PRINCIPLE_GROUPS: "Available [Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')]"
 POTENTIAL_PRINCIPLE_GROUPS: "Potential [Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')] ([SelectLocalization(IsDataModelEmpty(PowerBlocPrincipleSelectionWindow.GetPotentialGroups), 'NONE', 'POTENTIAL_PRINCIPLE_GROUPS_COUNT')])"
 POTENTIAL_PRINCIPLE_GROUPS_COUNT: "[GetDataModelSize(PowerBlocPrincipleSelectionWindow.GetPotentialGroups)|v]"
 PRINCIPLE_GROUP_NAME_LABEL: "[PowerBlocPrincipleGroup.GetName] [AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBlocFormation.GetSelectedIdentity.Self), PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation), 'PRIMARY_PRINCIPLE_GROUP_LABEL')][AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetIdentity.Self), Not(PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation)), 'PRIMARY_PRINCIPLE_GROUP_LABEL')]"
 PRIMARY_PRINCIPLE_GROUP_LABEL: "([Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_group_short$')])"
 PRINCIPLE_SELECTION_NO_SELECTION: "No [concept_power_bloc_principle] selected"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_LABEL: "Submit"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Submit changes#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', GetDesc(PowerBlocPrincipleSelectionWindow.SubmitPrincipleSelection))]"
 FORMATION_PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Submit changes#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', PowerBlocPrincipleSelectionWindow.GetDescForPrincipleSelection(PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.Self))]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED', 'PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE')]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION: "@red_cross! No changes made"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST: "This will cost @power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN: "This will cost @power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]#indent_newline:3 \n[PowerBlocPrincipleSelectionWindow.GetMandateCostDescForSelectedPrinciple]"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_UPGRADE: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] from upgrding a level $OLD_LEVEL|v$ principle to level $NEW_LEVEL|v$"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_ADD: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] from adding a level $NEW_LEVEL|v$ principle"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_REPLACE: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] from replacing an existing principle with a level $NEW_LEVEL|v$ principle"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED: "$PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE$ $PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE$"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsUpgradingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE', 'PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE')]"
 PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE: "Upgrade [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE: "Replace [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE: "with [PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName]"
 PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE: "Add [PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName]"
 AVAILABLE_MANDATES_TITLE_FORMATION: "Available [SelectLocalization(EqualTo_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]"
 AVAILABLE_MANDATES_TITLE: "Available [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 MANDATE_CONCEPT: "[concept_power_bloc_mandate]"
 MANDATES_CONCEPT: "[Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 AVAILABLE_MANDATES_VALUE: "[PowerBlocPrincipleSelectionWindow.GetNumMandates] ([Negate_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple)])"
 AVAILABLE_MANDATES_VALUE_TOOLTIP: "#header [PowerBlocPrincipleSelectionWindow.GetNumMandates] Available [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]#!\n[LabelingHelper.GetRemainingDuration(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetNextMandateDate.Self, '')] until next $concept_power_bloc_mandate$ is gained"
 RESET_PRINCIPLES_TOOLTIP: "Reset all [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]"
 REMOVE_PRINCIPLE: "Refund this [concept_power_bloc_principle]"

 RESEARCHING:0 "[GetPlayer.GetName] is currently researching #variable [Technology.GetName]#!\nProgress: $TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT$"
 NOT_RESEARCHING:0 "[GetPlayer.GetName] is not actively researching anything."

 BUTTON_DETAILS:0 "Go to Details screen"
 BUTTON_DETAILS_FRONT:0 "Go to $concept_front$ panel"
 BUTTON_INTERACT:0 "Interact"
 NO_OF_UNREAD_PINS:0 "You have #BOLD #V [InformationPanelBar.GetNumberOfUnreadPins]#!#! unread pins"

 FRONT_COUNTRY_LEFT_SIDE: "[Front.AccessLeftTheater.GetOwner.GetAdjective] side"
 FRONT_COUNTRY_RIGHT_SIDE: "[Front.AccessRightTheater.GetOwner.GetAdjective] side"

 YOU_AND_ALLIES_LEFT_FORMATIONS: "You and Your Allies ([Front.AccessLeftTheater.GetOwner.GetFlagTextIcon])"
 ENEMIES_LEFT_FORMATIONS: "Enemy ([Front.AccessLeftTheater.GetOwner.GetFlagTextIcon])"
 YOU_AND_ALLIES_RIGHT_FORMATIONS: "You and Your Allies ([Front.AccessRightTheater.GetOwner.GetFlagTextIcon])"
 ENEMIES_RIGHT_FORMATIONS: "Enemy ([Front.AccessRightTheater.GetOwner.GetFlagTextIcon])"

 ALREADY_ACQUIRED_TITLE:0 "#BOLD Known Technology#!"
 RESEARCH_PANEL:0 "#BOLD Select New Research#!"
 SHOW_ON_MAP:0 "Show on map"

 TECHNOLOGY_HEADER:0 "#BOLD Technology#!"
 GET_UNDISCOVERED_TECHNOLOGY_COST:0 "Cost: #BOLD [Era.GetTechnologyCost] IP#!"
 ECONOMY_TYPE_DESCRIPTION:0 "Economy, Era [Era.GetNumber]"
 MILITARY_TYPE_DESCRIPTION:0 "Military, Era [Era.GetNumber]"
 CULTURE_TYPE_DESCRIPTION:0 "Culture, Era [Era.GetNumber]"
 ALREADY_ACQUIRED_BUTTON:0 "See Known Technologies"

 TECHNOLOGY_AQUIRED_POPUP_HEADER:1 "#header [PlayerMessageItem.GetScopeTechnology.GetName] Unlocked#!"
 TECHNOLOGY_UNLOCKS_TEXT:0 "[Technology.GetTooltipWithoutRequirements(GetPlayer.Self)]"
 TECHNOLOGY_LORE_TEXT:0 "#lore [Technology.GetDesc]#!"
 NA:0 "Not available"

 JOURNAL_ENTRY_ON_ACTIVATION:0 "#title If activated:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_COMPLETION:0 "#title If completed:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_FAILURE:0 "#title If failed:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_INVALIDATION:0 "#title If invalidated:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_TIMEOUT:0 "#title If time runs out:#!\n$EFFECT$"
 
 JOURNAL_ENTRY_ON_TIMEOUT_LONG: "[JournalEntry.GetOnTimeoutTooltip]\n\nWill time out in #v [LabelingHelper.GetMultiTypeGameTimeDifferenceFromDays( JournalEntry.GetTimeoutDaysLeft, '(int32)5', '' )]#!"

 JOURNAL_ENTRY_TIMED_MODIFIERS_HEADER: "#title The following effects apply while active:#!"

 HAS_ON_PULSE:0 "#debug Debug: This Journal Entry has some sort of OnPulse#!"
 DEBUG_NO_CHARACTER_IN_GBR_IS_VICTORIA:0 "#debug Debug: No character in GBR is Victoria#!"

 ARKET_PANEL_STATES_IN_MARKET:0 "#header Connected to Market#!\n[StateRegion.GetName] is connected to [Market.GetName]"
 WORKS_AT:0 "$NAME$($NUM|0*$)"
 MARKET_INFRASTRUCTURE_INFO:0 "[concept_infrastructure] to [MARKET.GetName]: #variable $VAL|+$#!"

 MARKET_STATE_REGION_LIST_IN:0 "In?"
 STATE_REGION:1 "[concept_state_region]"
 MARKET_ACCESS:0 "[concept_market_access]"
 MARKET_ACCESS_SHORT:0 "[Concept('concept_market_access', 'Access')]"

 GDP_CONTRIBUTION:0 "[Concept('concept_gdp','$concept_gdp_short$')] Contribution"
 GDP_OWNERSHIP: "[Concept('concept_gdp','$concept_gdp_short$')] Ownership"

 URBANIZATION: "[concept_urbanization]"
 STATE_URBANIZATION_BUILDINGS_MAX_LEVEL_TOOLTIP: "#header Level of [Concept('concept_building','$concept_buildings$')] created by [concept_urbanization]#!\n$MAX_LEVEL|v0$ levels in [State.GetName]\n$TOOLTIP_DELIMITER$\n#v $URBANIZATION$#! $concept_urbanization$ in [State.GetName]\nEvery $URBANIZATION_PER_LEVEL|v0$ $concept_urbanization$ creates one level\n\n$BREAKDOWN$"
 STATE_URBANIZATION_NEEDED_PER_LEVEL_TOOLTIP: "#header [concept_urbanization] Requirements in [State.GetName]#!\nEvery $VALUE|v0$ $concept_urbanization$ [State.GetName] creates one level of [GetBuildingType('building_urban_center').GetName]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 URBANIZATION_NEEDED_PER_LEVEL_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|0v$#!#!"
 TOTAL_URBAN_CENTERS:1 "[GetBuildingType('building_urban_center').GetName] size:"
 TOTAL_TRADE_CENTER: "[GetBuildingType('building_trade_center').GetName] size:"
 TOTAL_MANOR_HOUSE: "[GetBuildingType('building_manor_house').GetName] size:"
 TOTAL_FINANCIAL_DISTRICT: "[GetBuildingType('building_financial_district').GetName] size:"
 TOTAL_BARRACKS: "[GetBuildingType('building_barracks').GetName] size:"
 TOTAL_CONSCRIPTION_CENTER: "[GetBuildingType('building_conscription_center').GetName] size:"
 TOTAL_NAVAL_BASE: "[GetBuildingType('building_naval_base').GetName] size:"
 TOTAL_URBANIZATION:0 "([concept_urbanization]: [Building.GetState.GetUrbanization|v])"
 UNUSED_ARABLE:0 "Unused [concept_arable_land]:"
 RESOURCE:0 "Resource"
 AGRICULTURE:0 "Agriculture"

 BUILDINGS_USING_THIS_LIST:0 "#title Used in#!\n$LIST$"
 BUILDINGS_PRODUCING_THIS_LIST:0 "#title Produced in#!\n$LIST$"
 OPEN_EXPANSION_LENS:0 "Expand in other State(s)"

 STATE_INFRASTRUCTURE:3 "[concept_infrastructure]\n$STATE_INFRASTRUCTURE_CONDENSED$"
 STATE_MARKET_CAPITAL_STATUS:2 "[concept_market_capital]\n$STATE_MARKET_CAPITAL_STATUS_CONDENSED$"
 STATE_CAPITAL_STATUS:0 "[concept_capital_state]\n[State.GetOwner.GetName]"
 STATE_SPLIT_STATE_STATUS:0 "[concept_split_state]\n[State.GetStateRegion.GetName]"
 STATE_MIGRATION_TARGET_STATUS:1 "[concept_migration_target]\n[State.GetMassMigrationCulture.GetName] from [State.GetMassMigrationOriginCountry.GetName]"
 STATE_MARKET_STATUS:1 "[State.GetMarket.GetName]\n[SelectLocalization(LessThan_CFixedPoint(State.GetInfrastructureBalance, '(CFixedPoint)0'), 'WARNING', '')][State.GetMarketAccess|%v0]"
 STATE_TRAIT_STATUS:0 "[StateTrait.GetName|v]\n#title State Trait#!"
 STATE_POPULATION_STATUS:2 "[Concept('concept_pop','$concept_population$')]\n$STATE_POPULATION_STATUS_CONDENSED$"
 STATE_SOL_STATUS:0 "[concept_sol]"
 STATE_GDP_STATUS:1 "$GDP_SHORT$\n$STATE_GDP_STATUS_CONDENSED$"
 STATE_DECREE_STATUS:0 "[Decree.GetName]"
 STATE_CONSTRUCTION:3 "[concept_construction]\n$STATE_CONSTRUCTION_CONDENSED$"
 STATE_CONSTRUCTION_CONDENSED:0 "[SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsUnderConstructionInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_ACTIVE', '')][SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsInConstructionQueueInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_IN_QUEUE', '')]"
 STATE_CONSTRUCTION_ACTIVE:0 "[Country.GetNumBuildingsUnderConstructionInState(State.Self)|v] active"
 STATE_CONSTRUCTION_IN_QUEUE:0 "\n[Country.GetNumBuildingsInConstructionQueueInState(State.Self)|v] queued"

 TOOLTIP_VIEW_CONDENSED:0 "#header View condensed State Panel#!"
 TOOLTIP_VIEW_DETAILED:0 "#header View detailed State Panel#!"

 WARNING:0 "@warning! "

 BUILDING_POPULATION_STATUS:0 "Employees\n[Building.GetNoOfEmployed|Kv]"

 IMPOSE_LAW_TOOLTIP: "#header Impose [Law.GetName] on [Law.GetCountry.GetName]#!\n$TOOLTIP_DELIMITER$\n[SelectLocalization(Not(StringIsEmpty(GetDesc( Law.StartImposing ))), 'FORCE_SUBJECT_TRIGGERS', '' )]This would force [Law.GetCountry.GetName] to change from [Law.GetActiveGroupLaw.GetName] to [Law.GetName] as their [Law.GetGroup.GetName] [concept_law] [ConcatIfNeitherEmpty('\n', SelectLocalization(Not(StringIsEmpty(Law.GetOnImposeDesc)), 'FORCE_SUBJECT_EFFECTS', '' ))]"
 LAW_RIGHT_CLICK_MENU_TITLE: "[Law.GetGroup.GetName] [concept_law_group]"
 FORCE_SUBJECT_EFFECTS: "\n\n#title Effects:#!\n[Law.GetOnImposeDesc]"
 FORCE_SUBJECT_TRIGGERS: "#title Requirements:#!\n[GetDesc( Law.StartImposing )]\n\n"
 IMPOSE_LAW_NOT_OVERLORD: "@red_cross! [GetPlayer.GetName] needs to be [concept_overlord] of [Country.GetName] to impose a [concept_law] on them"
 IMPOSE_LAW_NO_OPTIONS: "[SelectLocalization(StringIsEmpty(Law.GetCountry.GetCustom('impose_law_error')),'IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN',Law.GetCountry.GetCustom('impose_law_error'))]"
 IMPOSE_LAW_NO_OPTIONS_COOLDOWN: "@red_cross! You cannot impose a [concept_law] on [ROOT.GetCountry.GetName] for another [ROOT.GetCountry.GetTimedModifierDurationRemaining('impose_law_cooldown')]"
 IMPOSE_LAW_NO_OPTIONS_JOURNAL_ENTRY: "@red_cross! Still dealing with a previous [concept_law] imposed on them"
 IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN: "@red_cross! No [Concept('concept_law','$concept_laws$')] available to impose on [ROOT.GetCountry.GetName] in this group"

 UNDER_COLONIZATION:0 "Growing [concept_colony]"
 BEING_COLONIZED:0 "Being [Concept('concept_colony', '$concept_colonized$')] by\n[SelectLocalization(EqualTo_int32(State.GetNumColonizers,'(int32)1'),State.GetColonizers('STATE_REGION_COLONIZER_SINGLE_WIDGET'),State.GetColonizers('STATE_COLONIZER_WIDGET_ITEM'))]"
 TOOLTIP_COLONIZED:0 "#header Being [Concept('concept_colony', '$concept_colonized$')]#!\n$TOOLTIP_DELIMITER$\n[State.GetName] is being $concept_colonized$ by:\n[State.GetColonizers('STATE_REGION_COLONIZER_ITEM')]"
 STATE_REGION_COLONIZER_SINGLE_WIDGET:0 "[STATE.GetCountry.GetName]"
 STATE_REGION_COLONIZER_ITEM:0 "$TAB$[STATE.GetOwner.GetName] ([STATE.GetName])\n"
 STATE_COLONIZER_WIDGET_ITEM:0 "[STATE.GetCountry.GetFlagTextIcon] "

 STATE_INFRASTRUCTURE_USAGE_TOOLTIP:3 "#header [concept_infrastructure_usage]#!\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE')]"
 STATE_INFRASTRUCTURE_USAGE: "[State.GetName] uses #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_INFRASTRUCTURE_TOOLTIP:3 "#header [concept_infrastructure]#!\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE')]"
 STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE: "[State.GetName] has [State.GetInfrastructure|+0] [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 NO_STATE_INFRASTRUCTURE_DESC: "[State.GetName] has no [concept_infrastructure]"

 STATE_INFRASTRUCTURE_DESC:3 "#header [concept_infrastructure] Balance#!\nThe [concept_infrastructure] Balance in [State.GetName] is [State.GetInfrastructureBalance|0+=]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE')]\n\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE_DESC')]"
 STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE: "#title The [concept_infrastructure] of #v [State.GetInfrastructure|0+]#! is due to:#!\n   #indent_newline:3 [State.GetInfrastructureDesc]#!"
 STATE_INFRASTRUCTURE_USAGE_DESC: "#title The [concept_infrastructure_usage] of #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! is due to:#!\n   #indent_newline:3 [State.GetInfrastructureUsageDesc]#!"
 NO_STATE_INFRASTRUCTURE_USAGE_DESC: "[State.GetName] has no [concept_infrastructure_usage] at the moment"
 STATE_PANEL_INFRASTRUCTURE_DESC:1 "#header [concept_infrastructure]#!\n[concept_infrastructure] in [State.GetName]: #v [State.GetInfrastructure|0]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 STATE_PANEL_INFRASTRUCTURE_USAGE_DESC:2 "#header [concept_infrastructure_usage]#!\n[concept_infrastructure_usage] in [State.GetName]: #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_TRAIT_STATE_MODIFIER:0 "State Modifiers"
 STATE_TRAIT_STATE_REGION_MODIFIER:0 "State Region Modifiers"
 BUILDING_PROGRESS_TOOLTIP:2 "#header [Building.GetName]#!\nBuilding Progress: #VARIABLE [Building.GetConstructionProgressPercentage|%]#!\nWeekly [concept_construction] Allocation: @construction! #v #tooltippable #tooltip:[Building.GetTooltipTag],CONSTRUCTION_SPEED_TOOLTIP [Building.GetConstructionSpeedPerWeek|2]#!#!#!\nTime remaining: #VARIABLE [Building.GetConstructionRemainingWeeksDesc]#!"
 BUILDING_PROGRESS_TOOLTIP_QUEUED:0 "#header [Building.GetName]#!\nIn Construction Queue in [Country.GetName]"

 INFRASTRUCTURE_FROM_STATE:0 "$VALUE|+=1$ from [concept_state]:\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS:3 "$VALUE|+=1$ from [Concept('concept_pop', '$concept_pops$')]$CAP_BREAKDOWN$:\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS_CAPPED:3 " ($VALUE|+=1$ capped at maximum value of $CAP|1v$)"
 INFRASTRUCTURE_FROM_GOODS: "$VALUE|+=1$ from [concept_pop] Consumption of [GOODS.GetName]:\n$BREAKDOWN$"

 NEXT_PAGE:0 "Next page"
 PREVIOUS_PAGE:0 "Previous page"

 CONSTRUCTION_QUEUE_HEADER:0 "Construction Queue"
 CONSTRUCTION_QUEUE_BUILDING_IN_STATE:1 "[ConstructionQueueElement.GetBuilding.GetName] in [AddTextIf( Not(ConstructionQueueElement.GetState.GetOwner.IsLocalPlayer), ConstructionQueueElement.GetState.GetOwner.GetFlagTextIcon )][ConstructionQueueElement.GetBuilding.GetState.GetName]"
 CONSTRUCTION_QUEUE_ITEM_VALID:6 "#header Expanding [Building.GetName] in [State.GetName]#!\n[AddTextIf( ConstructionQueueElement.IsCurrentlyUnderConstruction, '$WEEKS|v$ week(s) until complete\n')]$TOOLTIP_DELIMITER$\n#v $PROGRESS|0$#!/#v $REQUIRED|0$#! [concept_construction] progress (#v $PERCENT_COMPLETE|%$#!)\n#v [ConstructionQueueElement.GetBaseConstructionSpeed|2]#! $concept_construction$ provided by [COUNTRY.GetName] results in a total of #v #tooltippable #tooltip:[ConstructionQueueElement.GetTooltipTag],CONSTRUCTION_QUEUE_SPEED_TOOLTIP $SPEED$#!#!#! progress each week[SelectLocalization( NotEqualTo_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK', '')][ConcatIfNeitherEmpty('\n',ConstructionQueueElement.GetCompanyConstructionBonusDesc)]"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY:0 "#tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP #v [State.GetConstructionEfficiency|%1+=]#!#!#! Construction Efficiency in [State.GetName]"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING:0 "@warning! $CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$\n"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK:0 "\n$CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$"
 STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP:0 "[State.GetConstructionEfficiencyTooltip]"
 CONSTRUCTION_QUEUE_ITEM_INVALID:0 "#header [Building.GetName] in [State.GetName]#!\n$TOOLTIP_DELIMITER$\n$INVALID_DESC$"
 CONSTRUCTION_SPEED_BASE_TOOLTIP:4 "#tooltip_header @construction![Nbsp][concept_construction]#![AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\nTotal: #v [Country.CalcBaseConstructionSpeed|0]#!\nBeing used: #v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]\n$TOOLTIP_DELIMITER$\n[Country.GetBaseConstructionSpeedDesc]"
 CONSTRUCTION_QUEUE_TOOLTIP:0 "[Country.GetConstructionQueueDesc]"
 STATE_CONSTRUCTION_QUEUE_TOOLTIP:1 "[State.GetName] has [State.GetCountry.GetNumBuildingsUnderConstructionInState(State.Self)|v] [Concept('concept_building', '$concept_buildings$')] [concept_under_construction]"
 CONSTRUCTION_QUEUE_DESC: "#header [concept_construction]#! in [Country.GetName][AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\n$TOOLTIP_DELIMITER$\n[Country.GetName] produces a total of @construction! #v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [Country.CalcBaseConstructionSpeed|1]#!#!#! $concept_construction$ each week.\n$CONSTRUCTION_PRIVATE_ALLOCATION_DESC$\n$CONSTRUCTION_GOVERNMENT_PROJECTS_DESC$[ConcatIfNeitherEmpty('\n', Country.GetPrivateConstructionQueueDesc)]"
 PRIVATE_CONSTRUCTION_DISABLED_DESC: "No [concept_private_construction] due to:\n$TAB$$BREAKDOWN$"
 CONSTRUCTION_PRIVATE_ALLOCATION_DESC:0 "Private Construction Allocation: #v #tooltip:[Country.GetTooltipTag],CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP #tooltippable [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!#!"
 CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP:0 "#header #v [Country.GetAdjective] Private Construction Allocation: [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!\n$TOOLTIP_DELIMITER$\n[Country.GetModifier.GetDescFor('country_private_construction_allocation_mult')]"
 CONSTRUCTION_GOVERNMENT_PROJECTS_DESC:0 "There are #v [Country.GetNumActiveGovernmentConstructionQueueElements]#! [Concept('concept_government_construction', '$concept_government_constructions$')] being constructed using #v @construction! [Country.CalcUsedGovernmentConstruction|1]#! (#v [Country.CalcRelativeUsedGovernmentConstruction|%0]#!) [concept_construction], and an additional #v [Country.GetNumInactiveGovernmentConstructionQueueElements]#! [Concept('concept_government_construction', '$concept_government_constructions$')] in the queue"
 CONSTRUCTION_PRIVATE_PROJECTS_DESC:0 "There are #v [Country.GetNumActivePrivateConstructionQueueElements]#! [Concept('concept_private_construction', '$concept_private_constructions$')] being constructed using #v @construction! [Country.CalcUsedPrivateConstruction|1]#! (#v [Country.CalcRelativeUsedPrivateConstruction|%0]#!) [concept_construction], and an additional #v [Country.GetNumInactivePrivateConstructionQueueElements]#! [Concept('concept_private_construction', '$concept_private_constructions$')] in the queue"
 CONSTRUCTION_IS_PAUSED:0 "\nAll $concept_construction$ is currently #b Paused#!"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS:0 "[Country.GetActiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS_NO_ITEMS:0 "No projects [concept_under_construction]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS:0 "[Country.GetInactiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS_NO_ITEMS:0 "No additional projects in the [concept_construction_queue]"
 CONSTRUCTION_SPEED_TOOLTIP:0 "[Building.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_SPEED_TOOLTIP:0 "[ConstructionQueueElement.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_DESC_ITEM:2 "[BUILDING.GetName] in [STATE.GetName]: #v $BASE_SPEED$#! (Max of #v $MAX_BASE_SPEED$#!)[AddTextIf( $IS_UNDER_CONSTRUCTION$ ,' - #v $WEEKS_LEFT$#! week(s) until complete' )]"
 CONSTRUCTION_QUEUE_DESC_BACKLOG_ITEM:2 "[BUILDING.GetName] in [STATE.GetName] (Queued)[AddTextIf( $IS_UNDER_CONSTRUCTION$ , ' - #v $WEEKS_LEFT$#! week(s) until complete' )]"
 CONSTRUCTION_QUEUE_DESC_INVALID_ITEM:1 "[BUILDING.GetName] in [STATE.GetName] #N (Invalid)#!"
 CONSTRUCTION_QUEUE:3 "[concept_construction_queue]"
 CONSTRUCTION_QUEUE_STATE:0 "[concept_construction] #v @construction! #tooltippable #tooltip:[State.GetOwner.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [State.GetOwner.CalcUsedConstruction|0]/[State.GetOwner.CalcBaseConstructionSpeed|0]#!#!#!"
 CONSTRUCTION_QUEUE_IS_EMPTY:1 "Nothing is [concept_under_construction]"
 CONSTRUCTION_QUEUE_HIDDEN_ELEMENTS:0 "+[Country.GetNumHiddenConstructionQueueElements|v] additional queued projects"
 CONSTRUCTION_BUTTON_IDLE:0 "Idle"
 CONSTRUCTION_BUTTON_IDLE_TOOLTIP:0 "$CONSTRUCTION_QUEUE_STATUS_IDLE_DESC$"
 CONSTRUCTION_BUTTON_PAUSE:1 "Pause All"
 CONSTRUCTION_BUTTON_PAUSE_TOOLTIP:1 "$CONSTRUCTION_QUEUE_STATUS_ACTIVE_DESC_DATA$\nClick to pause all [concept_government_construction]"
 CONSTRUCTION_BUTTON_RESUME:0 "Resume"
 CONSTRUCTION_BUTTON_RESUME_TOOLTIP:1 "$CONSTRUCTION_QUEUE_STATUS_PAUSED_DESC_DATA$\nClick to resume all [concept_government_construction]"
 CONSTRUCTION_ALREADY_PAUSED:0 "Construction is already paused."
 CONSTRUCTION_IN_DEFAULT:0 "Cannot resume construction while [COUNTRY.GetName] is in default."
 CONSTRUCTION_ALREADY_RUNNING:0 "Construction is already running."
 CONSTRUCTION_BUILDING_PER_WEEK:0 "@construction! [Building.GetConstructionSpeedPerWeek|0]"
 CONSTRUCTION_QUEUE_ELEMENT_ALLOCATION:0 "@construction! [ConstructionQueueElement.GetBaseConstructionSpeed|1]"
 CONSTRUCTION_VALUE:0 "[SelectLocalization(Country.IsConstructionPaused, 'CONSTRUCTION_DURATION_PAUSED', 'CONSTRUCTION_VALUE_WITHOUT_ICON')]"
 CONSTRUCTION_VALUE_WITHOUT_ICON:0 "#v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]"
 CONSTRUCTION_VALUE_WITH_ICON:1 "@construction! #v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]"
 NO_CONSTRUCTION:1 "Currently no [Concept('concept_building', '$concept_buildings$')] [concept_under_construction]"
 NOTHING_CONSTRUCTING:0 "Nothing [concept_under_construction]"
 USED_VS_UNUSED_CONSTRUCTION:0 "#v [GetPlayer.CalcUsedConstruction|0]#!/[GetPlayer.CalcBaseConstructionSpeed|0]"
 IN_CONSTRUCTION_QUEUE:1 "#v [GetPlayer.GetNumInactiveConstructionQueueElements|=]#!"
 IN_CONSTRUCTION_QUEUE_TOOLTIP:1 "#header [GetPlayer.GetNumInactiveConstructionQueueElements|=] [Concept('concept_building', '$concept_buildings$')] in the [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactiveConstructionProjectsDesc]"
 QUEUED:0 "Queued"
 CONSTRUCTION_QUEUE_FILTER_FUNDING: "Funding"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL: "Government ([ConstructionPanel.GetNumGovernmentConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE: "Private ([ConstructionPanel.GetNumPrivateConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_ALL_TT: "#header $ALL$ #!\nShow both [concept_government_construction] and [concept_private_construction]"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL$ #!\nShow only [concept_government_construction]"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE$ #!\nShow only [concept_private_construction]"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_TT: "Currently investing in the [ConstructionQueueElement.GetBuilding.GetName] in [ConstructionQueueElement.GetState.GetName]"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_VIRTUAL_BUILDING_TT: "Once [concept_construction] completes, new [BuildingType.GetName] will appear in [State.GetName] and [Concept('concept_privately_owned', '$concept_privately_own$')] the new [ConstructionQueueElement.AccessBuilding.GetName] [concept_building_level]."

 CONSTRUCTION_QUEUE_FILTER_SUMMARY: "[SelectLocalization(ConstructionPanel.IsShowingGovernmentConstructions, 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV' )]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT' ) )]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV' ) )]"

 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT: "[concept_government_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV: "[concept_private_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT: "Domestic [concept_government_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV: "Domestic [concept_private_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT: "[concept_government_construction] in foreign [Concept('concept_country', '$concept_countries$')]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV: "[concept_private_construction] in foreign [Concept('concept_country', '$concept_countries$')]"

 CONSTRUCTION_QUEUE_NO_CONSTRUCTION_SECTOR: "No [BuildingType.GetNameNoFormatting]"

 CONSTRUCTION_TAB_DOMESTIC: "National Queue"
 CONSTRUCTION_TAB_FOREIGN: "Foreign Queues ([GetPlayer.GetTotalForeignConstructions])"
 FOREIGN_QUEUE_NO_INVESTORS_EMPTY_STATE: "No foreign [concept_country] may perform [concept_foreign_investment] in [GetPlayer.GetNameNoFlag].\n\nIf you become a [concept_subject], or sign a [concept_foreign_investment_rights] Pact, foreign [Concept('concept_construction', '$concept_constructions$')] will appear here."
 FOREIGN_QUEUE_NO_CONSTRUCTION_EMPTY_STATE: "[Country.GetNameNoFlag] is not currently constructing anything in our [concept_country]"
 FOREIGN_QUEUE_COUNTRY_HEADER: "[Country.GetAdjective] Construction in our $concept_country$"
 FOREIGN_QUEUE_COUNTRY_OVERLORD_TT: "#header [concept_overlord]#!\n[Country.GetName] can perform [concept_foreign_investment] in our [concept_country] because they are our $concept_overlord$"
 FOREIGN_QUEUE_COUNTRY_MUTUAL_PACT_TT: "#header Mutual [concept_foreign_investment_rights] Pact#!\n[Country.GetName] can perform [concept_foreign_investment] in our [concept_country] since we have a mutual [concept_diplomatic_pact]"
 FOREIGN_QUEUE_COUNTRY_ONE_WAY_PACT_TT: "#header [concept_foreign_investment_rights] granted#!\n[Country.GetName] can perform [concept_foreign_investment] in our [concept_country] since we granted it to them"

 BUILDING_PREDICTION_DISCLAIMER: "@information! Earnings, Upkeep and $concept_productivity$ predictions for new [Concept('concept_construction','$concept_constructions$')] take into account the estimated future price impact of queued $concept_constructions$ and understaffed [Concept('concept_building', '$concept_buildings$')]"

 SHOW_PRIVATE_CONSTRUCTIONS:0 "Show [Concept('concept_private_construction', '$concept_private_constructions$')] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumPrivateConstructionsInQueue|v])"
 SHOW_GOVERNMENT_CONSTRUCTIONS:0 "Show [Concept('concept_government_construction', '$concept_government_constructions$')] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumGovernmentConstructionsInQueue|v])"

 BUILDING_DETAILS_EMPLOYMENT_TOOLTIP:0 "#header [Building.GetName] in [Building.GetState.GetName]#!\nSize: [Building.GetExpansionLevelBreakdownDesc]\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetInputOutputTooltip]"
 BUILDING_EMPLOYMENT_UNCAPPED_TOOLTIP:0 "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_UNCAPPED$"
 BUILDING_EMPLOYMENT_TOOLTIP:0 "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_CAPPED$"
 BUILDING_EMPLOYMENT_CAPPED:0 "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_EMPLOYMENT_UNCAPPED:0 "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_LEVEL:0 "[concept_building_level]"
 BUILDING_LEVEL_HEADER_TOOLTIP:0 "#header [concept_building_level]#!\n$TOOLTIP_DELIMITER$\nThe current $concept_building_level$."
 BUILDING_SIZE_TOOLTIP:0 "#header [Building.GetName]#!\nSize: [Building.GetExpansionLevel|v]"
 BUILDING_INFO_TOOLTIP:0 "$BUILDING_TOOLTIP_BASE_P1$\n[Building.GetTooltip]"
 BUILDING_TOOLTIP_BASE_P1:0 "#header [Building.GetName]#!"
 CASH_RESERVES_INFO:1 "[concept_cash_reserves]: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!"
 PRODUCTIVITY_INFO:1 "[concept_productivity]: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
 PRODUCTIVITY_INFO_LOWERCASE:0 "[concept_productivity]:\n$PRODUCTIVITY_INFO_NO_HEADER$"
 PRODUCTIVITY_INFO_NO_HEADER:0 "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"

 BUILDING_CASH_RESERVES_TOOLTIP:0 "#header [concept_cash_reserves]#!\nValue: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!\n\n[concept_cash_reserves_desc]"
 BUILDING_CASH_RESERVES:1 "Cash Reserves: [Building.GetCurrentCashReserves|Dv]"

 LOW_LEGITIMACY_GOVERNMENT_CONFIRMATION:0 "#header Illegitimate Government#!\nThis constellation has very low Legitimacy, are you sure you want to proceed?\n\n#title Effects:#!\n[GetLegitimacyLevel('legitimacy_level_illegitimate').GetEffects]"

 PRODUCTIVITY_SPAN_FORMAT:0 "[GetPlayer.GetCustom('currency_symbol')]$MIN$ - [GetPlayer.GetCustom('currency_symbol')]$MAX$"
 PRODUCTIVITY_SPAN_FORMAT_SAME:0 "[GetPlayer.GetCustom('currency_symbol')]$MIN$"
 PRODUCTIVITY_SPAN_TOOLTIP:0 "#header [concept_productivity]#!\nThe [concept_productivity] in [BuildingType.GetName] in [GetPlayer.GetName] is [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
 EMPLOYMENT_BAR:0 "Employment: [Building.GetNoOfEmployed|1*v]"
 EARNINGS_PER_EMPLOYEE:0 "Earnings / Employee"
 WORLD_PROFITABILITY_HEADER:1 "$EARNINGS_PER_EMPLOYEE$ compared to all Buildings"
 BUILDING_PROFITABILITY_HEADER:2 "$EARNINGS_PER_EMPLOYEE$"
 BUILDING_PROFITABILITY_HEADER_TOOLTIP:1 "#header [concept_productivity]#!\n$TOOLTIP_DELIMITER$\nYearly average $EARNINGS_PER_EMPLOYEE$."
 BUILDING_TAXATION_CAPACITY_HEADER_TOOLTIP:0 "#header $concept_tax_capacity$ Balance#!\n$TOOLTIP_DELIMITER$\nThe balance of [concept_tax_capacity] and Usage in a State."

 BUILDING_PRODUCTIVITY_HEADER:1 "Yearly Avg. $EARNINGS_PER_EMPLOYEE$"
 GOVERNMENTAL_EXPENSES:1 "Governmental Expenses: #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_GOVERNMENT_EXPENSES_DESC #N [GetPlayer.GetCustom('currency_symbol')]-[Building.GetGovernmentExpenses|D-]#!#!#!"
 NOT_FULLY_EMPLOYED:2 "#header #red [Building.GetName] is unable to fully hire#!#!\n$TOOLTIP_DELIMITER$\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 NOT_HIRING:0 "#header #red [SelectLocalization(Building.ShouldShowAsUnableToHire,'NOT_HIRING_UNABLE','NOT_HIRING_UNWILLING')]#!#!\n$TOOLTIP_DELIMITER$\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n\n[Building.GetNotHiringReasonDesc]\n\n[Building.GetAdjustHiringTargetDesc]"
 NOT_HIRING_UNABLE: "[Building.GetName] in [Building.GetState.GetName] is unable to hire"
 NOT_HIRING_UNWILLING: "[Building.GetName] in [Building.GetState.GetName] is unwilling to hire"
 EMPLOYMENT_HINT:1 "\n\n@information! The [Concept('concept_building_wage', '$concept_building_wages$')] in the [Building.GetName] are based on its economic situation. In order to afford to attract more [Concept('concept_pop', '$concept_pops$')] to the Workforce its Weekly [concept_building_balance] should be improved. You can influence this by either making the [Concept('concept_good', '$concept_goods$')] it consumes cheaper, or by making the Goods it produces more expensive. This is done by increasing or decreasing supply and demand on the [Building.GetState.GetMarket.GetName]. You can guarantee that the Workforce is paid a competitive [concept_building_wage] by [Concept('concept_subsidies', '$concept_subsidizing$')] the building. This will keep it afloat by using [concept_money] from the [GetPlayer.GetAdjectiveNoFormatting] [concept_treasury], if necessary."
 INCOME_TAXES:1 "Taxes paid: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_TAXES_TOOLTIP #variable [GetPlayer.GetCustom('currency_symbol')][Building.GetTaxationRevenue|D+=]#!#!#!"
 BUILDING_TOOLTIP_BASE_INFO:2 "[AddLocalizationIf(Not(Building.GetState.IsIncorporated), 'BUILDING_STATE_IS_UNINCORPORATED')]Size: [Building.GetExpansionLevelBreakdownDesc][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), '\n')][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), 'BUILDING_STATE_URBANIZATION')][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'EMPLOYMENT_INFO', '' ))]"
 BUILDING_STATE_IS_UNINCORPORATED:0 "@unincorporated! [SelectLocalization(Building.GetState.IsIncorporating, 'BUILDING_STATE_INCORPORATING', 'UNINCORPORATED')]\n"
 BUILDING_STATE_INCORPORATING:0 "[Concept('concept_incorporated_state','$concept_incorporating$')] (#tooltippable #tooltip:[Building.GetState.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [Building.GetState.GetIncorporationProgress|v%0]#!#!)"
 BUILDING_STATE_URBANIZATION: "Total [concept_urbanization] in [Building.GetState.GetName]: #v #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization]#!#!#!"
 EMPLOYMENT_INFO:1 "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_TOOLTIP:2 "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( And(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), Not(Building.IsSubsistenceBuilding)), 'PRODUCTIVITY_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'CASH_RESERVES_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
 BUILDING_GOVERNMENT_TOOLTIP:2 "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', '' ))]\n$GOVERNMENTAL_EXPENSES$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
 DEBUG_BUILDING_TOOLTIP:0 "ID: #variable [Building.GetID]#!"
 EXPANSION_DESC:0 "$LEVEL|v$"
 EXPANSION_DESC_BUILDING:0 "#tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_LEVEL_TOOLTIP $LEVEL|v$#!#!"
 BUILDING_LEVEL_TOOLTIP:0 "[Building.GetSizeTooltip]"
 EXPANSION_DESC_QUEUE_STATE:0 "+#tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_BUILDING:0 "+#tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_INVALID_STATE:0 "#red #tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 EXPANSION_DESC_QUEUE_INVALID_BUILDING:0 "#red #tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 CONSTRUCTION_QUEUE_IN_STATE:2 "Number of expansion levels for this [concept_building] either [concept_under_construction] or in the [concept_construction_queue] in [State.GetName]"
 EXPANSION_DESC_MAXIMUM: "/#maximum #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP [Building.GetState.GetMaxPotentialFor(Building.Self)|v]#!#!#!"
 URBAN_CAP_PER_LEVEL:0 "#variable #P +[GetDefine('NCountry', 'BASE_URBAN_CAPACITY')]#!#! $urban_capacity$"
 BATTALIONS_PER_LEVEL:1 "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! per Level"
 BATTALIONS_TOTAL:1 "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#! Total"
 FLOTILLAS_PER_LEVEL:3 "[Concept('concept_flotilla','$concept_flotillas$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! per Level"
 FLOTILLAS_TOTAL:3 "[Concept('concept_flotilla','$concept_flotillas$')]: $UNIT_ICON$ #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#! Total"
 CANAL_TOOLTIP_DESC:0 "Allows passage between [PROVINCE.GetStateRegion.GetName] and [PROVINCE_OTHER.GetStateRegion.GetName]"
 GOV_EXPENSES_TITLE:0 "#title [concept_government_expenses]#!"
 INCOME_TAXES_TITLE:0 "#title Income Taxes#!"
 EMBARGO_GOODS:0 "Start Embargoing"
 UNEMBARGO_GOODS:0 "Stop Embargoing"
 ENCOURAGE_GOODS:0 "Encourage Consumption"
 UNENCOURAGE_GOODS:0 "End Encouragement"
 DISCOURAGE_GOODS:0 "Discourage Consumption"
 UNDISCOURAGE_GOODS:0 "End Discouragements"
 TAX_GOODS:0 "Add Consumption Tax"
 NO_GOODS_TO_TAX:0 "There are no goods on which you can collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')]"
 UNTAX_GOODS:0 "Remove Consumption Tax"
 SUBSIDIZE_SHORT:0 "Subsi:"

 BUILDING_SIZE: "[Building.GetExpansionLevel|v][AddLocalizationIf(NotEqualTo_int32( Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_CONSTRUCT')][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'BUILDING_SIZE_MAX')]"
 BUILDING_SIZE_CONSTRUCT: "+[Building.GetExpansionLevelsInQueue|P]"
 BUILDING_SIZE_MAX: "/[Building.GetState.GetMaxPotentialFor(Building.Self)]"
 BUILDING_SIZE_TT: "#header [Building.GetName] in [Building.GetState.GetName]#!\nSize: [Building.GetExpansionLevel|v][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'EXPANSION_DESC_MAXIMUM')] [Concept('concept_building_level', '$concept_building_levels$')][AddLocalizationIf(NotEqualTo_int32( Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_TT_CONSTRUCTION')]"
 BUILDING_SIZE_TT_CONSTRUCTION: "\n[Building.GetExpansionLevelsInQueue|v] $concept_building_levels_short$ [concept_under_construction] or in the [concept_construction_queue]"

 BUILDING_SIZE_TT_OWNERS_HEADER: "$TOOLTIP_DELIMITER$\nOwners:"

 BUILDING_AUTO_DOWNSIZE_WARNING: "@warning! Auto-Downsizing"
 BUILDING_AUTO_DOWNSIZE_HEADER: "#header Autonomous Downsizing#!\n$TOOLTIP_DELIMITER$"
 BUILDING_WILL_AUTO_DOWNSIZE: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nThis [concept_building] has too many unstaffed [concept_privately_owned] levels, and will begin to autonomously downsize its $concept_privately_owned$ levels on $DATE|v$ unless it is able to hire new [Concept('concept_employment','$concept_employees$')]."
 BUILDING_AUTO_DOWNSIZING: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nThis [concept_building] has too many unstaffed [concept_privately_owned] levels, and will autonomously downsize itself by a single $concept_privately_owned$ level each week until it has reached a more appropriate size."

 BUILDING_NOT_HIRING_NO_PROFIT: "@red_cross! This $concept_building$ will not hire because its weekly [concept_building_balance] is at or below zero"
 BUILDING_NOT_HIRING_LOW_PROFIT_LOW_CASH_RESERVES: "@red_cross! This $concept_building$ will not hire because its weekly [concept_building_balance] is not at least [GetPlayer.GetCustom('currency_symbol')]$PROFIT_THRESHOLD|Kv$ ([GetPlayer.GetCustom('currency_symbol')]$PROFIT|Kv$) and its [concept_cash_reserves] are below $CASH_RESERVES_THRESHOLD|%v$ ($CASH_RESERVES|%v$)"
 BUILDING_NOT_HIRING_DECREASED_PRODUCTIVITY: "@red_cross! This $concept_building$ will not hire because it predicts that doing so would reduce its [concept_productivity] below what it considers the minimum viable threshold of [GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY_THRESHOLD|1v$ ([GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualEarningsPerEmployee|v1] @arrow_right![GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|v1$)"

 TAX_WASTE:0 "[concept_tax_waste]: #v $VAL|-%$#!"
 RADICAL_IG_ITEM:0 "[InterestGroup.GetName]: #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [InterestGroup.GetApprovalRating] #bold ([InterestGroup.GetApprovalValue|+=])#!#!#!\n"

 BUILDING_STATUS:0 "Status:"
 BUILDING_ACTIVE:1 "#v Active#!"
 BUILDING_INACTIVE:0 "Inactive"
 BUILDING_INACTIVE_CONSUMPTION_EMPTY_STATE:0 "No [concept_building] Consumption since this $concept_building$ is inactive."
 LOCAL_PRICE_CONDENSED:0 "Local Price: #variable [GetPlayer.GetCustom('currency_symbol')][ProductionInterfaceInfo.GetLocalPrice|1]#!"
 STATE_CONTROLLED_BY:0 "#BOLD #V [State.GetName]#!#! is controlled by #BOLD #V [State.GetController.GetName]#!#!"
 STATE_OCCUPIED_BY:1 "#BOLD #V [Country.GetName]#!#! occupies $FRACTION|%0v$ of [State.GetName|v]"
 STATE_CONTESTED:0 "Control of #BOLD #V [State.GetName]#!#! is contested!"

 CHANGE_PRODUCTION_METHOD_TOOLTIP:0 "#header Change [ChangeProductionMethodMenuItem.GetProductionMethodGroup.GetName] [concept_production_method] to [ProductionMethod.GetName]#!\n[ChangeProductionMethodMenuItem.GetTooltip(GetPlayer.Self)]"
 CHANGE_FROM_CURRENT_PRODUCTION_METHOD_TOOLTIP:1 "#header [ProductionMethodGroup.GetName] [concept_production_method]#!\nCurrent: [ProductionMethod.GetName]\n[ProductionMethod.GetTooltipForBuilding(GetPlayer.Self, Building.Self)]\n\n#instruction #bold Left-click#! to see available options#!"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE:0 "Predicted Weekly [concept_building_balance]: #v [GetPlayer.GetCustom('currency_symbol')]$BALANCE|Dv$#! (#v [GetPlayer.GetCustom('currency_symbol')]$BALANCE_DELTA|D+=$#! from current)\nPredicted [concept_productivity]: [GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY_DELTA|=+1$ from current)"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE_MULTI: "Predicted Average Weekly [concept_building_balance]: #v [GetPlayer.GetCustom('currency_symbol')]$BALANCE|D$#! (#v [GetPlayer.GetCustom('currency_symbol')]$BALANCE_DELTA|D+=$#! from current)\nPredicted Average [concept_productivity]: [GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|v1$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY_DELTA|=+1$ from current)"
 CHANGE_PRODUCTION_NO_EFFECT:0 "This Production Method currently has no effects"
 BULK_CHANGE:0 "#header Switch [ProductionMethodGroup.GetName] [concept_production_method] for all [BuildingType.GetName]#!"
 BULK_CHANGE_MIXED:1 "$BULK_CHANGE$\n[BuildingType.GetName] in [GetPlayer.GetNameNoFlag] vary in the [ProductionMethodGroup.GetName] [Concept('concept_production_method','$concept_production_methods$')] they use"
 BULK_CHANGE_SAME:0 "$BULK_CHANGE$\nAll [BuildingType.GetName] currently has [ProductionMethod.GetName]\n$TOOLTIP$"

 SHOW_PER_LEVEL_VALUES:0 "Show per Level values"
 PER_LEVEL_VALUES_NESTED_TOOLTIP:0 "#tooltippable #tooltip:[GetRawTextTooltipTag('$PER_LEVEL_VALUES_OUTPUT$')] [AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '$SHOW_PER_LEVEL_VALUES$')][AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '\n')]#!#!"
 PRODUCTION_METHOD_TOOLTIP_FORMAT:1 "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$"
 PRODUCTION_METHOD_WITH_REQUIREMENTS_TOOLTIP_FORMAT:2 "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n$TOOLTIP_REQUIREMENTS_ANY$\n')]$REQUIREMENTS$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n')]$BUILDING_TYPE_INFO$"
 PER_LEVEL_VALUES_ONLY:0 "$VALUES$"

 COMPACT_PM_DESC_OUTPUT:0 " $ICON$#v $VAL|+^$#! "
 COMPACT_PM_DESC_INPUT:0 " $ICON$#v $VAL|-^$#! "
 COMPACT_PM_DESC_OUTPUT_MODIFIERS:0 "$NUM|v$ Modifiers"

 COMPACT_PM_DESC_MORE_EMPLOYEES:0 " #v $ICON$ $VAL|D$#! "
 COMPACT_PM_DESC_LESS_EMPLOYEES:0 " #v $ICON$ $VAL|=D$#! "

 COMPACT_PM_GOODS_DESC_FORMAT:0 "[AddTextIf(StringIsEmpty('$INPUT_GOODS$'), '#title No Goods #!')]$INPUT_GOODS$[ConcatIfNeitherEmpty(' @turns_into! ','$OUTPUT_GOODS$')]"
 COMPACT_PM_EMPLOYMENT_DESC_FORMAT:0 "$MORE_EMPLOYEES$[ConcatIfNeitherEmpty(' ','$LESS_EMPLOYEES$')]#!"

 MARKET_PARTICIPANT_SHARE:0 "#V [Country.GetName]#! has a [MarketPanel.GetMarket.GetMarketSharePercentageFor(Country.Self)|v%] [concept_market_share] in [MarketPanel.GetMarket.GetName]\n$TOOLTIP_DELIMITER$\n"

 COIN_01_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#! #bold Very Much Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_02_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#! #bold Much Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_03_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#! #bold Cheap#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_04_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#! #bold Cheap#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_05_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#! #bold Slightly Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_06_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#! #bold Slightly Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_07_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#! #bold About the same price#! as [concept_base_price] ($VAL|v=1%$)"
 COIN_08_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#! #bold Slightly More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_09_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#! #bold Slightly More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_10_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#! #bold Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_11_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#! #bold Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_12_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#! #bold Much More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
 COIN_13_BASE:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#! #bold Much More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"

 COIN_01_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#!  #bold Very Much Cheaper#!"
 COIN_02_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#!  #bold Much Cheaper#!"
 COIN_03_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#!  #bold Cheap#!"
 COIN_04_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#!  #bold Cheap#!"
 COIN_05_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#!  #bold Slightly Cheaper#!"
 COIN_06_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#!  #bold Slightly Cheaper#!"
 COIN_07_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#!  #bold Roughly Base Price#!"
 COIN_08_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#!  #bold Slightly More Expensive#!"
 COIN_09_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#!  #bold Slightly More Expensive#!"
 COIN_10_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#!  #bold Expensive#!"
 COIN_11_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#!  #bold Expensive#!"
 COIN_12_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#!  #bold Much More Expensive#!"
 COIN_13_BASE_SHORT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#!  #bold Much More Expensive#!"

 COIN_STACK_ICON_FORMAT:0 "#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#!"
 COIN_STACK_ICON_FORMAT_NO_TOOLTIP: "$ICON$"
 COIN_STACK_TOOLTIP:0 "The Price icon shows how expensive (or cheap) a [concept_good] is relative to the [concept_base_price] of that [concept_good]. These icons range from Very Cheap (@coin1!) to Base Price (@coin7!) to Very Expensive (@coin13!)"

 GOODS_STATE_PRICE_AGAINST_BASE_PRICE_TOOLTIP:0 "#header [Goods.GetStatePriceLabel] compared to [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetStatePrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetStatePriceLabel]: #variable [GetPlayer.GetCustom('currency_symbol')][Goods.GetStatePrice|1]#!\n[concept_base_price]: #BOLD #V [GetPlayer.GetCustom('currency_symbol')][Goods.GetBasePrice|1]#!#!"
 GOODS_MARKET_PRICE_AGAINST_BASE_PRICE_TOOLTIP:0 "#header [Goods.GetMarketPriceLabel] compared to [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetMarketPrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceLabel]: #variable [GetPlayer.GetCustom('currency_symbol')][Goods.GetMarketPrice|1]#!\n[concept_base_price]: #BOLD #V [GetPlayer.GetCustom('currency_symbol')][Goods.GetBasePrice|1]#!#!"

 BUY_ORDERS:0 "[concept_buy_orders]"
 SELL_ORDERS:0 "[concept_sell_orders]"
 PRODUCTION:0 "[concept_good_production]"
 CONSUMPTION:0 "[concept_good_consumption]"

 BATTALIONS:0 "[Concept('concept_battalion', '$concept_battalions$')]"
 FLOTILLAS:2 "[Concept('concept_flotilla','$concept_flotillas$')]"

 GOOD_PRICE_BASED_ON_LAST_TICK_WARNING:1 "#lore These values are updated at least once per week.#!"
 GOODS_PRICE_DESC_FIXED:0 "[GOODS.GetTextIcon][GOODS.GetName] has a fixed price of [GetPlayer.GetCustom('currency_symbol')][GOODS.GetPrice|1v] that will never change."
 GOODS_PRICE_DESC_IN_MARKET:2 "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$DATA_GOODS_NAME_TOOLTIP$"
 GOODS_PRICE_DESC_IN_MARKET_PROGRESSBAR:0 "#header [GetPlayer.GetCustom('currency_symbol')][Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])#!"
 GOODS_PRICE_DESC_IN_STATE:2 "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [State.GetName]#!\n[concept_local_price]: [GetPlayer.GetCustom('currency_symbol')][Goods.GetStatePrice|1v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )]\n[SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! compared to [concept_base_price]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] Local $PRODUCTION$\n[Goods.GetStateConsumptionWithTooltip] Local $CONSUMPTION$\n\n$PRICE_SETTING_INFO$[concept_base_price]: [GetPlayer.GetCustom('currency_symbol')][Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 PRICE_SETTING_INFO: "#title Price Setting#!\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetMarketPriceShare, '(CFixedPoint)0'), 'MARKET_PRICE_SHARE_DESC', '')][Goods.GetLocalPriceShare|%v0] from $PRODUCTION$ and $CONSUMPTION$ in [Goods.GetState.GetName]\n[SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]\n"
 MARKET_PRICE_SHARE_DESC: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v0]#!#! from [concept_market_price] ([Goods.GetMarketPriceWithTooltip] in [Goods.GetMarket.GetName])\n"
 GOODS_PRICE_DESC_IN_ISOLATED_MARKET:3 "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetState.GetName]#!\nLocal price: [GetPlayer.GetCustom('currency_symbol')][Goods.GetStatePrice|1v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! compared to [concept_base_price])\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] [concept_sell_orders]\n[Goods.GetStateConsumptionWithTooltip] [concept_buy_orders]\n\n[concept_base_price]: [GetPlayer.GetCustom('currency_symbol')][Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 GOODS_MARKET_PRICE_SHARE_TOOLTIP: "#header [Concept('concept_market_price', '$concept_market_price_share$')] for [Goods.GetName] in [Goods.GetState.GetName]: [Goods.GetMarketPriceShare|%v1]#!\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceShareDesc]"
 GOODS_MARKET_PRICE_SHARE_DESC: "Calculated from [concept_market_access] of #tooltippable #tooltip:$MARKET_ACCESS_BREAKDOWN$ $MARKET_ACCESS|v0%$#!#! multiplied by #v $state_market_access_price_impact$#! modifier of #tooltippable #tooltip:$PRICE_IMPACT_BREAKDOWN$ $MARKET_ACCESS_IMPACT|v%$#!#!"
 GOODS_MARKET_ACCESS_PRICE_IMPACT_DESC: "#header #v $state_market_access_price_impact$#!: $MARKET_ACCESS_IMPACT|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"

 GOODS_PRICE_MARKET_LOCAL_PRICE_LINK:0 "See #tooltippable #tooltip:[GOODS.GetTooltipTag],GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN Local Prices#!#! in [GOODS.GetMarket.GetName]"
 GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN:0 "[Goods.GetLocalPricesDesc]"
 GOODS_PRICE_MARKET_LOCAL_PRICE_HEADER:1 "#header Local Prices of [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_LOCAL_PRICE_ITEM:1 "[State.GetName]: [Goods.GetStatePriceWithTooltip]"

 GOODS_PRODUCTION_VALUE:1 "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_CONSUMPTION_VALUE:1 "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_MARKET_PRODUCTION_BREAKDOWN:0 "[Goods.GetMarketProductionBreakdown]"
 GOODS_MARKET_CONSUMPTION_BREAKDOWN:0 "[Goods.GetMarketConsumptionBreakdown]"
 GOODS_STATE_PRODUCTION_BREAKDOWN:0 "[Goods.GetStateProductionBreakdown]"
 GOODS_STATE_CONSUMPTION_BREAKDOWN:0 "[Goods.GetStateConsumptionBreakdown]"
 GOODS_MARKET_SELL_ORDERS_VALUE:0 "#tooltippable #tooltip:$TAG$,GOODS_MARKET_SELL_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_BUY_ORDERS_VALUE:0 "#tooltippable #tooltip:$TAG$,GOODS_MARKET_BUY_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_SELL_ORDERS_BREAKDOWN:0 "[Goods.GetMarketSellOrdersBreakdown]"
 GOODS_MARKET_BUY_ORDERS_BREAKDOWN:0 "[Goods.GetMarketBuyOrdersBreakdown]"
 GOODS_BASE_IMPORTS_VALUE:0 "#tooltippable #tooltip:$TAG$,GOODS_BASE_IMPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_EXPORTS_VALUE:0 "#tooltippable #tooltip:$TAG$,GOODS_BASE_EXPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_IMPORTS_BREAKDOWN:0 "[Goods.GetBaseImportBreakdown]"
 GOODS_BASE_EXPORTS_BREAKDOWN:0 "[Goods.GetBaseExportBreakdown]"

 URBAN_BUILDINGS:0 "Urban"
 RURAL_BUILDINGS:0 "Rural"
 DEVELOPMENT_BUILDINGS:0 "Development"

 GOODS_PRICE_MARKET_PRODUCTION_HEADER:0 "#header [concept_good_production] of [GOODS.GetName] in [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_CONSUMPTION_HEADER:0 "#header [concept_good_consumption] of [GOODS.GetName] in [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_PRODUCTION_ITEM:1 "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#!"
 GOODS_PRICE_MARKET_CONSUMPTION_ITEM:1 "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#!"

 GOODS_PRICE_MARKET_SELL_ORDER_HEADER: "#header [concept_sell_orders] of [GOODS.GetName] in [MARKET.GetName]#!\nCurrent total: $ORDERS|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_BUY_ORDER_HEADER: "#header [concept_buy_orders] of [GOODS.GetName] in [MARKET.GetName]#!\nCurrent total: $ORDERS|vD$\n$TOOLTIP_DELIMITER$"

 GOODS_PRICE_MARKET_SELL_ORDER_ITEM:1 "[Goods.GetAccessAdjustedStateSell|Dv] in [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#! [concept_good_production] × [State.GetMarketAccess|v0%] [concept_market_access])"
 GOODS_PRICE_MARKET_BUY_ORDER_ITEM:1 "[Goods.GetAccessAdjustedStateBuy|Dv] in [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#! [concept_good_consumption] × [State.GetMarketAccess|v0%] [concept_market_access])"
 GOODS_PRICE_MARKET_IMPORT_EXPORT:0 "From Trade Routes: $VAL|=vD$"

 GOODS_PRICE_STATE_PRODUCTION_HEADER:0 "#header [concept_good_production] of [GOODS.GetName] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_CONSUMPITON_HEADER:0 "#header [concept_good_consumption] of [GOODS.GetName] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_STATE_HEADER:0 "#bold In [STATE.GetName]#!"
 GOODS_PRICE_STATE_BUILDING_PRODUCTION_ITEM:0 "[Building.GetName]: [BUILDING.GetProduction(GOODS.Self)|0v]"
 GOODS_PRICE_STATE_BUILDING_CONSUMPTION_ITEM:0 "[BUILDING.GetName]: [BUILDING.GetConsumption(GOODS.Self)|0v]"
 GOODS_PRICE_STATE_POPS_PRODUCTION_ITEM:0 "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPS_CONSUMPTION_ITEM:0 "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"

 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN:0 "[Goods.GetStatePopTypeProductionBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN:0 "[Goods.GetStatePopTypeDemandBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_HEADER:0 "#header [concept_good_production] of [GOODS.GetName] in [STATE.GetName] by [concept_profession]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_HEADER:0 "#header [concept_good_consumption] of [GOODS.GetName] in [STATE.GetName] by [concept_profession]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_POPTYPE_ITEM:0 "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_POPTYPE_ITEM:0 "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"

 GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN:0 "[Goods.GetStatePopProductionBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN:0 "[Goods.GetStatePopDemandBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_PRODUCTION_HEADER:0 "#header [concept_good_production] of [GOODS.GetName] in [STATE.GetName] by [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_HEADER:0 "#header [concept_good_consumption] of [GOODS.GetName] in [STATE.GetName] by [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_PRODUCTION_POPTYPE_ITEM:0 "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_POPTYPE_ITEM:0 "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"

 GOOD_GOOD_HEADER_TOOLTIP:0 "#header Good Name#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
 GOOD_SELL_HEADER_TOOLTIP:0 "#header [concept_sell_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
 GOOD_BUY_HEADER_TOOLTIP:0 "#header [concept_buy_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
 GOOD_DELTA_WP_HEADER_TOOLTIP:0 "#header Price compared to [concept_base_price]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"

 MARKET_MARKET_BREAKDOWN:0 "#BOLD #V [Market.GetName]#!#!\nControlled by #BOLD #V [Market.GetOwner.GetName]#!#!\n$TOOLTIP_DELIMITER$\n#title Trade Power#!#!"
 EXPORTING:0 "Exporting"
 IMPORTING:0 "Importing"

 STATE_MARKET:0 "#header [State.GetName]#! is a part of the #header [State.GetMarket.GetName]#!"

 GOODS_BUILDING_TYPE_BUY_ORDERS:0 "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_SELL_ORDERS:0 "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] of $GOODS_NAME$ from [BuildingType.GetName] in [Market.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_BUILDING_TYPE_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] of $GOODS_NAME$ from [BuildingType.GetName] in [Market.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_SLAVE_CONSUMPTION_MARKET_ORDERS:0 "Purchased for $slaves$: $ORDERS|=vD$"
 GOODS_BUILDING_BUY_ORDERS:0 "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_SELL_ORDERS:0 "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] of $GOODS_NAME$ from [Building.GetName] in [Building.GetState.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_consumption] of $BASE_AMOUNT|vD$ $GOODS_NAME$ modified by the [concept_market_access] of [Building.GetState.GetMarketAccess|%v]"
 GOODS_BUILDING_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] of $GOODS_NAME$ from [Building.GetName] in [Building.GetState.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_production] of $BASE_AMOUNT|vD$ $GOODS_NAME$ modified by the [concept_market_access] of [Building.GetState.GetMarketAccess|%v]"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS:0 "[concept_pop] Consumption: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS_HEADER: "#header [concept_buy_orders] of $GOODS_NAME$ from [concept_pop] Consumption in [Market.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_POP_TYPE_CONSUMPTION_MARKET_ORDERS:0 "[PopType.GetName]: $ORDERS|=vD$"
 GOODS_TRADE_ROUTE_MARKET_ORDERS:0 "[Concept('concept_trade_route', '$concept_trade_routes$')]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_TRADE_ROUTE_BUY_ORDERS_HEADER: "#header [concept_buy_orders] of $GOODS_NAME$ from [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_TRADE_ROUTE_SELL_ORDERS_HEADER: "#header [concept_sell_orders] of $GOODS_NAME$ from [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]#!\nCurrent total: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_TRADE_ROUTE_BUY_ORDERS:0 "[TradeRoute.GetName]: $ORDERS|=vD$"
 GOODS_TRADE_ROUTE_SELL_ORDERS:0 "[TradeRoute.GetName]: $ORDERS|=vD$"

 PRODUCES:0 "#title Produces#!"
 USES:0 "#title Uses#!"
 EFFICIENCY:0 "#title Efficiency Goods#! ([Building.GetEfficiencyBonus|=+0%] Efficiency bonus)"
 BALANCE:0 "Balance"
 DEFICIT_OF:0 "#title Deficit of:#!"
 SUPPORTS:0 "#title Supports:#!"
 OPPOSES:0 "#title Opposes:#!"
 CLOUT_HEADER:0 "#title [concept_clout]#!"
 IG_STATUS_HEADER:1 "#title [concept_approval]#!"
 IDEOLOGY_HEADER: "[Concept('concept_ideology','$concept_ideologies$')]"
 RESOURCES_HEADER:0 "#title Resources:#!"
 POPULATION_HEADER:0 "#title Population#!"
 BUILDINGS_HEADER:0 "#title Buildings:#!"
 PRODUCTION_HEADER:0 "#title Economy#!"
 SPLIT_STATE_HEADER:0 "This is a #BOLD Split State#!"
 INCORPORATED_STATE_HEADER:0 "This is an #BOLD [concept_incorporated_state]#!"
 UNINCORPORATED_STATE_HEADER:0 "This is an #BOLD [concept_unincorporated_state]#!"
 STATE_DECENTRALIZED:0 "This #BOLD State#! is owned by a #BOLD $decentralized_nation$#!."
 PRODUCTION_AMOUNT_TOOLTIP:0 "Amount (Percentage of Local Market Production)"
 
 INTEREST_GROUP_PRESSURED_IN_POLITICAL_MOVEMENT: "Is [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')]"
 IG_PANEL_POP_PORTRAIT_TOOLTIP: "[Pop.GetTotalSize|vD] [Pop.GetPopType.GetNameNoIcon] support the [InterestGroup.GetNameNoFormatting]"
 PRESSURING_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')] exerting [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')]"
 NO_PRESSURING_MOVEMENTS: "No [Concept('concept_political_movement', '$concept_political_movements$')] exerting [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')]"
 POSSIBLE_LEADER_IDEOLOGIES_HEADER: "[concept_leader] [Concept('concept_ideology', '$concept_ideologies$')] - Chance of appearance"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGIES_HEADER: "Chance for [concept_leader] [Concept('concept_character', '$concept_characters$')] - Evaluated in order"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGIES_HEADER: "Chance for other [concept_leader] [Concept('concept_ideology', '$concept_ideologies$')][AddLocalizationIf(Not(IsDataModelEmpty(InterestGroup.GetPossibleCharacterLeaderIdeologies)), 'EVALUATED_AFTER')]"
 EVALUATED_AFTER: " - Evaluated after $concept_characters$"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGY_TOOLTIP: "[PotentialLeaderIdeology.GetCharacterFullName|v] as [Ideology.GetName]\n[PotentialLeaderIdeology.GetChancePercentage|0%v] chance for the next [concept_leader] of [InterestGroup.GetName] to be [PotentialLeaderIdeology.GetCharacterFullName|v]"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGY_TOOLTIP: "[Ideology.GetName]\n[PotentialLeaderIdeology.GetChancePercentage|0%v] chance for the next [concept_leader] of [InterestGroup.GetName] to have this [concept_ideology]\n$TOOLTIP_DELIMITER$\n[PotentialLeaderIdeology.GetChanceBreakdown]"
 POTENTIAL_LEADER_IDEOLOGY_FROM_MOVEMENT: "This is based on [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')] exerted from the [PoliticalMovement.GetName]"
 POTENTIAL_LEADER_IDEOLOGY_FROM_IG: "This is based on weights from inherent [concept_interest_group] $concept_ideologies$"
 POTENTIAL_LEADER_IDEOLOGY_CHANCE_BREAKDOWN: "$HEADER$:\n$TAB$#v [Ideology.GetNameNoFormatting]#! weight: $WEIGHT|0v$\n\nCompared to the total weights of $TOTAL|0v$"
    
 STATE_PANEL_POLLUTION: "[concept_pollution_impact]\n$STATE_POLLUTION_CONDENSED$"
 STATE_POLLUTION_CONDENSED: "#b [State.GetStateRegion.GetPollutionImpact|%R1]#!"
 STATE_POLLUTION: "#BOLD #V [concept_pollution_impact]#!#!\nCurrent $concept_pollution_impact$: #b [State.GetStateRegion.GetPollutionImpact|%R1]#!\nTrending towards #b [State.GetStateRegion.GetPollutionImpactTargetLevel|%R1]#! at a daily rate of #b [State.GetStateRegion.GetPollutionImpactDailyChange|%1]#!\n[concept_generated_pollution]: #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_GENERATED_POLLUTION_TOOLTIP [State.GetPollutionGeneration|R0]#!#!#!\n[concept_arable_land]: #b [State.GetArableLandCapacity]#!\n$TOOLTIP_DELIMITER$\nThe $concept_pollution_impact$ in [State.GetName] results in a base effect of:\n\n[State.GetStateRegion.GetPollutionEffects][SelectLocalization(EqualTo_CFixedPoint(State.GetPollutionHealthEffectsReduction, '(CFixedPoint)0'), 'EMPTY_KEY', 'POLLUTION_EFFECTS_REDUCTION_CONDENSED')]"
 STATE_GENERATED_POLLUTION_TOOLTIP: "#header [concept_generated_pollution]#!\n[State.GetName] is currently generating #b [State.GetPollutionGeneration|R0]#! pollution\n$TOOLTIP_DELIMITER$\n[State.GetPollutionGenerationDesc]"
 STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP: "#header $state_pollution_reduction_health_mult$#!\nThe effects of [concept_pollution_impact] on [State.GetName] are being reduced by #b [State.GetPollutionHealthEffectsReduction|%G0]#! due to the following:\n$TOOLTIP_DELIMITER$\n[State.GetPollutionHealthEffectsReductionDesc]"
 POLLUTION_EFFECTS_REDUCTION_CONDENSED: "\n\nThe above effects on public health are being further reduced by #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP [State.GetPollutionHealthEffectsReduction|%G0]#!#!#! in [State.GetName]"

 STATE_DEVASTATION:1 "[concept_devastation]\n$STATE_DEVASTATION_CONDENSED$"
 TOOLTIP_STATE_DEVASTATION:0 "#BOLD #V [concept_devastation]#!#!\nCurrent Devastation: #b [StateRegion.GetDevastationLevel|%R1]#!\nDaily Change: #b [StateRegion.CalcDevastationDailyChange|%-2]#!\n$TOOLTIP_DELIMITER$\n[StateRegion.GetDevastationEffects]"
 STATE_TURMOIL:1 "[concept_turmoil]\n$STATE_TURMOIL_CONDENSED$"
 TOOLTIP_STATE_TURMOIL:0 "#BOLD #V [concept_turmoil]#!#!\n[concept_turmoil] from [concept_radical] [Concept('concept_pop', '$concept_pops$')]: #b [State.CalcTurmoil|%2-]#!\n$TOOLTIP_DELIMITER$\n[State.GetTurmoilEffects]"
 STATE_TURMOIL_EFFECTS_MULT_DESC:1 "Effects of [concept_turmoil] multiplied by $MULT|%=-$ due to:\n#b $MODIFIER_NAME$:#!\n$DETAILS$"
 TOOLTIP_SPLIT_STATE:0 "#BOLD #V [concept_split_state]#!#!\n$TOOLTIP_DELIMITER$\n#title States in [State.GetStateRegion.GetName] ([concept_state_region])#!\n[State.GetStateRegion.GetStatesDesc]\n[concept_split_state_desc]"
 TOOLTIP_INCORPORATED_STATE:0 "#BOLD #V [concept_incorporated_state]#!"
 TOOLTIP_CAPITAL_STATE_HEADER:0 "(#header [concept_capital_state]#!)"

 TOOLTIP_MARKET_CAPITAL_STATE:1 "#HEADER [concept_market_capital]#!\n[State.GetName] is the [concept_market_capital] of [State.GetMarket.GetName]\n[State.GetMarketCapitalEffectsDesc]\n$TOOLTIP_DELIMITER$\n[State.GetMarketAccessDesc]"
 TOOLTIP_CAPITAL_STATE:0 "#HEADER [concept_capital_state]#!\n[State.GetName] is the [concept_capital_state] of [State.GetOwner.GetName]\n$TOOLTIP_DELIMITER$\n[State.GetCapitalEffectsDesc]"
 TOOLTIP_TREATY_PORT:1 "#BOLD #V [concept_treaty_port]#!#!\n$TOOLTIP_DELIMITER$\n# [State.GetName] is a [concept_treaty_port] for:\n[State.GetTreatyPortMarkets]"
 TOOLTIP_INACTIVE_TREATY_PORT:0 "#header Inactive [concept_treaty_port]#!\n$TOOLTIP_DELIMITER$\n[State.GetName] is a potential [concept_treaty_port] that is currently inactive due to:\n[State.GetTreatyPortNonFunctioningDesc]"
 TOOLTIP_TREATY_PORT_MARKET_ENTRY:0 "$TAB$[Market.GetName]"
 TOOLTIP_UNINCORPORATED_STATE_NOT_VALID:0 "#BOLD #V [concept_unincorporated_state]#!#!\n[GetDesc( State.IncorporateState )]\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_UNINCORPORATED_STATE_VALID:2 "#bold [concept_unincorporated_state]#!\n#instruction Click to [Concept('concept_incorporated_state', '$concept_incorporate$')][State.GetName]#!\nCost: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_INCORPORATED_STATE_VALID:3 "#bold [concept_incorporated_state]#!\n[State.GetCountry.GetName] considers [State.GetName] an [concept_incorporated_state]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$STATE_BUR_BREAKDOWN$"
 STATE_BUR_BREAKDOWN:0 "The total cost of #v @bur![State.GetBureaucracyCost|1=-]#! is due to:\n$TAB$Base Cost: [State.GetBaseBureaucracyCostRaw|1=-]\n$TAB$[concept_institution] Cost: #tooltippable #tooltip:[State.GetCountry.GetTooltipTag],INSTITUTION_BUR_FACTOR_BREAKDOWN #v [State.CalcPopInstitutionBureaucracyCost|1=-]#!#!#!\n$TAB$[State.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')] Cost: #v [State.GetBasePopBureaucracyCostRaw|1=-]#!"
 STATE_BUR_TOOLTIP:0 "#header [concept_bureaucracy] Cost for [State.GetName]#!\n$STATE_BUR_BREAKDOWN$"
 TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT:0 "[State.GetOwner.GetAdjectiveNoFormatting] [Concept('concept_institution', '$concept_institutions$')] have no effect on [State.GetName] because it's an [concept_unincorporated_state].\n[Concept('concept_incorporated_state', '$concept_incorporating$')] [State.GetName] would have the following effects:\n[State.GetOwner.GetInstitutionsSummary]"
 TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT:0 "The effects of [State.GetName] being an [concept_incorporated_state] are the following:\n[State.GetOwner.GetInstitutionsSummary]"
 INSTITUTION_BUR_FACTOR_BREAKDOWN:0 "[Country.GetInstitutionInvestmentBureaucracyFactorDesc]"

 TREATY_PORT_INACTIVE: "Inactive [concept_treaty_port]"
 TREATY_PORT_INACTIVE_COUNTRY_RANK:0 "@simple_box! [COUNTRY.GetAdjective] [concept_rank] must be higher than [TARGET_COUNTRY.GetAdjective] [concept_rank] of [TARGET_COUNTRY.GetRank]"
 TREATY_PORT_INACTIVE_OCCUPIED:0 "@simple_box! [State.GetName] must not be occupied by a hostile [concept_country]"
 TREATY_PORT_INACTIVE_ISOLATED:0 "@simple_box! [State.GetName] must not be isolated from [Market.GetName]"
 TREATY_PORT_INACTIVE_NO_ADJACENT_VALID: "@simple_box! [State.GetName] must be adjacent to an [concept_incorporated_state] that is not isolated from its [concept_market]"

 INCORPORATE_STATE_COST:0 "Cost: $COST|1v$ @bur![Nbsp][concept_bureaucracy]"

 TOOLTIP_INCORPORATE_STATE:3 "#header Incorporate State#!\n[State.GetBureaucracyCostDesc]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty(GetDesc(State.IncorporateState)), 'STATE_INCORPORATION_TIME', 'STATE_INCORPORATION_ERROR')]"
 STATE_INCORPORATION_TIME:0 "[State.GetIncorporationTimeDesc]"
 STATE_INCORPORATION_ERROR:0 "[GetDesc(State.IncorporateState)]"
 TOOLTIP_CANCEL_INCORPORATION:1 "#header Cancel Incorporation#!\nRefund: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n\n@warning! #bold [State.GetIncorporationProgress||v%0] incorporation progress will be lost!#!"
 TOOLTIP_INCORPORATING_STATE:0 "#header State is being [Concept('concept_incorporated_state','$concept_incorporated$')]#!\n$TOOLTIP_DELIMITER$\nTime remaining: [State.GetIncorporationTimeLeft]\n\n[State.GetIncorporationTimeDesc]\n\n[State.GetIncorporationPartialEffectsDesc]\n$TOOLTIP_DELIMITER$\n[concept_unincorporated_state_desc]"
 INCORPORATION_PARTIAL_EFFECTS:0 "Due to being [State.GetIncorporationProgress|v%0] [Concept('concept_incorporated_state','$concept_incorporated$')], [State.GetName] is subject to the following effects:\n[Modifier.GetDesc]"
 PARTIAL_INCORPORATION_TAXATION_MODIFIER:0 "Not fully [Concept('concept_incorporated_state','$concept_incorporated$')]"
 INCORPORATING:1 "[Concept('concept_incorporated_state','$concept_incorporating$')] (#tooltippable #tooltip:[State.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [State.GetIncorporationProgress|v%0]#!#!)"
 INCORPORATE:0 "[Concept('concept_incorporated_state','$concept_incorporate$')] @bur![State.PredictBureaucracyCost|1v]"

 INCORPORATION_TIME_SAME_CULTURE:0 "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of [State.GetOwner.GetName] due to its [Culture.GetName] [concept_culture]."
 INCORPORATION_TIME_SAME_HERITAGE:0 "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of the [Culture.GetName] [concept_culture], which shares the [concept_cultural_heritage_trait] [DiscriminationTrait.GetName] with another $concept_culture$ in [State.GetOwner.GetName]."
 INCORPORATION_TIME_SAME_TRAIT:0 "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of the [Culture.GetName] [concept_culture], which shares the [concept_cultural_trait] [DiscriminationTrait.GetName] with another $concept_culture$ in [State.GetOwner.GetName]."
 INCORPORATION_TIME_NO_MATCH:0 "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since its [Concept('concept_homeland','$concept_homelands$')] have nothing in common with any $concept_cultures$ in [State.GetOwner.GetName]."

 TOOLTIP_COLONY_STATE_NOT_VALID:0 "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\n[GetDesc( State.IncorporateState )]"
 TOOLTIP_COLONY_STATE_VALID:1 "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\nClick to incorporate this state ([State.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
 TOOLTIP_STATE_DECENTRALIZED:0 "#HEADER $decentralized_nation$#!\n$TOOLTIP_DELIMITER$\n[concept_decentralized_nation_desc]"
 TOOLTIP_HOMELANDS:1 "#title [Concept('concept_homeland', '$concept_homelands$')]#!\n[State.GetHomelandsDesc]"
 TOOLTIP_CLAIMS:1 "#title [Concept('concept_claim', '$concept_claims$')]#!\n[State.GetClaimsDesc]"
 TOOLTIP_ARABLE_LAND:0 "#title #V [concept_arable_land]#!#!\n$TOOLTIP_DELIMITER$\nUnexploited levels: #V [State.GetNumFreeArableLand]#!\nExploited levels: #V [State.GetNumUsedArableLand]#!\nMaximum levels: #V [State.GetArableLandCapacity]#!\n\n[concept_arable_land_desc]"
 TOOLTIP_STATE_MODIFIERS:0 "#title State Modifiers#!\n[State.GetTimedModifiersBreakdown]"
 TOOLTIP_STATE_MODIFIER_ENTRY:0 "$NAME$:"
 TOOLTIP_STATE_MODIFIER_ENTRY_TIME:0 "($DATE_STR|v$)"

 TOOLTIP_OCCUPATION_EFFECT_PRODUCTION_PENALTY:0 "#variable -$FACTOR$#! [concept_good_production] output"
 TOOLTIP_OCCUPATION_EFFECT_MARKET_TAKEOVER:0 "#variable [COUNTRY.GetName]#! May relink links and what not!"
 TOOLTIP_STATE_OCCUPATION_MINIMAL:0 "25% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_PARTIAL:0 "50% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_FULL:0 "100% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"

 PROFITABILITY_FORMAT_HIGH:0 "#P $VALUE|%0$#!"
 PROFITABILITY_FORMAT_MEDIUM:0 "#V $VALUE|%0$#!"
 PROFITABILITY_FORMAT_LOW:0 "#N $VALUE|%0$#!"
 EARNINGS_FORMAT_HIGH:0 "#P $VALUE|1$#!"
 EARNINGS_FORMAT_MEDIUM:0 "#V $VALUE|1$#!"
 EARNINGS_FORMAT_LOW:0 "#N $VALUE|1$#!"
 PROFITABILITY_FORMAT_GENERALIZED:0 "#v $VALUE|0%+=$#!"
 TOOLTIP_BUILDINGS_EMPLOYED:0 "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\nEmployed: #BOLD #V [Building.GetNoOfEmployed]#!#!\nMax employed: #BOLD #V [Building.GetEmployeeCap]#!#!"
 TOOLTIP_BUILDINGS_OCCUPANCY:0 "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_BUILDING_EMPLOYMENT:0 "#BOLD #V [Building.GetName] Employment#!#!\nEmployment: #variable [Building.GetNoOfEmployed|1*]#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetEmployeesBreakdown][Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]$EMPLOYMENT_HINT$"

 EMPLOYEE_POP:0 "[Pop.GetNumWorkforce|Dv] [Pop.GetName]"

 BUILDING_GOVERNMENT_EXPENSES_DESC:0 "[Building.GetGovernmentExpensesDesc]"

 TOOLTIP_BUILDING_GOVERNMENT_EXPENSES:0 "#header [concept_government_expenses] in [Building.GetName]#!\nWeekly Expenses: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TOOLTIP_BUILDING_MATERIAL_EXPENSES:1 "Material Expenses: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!#!"
 TOOLTIP_BUILDING_WAGES_EXPENSES:0 "Wages: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!#!"
 TOOLTIP_BUILDING_SLAVE_UPKEEP:0 "Slave Upkeep: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!#!"
 TOOLTIP_BUILDING_WAGE_SUBSIDIES:0 "Wage Subsidies: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!#!"
 TOOLTIP_BUILDING_BALANCE_SUBSIDIES:0 "Balance Subsidies: [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$"
 TOOLTIP_BUILDING_WAGES_DESC:0 "[Building.GetLastWagesExpensesDesc]"

 TOOLTIP_BUILDING_TOTAL_WAGE_EXPENSES:0 "Total weekly wages: [GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$$SUBSIDIES$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_WAGE_SUBSIDIES:0 " + [GetPlayer.GetCustom('currency_symbol')]$VAL|D-0$ ([concept_subsidies])"
 TOOLTIP_BUILDING_BASE_WAGE:0 "Base Wage in [Building.GetName] of [GetPlayer.GetCustom('currency_symbol')]$VAL|v$ is due to:\n$BREAKDOWN$"
 COUNTRY_NORMAL_WAGE:0 "$TAB$[concept_normal_wage] in [Building.GetOwner.GetName]: [GetPlayer.GetCustom('currency_symbol')]$VAL|v$"
 BUILDING_NEEDED_WAGE:0 "$TAB$Average annual wage in [Building.GetState.GetName]: [GetPlayer.GetCustom('currency_symbol')]$VAL|v$"
 BUILDING_WAGE_MODIFIER:0 "$TAB$$MODIFIER$"
 BUILDING_WAGE_DIFF_SUBSIDIES:1 "$TAB$[concept_subsidies] to sustain [concept_normal_wage] in [Building.GetOwner.GetName]: [GetPlayer.GetCustom('currency_symbol')]$VAL|v$"
 BUILDING_WAGES_INCREASING:0 "Wages are increasing since last week: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"
 BUILDING_WAGES_DECREASING:0 "Wages are decreasing since last week: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"

 TOOLTIP_BUILDING_POP_TYPE_WAGE:2 "[GetPlayer.GetCustom('currency_symbol')] #tooltippable #tooltip:$BREAKDOWN_TAG$ $WAGE|Dv$#!#! - [PopType.GetName] ($NUM_WORKFORCE|Dv$)"
 BUILDING_POP_WAGE:0 "[GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$ - [Pop.GetName] (Annual Wage [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN_TAG$ $ANNUAL_WAGE|v2$#!#! x $NUM_WORKFORCE|Dv$)"

 POP_ANNUAL_WAGE:0 "Annual Wage for [Pop.GetName] of #v [GetPlayer.GetCustom('currency_symbol')]$VAL$#! is due to:\n$BREAKDOWN$"
 POP_BUILDING_BASE_WAGE:0 "Base Wage in [Pop.GetBuilding.GetName]: [GetPlayer.GetCustom('currency_symbol')]$VAL|v$"
 POP_TYPE_WAGE_FACTOR:0 "Wage Factor for [Pop.GetPopType.GetName]: #v ×$VAL|1$#!"
 POP_WAGE_DISCRIMINATION_FACTOR:0 "[POP.GetWageDiscriminationDesc]"

 POP_WAGE_SUBSISTENCE_FACTOR:0 "$TAB$Subsistence Factor for [Pop.GetName]: #v ×$VAL|1$#!"

 TOOLTIP_BUILDING_HIRING:1 "#BOLD #V [Building.GetName] is currently hiring#!#!\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 TOOLTIP_BUILDING_HEALTH_WORLD:0 "#BOLD #V [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRank]#! most productive Building in the World\n#variable [Building.GetProfitability]#! ([Building.GetProfitabilityCompareIcon]) [concept_productivity] compared to the average Building\n\nEarnings: #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN [GetPlayer.GetCustom('currency_symbol')]#bold [Building.GetEarnings|D=+]#!#!\nWages: #BOLD #N [GetPlayer.GetCustom('currency_symbol')]-[Building.GetLastWagesExpenses|D-]#!#!\n"
 TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE:0 "#BOLD #V [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRankInType]#! most productive [Building.GetName] in the World\n#variable [Building.GetProfitabilityInType]#! ([Building.GetProfitabilityCompareIconInType]) [concept_productivity] compared to the average [Building.GetBuildingType.GetName]\n\nEarnings: #tooltippable #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN [GetPlayer.GetCustom('currency_symbol')]#bold [Building.GetEarnings|D=+]#!#!#!\nWages: #BOLD #N [GetPlayer.GetCustom('currency_symbol')]-[Building.GetLastWagesExpenses|D-]#!#!\n"
 TOOLTIP_BUILDING_PRODUCTIVITY:1 "#header [concept_productivity]#!\nValue: [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualEarningsPerEmployeeFormatted] / year (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)\n$TOOLTIP_DELIMITER$\n#variable ##[Building.GetProfitabilityRankInType]#! most productive [Building.GetBuildingType.GetName] in the world \n[Building.GetProfitabilityInType] [concept_productivity] compared to the average [Building.GetBuildingType.GetName]\n\n#variable ##[Building.GetProfitabilityRank]#! most productive Building in the world \n[Building.GetProfitability] [concept_productivity] compared to the average Building\n"
 TOOLTIP_BUILDINGS_MATERIAL_EXPENSES:0 "\nMaterial Expenses: #BOLD #N [GetPlayer.GetCustom('currency_symbol')]-$VAL|D-$#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP:0 "\nSlave Upkeep: #tooltip:$TAG$,TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS #tooltippable #N [GetPlayer.GetCustom('currency_symbol')]-$VAL|D-$#!#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS:0 "#header Slave Upkeep#!\nTotal Expenses: #BOLD #V [GetPlayer.GetCustom('currency_symbol')][Building.GetLastSlaveUpkeep|K1]#!#!\n$TOOLTIP_DELIMITER$\n[Building.GetLastSlaveBasketDesc]"

 TOOLTIP_BUILDING_HEADER:0 "[Building.GetBuildingType.GetName] in [Building.GetState.GetName]"

 BUILDING_RANK:0 "[Building.GetProfitabilityCompareIconInType] ##[Building.GetProfitabilityRankInType|v] [Building.GetBuildingType.GetNameNoFormatting]"
 BUILDING_RANK_WORLD:0 "[Building.GetProfitabilityCompareIcon] ##[Building.GetProfitabilityRank|v] in the world"

 TOOLTIP_BUILDINGS_BUDGET:0 "#BOLD #V [Building.GetName]#!#!\n[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]\n[concept_government_expenses]: #variable [GetPlayer.GetCustom('currency_symbol')] [Building.GetGovernmentExpenses|-K]#!\n\nThe wages (and eventual material expenses) will be payed from your treasury. The wages will be moving towards the average wages in the State."

 TOOLTIP_PRODUCTION_AMOUNT:0 "#BOLD #V [GoodsProductionInfo.GetName]#!#! in [ProductionMarker.AccessState.GetName]\n$TOOLTIP_DELIMITER$\nProduced: #BOLD #V [GoodsProductionInfo.GetAmount|D]#!#! units\n#BOLD #V [GoodsProductionInfo.GetMP|1%]#!#! of the total [concept_good_production] of #variable [GoodsProductionInfo.GetName]#! in the #variable [ProductionMarker.AccessState.GetMarket.GetName]#!"
 TOOLTIP_PRODUCTION_PRICE:0 "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nPrice: #BOLD #V [GetPlayer.GetCustom('currency_symbol')][GoodsProductionInfo.GetPrice|1]#!#! / unit"
 TOOLTIP_PRODUCTION_SOLD_FOR:0 "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nSold [GoodsProductionInfo.GetName] for #BOLD #V [GetPlayer.GetCustom('currency_symbol')][GoodsProductionInfo.GetSoldFor|D]#!#! last week"
 START_DIPLO_PLAY:0 "Start [concept_diplomatic_play] (Declare War)"
 PRICE:0 "Market Price"

 GO_TO_BUTTON_FRONT:0 "Go to [Front.GetName]"
 GO_TO_BUTTON_BUILDING:0 "Go to the [Building.GetName] in [Building.GetState.GetName]"
 GO_TO_BUTTON_STATE:0 "Go to [State.GetName]"
 GO_TO_BUTTON_SEA_REGION: "Go to [Province.GetSeaNodeName]"
 GO_TO_BUTTON_COUNTRY:0 "Go to [Country.GetName]"
 GO_TO_BUTTON_CHARACTER:0 "Go to [Character.GetFullName]"
 GO_TO_BUTTON_FORMATION: "Go to [MilitaryFormation.GetName]"
 GO_TO_BUTTON_MARKET:0 "Go to [Market.GetName]"
 GO_TO_BUTTON_CONSTRUCTION_QUEUE:0 "Go to [concept_construction_queue]"
 GO_TO_BUTTON_INTEREST_GROUP:0 "Go to [InterestGroup.GetName]"
 GO_TO_BUTTON_WAR:0 "Go to [War.GetName]"
 GO_TO_BUTTON_JOURNAL:0 "Go to your Journal"
 GO_TO_BUTTON_EXILED_AGITATORS: "Go to the [Concept('concept_exile', '$concept_exiled$')] [Concept('concept_agitator', '$concept_agitators$')]"
 GO_TO_BUTTON_LAW: "Go to the [Law.GetGroup.GetName] [concept_law_group]"
 GO_TO_BUTTON_MILITARY_FORMATION: "Go to [MilitaryFormation.GetName]"
 GO_TO_BUTTON_POWER_BLOC: "Go to [PowerBloc.GetName]"
 GO_TO_BUTTON_MOVEMENT: "Go to [PoliticalMovement.GetName]"

 START_RESEARCHING:0 "Start Researching"

 POPULATION_CHARTS:0 "Charts"
 POPULATION_LIST:0 "List"
 TOOLTIP_STATE_POPULATION:3 "#header [Concept('concept_pop', '$concept_population$')] in [State.GetName]: #v [State.GetPopulationSize|*]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetPopGrowthDesc]\n[State.GetMigrationDesc]\n[Concept('concept_pop_growth', '$concept_pop_growth_birthrate$')]: #v [State.GetPopBirthrate|+%1]#! yearly\n[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')]: #v [State.GetPopMortality|-%1]#! yearly\n\n$STATE_AVAILABLE_LABOR$"
 TOOLTIP_STATE_MIGRATION:1 "#header [Concept('concept_migration', '$concept_weekly_migration$')] in [State.GetName]: #v [State.GetWeeklyPopNetMigration|D=+]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetMigrationDesc]\n\n[State.GetMigrationAndSlaveTradeDetailsDesc]"
 STATE_MIGRATION_VALUE:1 "$concept_weekly_migration$ #v [State.GetWeeklyPopNetMigration|D=+]#!"
 STATE_MIGRATION_ATTRACTION:1 "$concept_migration_pull_short$ [State.GetMigrationLabel]"
 TOOLTIP_OCCUPANCY:0 "#BOLD #V Capacity used#!#!\n$TOOLTIP_DELIMITER$\n[concept_occupancy_desc]"
 TOOLTIP_MORALE:0 "#BOLD #V [concept_morale]#!#!\n$TOOLTIP_DELIMITER$\nMorale is the percentage of the necessary supplies that Unit is getting."
 TAXATION_REVENUE: "[Concept('concept_taxes','$concept_tax_revenue$')]"
 STATE_TAX_REVENUE:0 "$TAXATION_REVENUE$: [GetPlayer.GetCustom('currency_symbol')]#BOLD [State.GetTaxationRevenue|+=D]#!"
 STATE_TAX_REVENUE_TOOLTIP_HEADER: "#header $TAXATION_REVENUE$ in [State.GetName]#!\nTotal: [GetPlayer.GetCustom('currency_symbol')][State.GetTaxationRevenue|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_GOVERNMENT_EXPENSES:0 "[concept_government_expenses]: [GetPlayer.GetCustom('currency_symbol')]#BOLD [State.GetGovernmentExpenses|+=D]#!"
 STATE_GOVERNMENT_EXPENSES_TOOLTIP_HEADER: "#header [concept_government_expenses] in [State.GetName]#!\nTotal: [GetPlayer.GetCustom('currency_symbol')][State.GetGovernmentExpenses|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_TOTAL_LABOR:0 "#title [concept_workforce]:#! #V [State.GetTotalLabor|K]#!"
 STATE_TOTAL_LABOR_TOOLTIP:0 "#header Total [concept_workforce]#!\nAmount: #variable [State.GetTotalLabor|K]#!\n\n#concept This is the total number of the state's population that are considered part of the Workforce and can be employed in buildings.#!"
 STATE_AVAILABLE_LABOR: "$STATE_JOBSEEKERS$\n$STATE_PEASANTS$\n$STATE_UNEMPLOYED$\n$STATE_QUALIFICATIONS$"
 STATE_AVAILABLE_LABOR_TOOLTIP:1 "[State.GetJobseekersDesc]"
 STATE_INFRASTRUCTURE_PRODUCTION_MARKER:0 "$concept_infrastructure$: [State.GetInfrastructureBalance|0+=]"
 STATE_UNEMPLOYED:3 "#v [State.GetNumUnemployedWorkingAdults|D-]#! $concept_unemployed$"
 STATE_PEASANTS:2 "[State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetNameNoFormatting]"
 STATE_JOBSEEKERS: "[State.GetNumJobseekers|Dv] [Concept('concept_jobseeker', '$concept_jobseekers$')]"
 STATE_QUALIFICATIONS:0 "#tooltip:[State.GetTooltipTag],STATE_QUALIFICATIONS_BREAKDOWN [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]#! Has [concept_pop_qualifications] to fill all current Vacancies"
 STATE_QUALIFICATIONS_BREAKDOWN:0 "[State.GetPotentialQualificationsDesc]"
 STATE_PRODUCTION_MARKER_TOOLTIP:2 "#header [State.GetName]#!\n$TOOLTIP_DELIMITER$\n[concept_infrastructure]: #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!\n[concept_unemployed]: #v [State.GetNumUnemployedWorkingAdults|D-]#!\n[GetPopType('peasants').GetName]: #v [State.GetNumSubsistenceWorkingAdults|D]#!"
 MAP_LIST_STATE_AVAILABLE_LABOR:0 "[State.GetNumJobseekers|Dv] [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]"
 MAP_LIST_STATE_CONSCRIPTION_LIMIT: "@conscripts!#v [State.GetConscriptionLimit]#!"
 MAP_LIST_STATE_CONSCRIPTION_EXPECTED: "@conscripts!#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts] / [State.GetConscriptionLimit]#!"
 STATE_CONSCRIPTION_TOOLTIP: "#header [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] in [State.GetName]#!\n@conscripts!#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts]#! currently\n@conscripts!#v #tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSCRIPTION_LIMIT_TOOLTIP [State.GetConscriptionLimit]#!#!#! [concept_conscription_limit]"
 STATE_CONSCRIPTION_LIMIT_TOOLTIP: "#header [concept_conscription_limit] in [State.GetName]#!\nCurrent limit: @conscripts!#v [State.GetConscriptionLimit]#!\n$TOOLTIP_DELIMITER$\n[State.GetConscriptionLimitDesc]"
 STATE_CONSCRIPTION_LIMIT_CONSCRIPTION_RATE: "$LEVELS|=+0$ from $CONSCRIPTABLE_POPULATION|Dv$ conscriptable [Concept('concept_pop','$concept_population$')] with a Conscription Rate of #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONSCRIPTION_RATE|v%$#!#! and a [concept_battalion] size of $BATTALION_SIZE|v$ ($CONSCRIPTABLE_POPULATION|v$ / $BATTALION_SIZE|v$ x $CONSCRIPTION_RATE|3v$ = $LEVELS|v0$)"
 STATE_CONSCRIPTION_LIMIT_MAX_LEVELS: "Maximum of $MAX_LEVELS|v0$ [concept_conscription_limit] in this [concept_state] due to:\n$DETAILS$"
 STATE_LITERACY:0 "#header [concept_literacy]#!\n[State.GetLiteracy|%1v] of the [Concept('concept_pop', '$concept_pops$')] in [State.GetName] are literate."
 TOOLTIP_MASS_MIGRATION_TARGET:1 "#header [concept_migration_target]#!\n$TOOLTIP_DELIMITER$\nThis state and its surrounding states are the targets of extensive migration from [State.GetMassMigrationOriginCountry.GetAdjective] [State.GetMassMigrationCulture.GetName] people. This migration will continue until #variable [State.GetMassMigrationEndDate]#!."
 TOOLTIP_UNDISCOVERED_RESOURCES:0 "#header Discoverable Resources#!\n$TOOLTIP_DELIMITER$\nThere are undiscovered resource deposits in this state. These resources have a chance to be discovered each day if the state is part of a non-[concept_isolated_state]."
 DISCOVERABLE_RESOURCES:0 "Discoverable Resources"
 MARKET_ACCESS_WARNING:1 "@warning!\n#bold [StateInfraMarker.GetState.GetMarketAccess|0%]#!"
 MARKET_ACCESS_WARNING_SEA:1 "@warning!\n#bold [SeaRegionInfraMarker.GetStateRegion.GetSeaInfrastructure(GetPlayer)|0]%#!"
 ISOLATED:0 "@warning!"
 MIGRATION_TARGET_ENTRY:0 "#variable $TARGET$#!"
 INFLUENTIAL_CULTURE_FORMAT:0 "[Culture.GetNameNoFormatting]"

 STATE_AVERAGE_WAGE_TOOLTIP:0 "#header Wages#!\nState Average, annual: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_AVERAGE_WAGE_ENTRY:0 "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [GetPlayer.GetCustom('currency_symbol')]$VAL|vD$#!#! - [Building.GetName]"
 POP_DEPENDENT_PRODUCTION:0 "[concept_dependents] Production"
 POP_CONSUMPTION:1 "[concept_pop_needs]"
 BUILDING_CONSUMPTION:0 "Building Consumption"
 BUILDING_PRODUCTION:0 "Building Production"
 GOODS_PANEL_VALUE_TOOLTIP_HEADER: "#header [GoodsPanelValue.GetName]#!\n[SelectLocalization(GoodsPanelValue.HasMarketContext, GoodsPanelValue.GetMarket.GetNameNoFormatting, GoodsPanelValue.GetState.GetNameNoFormatting)]: [GoodsPanelValue.GetValue|Dv]\n$TOOLTIP_DELIMITER$"
 GOODS_PANEL_STATE_PRICE: "[Goods.GetShortCompareDescAgainstBasePrice( Goods.GetStatePrice )]"

 GOODS_ICON_AND_NAME_FORMAT:1 "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_EMBARGO_HEADER:0 "#header [concept_embargo]#!"
 GOODS_ENCOURAGE_CONSUMPTION_HEADER:0 "#header [concept_encourage_consumption]#!"
 GOODS_DISCOURAGE_CONSUMPTION_HEADER:0 "#header [concept_discourage_consumption]#!"
 GOODS_TAX_HEADER:0 "#header [concept_consumption_tax]#!"
 GOODS_EMBARGO_INACTIVE:2 "We are not [Concept('concept_embargo', '$concept_embargoing$')] [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_EMBARGO_ACTIVE:2 "We are [Concept('concept_embargo', '$concept_embargoing$')] [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_ENCOURAGE_CONSUMPTION_INACTIVE:2 "We are not [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_ENCOURAGE_CONSUMPTION_ACTIVE:2 "We are [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DISCOURAGE_CONSUMPTION_INACTIVE:2 "We are not [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DISCOURAGE_CONSUMPTION_ACTIVE:2 "We are [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_TAX_INACTIVE:2 "We are not collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_TAX_ACTIVE:2 "We are collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on[Goods.GetTextIcon][Nbsp][Goods.GetName]"
 TOGGLE_GOODS_EMBARGO_INACTIVE:0 "#instruction Left-Click#! to $EMBARGO_GOODS$"
 TOGGLE_GOODS_EMBARGO_ACTIVE:0 "#instruction Left-Click#! to $UNEMBARGO_GOODS$"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_INACTIVE:0 "#instruction Left-Click#! to $ENCOURAGE_GOODS$"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_ACTIVE:0 "#instruction Left-Click#! to $UNENCOURAGE_GOODS$"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_INACTIVE:0 "#instruction Left-Click#! to $DISCOURAGE_GOODS$"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_ACTIVE:0 "#instruction Left-Click#! to $UNDISCOURAGE_GOODS$"
 TOGGLE_GOODS_TAX_INACTIVE:0 "#instruction Left-Click#! to $TAX_GOODS$"
 TOGGLE_GOODS_TAX_ACTIVE:0 "#instruction Left-Click#! to $UNTAX_GOODS$"
 GOODS_EMBARGO_EFFECTS_INACTIVE:3 "Establishing an [concept_embargo] on [Goods.GetTextIcon][Nbsp][Goods.GetName] will cost us @aut![Nbsp]#v $COST|-0$#! and prevent [Concept('concept_country', '$concept_countries$')] without a [concept_market_share] from establishing [Goods.GetTextIcon][Nbsp][Goods.GetName] [Concept('concept_trade_route', '$concept_trade_routes$')] in [Concept('concept_market', '$concept_markets$')] where we are the [concept_market_owner]"
 GOODS_EMBARGO_EFFECTS_ACTIVE:1 "Ending our [concept_embargo] on [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_INACTIVE:2 "[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName] cost us @aut![Nbsp]#v $COST|-0$#! and over time will increase the amount of [Goods.GetTextIcon][Nbsp][Goods.GetName] that [Concept('concept_pop', '$concept_pops$')] in all [Concept('concept_market', '$concept_markets$')] where we have a [concept_market_share] consume as part of [concept_goods_substitution]"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_ACTIVE:1 "Ending our efforts to [concept_encourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_INACTIVE:2 "[Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will cost us @aut![Nbsp]#v $COST|-0$#! and over time will decrease the amount of [Goods.GetTextIcon][Nbsp][Goods.GetName] that [Concept('concept_pop', '$concept_pops$')] in all [Concept('concept_market', '$concept_markets$')] where we have a [concept_market_share] consume as part of [concept_goods_substitution]"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_ACTIVE:1 "Ending our efforts to [concept_discourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
 GOODS_TAX_EFFECTS_INACTIVE:2 "Collecting a [concept_consumption_tax] on $GOODS_NAME$[Nbsp]$GOODS_ICON$ will cost us @aut![Nbsp]#v $COST|-0$#! and generate approximately [GetPlayer.GetCustom('currency_symbol')]$REVENUE|K+$ in revenue"
 GOODS_TAX_EFFECTS_ACTIVE:2 "Removing our [concept_consumption_tax] on $GOODS_NAME$[Nbsp]$GOODS_ICON$ will recover the current expense of @aut![Nbsp]#v $COST|+0$#! but also lose us approximately [GetPlayer.GetCustom('currency_symbol')]$REVENUE|K+$ in revenue"

 NOT_PERMITTED_TO_EMBARGO_GOODS:2 "Our laws do not allow for [Concept('concept_embargo', '$concept_embargoes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_PERMITTED_TO_ENCOURAGE_GOODS:2 "Our laws do not allow [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_PERMITTED_TO_DISCOURGE_GOODS:2 "Our laws do not allow [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_PERMITTED_TO_TAX_GOODS:2 "Our laws do not allow for [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_POSSIBLE_TO_TAX_FIXED_PRICE:2 "It is not possible to collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName] because it has a fixed price"
 NOT_POSSIBLE_TO_NO_BUY_ORDERS:2 "It is not possible to collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName] because it has no [concept_buy_orders] in any of our [Concept('concept_market', '$concept_markets$')]"
 NOT_POSSIBLE_TO_ENCOURAGE_IS_DISCOURAGING:2 "We are already [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_POSSIBLE_TO_DISCOURAGE_IS_ENCOURAGING:2 "We are already [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 NOT_POSSIBLE_TO_ENCOURAGE_NOT_BOUGHT_BY_POPS:1 "It is not possible to [concept_encourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] because it is not consumed by [Concept('concept_pop', '$concept_pops$')]"
 NOT_POSSIBLE_TO_DISCOURAGE_NOT_BOUGHT_BY_POPS:1 "It is not possible to [concept_discourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] because it is not consumed by [Concept('concept_pop', '$concept_pops$')]"
 NOT_POSSIBLE_TO_EMBARGO_NON_TRADABLE:2 "It is not possible to [concept_embargo] [Goods.GetTextIcon][Nbsp][Goods.GetName] because it cannot be traded between [Concept('concept_market', '$concept_markets$')]"
 GOODS_INTERACTION_INSUFFICIENT_AUT:1 "Have at least @aut!$REQVAL|0=+$ [concept_authority]"
 GOODS_INTERACTION_INSUFFICIENT_INF:0 "Insufficient available $INFLUENCE$, $REQVAL|1v$ needed "

 LAW:0 "#bold [Law.GetNameNoFormatting]#!"
 LAW_GROUP:0 "#title [Law.GetGroupName]#!"
 LAW_GROUP_ACTIVE_LAW:0 "#bold [Law.GetActiveGroupLaw.GetName]#!"
 INVESTMENT_LEVEL:0 "#variable @bur![Law.GetInvestmentCost]#!"
 INVESTMENT_LEVEL_DESC:0 "[concept_investment_level]: #variable [Law.GetInvestmentLevel]#!"
 CURRENT_LAW:0 "Current Law"
 CURRENT_LAW_TOOLTIP:0 "This is the current law."
 COUNTRY_LAW_MODIFIER_NAME: "[LAW_TYPE.GetName] in [COUNTRY.GetNameNoFlag]"

 POPS_POLSTR_PIECHART_TITLE:0 "#title Pol Str, by [concept_profession]#!"
 POPS_POPULATION_PIECHART_TITLE:0 "#title Population, by [concept_profession]#!"
 POPS_VOTES_PIECHART_TITLE:0 "#title Votes, by [concept_profession]#!"
 POPS_WORKING_IN_PIECHART_TITLE:0 "#title Working in, by Building Type#!"
 POPS_CULTURE_POPULATION_PIECHART_TITLE:0 "#title Population, by Culture#!"
 POPS_CULTURE_POL_STR_PIECHART_TITLE:0 "#title Pol Str, by Culture#!"
 POPS_RELIGION_POPULATION_PIECHART_TITLE:0 "#title Population, by Religion#!"
 POPS_RELIGION_POL_STR_PIECHART_TITLE:0 "#title Pol Str, by Religion#!"
 POPULATION_PIECHART_HEADER:1 "[Concept('concept_pop','$concept_population$')]"
 COUNTRY_OWNERSHIP_PIECHART_HEADER: "[concept_country] [Concept('concept_ownership_share','$concept_ownership_shares$')]"
 OWNERSHIP_DISTRIBUTION_PIECHART_HEADER: "[GetPlayer.GetAdjective] owned [Concept('concept_building','$concept_buildings$')] distribution"
 POLITICAL_STRENGTH_PIECHART_HEADER:0 "[concept_political_strength]"
 POP_TYPE_HEADER:0 "#header [concept_profession]#!"
 POP_CULTURE_HEADER:0 "#header [concept_culture]#!"
 POP_RELIGION_HEADER:0 "#header [concept_religion]#!"
 
 POPULATION_CONCEPT_HEADER: "[Concept('concept_pop','$concept_population$')]:"
 AVERAGE_SOL_HEADER: "[concept_sol]:"

 POP_POLITICAL_MOVEMENTS_HEADER:0 "[Concept('concept_political_movement', '$concept_political_movements$')]"
 POLITICAL_MOVEMENT_IN_COUNTRY:  "[Concept('concept_political_movement','$concept_political_movement_short$')] in [PoliticalMovement.GetCountry.GetName]"
 POLITICAL_MOVEMENT_SUPPORT_SHORT: "[Concept('concept_political_movement_support','$concept_political_movement_support_short$')]"
 POLITICAL_LOBBY_IN_COUNTRY:  "[Concept('concept_political_lobby','$concept_political_lobby_short$')] in [PoliticalLobby.GetCountry.GetName]"
 SUPPORTING_INTEREST_GROUPS: "Supporting $concept_interest_groups$"
 SUPPORTING_AGITATORS: "Supporting $concept_agitators$"
 PRESSURED_INTEREST_GROUPS: "$concept_political_movement_pressured_short$ $concept_interest_groups$"
 POP_IG_INACTIVE_HEADER:0 "#header [concept_interest_group]#!\nThis [concept_pop] is [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_ATTRACTION_HEADER:1 "#header [concept_interest_group]#!\nThis [Concept('concept_pop','$concept_pop_possessive$')] Primary $concept_interest_group$ is [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]\n$POP_DETAILS_IG$"
 POP_IG_ATTRACTION_HEADER_NO_CLICK:0 "#header [concept_interest_group]#!\nThis [Concept('concept_pop','$concept_pop_possessive$')] Primary $concept_interest_group$ is [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_DISCRIMINATED:1 "This $concept_pop$ is [concept_disenfranchised] due to a low [concept_acceptance] value and cannot join [Concept('concept_interest_group', '$concept_interest_groups$')]."
 POP_IG_MEMBERSHIP:2 "#variable $MEMBERS|D$#! support the [INTEREST_GROUP.GetName] (Attraction: #tooltip_header #tooltippable #tooltip:[INTEREST_GROUP.GetPopWithIG(POP.Self).GetTooltipTag],POP_IG_ATTRACTION_TOOLTIP $ATTRACTION|%0$#!#!#!)\n"
 POP_IG_ATTRACTION_TOOLTIP:0 "#header Pop Attraction to [PopWithIG.GetInterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nTotal Attraction: [PopWithIG.CalcAttractionToIG|v]\n[PopWithIG.GetAttractionToIGDesc]"
 POP_IG_NO_MEMBERSHIP:2 "#variable $NUM_INACTIVE|D$#! are #bold [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]#! and do not support any [concept_interest_group]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold Disenfranchised Dependents#! cannot participate in politics"
 
 POP_MOVEMENT_MEMBERSHIP: "#variable $MEMBERS|D$#! are part of the [POLITICAL_MOVEMENT.GetName] (Attraction: #tooltip_header #tooltippable #tooltip:$BREAKDOWN_TAG$ $ATTRACTION|%0$#!#!#!)\n"
 POP_MOVEMENT_ATTRACTION_TOOLTIP: "#header Pop Attraction to [PopWithMovement.GetPoliticalMovement.GetName]#!\n$TOOLTIP_DELIMITER$\nTotal Attraction: [PopWithMovement.CalcAttractionToMovement|v]\n[PopWithMovement.GetAttractionToMovementDesc]"
 POP_MOVEMENT_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! have not joined any [concept_political_movement]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold Disenfranchised Dependents#! cannot participate in politics"

 INTEREST_GROUP_MOVEMENT_SUPPORT_INDIVIDUALS: "@population! [InterestGroup.GetNumSupportersForMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|vD] out of [InterestGroup.GetPopulation|vD] [Concept('concept_individual','$concept_individuals$')]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT: "[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|%v0] [concept_political_movement_pressure]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT_TOOLTIP: "#header [concept_political_movement_pressure] on [InterestGroup.GetName]#!\n[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0] currently\n$TOOLTIP_DELIMITER$\nThe [Concept('concept_pop','$concept_pops$')] that make up [InterestGroup.GetCloutSupportingMovement(PoliticalMovement.Self)|%v0] out of the total [concept_clout] of [InterestGroup.GetClout|%v0] for [InterestGroup.GetName], supports this [concept_political_movement] resulting in [InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0] $concept_political_movement_pressure_short$\n\nIf the $concept_political_movement_pressure$ is above [GetDefine('NPolitics', 'IG_INFLUENCING_MOVEMENT_MIN_SUPPORTING_CLOUT')|0%v], [InterestGroup.GetName] is considered $concept_political_movement_pressured_short$ by the [PoliticalMovement.GetName]"

 POP_BASE_SUPPORT: "Base Support"
 POP_BASE_ATTRACTION: "Base Attraction"
 POP_POVERTY:0 "Low [concept_sol]"
 POP_STARVATION:0 "Starvation"
 POP_DISCRIMINATED:1 "[Concept('concept_discrimination','$concept_discriminated_against$')]"
 POP_NOT_DISCRIMINATED:0 "Not [Concept('concept_discrimination','$concept_discriminated$')]"
 POP_RELIGIOUS_DISCRIMINATION: "Low [concept_acceptance] of [concept_religion]"
 POP_NO_RELIGIOUS_DISCRIMINATION: "High [concept_acceptance] of [concept_religion]"
 POP_ARISTOCRATS:0 "$aristocrats$ [concept_profession]"
 POP_BUREAUCRATS:0 "$bureaucrats$ [concept_profession]"
 POP_CAPITALISTS:0 "$capitalists$ [concept_profession]"
 POP_CLERGYMEN:0 "$clergymen$ [concept_profession]"
 POP_CLERKS:0 "$clerks$ [concept_profession]"
 POP_ENGINEERS:0 "$engineers$ [concept_profession]"
 POP_FARMERS:0 "$farmers$ [concept_profession]"
 POP_PEASANTS:0 "$peasants$ [concept_profession]"
 POP_LABORERS:0 "$laborers$ [concept_profession]"
 POP_OFFICERS:0 "$officers$ [concept_profession]"
 POP_ACADEMICS:0 "$academics$ [concept_profession]"
 POP_SHOPKEEPERS:0 "$shopkeepers$ [concept_profession]"
 POP_SLAVES:0 "$slaves$ [concept_profession]"
 POP_SOLDIERS:0 "$soldiers$ [concept_profession]"
 POP_MACHINISTS:0 "$machinists$ [concept_profession]"
 NO_LABOR_MOVEMENT:0 "The #v $labor_movement$#! [concept_technology] is not unlocked"
 NO_EGALITARIANISM:0 "The #v $egalitarianism$#! [concept_technology] is not unlocked"
 HAS_POLITICAL_AGITATION:0 "The #v $political_agitation$#! [concept_technology] is unlocked"
 URBAN_POP:0 "Non-Agricultural Employment"
 RURAL_POP:0 "Agricultural Employment"
 POP_PRIMARY_CULTURE:0 "Has [concept_primary_cultures]"
 POP_STATE_RELIGION:0 "Follows [concept_state_religion]"
 MONARCHY_BEING_ABOLISHED: "[GetLawType('law_monarchy').GetName] is being abolished"
 POP_LITERACY:0 "Literacy"
 POP_WEALTH:0 "Wealth"
 POP_DANGEROUS_JOBS:0 "Dangerous Employment"
 POP_WORKPLACE:0 "Workplace"
 LITERACY_0_10:0 "Literacy below #variable 25%#!"
 LITERACY_10_20:0 "Literacy between #variable 10%#! and #variable 20%#!"
 LITERACY_20_30:0 "Literacy between #variable 20%#! and #variable 30%#!"
 LITERACY_30_40:0 "Literacy between #variable 30%#! and #variable 40%#!"
 LITERACY_40_50:0 "Literacy between #variable 40%#! and #variable 50%#!"
 LITERACY_50_60:0 "Literacy between #variable 50%#! and #variable 60%#!"
 LITERACY_60_70:0 "Literacy between #variable 60%#! and #variable 70%#!"
 LITERACY_70_80:0 "Literacy between #variable 70%#! and #variable 80%#!"
 LITERACY_80_90:0 "Literacy between #variable 80%#! and #variable 90%#!"
 LITERACY_90_100:0 "Literacy above #variable 90%#!"
 LEADER_POPULARITY:0 "[concept_popularity] of [SCOPE.gsInterestGroup('interest_group').GetLeader.GetFullNameWithTitle]"
 IN_GOVERNMENT_ATTRACTION:0 "Impact of taxation on the attraction of the Interest Group"
 MILITARY_INDUSTRIES: "Military-Industrial Employment"
 POP_MILITARY_BUREAUCRACY: "Russian-American Military Bureaucracy"
 STATE_ATHEISM_LAW: "[GetLawType('law_state_atheism').GetName] [concept_law]"
 STATE_RELIGION_LAW: "[GetLawType('law_state_religion').GetName] [concept_law]"
 FREEDOM_OF_CONSCIENCE_LAW: "[GetLawType('law_freedom_of_conscience').GetName] [concept_law]"
 POP_LOYALISTS: "From Pop Loyalists"
 POP_RADICALS: "From Pop Radicals"
 POP_RADICAL_MOVEMENT_LOSSES: "From Competing Radical Movement"
 HOMESTEADING_LAW: "[GetLawType('law_homesteading').GetName] [concept_law]"
 ADMINISTRATION_ROLE: "Urban Administrators"
 POP_BUREAUCRATS_ELECTED: "Owner has [GetLawType('law_elected_bureaucrats').GetName]"
 RULER_WRONG_RELIGION: "[concept_ruler] having the wrong [concept_religion]"
 RULER_NOT_PRIMARY_CULTURE: "[concept_ruler] not belonging to a primary [concept_culture]"
 RULER_IS_ANTI_SLAVERY: "[concept_ruler] opposing slavery"
 RULER_IS_PRO_SLAVERY: "[concept_ruler] supporting slavery"
 RULER_IS_CHILD: "[concept_ruler] is a child"
 RULER_IS_LIBERAL: "[concept_ruler] is reform-minded"
 RULER_POPULARITY: "[concept_ruler] [concept_popularity]"
 ARMY_FRACTION_IN_SLAVE_STATES: "less than #v 50%#! of [GetBuildingType('building_barracks').GetName] levels being located in Slave States"
 NAVY_FRACTION_IN_SLAVE_STATES: "less than #v 50%#! of [GetBuildingType('building_naval_base').GetName] levels being located in Slave States"
 STANDARD_OF_LIVING_FOR_CULTURE: "[SCOPE.sCulture('culture').GetName] [concept_sol] compared to the average in the [concept_country]"
 STANDARD_OF_LIVING_FOR_PRIMARY_CULTURES: "[concept_primary_cultures] [concept_sol] compared to the average in the [concept_country]"
 STANDARD_OF_LIVING_FOR_RELIGION: "[SCOPE.sReligion('religion').GetName] [concept_sol] compared to the average in the [concept_country]"
 STANDARD_OF_LIVING_FOR_SLAVES: "[concept_sol] for [GetPopType('slaves').GetName] is below #v 10#!"
 INSTITUTION_FUNDING_LEVEL_social_security: "Investment level for [GetInstitutionType('institution_social_security').GetName]"
 INSTITUTION_FUNDING_LEVEL_colonial_affairs: "Investment level for [GetInstitutionType('institution_colonial_affairs').GetName]"
 INSTITUTION_FUNDING_LEVEL_workplace_safety: "Investment level for [GetInstitutionType('institution_workplace_safety').GetName]"
 INSTITUTION_FUNDING_LEVEL_schools: "Investment level for [GetInstitutionType('institution_schools').GetName]"
 INSTITUTION_FUNDING_LEVEL_police: "Investment level for [GetInstitutionType('institution_police').GetName]"
 INSTITUTION_FUNDING_LEVEL_health_system: "Investment level for [GetInstitutionType('institution_health_system').GetName]"
 INSTITUTION_FUNDING_LEVEL_home_affairs: "Investment level for [GetInstitutionType('institution_home_affairs').GetName]"
 NO_INSTITUTION_social_security: "No [GetInstitutionType('institution_social_security').GetName]"
 NO_INSTITUTION_colonial_affairs: "No [GetInstitutionType('institution_colonial_affairs').GetName]"
 NO_INSTITUTION_workplace_safety: "No [GetInstitutionType('institution_workplace_safety').GetName]"
 NO_INSTITUTION_schools: "No [GetInstitutionType('institution_schools').GetName]"
 NO_INSTITUTION_police: "No [GetInstitutionType('institution_police').GetName]"
 NO_INSTITUTION_health_system: "No [GetInstitutionType('institution_health_system').GetName]"
 NO_INSTITUTION_home_affairs: "No [GetInstitutionType('institution_home_affairs').GetName]"
 IS_BELOW_15_SOL: "Average [concept_sol] is below $STANDARD_OF_LIVING_LEVEL_15$"
 COUNTRY_TURMOIL: "[concept_turmoil] in the [concept_country]"
 DISCRIMINATION_LEVEL_cultural_erasure: "Base acceptance level is $cultural_erasure$"
 DISCRIMINATION_LEVEL_violent_hostility: "Base acceptance level is $violent_hostility$"
 DISCRIMINATION_LEVEL_open_prejudice: "Base acceptance level is $open_prejudice$"
 NUMBER_OF_CLAIMS: "Number of [Concept('concept_claim','$concept_claims$')]"
 owner_has_modern_agriculture_tt: "Owner has [GetLawType('law_commercialized_agriculture').GetName] or [GetLawType('law_collectivized_agriculture').GetName]"
 owner_has_homesteading_tt: "Owner has [GetLawType('law_homesteading').GetName] or [GetLawType('law_commercialized_agriculture').GetName]"
 RELIGIOUS_SCHOOLS_LAW: "[GetLawType('law_religious_schools').GetName] [concept_law]"
 from_communal_divides_je: "the $je_communal_divides$ [concept_journal_entry]"
 from_communal_divides_completed_je: "having successfully completed the $je_communal_divides$ [concept_journal_entry]"
 CORPORATISM_TECH: "The #v $corporatism$#! [concept_technology] is unlocked"
 NATIONALISM_TECH: "The #v $nationalism$#! [concept_technology] is unlocked"
 PAN_NATIONALISM_TECH: "The #v $pan-nationalism$#! [concept_technology] is unlocked"
 financial_districts_buy_farms_tt: "Enacting [GetLawType('law_commercialized_agriculture').GetName] will increase the likelihood that [GetBuildingType('building_financial_district').GetName] will purchase $bg_plantations$, $bg_ranching$, and $bg_agriculture$ [Concept('concept_building','$concept_buildings$')]"
 farmers_pb_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] will attract [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] employed in Rural buildings"
 rural_laborers_tu_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] will attract [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] employed in Rural buildings"
 farmers_pb_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] will no longer attract [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] employed in Rural buildings"
 rural_laborers_tu_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] will no longer attract [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] employed in Rural buildings"
 bureaucrats_pb_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] will attract fewer [GetPopType('bureaucrats').GetName]"
 urban_aristocrats_int_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant] will attract fewer [GetPopType('aristocrats').GetName] employed in Urban buildings"
 bureaucrats_pb_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] will attract more [GetPopType('bureaucrats').GetName]"
 urban_aristocrats_int_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant] will attract more [GetPopType('aristocrats').GetName] employed in Urban buildings"
 aristocrats_af_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract more [GetPopType('aristocrats').GetName]"
 aristocrats_af_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract fewer [GetPopType('aristocrats').GetName]"
 non_military_pops_af_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract fewer non-[GetPopType('soldiers').GetName] or [GetPopType('officers').GetName] [Concept('concept_pop', '$concept_pops$')]"
 non_military_pops_af_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract more non-[GetPopType('soldiers').GetName] or [GetPopType('officers').GetName] [Concept('concept_pop', '$concept_pops$')]"
 military_pops_af_ig_shift_effect_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract more [GetPopType('soldiers').GetName]"
 military_pops_af_ig_shift_effect_negative_tt: "The [GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] will attract fewer [GetPopType('soldiers').GetName]"

 POP_HINDU: "Follows $hindu$ [concept_religion]"
 POP_MUSLIM: "Follows $sunni$ or $shiite$ [concept_religion]"

 POP_INDIA_EUROPEAN_ADMINISTRATORS: "European Administrators"
 POP_INDIA_NATIVE_ADMINISTRATORS: "Company Functionaries"
 POP_INDIA_COLONIAL_RULE: "European Colonial Privileges"
 POP_INDIA_CIVIL_SERVICE: "Indian Civil Service"
 POP_INDIA_MONEYED_ELITES: "Indian Moneyed Classes"
 POP_INDIA_ADMINISTRATION_PRIVILEGES: "Excluded from Colonial Administration"

 POP_SOL_OVER_EXPECTED: "[concept_sol] over [concept_expected_sol]"
 POP_SOL_UNDER_EXPECTED: "[concept_sol] over [concept_expected_sol]"
 URBAN_STATE: "State [concept_urbanization]"

 POSITIVISM_BONUS: "Positivist Education"
 from_early_trade_unions: "Populist Trade Unions"
 SPRINGTIME_OF_THE_PEOPLES_UNDERWAY: "Springtime of the Peoples [concept_journal_entry] underway"
 POP_POLISH_ARISTOCRATS: "Legacy of the Commonwealth"
 POP_POLISH_NATIONALISM: "Polish Nationalism"
 COLONIAL_SETTLERS: "Colonial Settlers"
 NATIONALISM: "Researched Nationalism"
 PAN_NATIONALISM: "Researched Pan-Nationalism"
 FAILED_TANZIMAT_REFORMS: "Failed $je_sick_man_main$ [concept_journal_entry]"
 STRONG_SOCIALIST_MOVEMENT: "Powerful Socialist [concept_political_movement]"
 COUNTRY_IS_AUTOCRATIC: "Country has no [concept_election_voting_franchise]"
 COUNTRY_IS_DEMOCRATIC: "Country has democratic [concept_elections]"
 
 POP_HIGH_URBANIZATION: "Highly Urbanized [concept_state]"
 POP_LOW_URBANIZATION: "Sparsely Urbanized [concept_state]"
 POP_HIGH_LITERACY: "High [concept_literacy]"
 POP_LOW_LITERACY: "Low [concept_literacy]"

 EMPLOYEE_TRANSFERS:0 "\n\n#header Latest Employee changes:#!\n"
 EMPLOYEE_TRANSFER_FROM:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] (used to be [EMPLOYEE_TRANSFER.GetOldPopType.GetName] in the [EMPLOYEE_TRANSFER.GetOldEmployment.GetName])"
 EMPLOYEE_TRANSFER_TO:0 "#b #tooltippable #N #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN -[EMPLOYEE_TRANSFER.GetTotal|-]#!#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] (became [EMPLOYEE_TRANSFER.GetNewPopType.GetName] in the [EMPLOYEE_TRANSFER.GetNewEmployment.GetName])"
 EMPLOYEE_PROMOTION_DEMOTION_FROM:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] that used to be [EMPLOYEE_TRANSFER.GetOldPopType.GetName]"
 EMPLOYEE_PROMOTION_DEMOTION_TO:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] that became [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
 EMPLOYEE_PROMOTION_DEMOTION_FROM_TO:0 "#tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|v]#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] became [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
 EMPLOYEE_DIED:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] died"
 EMPLOYEE_FIRED:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] were fired"
 EMPLOYEE_EMIGRATED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] emigrated to another [concept_state]"
 EMPLOYEE_NEW:0 "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] that were previously [concept_unemployed]"
 EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN:0 "Total: [EmployeeTransfer.GetTotal|v]\nLiterate: [EmployeeTransfer.GetLiterate|v]\nIlliterate: [EmployeeTransfer.GetIlliterate|v]"

 FAILED_HIRE:0 "Could #b not#! hire [POP_TYPE.GetName] due to:\n$REASONS$"
 FAILED_HIRE_NO_POP_TYPE: "Could #b not#! hire due to:\n$REASONS$"
 WARN_HIRE_LOW_WAGE:0 "\nExcess [POP_TYPE.GetName] were hired at a low wage"
 FAILED_HIRE_REASON_LOW_WAGE:0 "@red_cross! [POP_TYPE.GetName] on [BUILDING.GetName] in [BUILDING.GetState.GetName] with $NUM_QUALIFIED_POPS|v1*$ qualifying [TARGET_POP_TYPE.GetName] aren't willing to work for a wage of #v [GetPlayer.GetCustom('currency_symbol')]$OFFERED_WAGE$#!. They would accept a wage of #v [GetPlayer.GetCustom('currency_symbol')]$MIN_ACCEPTABLE_WAGE$#!"
 FAILED_HIRE_REASON_LOW_QUALIFICATIONS:0 "@red_cross! #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $NUM_QUALIFIED_POPS|1*$#!#!#! Pops fulfill the [concept_pop_qualifications] to become [POP_TYPE.GetName] in [BUILDING.GetState.GetName]. The [BUILDING.GetName] wants to hire a total of #variable $TOTAL_TO_BE_HIRED|1*$#!"
 FAILED_HIRE_LOW_QUALIFICATIONS_BREAKDOWN:0 "$BREAKDOWN$"
 FAILED_HIRE_REASON_SLAVERY:2 "@red_cross! [POP_TYPE.GetName] can only be hired if [concept_unemployed] or working in a [concept_subsistence_building]"
 FAILED_HIRE_REASON_LOW_EARNINGS: "@red_cross! Hiring additional employees would make [BUILDING.GetName] in [BUILDING.GetState.GetName] unprofitable due to decreased [concept_productivity] ([GetPlayer.GetCustom('currency_symbol')]$CUR_PRODUCTIVITY|1v$ -> [GetPlayer.GetCustom('currency_symbol')]$NEW_PRODUCTIVITY|1v$)"
 FAILED_HIRE_REASON_LOW_PRODUCTIVITY: "@red_cross! [BUILDING.GetName] in [BUILDING.GetState.GetName] needs a higher [concept_productivity] to want to compete for employees with other [Concept('concept_building', '$concept_buildings$')] in the [concept_state]."
 FAILED_HIRE_REASON_COOLDOWN: "@red_cross! [BUILDING.GetName] in [BUILDING.GetState.GetName] recently failed to hire additional employees and will not try again until #v $DATE$#!"
 FAILED_HIRE_REASON_JOB_SATISFACTION: "@red_cross! [POP_TYPE.GetName] on [BUILDING.GetName] in [BUILDING.GetState.GetName] are [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$')] with their current [concept_employment] ($NUM_QUALIFIED_POPS|v1*$ qualifying for [TARGET_POP_TYPE.GetName])"
 FAILED_HIRE_REASON_JOB_SATISFACTION_NO_BUILDING: "@red_cross! [POP_TYPE.GetName] in [TARGET_BUILDING.GetState.GetName] are [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$')] with their current situation ($NUM_QUALIFIED_POPS|v1*$ qualifying for [TARGET_POP_TYPE.GetName])"
 FAILED_HIRE_BUILDING_CAN_ADJUST_HIRING_RATE: "@information! This $concept_building$ will reduce its hiring target and try to hire again next week. Next week it will attempt to hire $HIRING_TARGET|v$ new employees."
 FAILED_HIRE_BUILDING_CANNOT_ADJUST_HIRING_RATE: "@warning! This $concept_building$ has already reduced its hiring target to its minimum of $HIRING_TARGET|v$ employees per week, and will not be able to hire until the issues preventing hiring are resolved."

 WARNING_LOW_POTENTIAL_QUALIFIED_WORKFORCE: "@warning! There are few pops qualified or willing to work as [POP_TYPE.GetName] in [TARGET_BUILDING.GetState.GetName] that do not already work in more lucrative positions or more successful industries.\nConsider developing more [concept_pop_qualifications] for [POP_TYPE.GetName] to improve throughput in [TARGET_BUILDING.GetName]."

 POPS_LIST_POPULATION:0 "#BOLD [PopListItem.GetTotalPopSizePercentage|%1]#! of the Population\n#BOLD [PopListItem.GetTotalPolStrPercentage|%1]#! of the [concept_political_strength]"
 POP_LIST_POL_STR_TOOLTIP:0 "#header [concept_political_strength]#!\nValue: [PopListItem.GetTotalPolStr|Dv]\nThis is #BOLD [PopListItem.GetTotalPolStrPercentage|%1v]#! of the total [concept_political_strength] this group of Pops"
 POP_LIST_SIZE_TOOLTIP:0 "#header Population#!\n$POP_LIST_SIZE_BREAKDOWN$\n\nThis group represents #BOLD [PopListItem.GetTotalPopSizePercentage|%1v]#! of the total Population shown"
 POP_LIST_SIZE_BREAKDOWN:0 "Total: [PopListItem.GetTotalPopSize|Dv]\n$TAB$Working Adults: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TAB$[concept_dependents]: [PopListItem.GetDependentsPopSize|Dv]"
 POPS_LIST_TYPE_NAME:0 "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!\n#bold [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
 POPS_LIST_TYPE_SIZE_AND_NAME:0 "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!"
 POPS_LIST_TYPE_POL_STR:0 "#v [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
 POPS_LIST_MAX_SIZE:0 "#header [PopListItem.GetPopType.GetName]#!\nEmployed: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TOOLTIP_DELIMITER$\nThis building can employ #variable [Building.GetMaxPopSize(PopListItem.GetPopType)|D]#! [PopListItem.GetPopType.GetName] due to:\n[Building.GetMaxPopSizeDesc(PopListItem.GetPopType)] [Building.GetEmployeesTransferDesc(PopListItem.GetPopType)] [Building.GetFailedHiresDesc(PopListItem.GetPopType)]"
 POPS_LIST_SLAVES_ROLE_MAX_SIZE:0 "#header [PopListItem.GetPopType.GetName]#!\nEmployed: [PopListItem.GetWorkingAdultsPopSize|Dv]\n[Building.GetPopTypeReplacementDesc(PopListItem.GetPopType)]\n$TOOLTIP_DELIMITER$\nThis building can employ #variable $MAX_POP_SIZE|D$#! [POP_TYPE.GetName] or [TARGET_POP_TYPE.GetName] due to:\n$MAX_POP_SIZE_DESC$ [Building.GetEmployeesTransferDesc(TARGET_POP_TYPE.Self)] [Building.GetFailedHiresDesc(TARGET_POP_TYPE.Self)]"
 POPS_LIST_SOL:0 "[LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])"
 POPS_LIST_SOL_TOOLTIP:0 "#header [concept_sol]#!\nAverage [concept_sol]: [LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])\n\n[SelectLocalization(PopListItem.GetPopType.IsSlave, '', 'POPS_LIST_SOL_TOOLTIP_AVG_INCOME')]"
 POPS_LIST_SOL_TOOLTIP_AVG_INCOME:0 "Average Yearly Income Per Pop: [GetPlayer.GetCustom('currency_symbol')][PopListItem.GetAverageAnnualWage|vD]"
 ANNUAL_WAGE_TOOLTIP:0 "#header Annual Wage for [PopListItem.GetPopType.GetName]#!\nEvery year [PopListItem.GetPopType.GetName] in this Building make #bold [GetPlayer.GetCustom('currency_symbol')][PopListItem.GetAverageAnnualWage|Dv]#! on average"
 POPS_LIST_CAN_BE_REPLACED_BY:0 "Can be replaced by [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_REPLACES_POP_TYPE:0 "Replaces [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_FULLY_REPLACED_BY_SLAVES:0 "Fully replaced by [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_MAX_CAPACITY:0 "[POP_TYPE.GetNameNoIcon] are at maximum capacity"
 POPS_LIST_ESOL:0 "#title [PopListItem.GetAverageESoL|1]#!"
 POPS_LIST_LARGEST_IGS:0 "#title Primary IGs: #!"
 POP_LIST_POL_STR:0 "Pol. Str: #variable [Pop.GetPoliticalStrength|K]#!"
 POP_LIST_WEALTH:0 "Wealth: #variable [Pop.GetCurrentWealth|1*]#!"
 POP_LIST_NOT_ALL_POPS_SHOWN:1 "[GetDataModelSize(PopListItem.GetPops)]/[PopListItem.GetNumTotalPops] [Concept('concept_pop', '$concept_pops$')] shown"
 STATE_CULTURES:0 "#title [Concept('concept_culture', '$concept_cultures$')]#!"
 STATE_RELIGIONS:0 "#title [Concept('concept_religion', '$concept_religions$')]#!"
 STATE_POP_TYPES:0 "#title [concept_profession]#!"
 VERSION_TOOLTIP:0 "#title Build Version#!\n[GetVersion]\n#instruction Click to copy to clipboard#!"

 TRADE_ROUTE_CONVOYS_DESC:1 "#tooltippable #tooltip:[GetPlayer.GetTooltipTag],NUM_CONVOYS_TOOLTIP_EXTENDED [GetPlayer.GetNumAvailableConvoys]#!#! @convoys! [concept_convoys] available"

 MAX_DECLARED_INTERESTS_TOOLTIP:0 "#header Maximum [Concept('concept_declared_interest','$concept_declared_interests$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\n[Country.GetMaxNumDeclaredInterestsBreakdown]"

 MAP_INTERACTION_ADD_CONSCRIPTS: "Select which #v State#! to add [CombatUnitType.GetName|v] [concept_conscript_battalion] to [MilitaryFormation.GetName|v].\nCurrently has @conscripts! [MilitaryFormation.GetMaxConscripts|v]"
 MAP_INTERACTION_ADD_CONSCRIPTS_INSTRUCTIONS: "#instruction Click to add 1 unit, $SHORTCUT_KEY_MOD_shift$Click for $SHIFT_NUM_LEVELS$, $SHORTCUT_KEY_MOD_ctrl$Click for $CTRL_NUM_LEVELS$#!"
 MAP_INTERACTION_ADD_CONSCRIPTS_TOOLTIP: "#header Add [CombatUnitType.GetName|v] [concept_conscript_battalion]#!\nCurrently $CURRENT_UNITS|v$/$MAX_UNITS|v$ [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] from [State.GetName|v]\n$TOOLTIP_DELIMITER$\n[concept_military_formation]: [MilitaryFormation.GetName|v]\n[concept_state]: [State.GetName|v]\n[concept_hq]: [Hq.GetName]\n\n@information! This will add a [concept_conscript_battalion] to [MilitaryFormation.GetName|v] but will not enlist Pops until raised.\n\n$KEY_MODIFIER_INSTRUCTIONS$"
 MAP_INTERACTION_ADD_CONSCRIPTS_LIMIT_HEADER_TOOLTIP: "#header State [concept_conscript_battalion] limit#!\n$TOOLTIP_DELIMITER$\nHow many [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] are claimed by [Concept('concept_army', '$concept_armies$')] in [GetPlayer.GetName] versus how many can be supported in the [concept_state]."

 MAP_INTERACTION_ESC_TO_CANCEL:0 "#instruction Press #bold ESC#! to close current Map Interaction#!"
 MAP_INTERACTION_BUILD_BUILDING_DESC:1 "Select in which #V State#! to build #V [BUILDING_TYPE.GetName]#!\n#regular_size [BUILDING_TYPE.GetConstructionCosts]#!"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE: "Will recruit [CombatUnitType.GetName|v] to [MilitaryFormation.GetName|v]"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_DESC: "$MAP_INTERACTION_BUILD_BUILDING_DESC$\n$MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE$"
 MAP_INTERACTION_BUILD_BUILDING_PERFORMED:0 "Building #V [BuildingType.GetName]#! started"
 MAP_INTERACTION_BUILDING_BUILT:0 "[Building.GetName] built in [Building.GetState.GetName]"
 MAP_INTERACTION_BUILDING_EXPANDED:0 "[Building.GetName] expanded to level #v [Building.GetExpansionLevel]#! in [Building.GetState.GetName]"
 MAP_INTERACTION_CREATE_MARKET_DESC:0 "Select in which #V State#! to build a #V Market#!"
 MAP_INTERACTION_ESTABLISH_COLONY_DESC:0 "Select which #V State Region#! to create a #V Colony#!"
 MAP_INTERACTION_ESTABLISH_COLONY_PERFORMED:1 "#V Colony#! [concept_colony] has been established"
 MAP_INTERACTION_DECLARE_INTEREST_DESC:2 "Select which [concept_strategic_region] to declare an [concept_interest]\n[GetPlayer.GetNumDeclaredInterests|v] / #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! used"
 MAP_INTERACTION_DECLARE_INTEREST_PERFORMED:0 "[concept_interest] has been declared"
 MAP_INTERACTION_MERGE_MARKET_MARKET_DESC:0 "Select #V Market#! to link a #V State/Market#! into"
 MAP_INTERACTION_MERGE_MARKET_STATE_DESC:0 "Select which #V State/Market#! to link into the #V [MARKET.GetName]#!"
 MAP_INTERACTION_DIPLOMATIC_ACTION_DESC:1 "Select which #V Country#! to send [DIPLOMATIC_ACTION_TYPE.GetName|v] to"
 MAP_INTERACTION_DIPLOMATIC_ACTION_PERFORMED: "[DIPLOMATIC_ACTION.GetNameWithContext|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TYPE_PERFORMED: "[DIPLOMATIC_ACTION_TYPE.GetName|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT: "[DiplomaticAction.GetName|v] already in effect with [Country.GetName]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE: "[DiplomaticAction.GetWillAcceptDesc]\n[DiplomaticAction.GetWillAcceptBreakdown]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TOOLTIP: "[DIPLOMATIC_ACTION.GetNameWithContext|v] to [COUNTRY.GetName][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetMaintenanceCostFormatted)][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetActionAcceptEffectDesc)][ConcatIfNeitherEmpty('\n', SelectLocalization(DIPLOMATIC_ACTION.IsActivePact, 'MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT', ''))][ConcatIfNeitherEmpty('\n\n', SelectLocalization(DIPLOMATIC_ACTION.RequiresApproval, 'MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE', ''))]"
 MAP_INTERACTION_JOIN_POWER_BLOC_DESC: "Select which #v Power Bloc#! to send a request to join to"
 MAP_INTERACTION_JOIN_POWER_BLOC_TOOLTIP: "Send a request to join [POWER_BLOC.GetName]\n$TOOLTIP_DELIMITER$\n[DIPLOMATIC_ACTION.GetWillAcceptDesc]\n[DIPLOMATIC_ACTION.GetWillAcceptBreakdown][ConcatIfNeitherEmpty('\n\n','$ERRORS$')]"
 MAP_INTERACTION_NAVAL_INVASION_DESC:0 "Select #V State#! for #variable Naval Invasion#!"
 MAP_INTERACTION_NAVAL_INVASION_TOOLTIP:0 "$NAVAL_INVASION_ORDER_DESC$"
 MAP_INTERACTION_WARGOAL_wg_take_state_STATE_DESC:0 "Select which #V State#! to take"
 MAP_INTERACTION_WARGOAL_wg_war_reparations_COUNTRY_DESC:0 "Select which #V Country#! to take #V War Reparations#! from"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_COUNTRY_DESC:0 "Select which #V Country's#! #V [concept_interest]#! to remove"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_STRATEGIC_REGION_DESC:0 "Select which #V [concept_strategic_region]#! to remove the #V [concept_interest]#! from"
 MAP_INTERACTION_SET_DECREE_DESC:1 "Select a [concept_state] for the $NAME|v$ [concept_decree]"
 MAP_INTERACTION_SET_DECREE_PERFORMED:0 "[DecreeType.GetName]"
 MAP_INTERACTION_INCORPORATE_STATE_DESC:1 "Select a [concept_state] to incorporate"
 MAP_INTERACTION_INCORPORATE_STATE_PERFORMED:1 "State incorporation started"
 MAP_INTERACTION_INCORPORATE_STATE_SELECT:1 "Incorporate [STATE.GetName] ([STATE.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_DESC:0 "Select a new [concept_capital_state]"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_PERFORMED:0 "[concept_capital_state] has been changed"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_SELECT:0 "#header Change [concept_capital_state] to [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\nMaking [STATE.GetName] into our [concept_capital_state] will give the state the following benefits:\n[STATE.GetCapitalEffectsDesc]\n\nChanging our [concept_capital_state] will result in country-wide penalties that will decay over a period of #V [GetDefine('NCountry', 'MOVE_CAPITAL_COOLDOWN_YEARS')]#! years:\n[STATE.GetOwner.GetMoveCapitalEffectsDesc]\n\nWhile these penalties are in effect, we will be unable to change the [concept_capital_state] again."
 MAP_INTERACTION_MOVE_MARKET_CAPITAL_STATE_SELECT:1 "#header Change [concept_market_capital] to [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\nMaking [STATE.GetName] into our [concept_market_capital] will give it the following additional benefits:\n[STATE.GetMarketCapitalEffectsDesc]#!#!\n\nChanging our [concept_market_capital] will result in country-wide penalties that will decay over a period of #V [GetDefine('NCountry', 'MOVE_MARKET_CAPITAL_COOLDOWN_YEARS')]#! years:\n[STATE.GetOwner.GetMoveMarketCapitalEffectsDesc]\n\nWhile these penalties are in effect, we will be unable to change the [concept_market_capital] again."
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_DESC:1 "Select #V Market#! to import [GOODS.GetTextIcon] #V [GOODS.GetName]#! into\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_DESC:1 "Select #V Market#! to export [GOODS.GetTextIcon] #V [GOODS.GetName]#! from\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_NO_GOODS_DESC:1 "Select #V Market#! to import [concept_good] into\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_NO_GOODS_DESC:1 "Select #V Market#! to export [concept_good] from\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_SELECT_GOODS_DESC:0 "Select [concept_good] to import"
 MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_SELECT_GOODS_DESC:0 "Select [concept_good] to export"
 MAP_INTERACTION_TRADE_ROUTE_OTHER_IMPORT_DESC:1 "Select #V Market#! to export [GOODS.GetTextIcon] #V [GOODS.GetName]#! to\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_OTHER_EXPORT_DESC:1 "Select #V Market#! to import [GOODS.GetTextIcon] #V [GOODS.GetName]#! from\n$TRADE_ROUTE_CONVOYS_DESC$"
 MAP_INTERACTION_TRADE_ROUTE_PERFORMED:0 "Trade Route has been established"
 MAP_INTERACTION_DIPLOMATIC_PLAY_DESC:2 "Select target for this [concept_diplomatic_demand]"
 MAP_INTERACTION_DIPLOMATIC_PLAY_PERFORMED:0 "[DiplomaticPlayType.GetName|v] started"
 MAP_INTERACTION_DIPLOMATIC_DEMAND_PERFORMED: "[DiplomaticPlayType.GetName|v] demanded"
 MAP_INTERACTION_FRONT_TOOLTIP:0 "$FRONT_ORDER_DESC$"
 MAP_INTERACTION_INVASION_CANNOT_TARGET_SELF:0 "#N Cannot target your own unoccupied States#!"
 MAP_INTERACTION_FRONT_ORDER_DESC:0 "Select #V [concept_front]#! for #variable [COMMANDER_ORDER_TYPE.GetName]#! Order"
 MAP_INTERACTION_FRONT_ORDER_PERFORMED:0 "#variable [COMMANDER_ORDER_TYPE.GetName]#! Order given to [Character.GetFullName]"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_DESC:0 "Select [concept_state] to activate [concept_conscription_center]"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_PERFORMED:1 "Added [concept_conscript_battalion]"
 MAP_INTERACTION_DESIGNATE_STRATEGIC_OBJECTIVE_DESC:0 "Select [concept_state] to designate as [concept_strategic_objective]"
 MAP_INTERACTION_DESIGNATE_STRATEGIC_OBJECTIVE_PERFORMED:0 "[concept_strategic_objective] designated"
 STATE_STRATEGIC_OBJECTIVE:0 "[concept_strategic_objective]\n[State.GetTheater(State.GetController).GetName]"
 STATE_STRATEGIC_OBJECTIVE_TOOLTIP:0 "[State.GetName] is your Strategic Objective in the [State.GetTheater(State.GetController).GetName|v]"

 MAP_INTERACTION_BUILD_ARMY_FORMATION_DESC: "Select #V [concept_hq]#! to build [concept_army]"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_DESC: "Select #V [concept_hq]#! to build [concept_fleet]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_VALID: "#header Build [concept_army]#!\nWill be stationed at the [HQ.GetName]"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_VALID: "#header Build [concept_fleet]#!\nWill be stationed at the [HQ.GetName]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_FAIL: "[concept_army] can only be built at land [concept_hq]"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_FAIL: "[concept_fleet] can only be built at naval [concept_hq]"
 MAP_INTERACTION_CREATE_FORMATION_PERFORMED: "Formation Created"

 MONEY_PREFIX: "[GetPlayer.GetCustom('currency_symbol')]"

 MAP_INTERACTION_RECRUIT_ADMIRALS_DESC:0 "Select #V [concept_hq]#! to recruit [Concept( 'concept_admiral', '$concept_admirals$' )]"
 MAP_INTERACTION_RECRUIT_ADMIRALS_FAIL_NAVAL:0 "[Concept( 'concept_admiral', '$concept_admirals$' )] can only be recruited for naval HQs"
 MAP_INTERACTION_RECRUIT_ADMIRALS_VALID:0 "Recruit [Concept( 'concept_admiral', '$concept_admirals$' )] for [HQ.GetName]"

 NAVAL_INVASION_ORDER_DESC:1 "#header Plan Naval Invasion#! in [STATE.GetName]"
 POWER_PROJECTION_ORDER_DESC:0 "#header Project Power#! into [STRATEGIC_REGION.GetName]\nOrder [CHARACTER.GetFullName] to #variable Project Power#! into [STRATEGIC_REGION.GetName]"
 FRONT_ORDER_DESC:0 "[COMMANDER_ORDER_TYPE.GetName] on the [FRONT.GetName]"
 TRAVEL_TIME_DESC:1 "Traveling there will take #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|v$#!#! "

 DECREE_DESC: "[ConcatIfNeitherEmpty('\n','$ERRORS$')]\n$EFFECT$\n\n#title Cost:#! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$\n\n#lore $DESC$#!"
 SET_DECREE_IN_STATE_TOOLTIP: "#header Issue [DecreeType.GetName] in [State.GetName]#!\n$DESC$"
 DECREE_TYPE_TOOLTIP: "#header $NAME$#!\n$DESC$"
 DECREE_TOOLTIP: "$DESC$"
 DECREE_CANNOT_REMOVE_NOT_OWNER: "Cannot remove [Decree.GetName] which is set by [Decree.GetCountry.GetName]"
 DECREE_REMOVE:0 "#header Cancel#! [Decree.GetName] in [Decree.GetState.GetName]"
 CANNOT_SET_DECREE:0 "#header #N Cannot set [concept_decree] in [State.GetName]#!#!"
 DECREE_ALREADY_ACTIVE:0 "[DECREE.GetName] [concept_decree] is already set in [STATE.GetName]"
 DECREE_ALREADY_ACTIVE_CANNOT_REMOVE: "[Decree.GetName] [concept_decree] is already set in [Decree.GetState.GetName] by [Decree.GetCountry.GetName]"
 DECREE_CANNOT_AFFORD:1 "Have at least @aut!$COST|vD$ [concept_authority] to spend on this [concept_decree]"
 DECREE_COST_MINIMUM_VALUE: "Cost of [DECREE_TYPE.GetName] cannot drop below $VALUE|^v1$"
 DISABLE_DECREE_TOOLTIP:0 "#header Cancel#! [DecreeType.GetName] in [State.GetName]#!"
 DECREE_COST_ENTRY:1 "[DECREE.GetName] in [DECREE.GetState.GetName]: #variable #N -[DECREE.GetCost|0]#!#!"

 SELECT_TARGET: "Select Target"
 CHANGE_TARGET: "Change Target"
 SELECT: "Select"
 LIBERATE: "Liberate"
 LIBERATE_TARGET_COUNTRY_FROM_COUNTRY: "Liberate [DiplomaticPlayConfirmation.GetCountryDefinition.GetName] from [DiplomaticPlayConfirmation.GetTargetCountry.GetName]"

 SELECT_STATE: "Select"
 CHANGE_STATE: "Change"
 CLEAR_STATE: "Reset"
 NO_STATE_SELECTED: "None"
 DIPLOMATIC_ACTION_STATE_HEADER: "[Country.GetAdjective] [concept_state]"

 START_DIPLOMATIC_PLAY_SUMMARY:1 "#header Demand [WarGoal.GetName] [concept_diplomatic_play]#!"
 START_DIPLOMATIC_PLAY_TOOLTIP:3 "#header Demand #v $NAME$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 START_DIPLOMATIC_WAR_GOAL_DESC: "[concept_primary_demand]: $DESC$"
 DIPLO_PLAY_TOOLTIP_PARTICIPANTS_HEADER:1 "Involved [Concept('concept_country', '$concept_countries$')] in potential [concept_diplomatic_play]:"
 DIPLO_PLAY_TOOLTIP_ENEMY_SIDE:2 "Enemy Side: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_OUR_SIDE:2 "Our Side: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_UNDECIDED:2 "Undecided: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_UNDECIDED: "#header Potential [concept_diplomatic_play] participants#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_OUR_SIDE: "#header Potential [concept_diplomatic_play] allies#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_ENEMY_SIDE: "#header Potential [concept_diplomatic_play] enemies#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRY_ENTRY:1 "[COUNTRY.GetName]: #variable @battalions![COUNTRY.GetBattalions|0]#! + #v [Country.CalcConscriptableBattalions]#!$LEANING_SIDE$"
 DIPLO_PLAY_TOOLTIP_COUNTRY_LEANING_SIDE: " (Leaning [COUNTRY.GetName])"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_EITHER: " (Unable to join the play)"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_COUNTRY: " (Unable to support [COUNTRY.GetName])"
 DIPLO_PLAY_TOOLTIP_COUNTRY_UNDECIDED: " (Undecided)"

 DIPLO_PLAY_STANCE_INITIATOR: "Initiator"
 DIPLO_PLAY_STANCE_TARGET: "Target"
 DIPLO_PLAY_STANCE_SUPPORTING_COUNTRY: "Supporting [COUNTRY.GetName]"
 DIPLO_PLAY_STANCE_LEANING_COUNTRY: "Leaning towards [COUNTRY.GetName]"
 DIPLO_PLAY_STANCE_UNDECIDED: "Undecided"

 PRESSED_WAR_GOALS:0 "Pressed [Concept('concept_war_goal', '$concept_war_goals$')]"
 UNPRESSED_WAR_GOALS:0 "Unpressed [Concept('concept_war_goal', '$concept_war_goals$')]"
 INTEREST_GROUPS_TAB:0 "Interest Groups"

 IDEOLOGY_FOR:0 "Ideologies in favor: "
 IDEOLOGY_AGAINST:0 "Ideologies against: "
 IDEOLOGY:0 "$NAME$"
 PRO_IDEOLOGY:0 "$NAME|v$"
 ANTI_IDEOLOGY:0 "$NAME|v$"
 TOTAL_IDEOLOGY_APPROVAL:0 " ([Law.GetPercentPolStrApprove|v%1] of total [concept_clout])"
 TOTAL_IDEOLOGY_DISAPPROVAL:0 " ([Law.GetPercentPolStrDisapprove|v%1] of total [concept_clout])"

 INTEREST_GROUP_NAME:0 "#BOLD #V $NAME$#!#!"
 TOOLTIP_POPULATION: "#header [concept_interest_group] Population#!\n[InterestGroup.GetCountry.GetAdjective] supporters of [InterestGroup.GetName]: [InterestGroup.GetPopulation|v1*] ([InterestGroup.GetPopulationInCountryAsPercentage|v%1])\n$TOOLTIP_DELIMITER$\n#title Only [Concept('concept_pop','$concept_pops$')] that meet these criteria will consider supporting this $concept_interest_group$:#!\n[InterestGroup.GetPopPotentialDesc]"

 IG_POPULATION_PIECHART:1 "#header [InterestGroup.GetName]#!\nPopulation: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPercentage of politically enfranchised population in [GetPlayer.GetName]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 POPULATION_PIECHART:1 "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\nPopulation: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPercentage of politically enfranchised population in [GetPlayer.GetName]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 IG_CLOUT_PIECHART:1 "#header [InterestGroup.GetName]#!\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART:1 "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART_STATE:1 "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n[concept_clout] in [State.GetName]: #variable [InterestGroup.GetPoliticalStrengthInStateAsPercentage(State.Self)|%1]#!\n$TOOLTIP_DELIMITER$\nTotal [concept_clout] in [Country.GetName]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]\n\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CULTURE_PIECHART:1 "#header [Culture.GetName]#!\nPopulation: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!"
 RELIGION_PIECHART:1 "#header [Religion.GetName]#!\nPopulation: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!"
 HARVEST_CONDITIONS_HEADER: "[Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 STARVATION_PIECHART_HEADER: "[concept_starvation]"
 STARVATION_PIESLICE_TOOLTIP: "#header [Concept('concept_pop','$concept_pops$')] with [StarvationType.GetName] in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#!\n@population! [FoodSecurity.GetStarvationTypePopulation(StarvationType.Self)|Dv] ([FoodSecurity.GetStarvationTypePopulationAsPercentage(StarvationType.Self)|%0v]) currently\n@population! [FoodSecurity.GetNumPopsTotal|Dv] total $concept_population$"
 FOOD_SECURITY_FILTER_CONTEXT_NAME: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', FoodSecurityFilter.GetMarket.GetName))]"
 GLOBAL_STARVATION_DESC: "[STATE.GetFoodSecurityDesc]"

 HARVEST_CONDITION_DURATION_LABEL_VERY_HIGH: "Endless"
 HARVEST_CONDITION_DURATION_LABEL_HIGH: "No end in sight"
 HARVEST_CONDITION_DURATION_LABEL_MODERATE: "Enduring"
 HARVEST_CONDITION_DURATION_LABEL_LOW: "Lingering"
 HARVEST_CONDITION_DURATION_LABEL_VERY_LOW: "Waning"
 HARVEST_CONDITION_DURATION_LABEL_LOWEST: "Subsiding"

 POP_TYPE_PIECHART:1 "#header [PopType.GetName]#!\nPopulation: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!"
 CULTURE_PIECHART_POL_STR:1 "#header [Culture.GetName]#!\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!"
 RELIGION_PIECHART_POL_STR:1 "#header [Religion.GetName]#!\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!"
 POP_TYPE_PIECHART_POL_STR:1 "#header [PopType.GetName]#!\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!"
 STATE_CULTURE_PIECHART:1 "#header [Culture.GetName]#!\nPopulation: #v [Culture.GetStatePopulationAsPercentage(State.Self)|/%d] ([Culture.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [Culture.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Culture.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetStateDependentsAsPercentage(State.Self)|/%d] ([Culture.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Culture.GetStatePolStrAsPercentage(State.Self)|/%d] ([Culture.GetStatePolStr(State.Self)|*])#!"
 STATE_RELIGION_PIECHART:1 "#header [Religion.GetName]#!\nPopulation: #v [Religion.GetStatePopulationAsPercentage(State.Self)|/%d] ([Religion.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [Religion.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Religion.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetStateDependentsAsPercentage(State.Self)|/%d] ([Religion.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Religion.GetStatePolStrAsPercentage(State.Self)|/%d] ([Religion.GetStatePolStr(State.Self)|*])#!"
 STATE_POP_TYPE_PIECHART:1 "#header [PopType.GetName]#!\nPopulation: #v [PopType.GetStatePopulationAsPercentage(State.Self)|/%d] ([PopType.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [PopType.GetStateWorkforceAsPercentage(State.Self)|/%d] ([PopType.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetStateDependentsAsPercentage(State.Self)|/%d] ([PopType.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [PopType.GetStatePolStrAsPercentage(State.Self)|/%d] ([PopType.GetStatePolStr(State.Self)|*])#!"
 RAW_POL_STR:0 "[concept_political_strength]: #variable [InterestGroup.GetTotalPoliticalStrengthIncludingPartyVotes|K]#!\n[InterestGroup.GetPoliticalStrengthDesc]"
 TOOLTIP_MARGINALIZATION:0 "#BOLD #V Marginalization#!#!\n$TOOLTIP_DELIMITER$\n$MARGINALIZATION_CONCEPT$"
 POL_STR_RATIO:0 "[concept_clout] in [InterestGroup.GetCountry.GetName]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]"
 MARGINAL_IG_DESC:1 "\nConsidered [concept_marginalized] because [INTEREST_GROUP.GetInfluenceReason]"
 MARGINALIZATION_REASON_BELOW_THRESHOLD:0 "its [concept_clout] is below #variable [GetDefine('NPolitics', 'MARGINAL_IG_THRESHOLD')|%0]#!"
 MARGINALIZATION_REASON_REVOLTING:0 "it is revolting against #variable [INTEREST_GROUP.GetCountry.GetName]#!"
 POWERFUL_IG_DESC:1 "\nConsidered [concept_powerful] because [INTEREST_GROUP.GetInfluenceReason]"
 POWERFUL_IG_TRAIT_BONUS_DESC:1 "Since this [concept_interest_group] is [concept_powerful], their [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')] have a #variable [GetDefine('NPolitics', 'POWERFUL_IG_TRAIT_BONUS')|=%0]#! stronger effect."
 POWERFUL_REASON_ABOVE_THRESHOLD:0 "its [concept_clout] is above #variable [GetDefine('NPolitics', 'POWERFUL_IG_THRESHOLD')|%0]#!"
 POWERFUL_REASON_ABOVE_CUTOFF:0 "its [concept_clout] is above #variable [GetDefine('NPolitics', 'POWERFUL_IG_CUTOFF')|%0]#!"
 NEUTRAL_IG_DESC:1 "\nConsidered [concept_influential]"
 RADICAL_IG_TOOLTIP:1 "#N [InterestGroup.GetName] supports a [concept_political_movement] that is plotting a [concept_revolution]!#!"
 REVOLUTION_IG_TOOLTIP:1 "#N [InterestGroup.GetName] supports an ongoing [concept_revolution]!#!"
 RADICALIZATION_CHANCE_TOOLTIP:0 "[InterestGroup.GetChanceToRadicalizeDesc]"
 RADICALIZATION_CHANCE_BREAKDOWN:1 "#header Weekly Chance to Radicalize: #v $CHANCE|-%$#!#!\n$TOOLTIP_DELIMITER$\nFrom [concept_approval]: #v $BASE|-=1%$#![ConcatIfNeitherEmpty('$SUPPRESSION_MODIFIER_FORMAT$','$SUPPRESSION_MODIFIER$')]"
 SUPPRESSION_MODIFIER_FORMAT:0 "\n#header Suppression:#!\n"
 POL_STR_FROM_VOTES:1 "[concept_political_strength] of [concept_votes] in last [concept_election]: #variable $VAL|+=D$#!"
 POL_STR_FROM_WEALTH:0 "From [concept_wealth]: #variable $VAL|+=D$#!\n$TAB$Wealth #tooltippable #tooltip:[POP.GetTooltipTag],TOOLTIP_WEALTH #v $WEALTH|0$#!#!#!: #bold $VALPERPOP|+=$#! per Politically Active Pop"
 POL_STR_FROM_WEALTH_AVERAGE:0 "From [concept_wealth]: #variable $VAL|+=K$#!\n$TAB$Average Wealth #variable $WEALTH|1$#!: #bold $VALPERPOP|+=2$#! per Politically Active Pop"

 NO_ACTIVE_TRAITS:1 "No [Concept('concept_interest_group', '$concept_interest_groups$')] have any active [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')]"
 NO_ACTIVE_TRAITS_EXPLAIN:2 "#header [concept_interest_group] Traits#!\nEach [concept_interest_group] has a number of [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')] that will be activated depending on the [concept_interest_group]'s [concept_approval]. These Traits have either negative or positive effects on your Country."

 PRODUCTION_METHOD_DISABLED_BY_GAME_RULE:0 "$concept_production_method$ disabled by a game rule"
 CHANGE_TO:0 "#title Change to#!"
 CURRENT_SUFFIX:0 "#title (Current)#!"
 INVESTMENT_TITLE:1 "Number of [Concept('concept_investment_level', '$concept_investment_levels$')]"
 COST_PER_INVESTMENT_TITLE:1 "[concept_bureaucracy] Cost / [concept_investment_level]"
 WEEKLY_COSTS_TITLE:0 "Total Weekly Cost"
 INSTITUTION_LEVEL_CHANGE:0 "Changing to Level [Institution.GetTargetInvestmentLevel]"
 INSTITUTION_CURRENT_LEVEL:0 "Level [Institution.GetInvestmentLevel]"
 INSTITUTION_TIME_TO_REACH_LEVEL:0 "$NUM_WEEKS|v$ weeks"
 INSTITUTION_TIME_TO_REACH_LEVEL_DAYS:0 "$NUM_DAYS|v$ days"
 INSTITUTION_TIME_TO_REACH_LEVEL_ONE_DAY:0 "1 day"
 INSTITUTION_TIME_TO_REACH_LEVEL_LESS_THAN_ONE_DAY:0 "Less than one day"
 NO_INSTITUTIONS:0 "No [Concept('concept_institution', '$concept_institutions$')]"

 MINCOST:0 "Minimum Cost: $VAL|v1$"
 INCORPORATED_POPULATION_LAW_COST:1 "Incorporated Population of $POPULATION|vK$ costs #v $COST|1+$#! per Investment\n$TAB$Base Cost: #v $BASECOST|1+$#! $MODIFIER$"
 INSTITUTION_INVESTMENT_FACTOR:1 "#title $COST_PER_INVESTMENT_TITLE$: #v $VAL|1+$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_TOTAL:2 "#header Total [Concept('concept_investment_level', '$concept_investment_levels$')]#!\nCurrent: #variable @ins! $VAL|0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_LIST_ITEM:0 "#title [Institution.GetName]:#! #variable [Institution.GetInvestmentLevel]#!"

 CLOCK_TEXT:0 "#BOLD [TimeKeeper.GetCurrentDate.GetString]#!"
 CLOCK_DEBUG_TEXT:0 "[TimeKeeper.GetDayOfWeek]"
 CLOCK_PAUSED:0 "(Paused)"
 CLOCK_PAUSED_BY_EVENT: "(Paused by Event)"
 CLOCK_PLAYING:0 "Playing"

 POLITICAL_ACTION_EFFECT:0 "#!This is a Political Action\nCost:  $POWER_COST$\n$DEMANDING_IGS$Will give you #variable $TRUST|+=$#! Trust#! $IG_EFFECTS$"
 POLITICAL_ACTION_EFFECT_IG_LINE:0 "\n#header $NAME$:#!"

 INFRASTRUCTURE_EFFECTS_HEADER:0 "Effects of [concept_infrastructure]:"

 SEA_REGION_PANEL_PRESENCE_OWNER:0 "[SeaRegionNavalPresence.GetCountry.GetNameNoFormatting]"
 SEA_REGION_PANEL_PRESENCE_OWNER_TOOLTIP:0 "#variable [SeaRegionNavalPresence.GetCountry.GetName]#! has warships in #variable [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]#!"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE:0 "[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructure(SeaRegionNavalPresence.GetCountry)]"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE_TOOLTIP:0 "#header Infrastructure#!\n[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructureDesc(SeaRegionNavalPresence.GetCountry)]"
 NAVAL_PRESENCE:0 "Naval Presence"
 BATTLES:0 "Battles"
 SEA_REGION_MAP_MARKER_BATTLE_ONGOING:0 "A Battle between #variable [Battle.GetAttacker.GetName]#! and #variable [Battle.GetDefender.GetName]#!"

 SEA_INFRASTRUCTURE_MAP_MARKER_TOOLTIP:0 "#header [StateRegion.GetName] [concept_market_access]#!\n[StateRegion.GetSeaInfrastructureDesc(GetPlayer)]"
 STATE_INFRASTRUCTURE_MAP_MARKER_TOOLTIP:2 "#header [State.GetName] [concept_market_access]#!\n[State.GetMarketAccessDesc]"

 ERROR_DEER_TOOLTIP:0 "#header Oh Deer!#!\n#instruction Left-Click#! to open Error Log\n#instruction Right-Click#! to make it go away (until you upset it again)"

 TRADE_LENS:1 "[concept_trade_lens]"
 PRODUCTION_LENS:1 "[concept_production_lens]"
 POLITICAL_LENS:1 "[concept_political_lens]"
 DIPLOMATIC_LENS:0 "[concept_diplomatic_lens]"
 MILITARY_LENS:1 "[concept_military_lens]"

 TOOLTIP_GO_BACK:0 "#BOLD #V Back#!#!"
 TOOLTIP_CLOSE_WINDOW:0 "#BOLD #V Close#!#!"
 TOOLTIP_MINIMIZE_WINDOW:0 "#BOLD #V Minimize#!#!"

 FOUND_IN_BUY_PACKAGES:0 "$TYPE|v$ Pops with Wealth #variable $LOW$ - $HIGH$#!"
 rural:0 "Rural"
 urban:0 "Urban"

 TOOLTIP_WAR_SUMMARY:0 "#HEADER [War.GetName]#!\n#BOLD Attackers#!:\n#V [War.GetAttackerListString]#!\n#BOLD Defenders#!:\n#V [War.GetDefenderListString]#!"
 TOOLTIP_REVOLUTION_SUMMARY:0 "#HEADER Revolution!"

 CALC_WAR_EXHAUSTION: "#indent_newline:3 In #variable $TIMER$#! days this will change by #bold $LOSS|+$#!\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_SCRIPT_VALUE_FORMAT: "#v [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|=+2]#! from $KEY$"
 WAR_EXHAUSTION_BASE: "Base"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_NONE: "No Enemy Occupation"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_LOW: "Low Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_MODERATE: "Moderate Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|1v%])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_SUBSTANTIAL: "Substantial Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_HIGH: "High Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_EXTREME: "Extreme Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_TOTAL: "Total Enemy Occupation ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_CONTESTED_WARGOALS: "[SCOPE.sWar('war').GetEnemyContestedWargoalsFraction(SCOPE.GetRootScope.GetCountry.Self)|%0v] enemy control over wargoals"
 WAR_EXHAUSTION_FROM_CASUALTIES: "[SCOPE.sWar('war').GetCasualties(SCOPE.GetRootScope.GetCountry.Self)|Dv] [concept_casualties] suffered compared to max military size of #v [SCOPE.GetRootScope.GetCountry.GetNumCombatUnits|D]K#! and their side has lost [SCOPE.sWar('war').GetSizeWeightedLostBattlesFraction(SCOPE.GetRootScope.GetCountry.Self)|%1v] of battles (scaled by battle size)"
 WAR_EXHAUSTION_FROM_ACCEPTANCE_OF_DEAD: "Cultural [concept_acceptance] of #negative_value [SCOPE.sWar('war').GetTotalDeadWithWarExhaustionTooltip(SCOPE.GetRootScope.GetCountry.Self)]#! total deaths"
 WAR_EXHAUSTION_TOTAL_DEAD_FORMATTED: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|D$#!#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE: "#header [concept_war_exhaustion] from [Concept('concept_culture','$concept_cultural$')] [concept_acceptance]#!\n#negative_value $VALUE|=2$#! per week\n$TOOLTIP_DELIMITER$\n$DEATHS|vK$ [concept_dead] to date\n$MOBILIZED|vK$ current [concept_manpower] in [concept_war]\n\n#indent_newline:3 #title $concept_war_exhaustion$ from deaths in each [concept_culture]#!:\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY: "#indent_newline:3 #negative_value $VALUE|=2$#! from $DEATHS|vD$ [Culture.GetName] deaths ([AcceptanceStatus.GetName])\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_NO_IMPACT_ENTRY: "No impact from $DEATHS|vD$ [Culture.GetName] deaths ([AcceptanceStatus.GetName])"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY_BREAKDOWN: "#negative_value $IMPACT|=2$#! from $DEATHS|vD$ dead on [Country.GetAdjective] side"
 WAR_EXHAUSTION_FROM_country_war_exhaustion_casualties_mult: "$country_war_exhaustion_casualties_mult$"
 WAR_EXHAUSTION_FROM_TURMOIL: "[concept_radical] Population ([SCOPE.GetRootScope.GetCountry.CalcTurmoil|%1v])"
 WAR_SUPPORT_FROM_LOBBIES: "[concept_clout] of [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] supporting the $concept_war$"
 WAR_OPPOSITION_FROM_LOBBIES: "[concept_clout] of [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] opposing the $concept_war$"
 WAR_EXHAUSTION_FROM_EVENTS: "Events"

 TOOLTIP_COUNTRY:0 "#BOLD #V [GetPlayer.GetName]#!#!"
 TOOLTIP_COUNTRY_DELAYED:0 "\n$TOOLTIP_DELIMITER$\nCultures: #VARIABLE [GetPlayer.GetPrimaryCulturesDesc]#!\nReligion: #VARIABLE [GetPlayer.GetStateReligion.GetName]#!\nCapital: #VARIABLE [GetPlayer.GetCapital.GetName]#!\n\n[concept_country_desc]"
 TOOLTIP_BUILDING_USES:0 "#header [Goods.GetNameNoFormatting]#!"
 TOOLTIP_BUILDING_USES_UNITS_INFO:1 "#header [Goods.GetName]#!\nAmount used: #variable [Building.GetConsumption(Goods.Self)|0]#! / week\n[Building.GetConsumptionDesc(Goods.Self)]"
 TOOLTIP_BUILDING_PRODUCES:0 "#header [Goods.GetNameNoFormatting]#!\n"
 TOOLTIP_BUILDING_PRODUCES_UNITS_INFO:0 "#header [Goods.GetName]#!\nAmount produced: #variable [Building.GetProduction(Goods.Self)|0]#! / week\n$TOOLTIP_DELIMITER$\nOutput percentage: #variable [Building.GetOutputPercentage(Goods.Self)|%1]#! of [concept_good_production] from [Building.GetName]\n[Building.GetProductionDesc(Goods.Self)]"


 TOOLTIP_BUILDING_USES_VALUE_INFO:2 "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nExpenses paid for [Goods.GetTextIcon][Nbsp][Goods.GetName] used: #variable [GetPlayer.GetCustom('currency_symbol')][Building.GetConsumptionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nState Region price: [Goods.GetStatePriceWithTooltip|1]"

 TOOLTIP_BUILDING_PRODUCES_VALUE_INFO:1 "#header [Goods.GetName]#!\nRevenue from #variable [Goods.GetName]#! sold: #variable [GetPlayer.GetCustom('currency_symbol')][Building.GetProductionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nState Region Price: [Goods.GetStatePriceWithTooltip]"

 TOOLTIP_RESET:0 "#BOLD #V Reset"

 MARKET_BALANCE:0 "#title Balance:\n#variable [GetPlayer.GetCustom('currency_symbol')][Market.GetBalance|D+=]#!#!"
 MARKET_BALANCE_TOOLTIP:0 "#header Market Balance#!\nAmount: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+=$#!\n$TOOLTIP_DELIMITER$\nTotal Sales: #variable [GetPlayer.GetCustom('currency_symbol')]$SALESVAL|D+=$#!\n$SALESBREAKDOWN$\n\nTotal Purchases: #variable [GetPlayer.GetCustom('currency_symbol')]$PURCHASEVAL|D+=$#!\n$PURCHASEBREAKDOWN$"

 MARKET_GOOD_PRODSTATS:0 "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! sold for #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D=+$#! ([GOODS.GetName])"
 MARKET_GOOD_CONSUMESTATS:0 "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! bought for #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D=+$#! ([GOODS.GetName])"
 AND_X_MORE_MONEY_VAL:0 "...and #variable $NUM$#! more worth #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"

 BUILDING_URBANIZATION_WITH_VALUE:0 "$VALUE|0v=$ from [BUILDING.GetName]"
 BUILDING_INFRA_USAGE_WITH_VALUE:1 "#v $VALUE|0-$#! from [BUILDING.GetName]"

 BUILDING_COMBAT_UNIT_PRODUCTION:0 "Provides $UNIT_ICON$ $UNIT_COUNT|v$"
 BUILDING_COMBAT_UNIT_PRODUCTION_BREAKDOWN_FORMATION_ITEM: "#header [MilitaryFormation.GetName]#! #indent_newline:3 \n[Building.GetCombatUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]#!"

 IMPORT_SUGGESTIONS_TITLE:0 "Goods with considerable Import demand"
 EXPORT_SUGGESTIONS_TITLE:0 "Goods with considerable potential for Export"
 NO_GOODS_IMPORT_SUGGESTION:0 "No [Concept('concept_good', '$concept_goods$')] have considerable import demand"
 NO_GOODS_EXPORT_SUGGESTION:0 "No [Concept('concept_good', '$concept_goods$')] have considerable export demand"
 MARKET_GOODS_BALANCE_TOOLTIP:1 "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance), '(int32)0'), 'MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'MARKET_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 MARKET_GOODS_BALANCE_TOOLTIP_BALANCE:0 "#header Balance for [Goods.GetName]#!\nCurrent balance: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Do]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current balance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetMarket.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."
 MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE:0 "#header Balance for [Goods.GetName]#!\nCurrent imbalance: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Du]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current imbalance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetMarket.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."

 STATE_GOODS_BALANCE_TOOLTIP:1 "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetStateProductionConsumptionDiff), '(int32)0'), 'STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'STATE_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 STATE_GOODS_BALANCE_TOOLTIP_BALANCE:0 "#header Balance for [Goods.GetName]#!\nCurrent balance: #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Do]#!\n$TOOLTIP_DELIMITER$\nProduction: [Goods.GetStateProductionWithTooltip]\nConsumption: [Goods.GetStateConsumptionWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current balance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetState.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."
 STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE:0 "#header Balance for [Goods.GetName]#!\nCurrent imbalance: #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Du]#!\n$TOOLTIP_DELIMITER$\nProduction: [Goods.GetStateProductionWithTooltip]\nConsumption: [Goods.GetStateConsumptionWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current imbalance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetState.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."

 PRODUCED_IN:0 "Produced in"
 CONSUMED_IN:0 "Consumed in"

 POP_IG_POPULATION:0 "#variable [PopListPopEntry.GetIGTotalPops|D]#!"
 POP_WORK_INFO:0 "from [Pop.GetWorksAt]"
 POP_TOTAL_INFO:1 "#header Total Size#!\n[Pop.GetTotalSize|Dv] including [concept_dependents]"
 POP_IG_POPULATION_TOOLTIP:0 "#header [concept_interest_group] Members#!\n$TOOLTIP_DELIMITER$\n$POP_IG_POPULATION_WORKING_ADULTS$\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_IG_WORKING_ADULTS:0 "Working Adults: #variable [PopListPopEntry.GetIGWorkingAdults|D]#!"
 POP_IG_DEPENDENTS:0 "#header Dependents#!\nValue: #variable [PopListPopEntry.GetIGDependents|1D]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 POP_IG_POPULATION_WORKING_ADULTS:0 "This Pop supports the #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! with #variable [PopListPopEntry.GetIGWorkingAdults|1K]#! of their #variable [PopListPopEntry.GetPop.GetNumWorkforce|1K]#! Workforce"
 POP_IG_POPULATION_DEPENDENTS:0 "This Pop supports the #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! with #variable [PopListPopEntry.GetIGDependents|1K]#! of their #variable [PopListPopEntry.GetPop.GetNumDependentPoliticalParticipants|1K]#! Enfranchised Dependents"
 POP_IG_WORKING_ADULTS_TOOLTIP:0 "#variable Working Adults#!\n$POP_IG_POPULATION_WORKING_ADULTS$"
 POP_IG_DEPENDENTS_TOOLTIP:0 "#variable Dependents#!\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_POL_STR_SLAVES_DESC: "[Concept('concept_slavery','$concept_slaves$')] do not have $concept_political_strength$"
 POP_IG_POL_STR:0 "Pol. Str: #variable [PopListPopEntry.GetIGPolStr|D]#!"
 POP_IG_POL_STR_TOOLTIP:0 "#header [concept_political_strength]#!\n$TOOLTIP_DELIMITER$\nThis Pop supports the #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! with #variable [PopListPopEntry.GetIGPolStr|K]#! of their #variable [PopListPopEntry.GetPop.GetPoliticalStrength|D]#! [concept_political_strength]."
 POP_POL_STR:2 "#header [concept_political_strength]#!\nValue: #variable [Pop.GetPoliticalStrength|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc]"
 POP_SUPPORTERS_POL_STR: "#header [concept_political_strength]#!\nValue: #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc][AddTextIf(Not(StringIsEmpty(Pop.GetPoliticalStrengthDesc)), '\n\n')]"
 POP_POPULATION:1 "#header [Concept('concept_pop','$concept_population$')] of [Pop.GetName] in [Pop.GetState.GetName]#!\n$POP_SIZE_BREAKDOWN$\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]\n[ConcatIfNeitherEmpty('\n',Pop.GetPopAssimilationDesc)][ConcatIfNeitherEmpty('\n',Pop.GetPopConversionDesc)]   $TOOLTIP_DELIMITER$\n[Pop.GetWorkforceRatioDesc]"
 POP_SIZE_BREAKDOWN:0 "Total: #variable [Pop.GetTotalSize|Dv]#!\n$TAB$Workforce: #variable [Pop.GetNumWorkforce|Dv]#!\n$TAB$Dependents: #variable [Pop.GetDependentsSize|Dv]#!"
 WORKFORCE_RATIO_DESC:0 "#variable $VAL|%1$#! of this Pop is in the Workforce while the rest are Dependents. Over time this ratio will approach #variable $TARGET_VAL|%1$#! due to:\n$BREAKDOWN$"
 TARGET_WORKFORCE_RATIO_BASE_FOR_TYPE:0 "Base value for #variable $POP_TYPE$#!: #variable $VAL|%1$#!"

 CHANGE_SPEED_TOOLTIP_1:0 "Change the speed to 1"
 CHANGE_SPEED_TOOLTIP_2:0 "Change the speed to 2"
 CHANGE_SPEED_TOOLTIP_3:0 "Change the speed to 3"
 CHANGE_SPEED_TOOLTIP_4:0 "Change the speed to 4"
 CHANGE_SPEED_TOOLTIP_5:0 "Change the speed to 5"

 POP_WORKFORCE_TOOLTIP:0 "#header Workforce#!\nValue: #variable [Pop.GetNumWorkforce|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_pop_qualifications]\n[Pop.GetQualificationsDesc]\n$TOOLTIP_DELIMITER$\n[concept_working_adults_desc]"
 POP_DEPENDENTS_TOOLTIP:0 "#header Dependents#!\nValue: #variable [Pop.GetDependentsSize|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 DEPENDENT_WAGE_SOURCES:0 "from $BREAKDOWN$"
 DEPENDENT_WAGE_SOURCE_ODD_JOBS:0 "odd jobs"
 DEPENDENT_WAGES_TOOLTIP:1 "#header Dependent Wages: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|=+D$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEPENDENT_BASE_WAGES:0 "Base: [GetPlayer.GetCustom('currency_symbol')]$VAL|0v$ ([GetPlayer.GetCustom('currency_symbol')]$PERPOP|3v$ per Dependent)"

 POP_POPULATION_GROWTH:0 "#tooltip_header Population Growth#!\nYearly Population Change: #variable [Pop.GetPopGrowth|+=0]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]"
 POP_POPULATION_LITERACY:0 "#header Literacy#!\n[Pop.GetLiteracyDesc]"
 POP_BUILDING_SHARES:0 "[concept_ownership_share]: #v $SHARE|%1$#!"
 POP_DISCRIMINATION_STATUS_DISCRIMINATED:0 "$concept_discriminated$"
 POP_DISCRIMINATION_STATUS_ACCEPTED:0 "Accepted"

 TURMOIL_TITLE:0 "#title [concept_turmoil]#!"
 TURMOIL_ENTRY_TITLE:0 "#title [concept_turmoil]:#!"
 NET_INCOME_TITLE:0 "#title Net Income#!"
 PRODUCTION_NO_CONCEPT:0 "Production"

 STATISTICS:0 "Statistics"
 TURMOIL:0 "Turmoil:"
 MIGRATION_TARGETS:0 "Migration Targets:"
 CULTURAL_TRAITS:0 "Cultural Traits:"
 CULTURE_OBSESSIONS:0 "Obsessions:"
 CULTURE_TABOOS:0 "Taboos:"
 RELIGIONS: "$concept_religions$:"
 HOMELANDS:0 "Homelands"
 OWNER:0 "Owner"
 CULTURE_OF_SAME_HERITAGE:0 "Cultures of the same Heritage ([GetDataModelSize(Culture.AccessSameHeritageCultures)])"
 TURMOIL_OF_CULTURE:0 "Average [concept_turmoil] of all the [Concept('concept_pop', '$concept_pops$')] of this Culture"

 ACCEPTANCE_IN_PLAYER_COUNTRY: "$concept_acceptance$ in [GetPlayer.GetNameNoFormatting]"


 POP_NEEDS_ENTRY_DEFAULT:1 "[Goods.GetName] - Default [Concept('concept_good', '$concept_goods$')] for [PopNeed.GetNameNoFormatting]"
 POP_NEEDS_ENTRY:1 "[Goods.GetName] - Equivalent to $MULT|2v$ unit(s) of [PopNeed.GetDefaultGoods.GetName]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_SPECIFIC:0 "Consumed by [Concept('concept_pop', '$concept_pops$')] of [concept_wealth] Levels $LEVEL|v$"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_TO_LEVEL:0 "Consumed by [Concept('concept_pop', '$concept_pops$')] of [concept_wealth] Level $LEVEL|v$ and below"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_FROM_LEVEL:0 "Consumed by [Concept('concept_pop', '$concept_pops$')] of [concept_wealth] Level $LEVEL|v$ and above"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_BETWEEN_LEVELS:0 "Consumed by [Concept('concept_pop', '$concept_pops$')] between [concept_wealth] Levels $FROM|v$ to $TO|v$"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_ALL:0 "Consumed by [Concept('concept_pop', '$concept_pops$')] of all [concept_wealth] Levels"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_NONE:0 "Not consumed by any [Concept('concept_pop', '$concept_pops$')]"
 POPNEED_SUMMARY_DESC: "#tooltippable #tooltip:$TAG$,POPNEED_EXPENSES_TOOLTIP [GetPlayer.GetCustom('currency_symbol')][PopNeed.CalcTotalCost|Dv]#!#! - [PopNeed.GetName]"
 POPNEED_DETAILS_DESC:0 "$CONSUMPTIONDESC$\n\n$GOODSDESC$"
 POPNEED_EXPENSES_DESC:0 "Current [PopNeed.GetNameNoFormatting] expenses for [POP.GetTotalSize|Kv] [POP.GetCulture.GetName] [POP.GetPopType.GetName] in [POP.GetState.GetName]:\n$CONTENTS$\nTotal Cost: [GetPlayer.GetCustom('currency_symbol')][PopNeed.CalcTotalCost|Dv]"
 POPNEED_DETAILS_TOOLTIP:0 "[PopNeed.GetDetailsDesc]"
 POPNEED_EXPENSES_TOOLTIP:0 "[PopNeed.GetExpensesDesc]"
 BUY_PACKAGE_POP_NEEDS_ENTRY:1 "[Goods.GetTextIcon][Nbsp][Goods.GetName]$CULTURESTATUSDESC$\n#bold $AMOUNT|vD$#! ($AMOUNT_PERCENT|1v%$ of the amount)\n#variable [GetPlayer.GetCustom('currency_symbol')]$GOODS_TOTAL_COST|D$#! ([Goods.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )]) ($GOODS_COST_PERCENT|1v%$ of the cost)\n\n"
 BUY_PACKAGE_GOOD_CULTURE_TABOO:0 " ([concept_taboo])"
 BUY_PACKAGE_GOOD_CULTURE_OBSESSION:0 " ([concept_obsession])"
 POPNEED_USAGE_DESC: "Consumed by [Concept('concept_pop', '$concept_pops$')] of $WEALTHDESC$ ([PopNeed.GetName] [Concept('concept_pop_needs','$concept_pop_needs_short$')])"
 POPNEED_USAGE_WEALTH_SPECIFIC:0 "[concept_wealth] Level $LEVEL|v$"
 POPNEED_USAGE_WEALTH_BETWEEN_LEVELS:0 "[concept_wealth] Levels $FROM|v$ to $TO|v$"
 POPNEED_USAGE_WEALTH_ALL:0 "All [concept_wealth] Levels"
 POPNEED_USAGE_WEALTH_NONE:0 "No [concept_wealth] Levels"

 BUY_PACKAGE_CONTENT_ENTRY_WITH_COSTS:1 "#bold $AMOUNT|vD$#! [Goods.GetTextIcon][Nbsp][Goods.GetName] - #variable [GetPlayer.GetCustom('currency_symbol')]$GOODS_TOTAL_COST|D$#! ([GOODS.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )])"
 TOOLTIP_QOL_BUY_PACKAGE:0 "#header [concept_sol]#!\nIs currently #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetCurrentStandardOfLiving)]#! (#V [EmployeeStats.GetCurrentStandardOfLiving]#!)\nExpecting to be #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetExpectedStandardOfLiving)]#! (#V [EmployeeStats.GetExpectedStandardOfLiving]#!)"

 BUILDINGS_OWNED: "Property Portfolio"
 BUILDING: "Building"
 OWNED: "Levels Owned"
 DIVIDENDS: "Dividends"
 OWNERS: "Owners"

 IN_TOTAL:0 "in Total"
 POP_WEEKLY_INCOME:0 "#bold Weekly Income: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_EXPENSES:0 "#bold Weekly Expenses: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_MONEY:0 "#bold Weekly Money: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_wage:0 "Wages: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!\n$TAB$#indent_newline:3 [POP.GetWageDiscriminationDesc]#!"
 POP_WEEKLY_dependent_production:0 "Dependent Wages: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_dividends:0 "Dividends: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_interest:0 "Interest: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_diplomatic_pacts: "[concept_budget_diplomatic_pacts]: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_welfare:1 "[concept_welfare_payments]: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_income_taxes:0 "Income Taxes: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 POP_WEEKLY_needs:1 "[Concept('concept_pop_needs','$concept_pop_needs_short$')]: #tooltippable #tooltip:[Pop.GetTooltipTag],NEEDS_BREAKDOWN #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!#!#!"
 POP_WEEKLY_losses:0 "Investment Losses: #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|+=D$#!"
 TOOLTIP_WEALTH:1 "#header Wealth#!\nLevel [Pop.GetCurrentWealth|v] [Concept('concept_pop_needs','$concept_pop_needs_short$')]\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 TOOLTIP_WEALTH_SLAVE:1 "#header Wealth#!\nSlave upkeep is satisfying this Slave [concept_pop]'s [Concept('concept_pop_needs','$concept_pop_needs_short$')] to Level [Pop.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n#bold Slave Upkeep Breakdown:#!\n[Pop.GetNeedsDesc]"
 TOOLTIP_WEALTH_SUBSISTENCE:3 "#header Wealth#!\nTheir [concept_subsistence_output] of [GetPlayer.GetCustom('currency_symbol')][Pop.GetAverageAnnualWage|Dv] and annual [concept_budget_poll_taxes] of [GetPlayer.GetCustom('currency_symbol')][Pop.CalcAnnualPollTaxAmount|Dv] is satisfying the [GetPopType('peasants').GetName]' [Concept('concept_pop_needs','$concept_pop_needs_short$')] equivalent to Level [Pop.GetCurrentWealth|v]\n\nA [concept_building] that wants to hire from this [concept_pop] will need to offer a wage of at least [GetPlayer.GetCustom('currency_symbol')][Pop.GetWageRequiredToHireFrom|Dv]."
 TOOLTIP_POP_NET_INCOME:1 "#header Net [Concept('concept_pop_income','$concept_pop_income_short$')]#!\n#variable [GetPlayer.GetCustom('currency_symbol')][Subtract_CFixedPoint(Pop.GetIncome, Pop.GetExpenses)|+=D]#!\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 POP_NET_INCOME:0 "[Pop.GetIncomeExpensesBalanceDesc]\nProgress towards next Wealth level: #v [Pop.GetWealthProgression|+=%0]#!\n\nAnnual Income per Working Adult: [GetPlayer.GetCustom('currency_symbol')][Pop.GetAverageAnnualWage|Dv]"
 POP_MONEY_BALANCE:1 "$INCOME$\n$EXPENSES$"
 POP_ECONOMY_WEEKLY_INCOME:0 "#title Weekly $concept_pop_income$#!"
 POP_ECONOMY_WEEKLY_EXPENSES:0 "#title Weekly $concept_pop_income_expenses$#!"
 POP_GOODS_CONSUMPTION_TOOLTIP_HEADER:0 "[PopConsumptionGoods.GetGoods.GetNameNoFormatting] $concept_good_consumption$"
 POP_GOODS_BUDGET_EXPENDITURE_PERCENTAGE:0 "#header [Goods.GetTextIcon] [Goods.GetName] Expenditure Percentage#!\n#v [PopConsumptionGoods.GetConsumptionRatio|1%v]#! of this [Concept('concept_pop','$concept_pop_possessive$')] budget is spent on [Goods.GetName].\nPart of the [PopConsumptionGoods.GetPopNeedsDesc] [concept_pop_needs]."
 POP_GOODS_AMOUNT_CONSUMED:0 "Amount of [Goods.GetTextIcon] [Goods.GetName] [Concept('concept_good_consumption','$concept_good_consumed$')] by [Pop.GetName]"
 POP_LIST_SOL:0 "#variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#!  ([Pop.GetCurrentStandardOfLiving|v])"
 NEEDS_BREAKDOWN:0 "#header [concept_pop_needs]#!\n[Pop.GetNeedsDesc]"
 AVG_WAGE_POP_LIST:0 "Avg. Annual Wage: [GetPlayer.GetCustom('currency_symbol')][PopListItem.GetAverageAnnualWage|vD]"
 AVG_WAGE_SUBSISTENCE_POP_LIST:0 "[concept_subsistence_output]: [GetPlayer.GetCustom('currency_symbol')][PopListItem.GetAverageAnnualWage|vD]"
 TOOLTIP_POP_QOL_TURMOIL:0 "\nLow [concept_sol] increases [concept_turmoil_target] by #variable $VAL|-=D$ #!"
 TOOLTIP_POP_QOL:2 "#header [concept_sol]#!\nCurrent: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v])\nMinimum Expected: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)]#! #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL ([Pop.GetExpectedStandardOfLiving|v])#!#!\n[concept_sol] affects Pop Growth rate, which is currently #tooltippable #tooltip:[Pop.GetTooltipTag],GROWTH_RATE_BREAKDOWN [Pop.GetNetGrowthRate|%=+]#!#!\nIf [concept_sol] is below the Minimum Expected, this [concept_pop] will become more [concept_radical] over time\n$TOOLTIP_DELIMITER$\nThis Pops [concept_sol] of #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v]) is due to:\n$TAB$Wealth: #variable #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_WEALTH [Pop.GetCurrentWealth]#!#!#!\n[Pop.GetCurrentSoLModifiersDesc]\n[Pop.GetAdditionalSOLFactorsDesc]"
 JOB_SATISFACTION_ITEM: "[concept_job_satisfaction]: [SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|0+]#!#!)"
 LABEL_JOB_SATISFACTION: "[SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] ([Pop.GetCurrentJobSatisfaction|0+])"
 JOB_SATISFACTION_LOOKING_FOR_JOB: "Looking for better [concept_employment]"
 JOB_SATISFACTION_NOT_LOOKING_FOR_JOB: "Satisfied"
 TOOLTIP_JOB_SATISFACTION: "#header [concept_job_satisfaction]#!\nCurrently: $LABEL_JOB_SATISFACTION$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), 'TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME', 'TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING')]\n[Pop.GetNextJobSatisfactionDesc]"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME: "This is due to:"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING: "This will soon update to [Pop.GetNextJobSatisfaction|0+] due to:"
 JOB_SATISFACTION_BASE: "$VALUE|0+=$ from Base dissatisfaction"
 JOB_SATISFACTION_FOR_NEWLY_HIRED: "$VALUE|0+=$ because the [concept_pop] has just been hired"
 JOB_SATISFACTION_PER_SOL_ABOVE_EXPECTED_SOL: "$VALUE|0+=$ from the difference between current (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) and [Concept('concept_expected_sol', '$concept_expected_sol_short$')] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)] ([Pop.GetExpectedStandardOfLiving|v])#!#!) [concept_sol]"
 JOB_SATISFACTION_PER_SOL_ABOVE_COUNTRY_STRATA_SOL: "$VALUE|0+=$ from the difference between current (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) and average [concept_sol] in [Pop.GetCountry.GetName] for [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_SOL_ABOVE_STATE_STRATA_SOL: "$VALUE|0+=$ from the difference between current (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) and average [concept_sol] in [Pop.GetState.GetName] for [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_PERCENT_WAGE_RATE_ABOVE_NORMAL: "$VALUE|0+=$ from the relative difference of #variable $DIFF|1$%#! between [concept_building_wage] in [Pop.GetBuilding.GetName] ([GetPlayer.GetCustom('currency_symbol')]$WORKPLACE_WAGE_RATE|v1$) and [Pop.GetCountry.GetName] ([GetPlayer.GetCustom('currency_symbol')]$NORMAL_WAGE_RATE|v1$)"
 JOB_SATISFACTION_DIVIDENDS: "$VALUE|0+=$ from the ratio of #variable $DIVIDENDS_WAGES_RATIO|0$%#! between earned [concept_dividends] ([GetPlayer.GetCustom('currency_symbol')]$POP_DIVIDENDS|v1$) and [concept_budget_wages] ([GetPlayer.GetCustom('currency_symbol')]$POP_WAGES|v1$)"
 JOB_SATISFACTION_LOSSES: "$VALUE|0+=$ from the ratio of #variable $LOSSES_WAGES_RATIO|0$%#! between investment losses ([GetPlayer.GetCustom('currency_symbol')]$POP_LOSSES|v1$) and [concept_budget_wages] ([GetPlayer.GetCustom('currency_symbol')]$POP_WAGES|v1$)"
 JOB_SATISFACTION_FROM_CAN_AFFORD_EXPENSES: "$VALUE|0+=$ because the [concept_pop] can afford its [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )] ([GetPlayer.GetCustom('currency_symbol')]$EXPENSES|v1$) with its current [Concept( 'concept_pop_income', '$concept_pop_income_short$')] ([GetPlayer.GetCustom('currency_symbol')]$INCOME|v1$)"
 JOB_SATISFACTION_FROM_CAN_BARELY_AFFORD_EXPENSES: "$VALUE|0+=$ because the [concept_pop] can barely afford its [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )]"
 JOB_SATISFACTION_FROM_CANNOT_AFFORD_EXPENSES: "$VALUE|0+=$ because the [concept_pop] cannot afford its [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )] ([GetPlayer.GetCustom('currency_symbol')]$EXPENSES|v1$) with its current [Concept( 'concept_pop_income', '$concept_pop_income_short$')] ([GetPlayer.GetCustom('currency_symbol')]$INCOME|v1$)"
 JOB_SATISFACTION_PER_PERCENT_HIGHER_STRATA_QUALIFICATION: "$VALUE|0+=$ from being $RATIO|%v1$ [Concept('concept_pop_qualifications', '$concept_qualified$')] for a higher strata than [Pop.GetSocialClass.GetStrataConcept]"
 JOB_SATISFACTION_FROM_EMPLOYMENT: "$VALUE|0+=$ from being [Concept('concept_employment' ,'$concept_employed$')]"
 JOB_SATISFACTION_GOVERNMENT: "$VALUE|0+=$ from collecting a government salary"
 GROWTH_RATE_BREAKDOWN:0 "#header Growth Rate#!\n[Pop.GetPopGrowthDesc]"
 TOOLTIP_POP_EXPECTED_SOL:0 "#header Minimum Expected [concept_sol]#!\nTotal: [Pop.GetExpectedStandardOfLiving]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingDesc]"
 EXPECTED_SOL_FROM_LITERACY:0 "From [concept_literacy]: #tooltippable #tooltip:[Pop.GetTooltipTag],EXPECTED_SOL_FROM_LITERACY_BREAKDOWN #v $VALUE|=$#!#!#!"
 EXPECTED_SOL_FROM_LITERACY_BREAKDOWN:0 "#header Minimum Expected [concept_sol] from [concept_literacy]#!\nTotal: [Pop.GetExpectedStandardOfLivingFromLiteracy]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingFromLiteracyDesc]"
 MODIFIED_BY_LITERACY_RATE:0 "Modified by #v ×$LITERACY_RATE|2$#! due to [concept_literacy]"
 MODIFIED_BY_SUBSISTENCE_EMPLOYMENT:0 "Multiplied by #v x$MULTIPLIER$#! due to employment in a [concept_subsistence_building]"

 SOL_FACTOR_TAXES:2 "They pay an average of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TAX_BURDEN|%1$#!#!#! of their income in [concept_taxes], reducing their available money for [concept_pop_needs]"
 SOL_FACTOR_MODIFIERS:3 "The [concept_sol] of them is changed by #v $VALUE|1=+$#! due to modifiers"
 SOL_FACTOR_NO_MODIFIERS:2 "They are currently not affected by any [concept_sol] modifiers"
 SOL_FACTOR_GOODS:2 "They pay an average of #v #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#! #tooltippable #tooltip:$BREAKDOWN_TAG$ $RELATIVE_PRICE|=-%1$#!#!#! compared to [concept_base_price] for their [concept_pop_needs]. $GOODS_BREAKDOWN_SHORT_SUMMARY$"
 SOL_FACTOR_SLAVES:1 "$POP_FRACTION|%1v$ of them are [Concept('concept_slavery', '$concept_enslaved$')], forcing them into a very low [concept_sol]"
 SOL_FACTOR_PEASANTS:1 "$POP_FRACTION|%1v$ of them are [GetPopType('peasants').GetName] in [Concept('concept_subsistence_building', '$concept_subsistence_buildings$')], limiting them to a low [concept_sol]"
 SOL_FACTOR_TAX_ENTRY:0 "$TAX_LEVEL|%1v$ of income paid in $TAX_TYPE$"
 SOL_FACTOR_GOODS_ENTRY:2 "$RELATIVE_EXPENDITURES|v1%$ - [Goods.GetTextIcon][Nbsp][Goods.GetName] - [GetPlayer.GetCustom('currency_symbol')]$PRICE|v1$ #tooltippable #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#!#! ($RELATIVE_PRICE|=-%1$)"
 SOL_FACTOR_GOODS_ENTRY_SHORT:0 "[Goods.GetTextIcon][Nbsp][Goods.GetName] ($RELATIVE_EXPENDITURES|v1%$)"
 SOL_FACTOR_GOODS_BREAKDOWN_SHORT_SUMMARY:0 "Their largest expenses are $SUMMARY_LIST$."
 SOL_FACTOR_GOODS_BREAKDOWN:0 "#header [concept_pop_needs]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 SOL_FACTOR_TAX_BREAKDOWN:0 "#header [Concept('concept_taxes','$concept_taxation$')]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"

 EXPECTED_SOL_FACTOR_STRATA:1 "$FRACTION|%1v$ of them are $STRATA|v$: $VALUE|=v$"
 EXPECTED_SOL_FACTOR_LITERACY:1 "They have an average of $LITERACY|%0v$ [concept_literacy]: $VALUE|=v$"

 SOL_BELOW_EXPECTED:1 "@warning! $TOTAL|vD$ ($FRACTION|%1v$) of them have a [concept_sol] below the $EXPECTED_SOL_SHORT$ and will become more [concept_radical] over time"

 SOL_WELFARE:1 "$TOTAL|vD$ ($FRACTION|%1v$) of them are receiving [concept_welfare_payments], raising their [concept_sol]"

 TOOLTIP_SOL_MODIFIERS:0 "$BREAKDOWN$"
 POP_DETAILS_TITLE:0 "#bold Pop Details#!"

 POP_DETAILS_IG:0 "\n#instruction Click#! to go to #variable [Pop.GetLargestInterestGroup.GetName]#!"

 FOOD_SECURITY_LABEL_SECURED: "#g Secured#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_MODERATE: "#v Moderate#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_STARVATION: "#r Low#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_SEVERE_STARVATION: "#r Severe#! ($VAL|%0v$)"
 POP_NEED_COST_SHARE: "$VAL|%1-$ of Pop's budget spent on #v $popneed_basic_food$#!:\n$TAB$Total cost: [GetPlayer.GetCustom('currency_symbol')]$COST|v$\n$TAB$Base cost of the buy package:[GetPlayer.GetCustom('currency_symbol')]$BASE_COST|v$"
 STATE_SHORTAGE_SEVERITY: "$VAL|%1-$ Shortage severity in [State.GetName]:\n$TAB$$SELL|v$ [concept_sell_orders]\n$TAB$$BUY|v$ [concept_buy_orders]"
 POP_FOOD_SECURITY_HIGH: "#header Pop [concept_food_security]#!:\nCurrently: $VAL|%1+$"
 POP_FOOD_SECURITY: "#header Pop [concept_food_security]#!:\nCurrently: $VAL|%1v$\n$TOOLTIP_DELIMITER$\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$' )]"
 POP_FOOD_SECURITY_LOW: "#header Pop [concept_food_security]#!\nCurrently: $VAL|%1-$\n$TOOLTIP_DELIMITER$\nThis is due to:\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$' )][ConcatIfNeitherEmpty('\n\n', Pop.GetStarvationEffectDesc)]"
 POP_STARVATION_EFFECT: "This pop is suffering from #r Starvation#!:\n$DESC$"
 POP_SEVERE_STARVATION_EFFECT: "This pop is suffering from #r Severe Starvation#!:\n$DESC$"

 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP: "#header All [Concept('concept_state', '$concept_states$')] in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n@population! [FoodSecurity.GetNumPopsTotal|D0v] total [Concept('concept_pop', '$concept_population$')]\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) in [Concept('concept_starvation', '$concept_mild_starvation$')]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) in [Concept('concept_starvation', '$concept_severe_starvation$')]"
 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP_SELECTED: "#header All [Concept('concept_state', '$concept_states$')] in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#! #i (Currently Active Filter)#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n@population! [FoodSecurity.GetNumPopsTotal|D0v] total [Concept('concept_pop', '$concept_population$')]\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) in [Concept('concept_starvation', '$concept_mild_starvation$')]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) in [Concept('concept_starvation', '$concept_severe_starvation$')]"
 NUMBER_OF_STATES_WITH_FAMINE: "@warning! #v [FoodSecurity.GetNumStatesWithFamineRaw]#! $concept_states$ has an ongoing [concept_famine] at this moment"

 STATE_FOOD_SECURITY: "[Concept('concept_starvation', '$concept_starving$')] [Concept('concept_pop', '$concept_population$')]\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-])"
 STATE_FOOD_SECURITY_TOOLTIP: "#header [concept_starvation] in [State.GetCountry.GetFlagTextIcon] [State.GetName]#!\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) [Concept('concept_pop', '$concept_pops$')] are $concept_starving$\n$TOOLTIP_DELIMITER$\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0-]) are in $concept_mild_starvation$\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0-]) are in $concept_severe_starvation$[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(State.HasFamine, State.GetFamineDesc))]"
 
 STATE_FOOD_SECURITY_MAP_TOOLTIP: "[SelectLocalization(State.HasFamine,State.GetFamineDesc,'STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE')]"
 STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE: "#header [concept_starvation] in [State.GetCountry.GetFlagTextIcon] [State.GetName]#!\n$STATE_STARVATION_NUMBERS$"
 STATE_STARVATION_NUMBERS: "#title [State.GetFoodSecurity.GetNumStarvingPops|D0-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) [Concept('concept_pop', '$concept_pops$')] are [SelectLocalization(State.HasFamine,Concept('concept_starvation','$concept_starving$'),'$concept_starving$')]:#!\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|Dv] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0v]) are in $concept_mild_starvation$\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|-D0] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0r]) are in $concept_severe_starvation$"
 FAMINE_DESC: "#header [concept_famine] in [State.GetCountry.GetFlagTextIcon] [State.GetName]#!\nStarted $START_DATE|v$ ($DURATION|v$)\n$TOOLTIP_DELIMITER$\n$STATE_STARVATION_NUMBERS$\n\n#title In these $DURATION|v$ the $concept_famine$ has led to:#!\n$DEATHS|D-$ Deaths\n$BIRTHS|D+$ Unrealized Births\n\n#title A $concept_famine$ is declared in a $concept_state$ if both of these conditions are fulfilled:#!\n@green_checkmark_box! at least #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_STARVATION')|0%]#!#! of the $concept_population$ is $concept_starving$\n@green_checkmark_box! at least #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_SEVERE_STARVATION')|%0]#!#! is in $concept_severe_starvation$." 

 HARVEST_CONDITIONS_MAP_TOOLTIP: "#header [State.GetCountry.GetFlagTextIcon] [State.GetName]#!\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]:#!#indent_newline:3 \n$BREAKDOWN$#!"
 HARVEST_CONDITIONS_MAP_TOOLTIP_BREAKDOWN_ENTRY: "[HarvestCondition.GetName]: $INTENSITY|v$ [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')]"
 HARVEST_CONDITIONS_MAP_TOOLTIP_NO_CONDITIONS: "#header [State.GetCountry.GetFlagTextIcon] [State.GetName]#!\nNo [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 HARVEST_CONDITION_SORT_HEADER_INTENSITY: "$concept_harvest_condition_intensity_short$ ([GetDefine( 'NEconomy', 'HARVEST_CONDITION_MIN_INTENSITY' )]-[GetDefine( 'NEconomy', 'HARVEST_CONDITION_MAX_INTENSITY' )])#!"

 HARVEST_CONDITION_AREA_NAME_IN_STATE_REGION: "[HarvestConditionArea.GetName] in [HarvestConditionArea.GetEpicenterRegion.GetName]"

 EMPLOYEE_POPS_LIST:0 "$RELIGION$ $CULTURE$ $TYPE$: $SIZE$"

 CONDITIONS_NOT_SATISFIED:1 "Following conditions prevent this action:"

 CREATE_MARKET:0 "#BOLD Create [concept_market] in #V $STATE$#!#!"
 MERGE_MARKET:0 "Link [STATE.GetName] to #V [MARKET.GetName]#!"
 SPLIT_MARKET:0 "Unlink [STATE.GetName] from #V [MARKET.GetName]#!"
 CANNOT_BUILD_BUILDING:0 "#BOLD #N Cannot $BUILD_OR_EXPAND$ #V [BUILDING_TYPE.GetName]#! in [STATE.GetName]!#!#!"
 CANNOT_BUILD_MARKET:0 "#BOLD #N Cannot build #V Market#! here!#!#!"
 CANNOT_MERGE_MARKET:0 "#BOLD #N Cannot link #V Market#! here!#!#!"
 CANNOT_MERGE_MARKET_STATE:0 "#BOLD #N Cannot link to #V [MARKET.GetName]#! market#!#!"
 CANNOT_SPLIT_MARKET_STATE:0 "#BOLD #N Cannot unlink from #V [MARKET.GetName]#! market#!#!"

 CANNOT_ESTABLISH_TRADE_ROUTE:0 "#BOLD #N Cannot establish #V [concept_trade_route]#! here!#!#!"

 AND_X_MORE_NEEDS: "+[Subtract_int32(GetDataModelSize(Pop.GetGoodsConsumption), GetDataModelSize(Pop.GetTopGoodsConsumption))]"

 ACTIVE: "Active"
 INACTIVE:0 "Inactive"
 INACTIVE_TRADE_ROUTES:1 "Your Inactive [Concept('concept_trade_route', '$concept_trade_routes$')]"
 UNPRODUCTIVE_TRADE_ROUTES:0 "Your Unproductive [Concept('concept_trade_route', '$concept_trade_routes$')]"

 CONSTRUCTION_SECTOR_INPUT_FACTOR:0 "Multiplied by #v x$MULT$#! due to unused [concept_construction]"
 CONSTRUCTION_BREAKDOWN:1 "#header [concept_construction]: $CONSTRUCTION_SPEED$#! / week\n$TOOLTIP_DELIMITER$\n#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $BASE_CONSTRUCTION$#!#!#! [concept_construction] provided by [Country.GetName][ConcatIfNeitherEmpty('\n\n','$CAPPEDDESC$')][ConcatIfNeitherEmpty('\n\n','$MODIFIERDESC$')]"
 CONSTRUCTION_MODIFIER_HEADER:0 "Efficiency of weekly [concept_construction] in [State.GetName] is modified by:\n$MODIFIER_BREAKDOWN$"
 CONSTRUCTION_CAPPED_DESC:0 "Progress of [BuildingType.GetName] is capped at #v $MAXPOINTS$#! [concept_construction] / week"

 CAN_EXPAND_BUILDING_PRODUCTIVITY_DELTA: " ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY_DELTA|=+1$ from current)"
 CAN_EXPAND_BUILDING_PRODUCTIVITY_DESC: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PRODUCTIVITY_IMPACT_DESC$')] #v [GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY_IMPACT$#!#!#! Predicted [concept_productivity]$PRODUCTIVITY_DELTA_DESC$"
 CAN_EXPAND_BUILDING_TOOLTIP: "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] in [STATE.GetName]#! (Size: [BUILDING.GetExpansionLevelBreakdownDesc])\n[AddLocalizationIf( Not(STATE.GetOwner.IsLocalPlayer), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN' )]#tooltippable #tooltip:[GetRawTextTooltipTag('$PROFIT_IMPACT_DESC$')] #v [GetPlayer.GetCustom('currency_symbol')]$PROFIT_IMPACT|K+=$#!#!#! Predicted [SelectLocalization(Or(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), BUILDING.GetBuildingType.IsMilitaryBuilding), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] / week\n[ConcatIfNeitherEmpty('$PRODUCTIVITY$', '\n')][ConcatIfNeitherEmpty('$QUALIFICATIONS$', '\n')][SelectLocalization( LessThan_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING', '')]$TOOLTIP_DELIMITER$\n@construction! $REQUIRED_CONSTRUCTION|v0$ [concept_construction] ($CONSTRUCTION_COST_CHANGE$)\n$EXPAND_BUILDING_TT_NATIONAL_MAINTENANCE$\n\n$PRODUCTION_BREAKDOWN$\n\n[STATE.GetMarketAccessStatus]\nAvailable Labor: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] [SelectLocalization( GreaterThan_int64(State.GetNumUnemployedWorkingAdults, '(int64)0'), 'AND_UNEMPLOYED', '' )][ConcatIfNeitherEmpty('$PORT_INFO$', '\n')]\n\n$KEY_MODIFIER_INSTRUCTIONS$"

 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN:  "@foreign_investment![concept_foreign_investment] in [State.GetOwner.GetName][AddLocalizationIf( Not( ObjectsEqual(State.GetMarket.Self, AccessPlayer.AccessFirstMarket.Self)), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET' )]\n\n"
 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET: " (Foreign Market: [State.GetMarket.GetName])"


 AND_UNEMPLOYED:0 "and [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed]"
 MILITARY_BUILDING_INFO: "HQ: [State.GetStateRegion.GetStrategicRegion.GetName]\n"

 CONSTRUCTION_CAN_BE_FUNDED_BY_INVESTMENT_POOL:1 "[concept_budget_construction_goods] #P #bold can#!#! be funded by the [concept_investment_pool] (currently #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPool|D+]#!)"
 CONSTRUCTION_TOTAL_COST_IMPACT:1 "#v [GetPlayer.GetCustom('currency_symbol')]$COST|K-$#! predicted total cost in [concept_budget_construction_goods]"
 CONSTRUCTION_WEEKLY_COST_IMPACT:2 "#v [GetPlayer.GetCustom('currency_symbol')]$COST|K-=$#! weekly [concept_budget_construction_goods] cost"

 EXPAND_TOOLTIP_EXPAND_BUILD:0 "Build"
 EXPAND_TOOLTIP_EXPAND_EXPAND:0 "Expand"
 EXPAND_TOOLTIP_EXPAND:1 "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] in [STATE.GetName]#!\nSize: [BUILDING.GetExpansionLevelBreakdownDesc]\n[STATE.GetMarketAccessStatus]\nAvailable Labor: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] and [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed]"
 EXPAND_BUILDING_MODIFIERS_INSTRUCTIONS:2 "#instruction Click#! to #v queue 1#! level, #i $SHORTCUT_KEY_MOD_shift$Click#! for #v $SHIFT_NUM_LEVELS$#!, #i $SHORTCUT_KEY_MOD_ctrl$Click#! for #v $CTRL_NUM_LEVELS$#!\n#instruction $SHORTCUT_KEY_MOD_alt$Click#! to #v queue at the top#! of the [concept_construction_queue]"
 DOWNSIZE_BUILDING_MODIFIERS_INSTRUCTIONS:0 "#instruction Click to downsize 1 level#!\n#instruction $SHORTCUT_KEY_MOD_shift$Click to downsize $SHIFT_NUM_LEVELS$ levels#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to downsize $CTRL_NUM_LEVELS$ levels#!"
 EXPANSION_PROFIT_IMPACT:4 "#header Predicted [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] of new level#!\n#v [GetPlayer.GetCustom('currency_symbol')]$VAL|K+=$#! Predicted [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] / week\n(Excluding [Concept('concept_building_wage','$concept_building_wages$')])\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_PRODUCTIVITY_IMPACT:0 "#header Predicted $EARNINGS_PER_EMPLOYEE$ after Expansion#!: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|+$#!\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_EMPLOYEES_VS_REVENUE:1 "#v [GetPlayer.GetCustom('currency_symbol')]$REVENUE|K+$#! predicted Yearly Revenue\n#v $EMPLOYEES|vD$#! Total Employees"
 EXPANSION_WAGES_IMPACT:1 "#v [GetPlayer.GetCustom('currency_symbol')]$IMPACT|K+=$#! for Weekly Wages"
 GOODS_PROFIT_CONSUMPTION:4 "#v [GetPlayer.GetCustom('currency_symbol')][Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]#! for #v $NUM_UNITS|0-$#! [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_CONSUMPTION_AFTER_SUBSTITUTION:4 "#v [GetPlayer.GetCustom('currency_symbol')][Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]#! for #v $NUM_UNITS|0-$#! [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ after [concept_goods_substitution])"
 GOODS_PROFIT_PRODUCTION:4 "#v [GetPlayer.GetCustom('currency_symbol')]$IMPACT|K+=$#! from #v $NUM_UNITS|0=+$#! [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_PRODUCTION_AFTER_SUBSTITUTION:4 "#v [GetPlayer.GetCustom('currency_symbol')]$IMPACT|K+=$#! from #v $NUM_UNITS|0=+$#! [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ after [concept_goods_substitution])"
 NO_OPPOSITION:0 "#bold No [Concept('concept_interest_group', '$concept_interest_groups$')] in Opposition#!"
 NO_POLITICAL_MOVEMENTS:1 "No [Concept('concept_political_movement', '$concept_political_movements$')]"
 IG_NO_POLITICAL_MOVEMENT: "No supported [Concept('concept_political_movement', '$concept_political_movements$')]"
 NO_LAW_BEING_ENACTED:0 "No [concept_law] being enacted"
 NO_INTERESTS:0 "No [Concept('concept_interest', '$concept_interests$')]"
 NO_POLITICAL_LOBBIES: "No $concept_political_lobbies$"
 POLITICAL_LOBBIES: "Political Lobbies"

 CANNOT_EXPAND_BUILDING_NO_URBAN_CAP:0 "[BuildingType.GetName] requires [concept_urbanization]"
 CANNOT_EXPAND_BUILDING_NO_TRADE_ROUTES:0 "[BuildingType.GetName] requires [Concept('concept_trade_route', '$concept_trade_routes$')]"
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL:1 "[BuildingType.GetName] cannot be expanded beyond its maximum size of $VAL|v$"
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL_BREAKDOWN:0 ", which is due to:\n$BREAKDOWN$"
 CANNOT_EXPAND_BUILDING_NOT_EXPANDABLE:1 "[BuildingType.GetName] cannot be expanded past level 1 in [STATE_REGION.GetName]"
 CANNOT_EXPAND_BUILDING_NO_ARABLE_LAND:0 "[BuildingType.GetName] requires [concept_arable_land]"
 CANNOT_EXPAND_BUILDING_NO_RESOURCE:0 "Insufficient resource quantity in [State.GetName]"
 CANNOT_EXPAND_BUILDING_NOT_AVAILABLE_IN_STATE:0 "[STATE.GetName] cannot support [BUILDING_TYPE.GetName]"
 CANNOT_EXPAND_BUILDING_AT_REGION_MAX_CAP:1 "[BuildingType.GetName] is at maximum capacity in [STATE_REGION.GetName]"
 CANNOT_EXPAND_BUILDING_NOT_ACTIVE:0 "[BuildingType.GetName] is not active"
 CANNOT_EXPAND_BUILDING_NOT_BUILDABLE:0 "[BuildingType.GetName] cannot be manually constructed"
 CANNOT_EXPAND_BUILDING_NOT_OWNABLE:0 "[BuildingType.GetName] cannot be constructed in a foreign state"
 CANNOT_EXPAND_BUILDING_STATE_HAS_NO_ACCESS_TO_GOODS: "[State.GetName] has no [concept_supply] of [Goods.GetTextIcon][Nbsp][Goods.GetName] required for [CombatUnitType.GetName]"

 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS:0 "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag],EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Not enough#!#! [concept_pop_qualifications] to fully staff this building (Missing $POP_TYPES$)"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN:0 "#header Missing [concept_pop_qualifications]#!\n$TOOLTIP_DELIMITER$\n[Building.GetQueueConstructionPopQualificationsWarningBreakdown]"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY:2 "Only $AVAILABLE|v$ out of $REQUIRED|v$ employable [POP_TYPE.GetName] available, missing $MONTHS|v$ month(s) of [concept_pop_qualifications] at the current growth rate of $MONTHLY|=v$/month"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Only $AVAILABLE|v$ out of $REQUIRED|v$ employable [POP_TYPE.GetName] available with #n no current monthly growth#! of [concept_pop_qualifications]"

 CHANGE_PRODUCTION_METHOD_WARNING_ADDITIONAL_PM_CHANGED: "@warning! Will change the active $GROUP|v$ method ($DISABLED_METHOD$ @arrow_right! $ENABLED_METHOD$)"
 CHANGE_PRODUCTION_METHOD_WARNING_GOODS_SHORTAGE:0 "@warning! [Concept('concept_shortage','$concept_input_goods_shortage$')] of $LIST$ will result in a penalty on all [concept_building] outputs"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS:0 "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag]|[PRODUCTION_METHOD.GetTooltipTag],CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Not enough#!#! [concept_pop_qualifications] to fully staff [Building.GetName] (Missing $POP_TYPES$)"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN:0 "#header Missing [concept_pop_qualifications]#!\n$TOOLTIP_DELIMITER$\n[Building.GetChangeProductionMethodPopQualificationsWarningBreakdown(ProductionMethod.Self)]"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY:0 "Only $AVAILABLE|v$ out of $REQUIRED|v$ employable [Concept('concept_pop_qualifications', '$concept_qualifying$')] [POP_TYPE.GetName] available, missing $MONTHS|v$ month(s) of $concept_pop_qualifications$ at the current growth rate of $MONTHLY|=v$/month"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Only $AVAILABLE|v$ out of $REQUIRED|v$ employable [POP_TYPE.GetName] available with #n no current monthly growth#! of [concept_pop_qualifications]"

 CANNOT_JOIN_FOREIGN_MARKET:0 "No Economic System Law or Customs Unions permit joining the foreign [MARKET.GetName]"

 NO_STATE_TRAITS:0 "No State Traits"

  # MARKET is the market to merge
 MERGE_MARKET_INFO_TOOLTIP:0 "Merge #BOLD #V [MARKET.GetName]#!#! with another Market."
 MERGE_MARKET_NEGATIVE_INFO_TOOLTIP:0 "Cannot merge #BOLD #V [MARKET.GetName]#!#! with any other Market."
  # STATE is the selected state, MARKET the market to merge to
 MERGE_MARKETS_INFO_TOOLTIP:0 "Merge #BOLD #V [STATE.GetMarket.GetName]#!#! with #BOLD #V [MARKET.GetName]#!#!"
 MERGE_MARKETS_NEGATIVE_INFO_TOOLTIP:0 "Cannot merge #BOLD #V [STATE.GetMarket.GetName]#!#! with #BOLD #V [MARKET.GetName]#!#!!"

 RETARGET_LINK_TOOLTIP:0 "Disconnect Link in #BOLD #V [STATE.GetName]#!#! from #BOLD #V [STATE.GetMarket.GetName]#!#! and connect it to another Market."
 RETARGET_LINK_FAIL_TOOLTIP:0 "Cannot disconnect Link in #BOLD #V [STATE.GetName]#!#!."
 RETARGET_LINK_TO_TOOLTIP:0 "Disconnect Link in #BOLD #V [STATE.GetName]#!#! from #BOLD #V [STATE.GetMarket.GetName]#!#! and connect it to #BOLD #V [MARKET.GetName]#!#!."
 RETARGET_LINK_TO_FAIL_TOOLTIP:0 "Cannot re-target Link in #BOLD #V [STATE.GetName]#!#! to #BOLD #V [MARKET.GetName]#!#!"

 MARKET_CONTROLLER_TITLE:0 "#title Market Controller#!\n#bold [Market.GetOwner.GetName]#!"

 TOOLTIP_HOVER_STRATEGIC_REGION:0 "#V [STATE.GetName]#! (#V [STATE.GetCountry.GetName]#!)\n[concept_strategic_region]: #V $STRATEGIC_REGION$#!"

  #Budget panel
 BUDGET:0 "Budget"
 BUDGET_PANEL_TITLE:1 "#BOLD Budget#!"
 WEEKLY_BALANCE:0 "Weekly balance: [AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint]"
 BUDGET_TAB_OVERVIEW:0 "Overview"
 STATES:0 "States"
 BUDGET_TAB_ASSETS:0 "Assets"
 POOLS:0 "Pools"

 LAND_TAX:0 "[concept_budget_land_taxes]"
 HEATHEN_TAX:0 "[concept_budget_heathen_taxes]"
 PER_CAPITA_TAX:0 "[concept_budget_per_capita_taxes]"

 NATIONAL_REVENUE:0 "National Revenue"
 BUDGET_TAXATION_LEVEL:0 "[Concept('concept_taxes','$concept_tax_level$')]"
 BUDGET_INCOME_TAXES:0 "[concept_budget_income_taxes]"
 BUDGET_POLL_TAXES:0 "[concept_budget_poll_taxes]"
 BUDGET_CONSUMPTION_TAXES:0 "[concept_budget_consumption_taxes]"
 BUDGET_ADDITIONAL_INCOME:0 "[concept_budget_additional_income]"
 BUDGET_ADDITIONAL_EXPENSES:0 "[concept_budget_additional_expenses]"
 BUDGET_DIVIDENDS_TAXES:0 "[concept_budget_dividends_taxes]"
 BUDGET_MINTING:0 "[concept_budget_minting]"
 BUDGET_TARIFFS:0 "[concept_tariffs]"
 BUDGET_INVESTMENT_INCOME:0 "[concept_budget_investment_income]"
 BUDGET_DIPLOMATIC_PACTS:0 "[concept_budget_diplomatic_pacts]"
 NATIONAL_EXPENSES:0 "National Expenses"
 BUDGET_GOODS_FOR_GOVERNMENT_BUILDINGS:0 "[concept_budget_goods_for_government_buildings]"
 BUDGET_GOODS_FOR_MILITARY_BUILDINGS:0 "[concept_budget_goods_for_military_buildings]"
 BUDGET_GOVERNMENT_WAGES:0 "[concept_budget_government_wages]"
 BUDGET_MILITARY_WAGES:0 "[concept_budget_military_wages]"
 BUDGET_GOVERNMENT_SLAVES:0 "[concept_budget_government_slaves]"
 BUDGET_MILITARY_SLAVES:0 "[concept_budget_military_slaves]"
 BUDGET_SUBSIDIES:0 "[concept_subsidies]"
 BUDGET_WELFARE_PAYMENTS:0 "[concept_welfare_payments]"
 BUDGET_INTEREST:1 "[concept_budget_interest]"
 BUDGET_CONSTRUCTION_GOODS:0 "[concept_budget_construction_goods]"
 PAUSE_ALL_CONSTRUCTION_BUTTON:0 "Pause All"
 PAUSE_ALL_CONSTRUCTION_TOOLTIP_HEADER:0 "#header Pause all construction#!"
 RESUME_ALL_CONSTRUCTION_BUTTON:0 "Resume All"
 RESUME_ALL_CONSTRUCTION_TOOLTIP_HEADER:0 "#header Resume all construction#!"
 CHANGE_ALL_CONSTRUCTION_SPEED_TOOLTIP_HEADER:1 "#header Switch entire $building_construction_sector$ to [PRODUCTION_METHOD.GetName]#!"

 TAXES:0 "Taxes"
 EXPENSES:0 "Expenses"

 invalid_market:0 "Not a valid Market"

 diplomatic_play_invalid_state:0 "Invalid state region"

 set_decree_select_state_tooltip:0 "$NAME|v$ [concept_decree] in [STATE.GetName]"

 ESTABLISH_TRADE_ROUTE_UNMET_CONDITION_FORMAT:1 "@simple_box! $UNMET_CONDITION$"

 trade_route_import_lens_option:0 "Establish Import [concept_trade_route]"
 trade_route_import_lens_option_tooltip:0 "#header $trade_route_import_lens_option$#!\nEstablish a semi-permanent trade route between two markets, importing goods to a market you own or control ports in"
 trade_route_export_lens_option:0 "Establish Export [concept_trade_route]"
 trade_route_export_lens_option_tooltip:0 "#header $trade_route_export_lens_option$#!\nEstablish a semi-permanent trade route between two markets, exporting goods from a market you own or control ports in"
 establish_trade_route_behavior_select_acting_import_market_tooltip:0 "#header Import [GOODS.GetTextIcon] #v [GOODS.GetName]#! to [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$BUY_ORDERS$: $BUY|vD$\nMax Imports / Level: $BASE_TRADE|vD$\n$BREAKDOWN$"
 establish_trade_route_behavior_select_acting_export_market_tooltip:0 "#header Export [GOODS.GetTextIcon] #v [GOODS.GetName]#! from [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$SELL_ORDERS$: $SELL|vD$\nMax Exports / Level: $BASE_TRADE|vD$\n$BREAKDOWN$"
 establish_trade_route_behavior_select_other_import_market_tooltip:0 "#header Export [GOODS.GetTextIcon] #v [GOODS.GetName]#! to [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$\nSell Orders in [GOODS.GetMarket.GetName]: #variable $SELL|D$#!\n[concept_buy_orders] in [MARKET.GetName]: #variable $BUY|D$#!\nProjected Exports: $TRADE|vD$"
 establish_trade_route_behavior_select_other_export_market_tooltip:0 "#header Import [GOODS.GetTextIcon] #v [GOODS.GetName]#! from [MARKET.GetName] to [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\nSell Orders in [MARKET.GetName]: #variable $SELL|D$#!\n[concept_buy_orders] in [GOODS.GetMarket.GetName]: #variable $BUY|D$#!\nProjected Imports: $TRADE|vD$"
 establish_trade_route_insufficient_import_demand:0 "Market lacks significant demand"
 establish_trade_route_not_participant:0 "Not a participant in this market"
 establish_trade_route_insufficient_trade_routes:0 "No trade routes available"
 establish_trade_route_no_export_demand:0 "Market lacks net exports"
 establish_trade_route_not_importmarket_owner:0 "You do not control this market"
 establish_trade_route_already_exists:0 "Trade route for these Goods already exists"
 cancel_trade_route_not_importmarket_controller:0 "Not the importing market's controller"

 trade_route_import_lens_option_ammunition_tooltip:0 "Establish an $ammunition$ import trade route"
 trade_route_import_lens_option_small_arms_tooltip:0 "Establish a $small_arms$ import trade route"
 trade_route_import_lens_option_artillery_tooltip:0 "Establish an $artillery$ import trade route"
 trade_route_import_lens_option_radios_tooltip:0 "Establish a $radios$ import trade route"
 trade_route_import_lens_option_tanks_tooltip:0 "Establish a $tanks$ import trade route"
 trade_route_import_lens_option_aeroplanes_tooltip:0 "Establish an $aeroplanes$ import trade route"
 trade_route_import_lens_option_manowars_tooltip:0 "Establish a $manowars$ import trade route"
 trade_route_import_lens_option_ironclads_tooltip:0 "Establish an $ironclads$ import trade route"
 trade_route_import_lens_option_grain_tooltip:0 "Establish a $grain$ import trade route"
 trade_route_import_lens_option_fish_tooltip:0 "Establish a $fish$ import trade route"
 trade_route_import_lens_option_meat_tooltip:0 "Establish a $meat$ import trade route"
 trade_route_import_lens_option_fruit_tooltip:0 "Establish a $fruit$ import trade route"
 trade_route_import_lens_option_fabric_tooltip:0 "Establish a $fabric$ import trade route"
 trade_route_import_lens_option_coal_tooltip:0 "Establish a $coal$ import trade route"
 trade_route_import_lens_option_wood_tooltip:0 "Establish a $wood$ import trade route"
 trade_route_import_lens_option_groceries_tooltip:0 "Establish a $groceries$ import trade route"
 trade_route_import_lens_option_liquor_tooltip:0 "Establish a $liquor$ import trade route"
 trade_route_import_lens_option_wine_tooltip:0 "Establish a $wine$ import trade route"
 trade_route_import_lens_option_clothes_tooltip:0 "Establish a $clothes$ import trade route"
 trade_route_import_lens_option_furniture_tooltip:0 "Establish a $furniture$ import trade route"
 trade_route_import_lens_option_clippers_tooltip:0 "Establish a $clippers$ import trade route"
 trade_route_import_lens_option_steamers_tooltip:0 "Establish a $steamers$ import trade route"
 trade_route_import_lens_option_silk_tooltip:0 "Establish a $silk$ import trade route"
 trade_route_import_lens_option_dye_tooltip:0 "Establish a $dye$ import trade route"
 trade_route_import_lens_option_sulfur_tooltip:0 "Establish a $sulfur$ import trade route"
 trade_route_import_lens_option_iron_tooltip:0 "Establish an $iron$ import trade route"
 trade_route_import_lens_option_lead_tooltip:0 "Establish a $lead$ import trade route"
 trade_route_import_lens_option_hardwood_tooltip:0 "Establish a $hardwood$ import trade route"
 trade_route_import_lens_option_rubber_tooltip:0 "Establish a $rubber$ import trade route"
 trade_route_import_lens_option_oil_tooltip:0 "Establish an $oil$ import trade route"
 trade_route_import_lens_option_engines_tooltip:0 "Establish a $engines$ import trade route"
 trade_route_import_lens_option_steel_tooltip:0 "Establish a $steel$ import trade route"
 trade_route_import_lens_option_tools_tooltip:0 "Establish a $tools$ import trade route"
 trade_route_import_lens_option_glass_tooltip:0 "Establish a $glass$ import trade route"
 trade_route_import_lens_option_fertilizer_tooltip:0 "Establish a $fertilizer$ import trade route"
 trade_route_import_lens_option_paper_tooltip:0 "Establish a $paper$ import trade route"
 trade_route_import_lens_option_explosives_tooltip:0 "Establish an $explosives$ import trade route"
 trade_route_import_lens_option_porcelain_tooltip:0 "Establish a $porcelain$ import trade route"
 trade_route_import_lens_option_sugar_tooltip:0 "Establish a $sugar$ import trade route"
 trade_route_import_lens_option_tea_tooltip:0 "Establish a $tea$ import trade route"
 trade_route_import_lens_option_coffee_tooltip:0 "Establish a $coffee$ import trade route"
 trade_route_import_lens_option_tobacco_tooltip:0 "Establish a $tobacco$ import trade route"
 trade_route_import_lens_option_opium_tooltip:0 "Establish a $opium$ import trade route"
 trade_route_import_lens_option_automobiles_tooltip:0 "Establish a $automobiles$ import trade route"
 trade_route_import_lens_option_telephones_tooltip:0 "Establish a $telephones$ import trade route"
 trade_route_import_lens_option_luxury_clothes_tooltip:0 "Establish a $luxury_clothes$ import trade route"
 trade_route_import_lens_option_luxury_furniture_tooltip:0 "Establish a $luxury_furniture$ import trade route"
 trade_route_import_lens_option_literature_tooltip:0 "Establish a $literature$ import trade route"
 trade_route_import_lens_option_fine_art_tooltip:0 "Establish a $fine_art$ import trade route"

 trade_route_export_lens_option_ammunition_tooltip:0 "Establish an $ammunition$ export trade route"
 trade_route_export_lens_option_small_arms_tooltip:0 "Establish a $small_arms$ export trade route"
 trade_route_export_lens_option_artillery_tooltip:0 "Establish an $artillery$ export trade route"
 trade_route_export_lens_option_radios_tooltip:0 "Establish a $radios$ export trade route"
 trade_route_export_lens_option_tanks_tooltip:0 "Establish a $tanks$ export trade route"
 trade_route_export_lens_option_aeroplanes_tooltip:0 "Establish an $aeroplanes$ export trade route"
 trade_route_export_lens_option_manowars_tooltip:0 "Establish a $manowars$ export trade route"
 trade_route_export_lens_option_ironclads_tooltip:0 "Establish an $ironclads$ export trade route"
 trade_route_export_lens_option_grain_tooltip:0 "Establish a $grain$ export trade route"
 trade_route_export_lens_option_fish_tooltip:0 "Establish a $fish$ export trade route"
 trade_route_export_lens_option_meat_tooltip:0 "Establish a $meat$ export trade route"
 trade_route_export_lens_option_fruit_tooltip:0 "Establish a $fruit$ export trade route"
 trade_route_export_lens_option_fabric_tooltip:0 "Establish a $fabric$ export trade route"
 trade_route_export_lens_option_coal_tooltip:0 "Establish a $coal$ export trade route"
 trade_route_export_lens_option_wood_tooltip:0 "Establish a $wood$ export trade route"
 trade_route_export_lens_option_groceries_tooltip:0 "Establish a $groceries$ export trade route"
 trade_route_export_lens_option_liquor_tooltip:0 "Establish a $liquor$ export trade route"
 trade_route_export_lens_option_wine_tooltip:0 "Establish a $wine$ export trade route"
 trade_route_export_lens_option_clothes_tooltip:0 "Establish a $clothes$ export trade route"
 trade_route_export_lens_option_furniture_tooltip:0 "Establish a $furniture$ export trade route"
 trade_route_export_lens_option_clippers_tooltip:0 "Establish a $clippers$ export trade route"
 trade_route_export_lens_option_steamers_tooltip:0 "Establish a $steamers$ export trade route"
 trade_route_export_lens_option_silk_tooltip:0 "Establish a $silk$ export trade route"
 trade_route_export_lens_option_dye_tooltip:0 "Establish a $dye$ export trade route"
 trade_route_export_lens_option_sulfur_tooltip:0 "Establish a $sulfur$ export trade route"
 trade_route_export_lens_option_iron_tooltip:0 "Establish an $iron$ export trade route"
 trade_route_export_lens_option_lead_tooltip:0 "Establish a $lead$ export trade route"
 trade_route_export_lens_option_hardwood_tooltip:0 "Establish a $hardwood$ export trade route"
 trade_route_export_lens_option_rubber_tooltip:0 "Establish a $rubber$ export trade route"
 trade_route_export_lens_option_oil_tooltip:0 "Establish an $oil$ export trade route"
 trade_route_export_lens_option_engines_tooltip:0 "Establish a $engines$ export trade route"
 trade_route_export_lens_option_steel_tooltip:0 "Establish a $steel$ export trade route"
 trade_route_export_lens_option_tools_tooltip:0 "Establish a $tools$ export trade route"
 trade_route_export_lens_option_glass_tooltip:0 "Establish a $glass$ export trade route"
 trade_route_export_lens_option_fertilizer_tooltip:0 "Establish a $fertilizer$ export trade route"
 trade_route_export_lens_option_paper_tooltip:0 "Establish a $paper$ export trade route"
 trade_route_export_lens_option_explosives_tooltip:0 "Establish an $explosives$ export trade route"
 trade_route_export_lens_option_porcelain_tooltip:0 "Establish a $porcelain$ export trade route"
 trade_route_export_lens_option_sugar_tooltip:0 "Establish a $sugar$ export trade route"
 trade_route_export_lens_option_tea_tooltip:0 "Establish a $tea$ export trade route"
 trade_route_export_lens_option_coffee_tooltip:0 "Establish a $coffee$ export trade route"
 trade_route_export_lens_option_tobacco_tooltip:0 "Establish a $tobacco$ export trade route"
 trade_route_export_lens_option_opium_tooltip:0 "Establish a $opium$ export trade route"
 trade_route_export_lens_option_automobiles_tooltip:0 "Establish a $automobiles$ export trade route"
 trade_route_export_lens_option_telephones_tooltip:0 "Establish a $telephones$ export trade route"
 trade_route_export_lens_option_luxury_clothes_tooltip:0 "Establish a $luxury_clothes$ export trade route"
 trade_route_export_lens_option_luxury_furniture_tooltip:0 "Establish a $luxury_furniture$ export trade route"
 trade_route_export_lens_option_literature_tooltip:0 "Establish a $literature$ export trade route"
 trade_route_export_lens_option_fine_art_tooltip:0 "Establish a $fine_art$ export trade route"

 MANAGE_MARKET_BUTTON_LABEL:0 "Manage"
 MANAGE_MARKET_BUTTON_TOOLTIP:0 "Manage Market"
 MANAGE_MARKET_BUTTON_DISABLED_TOOLTIP:1 "$MANAGE_MARKET_BUTTON_TOOLTIP$\n@simple_box! Is market controller"

 TRADING_TITLE:0 "#title Current Trade Demands in the $MARKET$ Market#!\n"
 IMPORTING_TITLE:0 "\n#title Currently Unmet Demand in the $MARKET$ Market#!\n"
 NO_UP_TO_DATE_MARKET_INFO:0 "#N There is no up to date Goods information for this Market#!"

 MARKET_GOOD_SORT:0 "Good"
 MARKET_PRODUCE_SORT:0 "Produce"
 MARKET_CONSUME_SORT:0 "Consume"
 MARKET_SELL_SORT:0 "Sell Orders"
 MARKET_BUY_SORT:0 "Buy Orders"
 MARKET_PRICE_SORT:0 "Price"

 FRONT_PANEL_DEBUG_INFO:0 "#title Debug Information#!:\nID: #variable [Front.GetID]#!\nInitiator Theaters: [Front.GetInitiatorTheatersDebugDesc]\nTarget Theaters: [Front.GetTargetTheatersDebugDesc]"
 FRONT_PANEL_FIRST_UNITS:0 "First Side Units"
 FRONT_PANEL_SECOND_UNITS:0 "Second Side Units"
 FRONT_PANEL_NO_PRESENT_GENERALS:0 "No [Concept('concept_general', '$concept_generals$')] present on this side"
 FRONT_PANEL_NO_PRESENT_FORMATIONS: "No [Concept('concept_military_formation', '$concept_military_formations$')] present on this side"
 FRONT_PANEL_NO_PRESENT_ARMIES: "No [Concept('concept_army', '$concept_armies$')] present on this side"

 SAVING_GAME:0 "Saving Game"
 BUILDING_COSTS:0 "Building costs"
 TARGET_STRENGTH:0 "Target Strength Points for army"
 STRATEGIC_GOODS:0 "Strategic Goods"
 WEEKLY_COST_STRATEGIC_REGION_TOOLTIP:0 "#header Weekly cost of Strategic Resources#!"

 PDX_TOOLTIP_SHORTCUT:1 "Shortcut: #header $MODS$$SHORTCUT$#!"
 PDX_TOOLTIP_INPUT_ACTION:0 "Shortcut: $INPUT_ACTION_NAME|v$ ($BOUND_INPUT_1|v$[AddTextIf(Not(StringIsEmpty('$BOUND_INPUT_2$')), ' or $BOUND_INPUT_2|v$')])"

 SHORTCUT_KEY:0 "$KEY$"
 SHORTCUT_KEY_MOD_shift:0 "Shift+"
 SHORTCUT_KEY_MOD_alt:0 "Alt+"
 SHORTCUT_KEY_MOD_ctrl:0 "Ctrl+"
 SHORTCUT_KEY_MOD_os:0 "Os+"
 KEY_MB4:0 "Mouse 4"

 KEY_MOUSE_X1:0 "Mouse 4"
 KEY_MOUSE_X2:0 "Mouse 5"

 KEY_ESCAPE:0 "Esc"
 KEY_TAB:0 "Tab"
 KEY_RETURN:0 "Return / Enter"
 KEY_BACKSPACE:0 "Backspace"
 KEY_DEL:0 "Del"

 KEY_LSHIFT:0 "Left Shift"
 KEY_LCTRL:0 "Left Ctrl"
 KEY_LOS:0 "Left OS"
 KEY_LALT:0 "Left Alt"
 KEY_SPACE:0 "Space"
 KEY_RALT:0 "Right Alt"
 KEY_ROS:0 "Right OS"
 KEY_RCTRL:0 "Right Ctrl"
 KEY_RSHIFT:0 "Right Shift"
 KEY_SHIFT:0 "Shift"
 KEY_CTRL:0 "Ctrl"
 KEY_ALT:0 "Alt"

 KEY_EQUALS:0 "="
 KEY_MINUS:0 "-"
 KEY_LBRACKET:0 "["
 KEY_RBRACKET:0 "]"
 KEY_APOSTROPHE:0 "'"
 KEY_SLASH:0 "/"
 KEY_BACKSLASH:0 "\\"
 KEY_SEMICOLON:0 ";"
 KEY_PERIOD:0 "."
 KEY_COMMA:0 ","

 KEY_UP:0 "Arrow Up"
 KEY_LEFT:0 "Arrow Left"
 KEY_DOWN:0 "Arrow Down"
 KEY_RIGHT:0 "Arrow Right"

 KEY_KP_0:0 "Keypad 0"
 KEY_KP_1:0 "Keypad 1"
 KEY_KP_2:0 "Keypad 2"
 KEY_KP_3:0 "Keypad 3"
 KEY_KP_4:0 "Keypad 4"
 KEY_KP_5:0 "Keypad 5"
 KEY_KP_6:0 "Keypad 6"
 KEY_KP_7:0 "Keypad 7"
 KEY_KP_8:0 "Keypad 8"
 KEY_KP_9:0 "Keypad 9"
 KEY_KP_PLUS:0 "Keypad +"
 KEY_KP_MINUS:0 "Keypad -"

 RAW_MATERIALS:0 "Raw mat."
 INDUSTRIAL_GOODS:0 "Industrial"
 CONSUMER_GOODS:0 "Consumer"
 MILITARY_GOODS:0 "Military"
 LUXURY_GOODS:0 "Luxury"
 PREVIOUS_WEEK_MODIFIERS:0 "#title Previous Week Modifiers#!"
 MODIFIER_ENTRY_TEXT:0 "[ModifierEntry.GetFormattedValue] [ModifierEntry.GetName]"
 MODIFIER_ENTRY_TOOLTIP:2 "#header [ModifierEntry.GetName]#!: [ModifierEntry.GetFormattedValue]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]\n[ModifierEntry.GetDesc]"
 MODIFIER_ENTRY_VALUE_WITH_BREAKDOWN:0 "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE$#!#!"
 MODIFIER_DEFINITION_NAME:0 "#tooltippable_name #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 FULL_MODIFIER_ENTRY_DESC:0 "$VALUE$ $NAME$"

 BALANCE_ITEM:0 "[TradeOverviewEntry.GetGoods.GetCompareIconAgainstBasePriceNoFormatting(TradeOverviewEntry.GetGoods.GetMarketPrice)] "

 RELATIONS_TOOLTIP:2 "#header $LABEL$ [concept_relations]#!\n[concept_relations] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName] are #BOLD $LABEL$#! (#variable $VAL|+=$#!)$PROGRESS$"
 INFAMY_TOOLTIP:2 "#header [COUNTRY.GetAdjective] [concept_infamy]: #BOLD $INFAMY_LABEL$#! (#variable $INFAMY|-1$#!)#![ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n', Concatenate('$INFAMY_DECAY$', ConcatIfNeitherEmpty('\n\nEffects:\n','$INFAMY_EFFECTS$')))]"
 INFAMY_DECAY_RATE:0 "[concept_infamy] decay: #P #bold -$VAL|3$#!#! / week\n$TAB$Base decay: #P #bold -$YEARLYBASE|3$#!#!  / year$MITIGATION$"
 TENSION_TOOLTIP:0 "The [concept_tension] level between us and [COUNTRY.GetName] is #BOLD $LABEL$#! (#variable $VAL|-$#!)$DECAY$"
 TENSION_DECAY_RATE:0 "[concept_tension] decay: #P #bold -$VAL|3$#!#! / week\n$TAB$Base decay: #P #bold -$YEARLYBASE|3$#!#!  / year$MITIGATION$"

 RELATIONS_PROGRESS:0 "Progress towards improved relations: $VAL|v%0$"
 RELATIONS_DECAY:0 "Decaying relations: #N #bold -$VAL|-3$#!#! / week"

 lower:0 "@lower_strata! [concept_lower_strata]"
 middle:0 "@middle_strata! [concept_middle_strata]"
 upper:0 "@upper_strata! [concept_upper_strata]"
 LOWER_NO_ICON:0 "[concept_lower_strata]"
 MIDDLE_NO_ICON:0 "[concept_middle_strata]"
 UPPER_NO_ICON:0 "[concept_upper_strata]"

 DIVIDENDS_FROM_GOVERNMENT_SHARES:0 "[concept_government_dividends]"
 LOSSES_FROM_GOVERNMENT_SHARES:1 "Losses from [concept_nationally_owned] [Concept('concept_building', '$concept_buildings$')]"
 GOVERNMENT_DIVIDENDS_MULT_DESC: "$concept_government_dividends$ Efficiency: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%+$#!#!"
 GOVERNMENT_DIVIDENDS_WASTE_DESC: "Multiplied by #v x$MULTIPLIER$#! due to waste:"

 TAX_INCOME_BREAKDOWN:0 "#bold National Revenue:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictWeeklyFixedIncome|D+=]#!#!#!"
 TAX_INCOME_INCOME:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INCOME_TAXES_BREAKDOWN,TaxIncomeTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetIncomeTaxIncome|D+=]#!#! [concept_budget_income_taxes]"
 TAX_INCOME_POLL:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POLL_TAXES_BREAKDOWN,TaxPollTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPollTaxIncome|D+=]#!#! [concept_budget_poll_taxes]"
 TAX_INCOME_CONSUMPTION:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSUMPTION_TAXES_BREAKDOWN,ConsumptionTaxTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictConsumptionTaxes|D+=]#!#! [concept_budget_consumption_taxes]"
 TAX_INCOME_DIVIDENDS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIVIDENDS_TAXES_BREAKDOWN,DividendsTaxTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictDividendsTaxes|D+=]#!#! [concept_budget_dividends_taxes]"
 TAX_INCOME_ADDITIONAL:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_INCOME_BREAKDOWN,AdditionalIncomeTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!#! [concept_budget_additional_income]"
 TAX_INCOME_MINTING:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MINTING_BREAKDOWN,MintingTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictMinting|K+=]#!#! [concept_budget_minting]"
 TAX_INCOME_INVESTMENT:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_INCOME_BREAKDOWN,InvestmentIncomeTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentIncome|D+=]#!#! [concept_budget_investment_income]"
 TAX_INCOME_DIPLOMATIC:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_INCOME_BREAKDOWN,DiplomaticPactsIncomeTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictDiplomaticPactsIncome|D+=]#!#! [concept_budget_diplomatic_pacts]"
 TAX_INCOME_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_INCOME_BREAKDOWN,PowerBlocIncomeTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPowerBlocIncomeRaw|D+=]#!#! [concept_budget_power_bloc]"
 TAX_INCOME_TARIFFS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],TARIFFS_BREAKDOWN,TariffsTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictTariffs|D+=]#!#! [concept_tariffs]"
 TAX_INCOME_GOVERNMENT_SHARE_DIVIDENDS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN,GovernmentShareDividendsTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictGovernmentShareDividends|D+=]#!#! $DIVIDENDS_FROM_GOVERNMENT_SHARES$"


 INVESTMENT_POOL:0 "[concept_investment_pool]: #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_BREAKDOWN,InvestmentPoolTooltip #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPool|D+]#!#!#! (Change: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPoolChange|D+=]#!)"
 INVESTMENT_POOL_BREAKDOWN:2 "#header [concept_investment_pool]#!\nCurrent: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPool|D+]#!\nWeekly change: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPoolChange|D+=]#!\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL_CHANGE$"
 INVESTMENT_POOL_CHANGE:1 "[GetPlayer.GetInvestmentPoolChangeFromConstructionDesc]\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentDesc]"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION:1 "#bold New [concept_construction]:#! #v [GetPlayer.GetCustom('currency_symbol')]$CHANGE|D+$#!"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION_EMPTY:0 "No new [concept_construction] using the $concept_investment_pool$: #v [GetPlayer.GetCustom('currency_symbol')]$CHANGE|D+=$#!"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT:2 "[concept_reinvestment]: #v [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_SOURCES_BREAKDOWN $CHANGE|D+=$#!#!#!\nAll investments are multiplied by #v x$MULTIPLIER$#! due to [GetPlayer.GetAdjective] [concept_gdp] of [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetGDP|Dv]"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT_EMPTY:0 "No investment sources: #v [GetPlayer.GetCustom('currency_symbol')]$CHANGE|D+=$#!"
 INVESTMENT_POOL_SOURCES_BREAKDOWN:0 "#header [Concept('concept_building', '$concept_buildings$')] adding [concept_money] to the [concept_investment_pool]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentBreakdown]"
 INVESTMENT_FROM_BUILDING_DETAIL:0 "[BuildingType.GetName]: #N #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#!"

 CURRENT_INVESTMENT_POOL:0 "[concept_investment_pool]: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentPool|D+]#! ([GetPlayer.GetInvestmentPoolChange|=+D])"
 NEXT_PRIVATE_CONSTRUCTION:0 "[GetPlayer.GetInvestmentPoolPredictedNextBuildingDesc]"
 NO_NEXT_PRIVATE_CONSTRUCTION_OTHER_REASON:1 "No potential [Concept('concept_private_construction', '$concept_private_constructions$')] to invest in"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_INFRASTRUCTURE: "There is no [concept_state] which has both sufficient [concept_infrastructure] and available [concept_workforce] for new [Concept('concept_private_construction', '$concept_private_constructions$')]"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_CONSTRUCTION_SECTOR: "A [GetBuildingType('building_construction_sector').GetName] is needed to support [Concept('concept_private_construction', '$concept_private_constructions$')]"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING_WITH_INVESTOR: "[BUILDING_TYPE.GetName] in [STATE.GetName] will [concept_privatize] [TARGET_BUILDING_TYPE.GetName] in [TARGET_STATE.GetName]\nStatus: $STATUS$"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING: "Will [concept_privatize] [BUILDING_TYPE.GetName] in [STATE.GetName]\nStatus: $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WITH_INVESTOR: "[BUILDING_TYPE.GetName] in [STATE.GetName] will expand [TARGET_BUILDING_TYPE.GetName] in [TARGET_STATE.GetName]\n$STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING: "Will expand [BUILDING_TYPE.GetName] in [STATE.GetName]\nStatus: $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_FUNDING:0 "#b Waiting for funding to become available (#tooltippable #tooltip:$BREAKDOWN_TAG$ $PERCENTAGE|v%0$#!#!)#!"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_QUEUE:0 "#b Waiting for other [Concept('concept_private_construction', '$concept_private_constructions$')] to complete#!"
 INVESTMENT_POOL_NEXT_BUILDING_READY:0 "#p Ready for $concept_construction$#!"
 INVESTMENT_POOL_NEXT_PRIVATIZATION_READY: "#p Ready for $concept_privatization$#!"
 INVESTMENT_POOL_NEXT_BUILDING_FUNDING_DESC:0 "#header Funding for [BUILDING_TYPE.GetName] in [STATE.GetName]: $FUNDING|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 INVESTMENT_POOL_PRIVATIZATION_COST: "Cost to [concept_privatize] one level of [BUILDING.GetName]: [GetPlayer.GetCustom('currency_symbol')]$COST|vD$"
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_TOTAL_FUNDS:0 "[GetPlayer.GetCustom('currency_symbol')]$CURRENT|vD$ saved in the [concept_investment_pool] with [GetPlayer.GetCustom('currency_symbol')]$NEEDED|vD$ needed for currently queued [Concept('concept_private_construction', '$concept_private_constructions$')] results in [GetPlayer.GetCustom('currency_symbol')]$AVAILABLE|vD$ available saved funds"
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_WEEKLY_FUNDS:0 "[GetPlayer.GetCustom('currency_symbol')]$CURRENT|vD$ weekly paid into the [concept_investment_pool] with [GetPlayer.GetCustom('currency_symbol')]$NEEDED|vD$ needed for currently queued [Concept('concept_private_construction', '$concept_private_constructions$')] results in [GetPlayer.GetCustom('currency_symbol')]$AVAILABLE|vD$ available weekly funds"
 INVESTMENT_POOL_NEXT_BUILDING_NO_AVAILABLE_FUNDS:0 "@information!All saved and weekly [concept_investment_pool] funds are currently allocated to other projects"
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_TOTAL_FUNDS:0 "$FRACTION|%0v$ of the total construction cost ([GetPlayer.GetCustom('currency_symbol')]$COST|vD$) is covered by available funds saved in the [concept_investment_pool]"
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_WEEKLY_FUNDS:0 "$FRACTION|%0v$ of the weekly construction cost ([GetPlayer.GetCustom('currency_symbol')]$COST|vD$) is covered by available weekly funds paid into the [concept_investment_pool]"
 INVESTMENT_POOL_TOTAL_FRACTION:0 "@information! A [concept_private_construction] is considered funded when the combined sum of its weekly cost coverage and total cost coverage is $REQUIRED|%v0$ (Currently $TOTAL|%v0$). The funding percentage may fluctuate due to factors such as the current price of construction [Concept('concept_good', '$concept_goods$')]."

 TOTAL_INCOME_BREAKDOWN:0 "[GetPlayer.GetIncomeBreakdown]"
 TOTAL_EXPENSES_BREAKDOWN:0 "[GetPlayer.GetExpensesBreakdown]"

 BUILDING_GROUP_LAW_HEADER:0 "[Law.GetName] allows the following to be funded using the [concept_investment_pool]:"

 INTEREST_EXPENSE_TOOLTIP:0 "#header Interest#!\nTotal: #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetInterestPayment|D-]"

 POLL_TAXES_BREAKDOWN:0 "#tooltip_header [concept_budget_poll_taxes]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPollTaxIncome|K+=]#!"
 INCOME_TAXES_BREAKDOWN:0 "#tooltip_header [concept_budget_income_taxes]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetIncomeTaxIncome|K+=]#!"
 INCOME_TAX_RATE:0 "The Income Tax Rate of #v $VAL|+%0$#! is due to:$BASE_INCOME_TAX_RATE_BREAKDOWN$$TAXCOLLECTION_EFFICIENCY_BREAKDOWN$"
 POP_INCOME_TAX_RATE:0 "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_income_taxes]: #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!"
 POP_DIVIDEND_TAX_RATE:0 "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_dividends_taxes]: #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!"
 POP_PER_CAPITA_TAX:0 "[concept_budget_per_capita_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!#!#!"
 POP_LAND_TAX:0 "[concept_budget_land_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!#!#!"
 POP_HEATHEN_TAX:0 "[concept_budget_heathen_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!#!#!"
 POP_CONSUMPTION_TAX:0 "[concept_budget_consumption_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold [GetPlayer.GetCustom('currency_symbol')]-$TAX_LOSS|D$#!#!#!#!"
 POP_CONSUMPTION_TAX_BREAKDOWN:0 "#header [concept_budget_consumption_taxes]#!\n$BREAKDOWN$"
 POP_CONSUMPTION_TAX_ENTRY:0 "[Goods.GetName]: #N #bold [GetPlayer.GetCustom('currency_symbol')]-$AMOUNT|D$#!#!#!#!"
 ECONOMIC_CONTRIBUTION:0 "Economic Contribution: $VAL|v%0$"
 TAXATION_BREAKDOWN:0 "#header Taxation#!\nThe total Taxation level of #variable $VAL|%1$#!, is due to:\n$TAB$$STATE_TAX_MODIFIER$\n$TAB$$BREAKDOWN$"

 ECONOMIC_DEPENDENCE_ON_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $LABEL$ ($VALUE|1v$)#!#!"
 ECONOMIC_DEPENDENCE_GDP_RATIO_SECTION: "$VALUE|=v1$ from #tooltippable #tooltip:$TOOLTIP_TAG$ $BASE_VALUE|%v1$#!#! of [COUNTRY.GetAdjectiveNoFormatting] [concept_gdp] owned by [TARGET_COUNTRY.GetNameNoFormatting]"
 ECONOMIC_DEPENDENCE_MARKET_GDP_COMPARISON_SECTION: "$VALUE|=v1$ from $BASE_VALUE|=v0%$ difference in [concept_gdp] between [COUNTRY.GetNameNoFormatting] ([GetPlayer.GetCustom('currency_symbol')][COUNTRY.GetGDP|Dv]) and [TARGET_COUNTRY.GetNameNoFormatting] ([GetPlayer.GetCustom('currency_symbol')][TARGET_COUNTRY.GetGDP|Dv])"
 ECONOMIC_DEPENDENCE_POP_GOODS_DEPENDENCE_SECTION: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|=v1$#!#! from unfulfilled [COUNTRY.GetAdjectiveNoFormatting] [concept_buy_orders] satisfied by [TARGET_COUNTRY.GetNameNoFormatting]"
 ECONOMIC_DEPENDENCE_TRADE_ROUTE_DEPENDENCE_SECTION: "$VALUE|=v1$ from value of active [Concept('concept_trade_route','$concept_trade_routes$')] ([GetPlayer.GetCustom('currency_symbol')]$BASE_VALUE|Dv$) with [TARGET_COUNTRY.GetNameNoFlag]"
 ECONOMIC_DEPENDENCE_ON_TOOLTIP: "#header [COUNTRY.GetAdjectiveNoFlag] [concept_economic_dependence] on [TARGET_COUNTRY.GetName]#!\nValue: [GetEconomicDependenceOnLabel('(CFixedPoint)$VALUE$')|v] ($VALUE|v1$)\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty('$BREAKDOWN$'),'ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN','$BREAKDOWN$')]"
 ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN: "No factors contributing to [concept_economic_dependence]."

 ECONOMIC_DEPENDENCE_LABEL_0: "Independent"
 ECONOMIC_DEPENDENCE_LABEL_1: "Important"
 ECONOMIC_DEPENDENCE_LABEL_2: "Entangled"
 ECONOMIC_DEPENDENCE_LABEL_3: "Reliant"
 ECONOMIC_DEPENDENCE_LABEL_4: "Dependent"
 ECONOMIC_DEPENDENCE_LABEL_5: "Controlled"

 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_SECTION_HEADER: "[GetPlayer.GetCustom('currency_symbol')]$VALUE|vD$ worth of domestically unfulfilled demands satisfied by [TARGET_COUNTRY.GetName] (compared to weekly [concept_gdp] of [GetPlayer.GetCustom('currency_symbol')][COUNTRY.GetWeeklyGDP|vD])"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_SECTION_HEADER: "[GetPlayer.GetCustom('currency_symbol')]$VALUE|v0$ worth of domestically fulfilled demand"
 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_ENTRY: "[GetPlayer.GetCustom('currency_symbol')]$VALUE|vD$ ($AMOUNT|vD$) [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_ENTRY: "[GetPlayer.GetCustom('currency_symbol')]$VALUE|v0$ ($AMOUNT|v0$) [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DEPENDENCE_BREAKDOWN: "#indent_newline:3 $INSUFFICIENCE_SATISFIED_HEADER$\n$INSUFFICIENCE_BREAKDOWN$#!"
 GOODS_DEPENDENCE_TOOLTIP: "#header [COUNTRY.GetAdjective] $concept_pop$ [concept_good_consumption] Dependence on [TARGET_COUNTRY.GetName]#!\nValue: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n@information! Consumption Dependence measures consumption demand that a country's domestic industry cannot meet the needs of, which is instead supplied by another country in the same market. The dependence value depends on the market price of the goods supplied and their share of the market's total production of these goods. This value is then compared to the country's weekly GDP."

 CONSUMPTION_TAXES_BREAKDOWN:0 "[GetPlayer.GetConsumptionTaxesDesc]"
 CONSUMPTION_TAXES:0 "#tooltip_header Consumption Taxes#!\nTotal: #v $VAL|K+=$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CONSUMPTION_TAXES_GOODS_ENTRY:0 "#variable [GetPlayer.GetCustom('currency_symbol')]$VAL|K+$#! from [GOODS.GetName]"

 DIVIDENDS_TAXES_BREAKDOWN:0 "#tooltip_header Dividends Taxes#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictDividendsTaxes|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDividendsTaxesDesc]"
 DIVIDENDS_TAX_FROM_BUILDING_DETAIL:0 "#N #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#! from [BuildingType.GetName]"
 GOVERNMENT_SHARES_FROM_BUILDING_DETAIL:1 "#N #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#! from [concept_nationally_owned] [BuildingType.GetName]"
 IMPORT_TARIFFS_FROM_GOODS_DETAIL:0 "#N #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#! from import of [Goods.GetName]"
 EXPORT_TARIFFS_FROM_GOODS_DETAIL:0 "#N #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#! from export of [Goods.GetName]"

 SET_GOODS_TARIFF_NO_PRIORITY:1 "Set [concept_market_good_policy] to $tariff_no_priority$"
 SET_GOODS_TARIFF_IMPORT_PRIORITY:1 "Set [concept_market_good_policy] to $tariff_import_priority$"
 SET_GOODS_TARIFF_EXPORT_PRIORITY:1 "Set [concept_market_good_policy] to $tariff_export_priority$"

 TRADE_ROUTE_OPEN_EXPORTING_MARKET:0 "View [TradeRoute.GetExportingMarket.GetName] (Exporter)"
 TRADE_ROUTE_OPEN_IMPORTING_MARKET:0 "View [TradeRoute.GetImportingMarket.GetName] (Importer)"

 SET_TARIFF_FOCUS_ALREADY_ACTIVE:0 "[concept_tariffs] already set to $FOCUS|v$"
 SET_TARIFF_FOCUS_NOT_ALLOWED:0 "Our Trade Policy does not allow us to set [concept_tariffs] to $FOCUS|v$"

 TARIFFS_BREAKDOWN:0 "#tooltip_header [concept_tariffs]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictTariffs|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictTariffsDesc]"
 MINTING_BREAKDOWN:0 "#tooltip_header [concept_budget_minting]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictMinting|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictMintingDesc]"
 INVESTMENT_INCOME_BREAKDOWN:0 "#tooltip_header [concept_budget_investment_income]#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetInvestmentIncome|K+=]#!"
 GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN:0 "#tooltip_header $DIVIDENDS_FROM_GOVERNMENT_SHARES$#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictGovernmentShareDividends|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareDividendsDesc]"
 GOVERNMENT_SHARE_LOSSES_BREAKDOWN:0 "#tooltip_header $LOSSES_FROM_GOVERNMENT_SHARES$#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictGovernmentShareLosses|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareLossesDesc]"

 ADDITIONAL_INCOME_BREAKDOWN:0 "#tooltip_header Additional Income#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_tax_income_add')]"
 ADDITIONAL_EXPENSES_BREAKDOWN:0 "#tooltip_header Additional Expenses#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_expenses_add')]"
 WELFARE_PAYMENTS_EXPENSES_BREAKDOWN:0 "#tooltip_header [concept_welfare_payments]#!\nTotal: #n [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetWelfarePaymentsExpenses|D ]#!"

 DIPLOMATIC_PACTS_INCOME_BREAKDOWN:0 "#tooltip_header Diplomatic Pacts#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictDiplomaticPactsIncome|K+]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsIncomeDesc]"
 POWER_BLOC_INCOME_BREAKDOWN: "#tooltip_header Power Bloc#!\nTotal: #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPowerBlocIncomeRaw|K+]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocIncomeDesc]"

 ONLY_SHOW_AVAILABLE: "Only Show Available"
 ONLY_SHOW_AVAILABLE_EXILED_AGITATORS_TOOLTIP: "Only show [Concept('concept_exile', '$concept_exiled$')] [Concept('concept_agitator', '$concept_agitators$')] that can be invited"

 EXPENSES_ADDITIONAL:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_EXPENSES_BREAKDOWN,AdditionalExpensesTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!#! [concept_budget_additional_expenses]"
 EXPENSES_WELFARE_PAYMENTS:1 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],WELFARE_PAYMENTS_BREAKDOWN,WelfarePaymentsTooltip [GetPlayer.GetCustom('currency_symbol')][Negate_CFixedPoint(GetPlayer.GetWelfarePaymentsExpenses)|D+=]#!#! [concept_welfare_payments]"
 EXPENSES_GOVERNMENT_SHARE_LOSSES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_LOSSES_BREAKDOWN,GovernmentShareLossesTooltip [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictGovernmentShareLosses|D-]#!#! $LOSSES_FROM_GOVERNMENT_SHARES$"
 GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN:0 "#tooltip_header Goods for Government Buildings#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesByGoodsDesc]"
 GOVERNMENT_WAGES_EXPENSES_BREAKDOWN:0 "#tooltip_header Government Wages#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetGovernmentWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentWagesExpensesDesc]"
 GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN:0 "#tooltip_header Government Slaves#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentSlavesExpensesDesc]"
 MILITARY_BUILDINGS_EXPENSES_BREAKDOWN:0 "#tooltip_header Goods for Military Buildings#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]"
 MILITARY_WAGES_EXPENSES_BREAKDOWN:0 "#tooltip_header Military Wages#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetMilitaryWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryWagesExpensesDesc]"
 MILITARY_SLAVES_EXPENSES_BREAKDOWN:0 "#tooltip_header Military Slaves#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitarySlavesExpensesDesc]"
 DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN:0 "#tooltip_header Diplomatic Pacts#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsExpensesDesc]"
 POWER_BLOC_EXPENSE_BREAKDOWN: "#tooltip_header Power Bloc#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"
 CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN:0 "#tooltip_header [Concept('concept_good', '$concept_goods$')] for [concept_government_construction]#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetConstructionGoodsExpensesByGoodsDesc]"
 GOODS_EXPENSES_DETAIL:0 "#v [GetPlayer.GetCustom('currency_symbol')]$EXPENSE|D-$#! spent on [Goods.GetTextIcon] #v [Goods.GetName]#!"
 GOV_EXPENSES_DETAIL:0 "#N #variable [GetPlayer.GetCustom('currency_symbol')]$EXPENSE|D-$#!#! from [BUILDING_TYPE.GetName]"
 PACT_EXPENSE_DETAIL: "$ACTION$: #N #variable [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 PACT_INCOME_DETAIL: "$ACTION$: #P #variable [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 INCOME_TRANSFER_FACTOR: "#v x$VAL$#! from [SubjectType.GetNameNoIcon]"
 INCOME_TRANSFER_TOOLTIP: "#header [SubjectType.GetName]#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|K+$\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetCustom('currency_symbol')]$BASE|K+$ from [Country.GetAdjective] [concept_treasury] income[ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 INCOME_TRANSFER_TOOLTIP_MAX_DESC: "Capped at [GetPlayer.GetCustom('currency_symbol')]$MAX|K+$ ($MAX_FRACTION|v0%$ of [COUNTRY.GetAdjective] income)"
 INCOME_TRANSFER_FACTOR_NO_SUBJECT: "#v x$VAL$#! from [DIPLOMATIC_ACTION_TYPE.GetName]"
 INCOME_TRANSFER_TOOLTIP_NO_SUBJECT: "#header [DIPLOMATIC_ACTION_TYPE.GetName]#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|K+$\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetCustom('currency_symbol')]$BASE|K+$ from [Country.GetAdjective] [concept_treasury] income[ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 SUBSIDIES_EXPENSES_BREAKDOWN:0 "#tooltip_header Subsidies: #N [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetSubsidiesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubsidiesExpensesDesc]"
 POWER_BLOC_EXPENSES_BREAKDOWN: "#tooltip_header Power Bloc: #N [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"

 INCOME_TRANSFER_TO_POWER_BLOC_LEADER_FACTOR: "#v x$VAL$#! from $MODIFIER_NAME$"
 INCOME_TRANSFER_TO_POWER_BLOC_LEADER: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!#! to [COUNTRY.GetName]"
 INCOME_TRANSFER_FROM_POWER_BLOC_MEMBER: "[GetPlayer.GetCustom('currency_symbol')]$VAL|D+$ from [COUNTRY.GetName]"

 DIPLOMATIC_ACTION_WITH_COUNTRY:0 "[COUNTRY.GetName] - [DIPLOMATIC_ACTION_TYPE.GetName]"
 IMPORTANT_ACTIONS:0 "Current Situation"
 CURRENT_SITUATION_TOOLTIP:0 "#header Current Situation#!"
 UNREAD_MESSAGES:0 "#header You have unread messages!#!"
 RESET_TO_DEFAULT:0 "Reset to Default Settings"

 BALANCE_WITHOUT_TEMPORARY_INCOME_AND_EXPENSES:0 "\nBalance (excluding Temporary Income and Expenses): #v [GetPlayer.GetCustom('currency_symbol')][GetPlayer.PredictBalanceWithoutTemporaryIncomeAndExpenses|D+=]#!"
 TAX_OCCUPATION_LOSS:0 "Occupation loss from taxes: #variable [GetPlayer.GetTaxOccupationLoss|1-=]#!\n$lower$: #variable [GetPlayer.GetTaxOccupationLossFor('lower')|1-=]#!\n$middle$: #variable [GetPlayer.GetTaxOccupationLossFor('middle')|1-=]#!\n$upper$: #variable [GetPlayer.GetTaxOccupationLossFor('upper')|1-=]#!\n"
 FIXED_EXPENSES_BREAKDOWN:0 "#bold Fixed National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetWeeklyFixedExpenses|D-]#!#!#!#!"
 TEMPORARY_INCOME_BREAKDOWN:0 "#bold Temporary National Revenue:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #bold #P [GetPlayer.GetCustom('currency_symbol')]+[GetPlayer.GetWeeklyTemporaryIncome|D+]#!#!#!#!"
 TEMPORARY_EXPENSES_BREAKDOWN:0 "#bold Temporary National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetWeeklyTemporaryExpenses|D-]#!#!#!#!"
 EXPENSES_BREAKDOWN:0 "#bold National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetWeeklyExpenses|D-]#!#!#!#!"
 EXPENSES_GOVERNMENT_BUILDING_GOODS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN,GovernmentGoodsExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_government_buildings]"
 EXPENSES_GOVERNMENT_WAGES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_WAGES_EXPENSES_BREAKDOWN,GovernmentWagesExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.PredictGovernmentWagesExpenses|D-]#!#!#! [concept_budget_government_wages]"
 EXPENSES_GOVERNMENT_SLAVES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN,GovernmentSlavesExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!#! [concept_budget_government_slaves]"
 EXPENSES_MILITARY_BUILDING_GOODS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_BUILDINGS_EXPENSES_BREAKDOWN,MilitaryGoodsExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_military_buildings]"
 EXPENSES_MILITARY_WAGES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_WAGES_EXPENSES_BREAKDOWN,MilitaryWagesExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.PredictMilitaryWagesExpenses|D-]#!#!#! [concept_budget_military_wages]"
 EXPENSES_MILITARY_SLAVES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_SLAVES_EXPENSES_BREAKDOWN,MilitarySlavesExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!#! [concept_budget_military_slaves]"
 EXPENSES_SUBSIDIES:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBSIDIES_EXPENSES_BREAKDOWN,SubsidiesExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetSubsidiesExpenses|D-]#!#!#! [concept_subsidies]"
 EXPENSES_DIPLOMATIC_PACTS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN,DiplomaticPactsExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!#! [concept_budget_diplomatic_pacts]"
 EXPENSES_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_EXPENSES_BREAKDOWN,PowerBlocExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!#! [concept_budget_power_bloc]"
 EXPENSES_CONSTRUCTION_GOODS:0 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN,ConstructionGoodsExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!#! [concept_budget_construction_goods]"
 EXPENSES_INTEREST:1 "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INTEREST_EXPENSE_TOOLTIP,InterestExpenseTooltip #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetInterestPayment|D-]#!#!#! [concept_budget_interest]"
 ECONOMY_HEALTH:0 "Your economy is $HEALTH$\n$TAB$$INCOME_RATIO$\n$TAB$$CREDIT_RATIO$ (Principal: #variable [GetPlayer.GetCustom('currency_symbol')]$CURRENT_LOAN_BALANCE|D$#!)"
 HEALTH_GOOD:1 "[Concept('concept_economy_health','$concept_economy_health_healthy_short$')]"
 HEALTH_BAD:1 "[Concept('concept_economy_health','$concept_economy_health_unhealthy_short$')]"
 INCOME_RATIO_GOOD:0 "@green_checkmark! Weekly income of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable [GetPlayer.GetCustom('currency_symbol')]$INCOME|+K$#!#!#! exceeds fixed expenses of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable [GetPlayer.GetCustom('currency_symbol')]$EXPENSES|-K$#!#!#!"
 INCOME_RATIO_BAD:1 "@red_cross! Fixed expenses of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable [GetPlayer.GetCustom('currency_symbol')]$EXPENSES|-K$#!#!#! exceeds weekly income of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable [GetPlayer.GetCustom('currency_symbol')]$INCOME|+K$#!#!#!"
 CREDIT_RATIO_GOOD:0 "@green_checkmark! Credit used: #variable #P $CREDITRATIO|%1$#!#!"
 CREDIT_RATIO_BAD:1 "@red_cross! Credit used: #variable #N $CREDITRATIO|%1$#!#!"

 TAX_INCOME:0 "Taxation Income"

 DECLARE_BANKRUPTCY:0 "Declare [concept_bankruptcy]"
 DECLARE_BANKRUPTCY_TOOLTIP:0 "[Country.GetDeclareBankruptcyDesc]"
 DECLARE_BANKRUPTCY_NOT_IN_DEFAULT:0 "We are not in [concept_default]"
 DECLARE_BANKRUPTCY_DESC:1 "#header Declare [concept_bankruptcy]#!\n$TOOLTIP_DELIMITER$\nDeclaring [concept_bankruptcy] will erase our [concept_loans] and bring [GetPlayer.GetName] out of [concept_default], but doing so will have severe domestic consequences for our [concept_country]:\n$EFFECTS$[ConcatIfNeitherEmpty('\n\nNot possible due to:\n','$ERRORS$')]"
 DECLARE_BANKRUPTCY_CONSTRUCTION_QUEUE_EFFECTS:0 "All projects in the [concept_construction_queue] will be cancelled"
 DECLARE_BANKRUPTCY_BUILDING_EFFECTS:0 "#v $AMOUNT$ [Concept('concept_building', '$concept_buildings$')]#! will have their entire [concept_cash_reserves] wiped out"
 DECLARE_BANKRUPTCY_POP_EFFECTS:0 "#v $AMOUNT|*$#! [Concept('concept_pop', '$concept_pops$')] will become more [concept_radical] due to owning shares in affected [Concept('concept_building', '$concept_buildings$')]"
 DECLARE_BANKRUPTCY_MODIFIER_EFFECTS:0 "The following additional penalties will be applied to [GetPlayer.GetName], decaying over the course of #v [GetDefine( 'NEconomy', 'DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS' )]#! years:\n$EFFECTS$"

 CREDIT_PROGRESS:1 "#header Credit#!\nCurrent [concept_principal]: #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetPrincipal|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\nGovernment owes #variable [GetPlayer.GetCustom('currency_symbol')][AccessPlayer.GetGovernmentSelfDebt|D]#! in debt to itself (#variable [AccessPlayer.GetGovernmentSelfDebtFraction|%]#! of total debt)\n$TOOLTIP_DELIMITER$\nMaximum credit: #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetMaxCredit|K]#!\n"
 GOLD_PROGRESS:1 "#header [concept_gold_reserves]#!\nCurrent Reserves: #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetGoldReserves|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGoldReserveLimitDesc]"
  # Reserves Limit: #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetGoldReserveLimit|K]#!"
 GOLD_RESERVE_DIMINISHING_RETURNS:0 "Excessive stockpiling of gold causes the gold price to rise. Your balance of #variable [GetPlayer.GetCustom('currency_symbol')]$MONEY|D$#! buys you the equivalent of only #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#! worth of gold."

 WAGES:0 "Wages"
 SLAVE_UPKEEP:0 "Slave Upkeep"

 IN_THIS_MARKET:1 "#title [Concept('concept_country', '$concept_countries$')] in this $concept_market$#!"
 PRODUCTION_METHODS:0 "#title [Concept('concept_production_method', '$concept_production_methods$')]#!"
 PROCESS:0 "Process"
 PROCESS_TOOLTIP_HEADER: "$PROCESS$:"
 PORTFOLIO_TOOLTIP_HEADER: "Property Portfolio:"

 YOUR_IMPORT_ROUTE_HEADER:0 "#title Your Import Trade Routes#!"
 YOUR_EXPORT_ROUTE_HEADER:0 "#title Your Export Trade Routes#!"
 IMPORT_ROUTE_HEADER:0 "#title Inbound Trade Routes#!"
 EXPORT_ROUTE_HEADER:0 "#title Outbound Trade Routes#!"

 POP_LIST_TOTAL_TOOLTIP:0 "#header Total Population#!\nValue: [PopListItem.GetTotalPopSize|vD]"
 POP_LIST_TOTAL_WORKFORCE_TOOLTIP:0 "#header Total Workforce#!\nValue: [PopListItem.GetWorkingAdultsPopSize|vD]"

 TRADE_ROUTE_IMPORT_NAME:1 "[FIRSTMARKET.GetName] - [SECONDMARKET.GetName] [GOODS.GetTextIcon] [Goods.GetName] Import Route"
 TRADE_ROUTE_EXPORT_NAME:1 "[FIRSTMARKET.GetName] - [SECONDMARKET.GetName] [GOODS.GetTextIcon] [Goods.GetName] Export Route"
 TRADE_ROUTE_IMPORT_DESCRIPTION:1 "Importing [Goods.GetTextIcon][Nbsp][Goods.GetName] from the [Market.GetName]"
 TRADE_ROUTE_EXPORT_DESCRIPTION:1 "Exporting [Goods.GetTextIcon][Nbsp][Goods.GetName] to the [Market.GetName]"
 TO:0 "to"
 FROM:0 "from"

 IMPORT:0 "Import"
 EXPORT:0 "Export"
 ESTABLISH_IMPORT_ROUTE:0 "Establish Import Route"
 ESTABLISH_EXPORT_ROUTE:0 "Establish Export Route"

 ESTABLISH_IMPORT_ROUTE_TOOLTIP:1 "[ConcatIfNeitherEmpty( Goods.CanEstablishImportTradeRouteDesc, '\n$TOOLTIP_DELIMITER$\n' )]#header Import [Goods.GetTextIcon] #v [Goods.GetName]#! to [Goods.GetMarket.GetName]#!\n$CONTEXTUAL_GOODS_GENERATION_INFO_MARKET$"
 ESTABLISH_EXPORT_ROUTE_TOOLTIP:1 "[ConcatIfNeitherEmpty( Goods.CanEstablishExportTradeRouteDesc, '\n$TOOLTIP_DELIMITER$\n' )]#header Export [Goods.GetTextIcon] #v [Goods.GetName]#! from [Goods.GetMarket.GetName]#!\n$CONTEXTUAL_GOODS_GENERATION_INFO_MARKET$"

 ESTABLISH_IMPORT_ROUTE_TO_PLAYER_MARKET: "Import to the [AccessPlayer.AccessFirstMarket.GetName]"
 ESTABLISH_EXPORT_ROUTE_FROM_PLAYER_MARKET: "Export from the [AccessPlayer.AccessFirstMarket.GetName]"
 ESTABLISH_IMPORT_ROUTE_TO_PLAYER_MARKET_TOOLTIP: "#header Import [Goods.GetTextIcon] [Goods.GetName] to the [AccessPlayer.AccessFirstMarket.GetName] from the [Goods.GetMarket.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Goods.EstablishTradeRouteWithPlayerMarket('(bool)yes')), '\n')]$TOOLTIP_DELIMITER$\n[Goods.GetPredictionForNewTradeRouteWithPlayerDesc('(bool)yes')]"
 ESTABLISH_EXPORT_ROUTE_FROM_PLAYER_MARKET_TOOLTIP: "#header Export [Goods.GetTextIcon] [Goods.GetName] from the [AccessPlayer.AccessFirstMarket.GetName] to the [Goods.GetMarket.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Goods.EstablishTradeRouteWithPlayerMarket('(bool)no')), '\n')]$TOOLTIP_DELIMITER$\n[Goods.GetPredictionForNewTradeRouteWithPlayerDesc('(bool)no')]"

 TRADE_ROUTE_ADD:0 "[TradeRoute.GetIncreasedLevelPredictionTooltip]"
 TRADE_ROUTE_REDUCE:0 "[TradeRoute.GetDecreasedLevelPredictionTooltip]"

 TRADE_ROUTE_USED_CONVOYS_DESC:1 "Needs #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONVOY_COST$#!#!#! @convoys![concept_convoys]"
 TRADE_ROUTE_QUANTITY_DESC:2 "Units of [Goods.GetName] Traded: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VAL|0$#!#!#!"
 TRADE_ROUTE_QUANTITY_ZERO_DESC:1 "No [Goods.GetName] Traded"
 TRADE_ROUTE_TOOLTIP:3 "#header [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName] [TradeRoute.GetDirectionName] [concept_trade_route]#!\n$TOOLTIP_DELIMITER$\n[Concept('concept_market', '$concept_markets$')]: [TradeRoute.GetActingMarket.GetName] and [TradeRoute.GetRemoteMarket.GetName]\nRoute: [TradeRoute.GetExitPortState.GetName] to [TradeRoute.GetEntryPortState.GetName]\nManaged by [TradeRoute.GetTradeCenterBuilding.GetName] in [TradeRoute.GetTradeCenterState.GetName] ([TradeRoute.GetOwner.GetName])\n\n[TradeRoute.GetTradeQuantityDesc]\n[TradeRoute.GetRevenueAfterTariffDesc]\n[TradeRoute.GetPriceImpactDesc][ConcatIfNeitherEmpty('\n',TradeRoute.GetNumUsedConvoysDesc)]\n[TradeRoute.GetCostDesc]\n\n[TradeRoute.GetPredictedFinalLevelDesc]"
 CANNOT_CREATE_NEW_IMPORT_ROUTE:0 "#header #N Cannot import [Goods.GetTextIcon][Nbsp][Goods.GetName] to [FIRSTMARKET.GetName] from [SECONDMARKET.GetName]#!#!"
 CANNOT_CREATE_NEW_EXPORT_ROUTE:0 "#header #N Cannot export [Goods.GetTextIcon][Nbsp][Goods.GetName] from [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]#!#!"
 TRADE_QUANTITY_NEW_ROUTE_IMPORT:2 "#header Import [Goods.GetTextIcon][Nbsp][Goods.GetName] to [FIRSTMARKET.GetName] from [SECONDMARKET.GetName]#!"
 TRADE_QUANTITY_NEW_ROUTE_EXPORT:2 "#header Export [Goods.GetTextIcon][Nbsp][Goods.GetName] from [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]#!"
 TRADE_QUANTITY_NEW_ROUTE_DETAILS:0 "Predicted Level: #tooltippable #tooltip:$LEVEL_BREAKDOWN_TAG$ $LEVEL|v$#!#!\nPredicted Units of [Goods.GetTextIcon][Nbsp][Goods.GetName] Exported: #tooltippable #tooltip:$VOLUME_BREAKDOWN_TAG$ $VOLUME|v0$#!#!\nPredicted [concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$REVENUE_BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$REVENUE|D+$#!#! ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|D+$/employee annually)\n$PRICE_CHANGES$\nPredicted number of @convoys![concept_convoys] needed: $CONVOYS|v$\nPredicted @bur![concept_bureaucracy] cost: #tooltippable #tooltip:$BUREAUCRACY_BREAKDOWN_TAG$ $BUREAUCRACY|v1$#!#!"

 TRADE_QUANTITY_BREAKDOWN:0 "$TRADE_POWER_BREAKDOWN$$TRADE_PENALTY_BREAKDOWN$"
 TRADE_ROUTE_PRICE_PROJECTION:0 "Projected Price in [FIRSTMARKET.GetName]: #v [GetPlayer.GetCustom('currency_symbol')]$ACTING_NEW_PRICE$#! (from #v [GetPlayer.GetCustom('currency_symbol')]$ACTING_OLD_PRICE$#!)\nProjected Price in [SECONDMARKET.GetName]: #v [GetPlayer.GetCustom('currency_symbol')]$REMOTE_NEW_PRICE$#! (from #v [GetPlayer.GetCustom('currency_symbol')]$REMOTE_OLD_PRICE$#!)"
 TRADE_ROUTE_QUANTITY_BASE:0 "Base Quantity for [Goods.GetName]: #v $VALUE$#! x #v $LEVEL$#! level(s)"
 TRADE_ROUTE_QUANTITY_ECONOMY_OF_SCALE:0 "Multiplied by #v x$MULT$#! due to Economy of Scale bonuses for [concept_trade_route] level #v $LEVEL$#!"
 TRADE_ROUTE_QUANTITY_MOD_DESC:1 "[COUNTRY.GetName] Quantity Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|%=+0$#!#!#!"
 TRADE_ROUTE_EXPORTS_MOD_DESC:1 "[COUNTRY.GetName] Export Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|=+0$#!#!#!"
 TRADE_ROUTE_IMPORTS_MOD_DESC:1 "[COUNTRY.GetName] Import Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|=+0$#!#!#!"
 TRADE_ROUTE_DELTA_IMPORT_BREAKDOWN:0 "Current Import: #tooltippable #v #tooltip:$PREV_BREAKDOWN_TAG$ $PREV_AMOUNT|0$#!#!#!\nProjected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!\nProjected Change: #v $DELTA|+=1$#!"
 TRADE_ROUTE_DELTA_EXPORT_BREAKDOWN:0 "Current Import: #tooltippable #v #tooltip:$PREV_BREAKDOWN_TAG$ $PREV_AMOUNT|0$#!#!#!\nProjected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!\nProjected Change: #v $DELTA|+=1$#!"
 TRADE_ROUTE_NEW_IMPORT_BREAKDOWN:0 "Projected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!"
 TRADE_ROUTE_NEW_EXPORT_BREAKDOWN:0 "Projected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!"
 TRADE_ROUTE_DESIRED_QUANTITY_IMPORT:1 "Desired Imports for level #v $LEVELS$#! [concept_trade_route]: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_DESIRED_QUANTITY_EXPORT:1 "Desired Exports for level #v $LEVELS$#! [concept_trade_route]: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_DESIRED_QUANTITY_BREAKDOWN:0 "#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $PER_LEVEL$#!#!#! x #v $LEVELS$#! [concept_trade_route] level(s)"
 TRADE_ROUTE_COMPETITIVENESS:0 "Trade Route Competitiveness: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_COMPETITIVENESS_ZERO:0 "Trade Route Competitiveness: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ #r $VAL|0$#!#!#!#!"
 TRADE_ROUTE_GOODS_EXPORT_HEADER:1 "Export Breakdown of [Goods.GetTextIcon][Nbsp][Goods.GetName] from [MARKET.GetName]:"
 TRADE_ROUTE_TOTAL_DESIRED_EXPORTS:1 "Current Desired Exports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_TOTAL_AVAILABLE_EXPORTS:0 "Potential Exports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_GOODS_IMPORT_HEADER:1 "Import Breakdown of [Goods.GetTextIcon][Nbsp][Goods.GetName] to [MARKET.GetName]:"
 TRADE_ROUTE_TOTAL_DESIRED_IMPORTS:1 "Current Desired Imports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_TOTAL_AVAILABLE_IMPORTS:0 "Potential Imports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
 TRADE_ROUTE_NO_INTEREST_IN_REGIONS:0 "Either [COUNTRY.GetName] or [TARGET_COUNTRY.GetName] must have an [concept_interest] in a [concept_strategic_region] where the other [Concept('concept_country','$concept_country_possessive$')] [concept_market] is present for trade to be possible"
 TRADE_ROUTE_LANDLOCKED_COUNTRY:0 "You cannot trade overseas since your [concept_market_capital] has no access to a coast"
 TRADE_ROUTE_EXPORTS_CAPPED:0 "Desired exports exceed potential, limiting traded amount to #v $POSSIBLE_QUANTITY|0$#! (#v $TOTAL_POSSIBLE_QUANTITY|0$#! x #v $QUANTITY_PERC|0%$#! competitiveness share)"
 TRADE_ROUTE_IMPORTS_CAPPED:0 "Desired imports exceed potential, limiting traded amount to #v $POSSIBLE_QUANTITY|0$#! (#v $TOTAL_POSSIBLE_QUANTITY|0$#! x #v $QUANTITY_PERC|0%$#! competitiveness share)"
 TRADE_ROUTE_MARKET_LACKS_PORT:0 "Not possible to establish this [concept_trade_route] because [MARKET.GetName] lacks a port."
 TRADE_ROUTE_COMPETITION_ENTRY_EXPORTS:1 "[Country.GetAdjectiveNoFormatting] [concept_trade_route] desires #v #tooltippable #tooltip:$QUANTITY_BREAKDOWN_TAG$ $DESIRED_QUANTITY|0$#!#!#! exports with #v #tooltippable #tooltip:$COMPETITIVENESS_BREAKDOWN_TAG$ $COMPETITIVENESS|0$#!#!#! competitiveness"
 TRADE_ROUTE_COMPETITION_ENTRY_IMPORTS:1 "[Country.GetAdjectiveNoFormatting] [concept_trade_route] desires #v #tooltippable #tooltip:$QUANTITY_BREAKDOWN_TAG$ $DESIRED_QUANTITY|0$#!#!#! imports with #v #tooltippable #tooltip:$COMPETITIVENESS_BREAKDOWN_TAG$ $COMPETITIVENESS|0$#!#!#! competitiveness"
 TRADE_ROUTE_MAX_EXPORTS_BREAKDOWN:4 "#header [Market.GetName] Export Potential for [Goods.GetName]: #v $MAX_EXPORTS|0$#!#!\n$TOOLTIP_DELIMITER$\nLocal [concept_sell_orders]: #v $SELL_ORDERS|0$#!\n\nExport Potential is equal to the number of Local [concept_sell_orders] modified by the Maximum Exports Multiplier of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $MULTIPLIER|%0$#!#!#!"
 TRADE_ROUTE_MAX_IMPORTS_BREAKDOWN:4 "#header [Market.GetName] Import Potential for [Goods.GetName]: #v $MAX_IMPORTS|0$#!#!\n$TOOLTIP_DELIMITER$\nLocal [concept_buy_orders]: #v $BUY_ORDERS|0$#!\n\nImport Potential is equal to the number of Local [concept_buy_orders] modified by the Maximum Imports Multiplier of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $MULTIPLIER|%0$#!#!#!"
 TRADE_ROUTE_MIN_NUM_MAX_IMPORTS:0 "Import Potential of a [concept_good] cannot be lower than [GetDefine( 'NEconomy', 'TRADE_ROUTE_MIN_TOTAL_IMPORTS' )]"
 TRADE_ROUTE_EMPLOYMENT_IMPACT:0 "Multiplied by #v #n x$VALUE|$#!#! due to staffing level of [Building.GetState.GetName] [Building.GetName]"
 TRADE_ROUTE_EXPECTED_EXPORTS_GROWTH:0 "Weekly growth of [Concept('concept_trade_route', '$concept_trade_routes$')] belonging to other [Concept('concept_country', '$concept_countries$')] are projected to add demand for an additional #v $EXPECTED_QUANTITY$|0#! exports"
 TRADE_ROUTE_EXPECTED_IMPORTS_GROWTH:0 "Weekly growth of [Concept('concept_trade_route', '$concept_trade_routes$')] belonging to other [Concept('concept_country', '$concept_countries$')] are projected to add demand for an additional #v $EXPECTED_QUANTITY$|0#! imports"
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_INCREASE:1 "@arrow_up! This [concept_trade_route] is predicted to grow from level #v $CUR_LEVEL$#! to #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#! under current [concept_market] conditions, assuming the Trade Center can maintain high employment"
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_DECREASE:1 "@arrow_down! This [concept_trade_route] is predicted to shrink from level #v $CUR_LEVEL$#! to #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#! under current [concept_market] conditions"
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_NO_CHANGE:1 "@arrow_none! This [concept_trade_route] is predicted to remain at level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CUR_LEVEL$#!#!#! under current [concept_market] conditions"
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_INCREASE_SHORT:1 "It's currently predicted to grow to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#!."
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_DECREASE_SHORT:1 "It's currently predicted to shrink to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#!."
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_NO_CHANGE_SHORT:1 "It's currently predicted to remain at level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CUR_LEVEL$#!#!#!."
 TRADE_ROUTE_PREDICTED_FINAL_LEVEL_IMPACT:0 "#header Effects of Predicted [concept_trade_route] Level $LEVEL$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TRADE_ROUTE_PREDICTED_VOLUME:0 "Predicted Units of [Goods.GetName] Traded: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VOLUME|0$#!#!#!"
 TRADE_ROUTE_REVENUE_AFTER_TARIFF:0 "[concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$REVENUE_AFTER_TARIFF|D+$#!#! ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|D+$/employee annually)"
 TRADE_ROUTE_PREDICTED_REVENUE_AFTER_TARIFF:0 "Predicted [concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$REVENUE_AFTER_TARIFF|D+$#!#! ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|D+$/employee annually)"
 TRADE_ROUTE_REVENUE_BREAKDOWN:1 "#header [concept_trade_revenue]: [GetPlayer.GetCustom('currency_symbol')]$REVENUE|D+$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName] Traded: $VOLUME|v0$\n[concept_trade_revenue] per unit: [GetPlayer.GetCustom('currency_symbol')]$PROFIT|Dv$\n\n@information! [concept_trade_revenue] is calculated by taking the $IMPORT_PRICE_DESC$ of [GetPlayer.GetCustom('currency_symbol')]$IMPORTING_PRICE|Dv$ in the importing [concept_market], subtracting the $EXPORT_PRICE_DESC$ of [GetPlayer.GetCustom('currency_symbol')]$EXPORTING_PRICE|Dv$ in the exporting [concept_market] and then multiplying by the number of units"
 TRADE_ROUTE_PREDICTED_REVENUE_BREAKDOWN:1 "#header Predicted [concept_trade_revenue]: [GetPlayer.GetCustom('currency_symbol')]$REVENUE|D+$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName] Traded: $VOLUME|v0$\n[concept_trade_revenue] per unit: [GetPlayer.GetCustom('currency_symbol')]$PROFIT|Dv$\n\n@information! [concept_trade_revenue] is calculated by taking the $IMPORT_PRICE_DESC$ of [GetPlayer.GetCustom('currency_symbol')]$IMPORTING_PRICE|Dv$ in the importing [concept_market], subtracting the $EXPORT_PRICE_DESC$ of [GetPlayer.GetCustom('currency_symbol')]$EXPORTING_PRICE|Dv$ in the exporting [concept_market] and then multiplying by the number of units"
 TRADE_ROUTE_REVENUE_MARKET_PRICE:0 "[concept_market_price]"
 TRADE_ROUTE_REVENUE_AVERAGE_IMPORT_PRICE:0 "average sale price"
 TRADE_ROUTE_REVENUE_AVERAGE_EXPORT_PRICE:0 "average purchase price"
 TRADE_ROUTE_REVENUE_AFTER_TARIFF_BREAKDOWN:0 "#header [concept_trade_revenue] after [concept_tariffs]: [GetPlayer.GetCustom('currency_symbol')]$REVENUE_AFTER_TARIFF|D+$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|D+$/employee annually)#!\n$TOOLTIP_DELIMITER$\n[concept_trade_route] Level: $LEVEL|v$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_trade_revenue]: #tooltippable #tooltip:$REVENUE_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$REVENUE|D+$#!#!\n[concept_tariffs]: #tooltippable #tooltip:$TARIFF_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$TARIFF|D+$#!#!"
 TRADE_ROUTE_PREDICTED_REVENUE_AFTER_TARIFF_BREAKDOWN:0 "#header Predicted [concept_trade_revenue] after [concept_tariffs]: [GetPlayer.GetCustom('currency_symbol')]$REVENUE_AFTER_TARIFF|D+$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCTIVITY|D+$/employee annually)#!\n$TOOLTIP_DELIMITER$\n[concept_trade_route] Level: $LEVEL|v$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_trade_revenue]: #tooltippable #tooltip:$REVENUE_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$REVENUE|D+$#!#!\n[concept_tariffs]: #tooltippable #tooltip:$TARIFF_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$TARIFF|D+$#!#!"
 TRADE_ROUTE_PRICE_CHANGE:2 "Price Impact on [Goods.GetName] in [Market.GetName]: [GetPlayer.GetCustom('currency_symbol')]$BEFORE_PRICE|1v$ $PRICE_CUR_ICON$ @arrow_right! [GetPlayer.GetCustom('currency_symbol')]$AFTER_PRICE|1v$ $PRICE_NEW_ICON$"
 TRADE_ROUTE_PREDICTED_PRICE_CHANGE:2 "Predicted Price Impact on [Goods.GetName] in [Market.GetName]: [GetPlayer.GetCustom('currency_symbol')]$BEFORE_PRICE|1v$ $PRICE_CUR_ICON$ @arrow_right! [GetPlayer.GetCustom('currency_symbol')]$AFTER_PRICE|1v$ $PRICE_NEW_ICON$"
 TRADE_ROUTE_TARIFF_BREAKDOWN:1 "#header [concept_tariffs] Paid#!\nThis Trade Route pays a total of [GetPlayer.GetCustom('currency_symbol')]$TOTAL_TARIFF|D-$ in [concept_tariffs]\n$TOOLTIP_DELIMITER$\n$DETAILS$\n\n@information! The [concept_tariffs] paid by a [concept_trade_route] is calculated by multiplying the [Concept('concept_tariffs','$concept_tariff$')] Base by the combined Import and Export [Concept('concept_tariffs','$concept_tariff$')] rates"
 TRADE_ROUTE_TARIFF_BASE_BREAKDOWN:0 "#header [Concept('concept_tariffs','$concept_tariff$')] Base: [GetPlayer.GetCustom('currency_symbol')]$TARIFF_BASE|Dv$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_base_price]: [GetPlayer.GetCustom('currency_symbol')]$BASE_PRICE|0v$\n\n@information! The [Concept('concept_tariffs','$concept_tariff$')] Base is calculated by multiplying the number of traded units by the [concept_base_price] of the traded [Concept('concept_good', '$concept_goods$')]"
 TRADE_ROUTE_TARIFF_BASE:0 "[Concept('concept_tariffs','$concept_tariff$')] Base: #tooltippable #tooltip:$BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$TARIFF_BASE|Dv$#!#!"
 TRADE_ROUTE_TARIFF_RATE_SINGLE:0 "$EXPORT_IMPORT$ [concept_tariffs] on [Goods.GetName] in [Market.GetName]: $TARIFF_RATE|v%$"
 TRADE_ROUTE_TARIFF_RATE_TOTAL:0 "Total [Concept('concept_tariffs','$concept_tariff$')] Rate on [Goods.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $TARIFF_RATE|v%$#!#!"

 TRADE_ROUTE_AUTO_INCREASE_MAX_LEVEL:0 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because it is above the maximum level of [GetDefine( 'NEconomy', 'TRADE_ROUTE_MAX_LEVEL' )|v]"
 TRADE_ROUTE_AUTO_INCREASE_NOT_FULLY_EMPLOYED:0 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! while [Building.GetName] has less than [GetDefine( 'NEconomy', 'TRADE_ROUTE_AUTO_INCREASE_EMPLOYMENT_THRESHOLD' )|v] employment"
 TRADE_ROUTE_AUTO_INCREASE_GOODS_VOLUME_NOT_IMPROVED:0 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because the number of [Concept('concept_good', '$concept_goods$')] traded would not increase"
 TRADE_ROUTE_AUTO_INCREASE_REVENUE_WOULD_DECREASE:2 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because the total [concept_trade_revenue] after [concept_tariffs] would decrease too much (#tooltippable #tooltip:$BREAKDOWN_OLD$ [GetPlayer.GetCustom('currency_symbol')]$OLD_REVENUE|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ [GetPlayer.GetCustom('currency_symbol')]$NEW_REVENUE|D+$#!#!) and the revenue per employee annually is below [GetPlayer.GetCustom('currency_symbol')][GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_HIGH_PRODUCTIVITY_THRESHOLD')|Dv]"
 TRADE_ROUTE_AUTO_INCREASE_PRODUCTIVITY_TOO_LOW:1 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because its [concept_trade_revenue] after [concept_tariffs] per employee annually would decrease and be below [GetPlayer.GetCustom('currency_symbol')][GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_LOW_PRODUCTIVITY_THRESHOLD')|Dv] (#tooltippable #tooltip:$BREAKDOWN_OLD$ [GetPlayer.GetCustom('currency_symbol')]$OLD_PRODUCTIVITY|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ [GetPlayer.GetCustom('currency_symbol')]$NEW_PRODUCTIVITY|D+$#!#!)"
 TRADE_ROUTE_AUTO_INCREASE_LAND_TRADE_CAPPED:0 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because there is no sea route and not enough [concept_land_trade_capacity] for the new level"
 TRADE_ROUTE_AUTO_INCREASE_NOT_ENOUGH_CONVOYS:1 "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because it would end up using too many [concept_convoys] (@convoys!$REQUIRED_CONVOYS|v$ [concept_convoys] required to grow, @convoys!$AVAILABLE_CONVOYS|v$ [concept_convoys] available)"
 TRADE_ROUTE_AUTO_REDUCE_MAX_LEVEL:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it is above the maximum level of [GetDefine( 'NEconomy', 'TRADE_ROUTE_MAX_LEVEL' )|v]"
 TRADE_ROUTE_AUTO_REDUCE_NO_TRADED_GOODS:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it is currently not trading any [Concept('concept_good', '$concept_goods$')]"
 TRADE_ROUTE_AUTO_REDUCE_SAME_OR_IMPROVED_GOODS_VOLUME:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because the amount of [Concept('concept_good', '$concept_goods$')] traded would not decrease"
 TRADE_ROUTE_AUTO_REDUCE_REVENUE_WOULD_IMPROVE:1 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because the total [concept_trade_revenue] after [concept_tariffs] would increase significantly (#tooltippable #tooltip:$BREAKDOWN_OLD$ [GetPlayer.GetCustom('currency_symbol')]$OLD_REVENUE|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ [GetPlayer.GetCustom('currency_symbol')]$NEW_REVENUE|D+$#!#!)"
 TRADE_ROUTE_AUTO_REDUCE_NOT_ENOUGH_CONVOYS:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it would improve the condition of the [concept_supply_network] (@convoys!$REQUIRED_CONVOYS|v$ [concept_convoys] required, @convoys!$AVAILABLE_CONVOYS|v$ [concept_convoys] available)"
 TRADE_ROUTE_AUTO_REDUCE_LAND_TRADE_CAPPED:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because there is no sea route and not enough [concept_land_trade_capacity] for its current level"
 TRADE_ROUTE_AUTO_REDUCE_INSUFFICIENT_EMPLOYMENT:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because [Building.GetName] has less than [GetDefine( 'NEconomy', 'TRADE_ROUTE_AUTO_REDUCTION_EMPLOYMENT_THRESHOLD' )|v] employment"
 TRADE_ROUTE_AUTO_REDUCE_PRODUCTIVITY_TOO_LOW:0 "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because its [concept_trade_revenue] after [concept_tariffs] per employee annually would increase and is below [GetPlayer.GetCustom('currency_symbol')][GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_VERY_LOW_PRODUCTIVITY_THRESHOLD')|Dv] (#tooltippable #tooltip:$BREAKDOWN_OLD$ [GetPlayer.GetCustom('currency_symbol')]$OLD_PRODUCTIVITY|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ [GetPlayer.GetCustom('currency_symbol')]$NEW_PRODUCTIVITY|D+$#!#!)"

 TRADE_ROUTE_COST_TRADE_AGREEMENT:0 "No @bur! [concept_bureaucracy] cost due to [concept_trade_agreement]"
 TRADE_ROUTE_COST:0 "Costs #tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|v0$#!#! @bur![concept_bureaucracy] to maintain"
 TRADE_ROUTE_COST_BREAKDOWN:0 "#header [concept_trade_route] @bur![concept_bureaucracy] cost: $COST|v1$#!\n$TOOLTIP_DELIMITER$\n$COST_DESC$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]"
 TRADE_ROUTE_COST_FREE_ROUTE: "No @bur![concept_bureaucracy] cost (Free [concept_trade_route] $ROUTE_NUMBER|v$/[COUNTRY.GetModifier.GetNonFormattedValueWithBreakdownFor('country_free_trade_routes_add')|v0])"

 GOODS_MAX_EXPORTS_IMPORTS_BASE: "Base Multiplier from Price Range: #v x$AMOUNT|1$#!"
 GOODS_MAX_EXPORTS_HEADER:0 "#header Maximum Export Multiplier of [Goods.GetName] in [Market.GetName]: #v $VALUE|%$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_MAX_EXPORTS_EMBARGO:0 "[concept_embargo]: #v $VALUE|%+$#!"
 GOODS_MAX_EXPORTS_NO_FACTORS:0 "There are currently no factors modifying the Maximum Exports of [Goods.GetName] in [Market.GetName]"
 GOODS_MAX_IMPORTS_HEADER:0 "#header Maximum Import Multiplier of [Goods.GetName] in [Market.GetName]: #v $VALUE|%$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_MAX_IMPORTS_NO_FACTORS:0 "There are currently no factors modifying the Maximum Imports of [Goods.GetName] in [Market.GetName]"

 TRADE_ROUTE_MARKET_NOT_ALLOWED:1 "[MARKET.GetName] is not allowed to have [Concept('concept_trade_route', '$concept_trade_routes$')] due to Isolationist Trade Policy"
 TRADE_ROUTE_GOODS_BANNED:0 "There is an active ban on [GOODS.GetName] in [MARKET.GetName]"
 TRADE_ROUTE_EMBARGO:0 "[MARKET.GetOwner.GetName] has an [concept_embargo] against [Country.GetName]"

 OTHER_COUNTRIES_TRADE_ROUTES:1 "Other Countries' Trade Routes with [MarketGoods.GetMarket.GetOwner.GetName] ([MarketGoods.GetNumOthersOwnedTradeRoutes]):"

 TRADE_ROUTE_EMPTY_STATE:0 "There are no [Concept('concept_trade_route', '$concept_trade_routes$')] in the [Market.GetName]"
 NEW_IMPORT_ROUTE:0 "New Import Route"
 NEW_EXPORT_ROUTE:0 "New Export Route"
 NEW_IMPORT_ROUTE_TO_PLAYER: "Import to [AccessPlayer.AccessFirstMarket.GetName]"
 NEW_EXPORT_ROUTE_FROM_PLAYER: "Export from [AccessPlayer.AccessFirstMarket.GetName]"

 SUPPLY_NETWORK_EMPTY_STATE:0 "[Country.GetName] has no [concept_supply_network]"

 TRADE_PENALTY_SUPPLY_NETWORK:0 "[concept_supply_network] strength: #v $VAL|=+%0$#!"
 TRADE_ROUTE_DOMESTIC_TRADE_BONUS:0 "Domestic [concept_trade_route]: #v $VAL|=+1$#!"
 TRADE_ROUTE_TRADE_AGREEMENT_BONUS:0 "Active [concept_trade_agreement]: #v $VAL|=+1$#!"

 TRADE_ROUTE_COMPETITIVENESS_DESC:0 "#header [concept_trade_route] Competitiveness#!: #v $VAL|1$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 COMPETITIVENESS_TRADE_ROUTE_LEVEL:1 "Base Amount per [concept_trade_route]: #v $VAL|1$#!"
 COMPETITIVENESS_DOMESTIC_TRADE_BONUS:0 "Domestic [concept_trade_route]: #v #p +x$VAL|1$#!#!"
 COMPETITIVENESS_TRADE_AGREEMENT_BONUS:0 "Active [concept_trade_agreement]: #v #p +x$VAL|1$#!#!"
 COMPETITIVENESS_TRADE_ROUTE_DURATION:0 "Age of [concept_trade_route]: #v #p +x$VAL|1$#!#!"
 COMPETITIVENESS_SHIPPING_LANE_STRENGTH:1 "Low [concept_shipping_lane_effectiveness]: #v #n x$VAL|2$#!#!"

 TRADE_AMOUNT_DELTA:0 "(#v $VAL|+=D$#!)"

 TRADE_ROUTE_CANCEL:0 "Stop trading #variable [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName]#! from #variable [TradeRoute.GetExportingMarket.GetName]#!"

 TRADE_ROUTE_BEING_ESTABLISHED:0 "Setting up"
 TRADE_ROUTE_ZERO_TRADES:0 "Inactive"

 same_import_export_market:0 "Cannot import to and export from the same market"

 TRADE_ROUTE_LOCKED_FROM_CANCELLING:0 "Trade Route level cannot be reduced until #v $DATE$#!"
 CANCEL_TRADE_ROUTE_NOT_TRADE_ROUTE_OWNER: "You do not own this Trade Route"
 TRADE_ROUTE_WOULD_YIELD_NO_GOODS:1 "Traded Quantity of [Concept('concept_good', '$concept_goods$')] would be #v 0#!"
 TRADE_ROUTE_ALREADY_EXISTS:0 "We already have a [concept_trade_route] for [Goods.GetName] between these Markets"
 TRADE_ROUTE_EMBARGOED_GOODS:2 "You are not a participant in [MARKET.GetName] and [Goods.GetTextIcon][Nbsp][Goods.GetName] is [Concept('concept_embargo', '$concept_embargoed$')] there"
 INSUFFICIENT_SELL_ORDERS:0 "Insufficient Supply in [MARKET.GetName] × $RATIO|-%1$: $VAL|vD$\n$TAB$Sell Orders available in [MARKET.GetName]: $SELL_ORDERS|vD$\n$TAB$Total Import Demand: $TOTAL_DEMAND|vD$"
 TRADE_ROUTE_UNREACHABLE:1 "We have no way of reaching this [concept_market]"

 MARKET_NAME_WITH_STATUS_ISOLATED:0 "#bold [MARKET.GetNameNoFormatting]#! #maximum (Isolated)#!"
 MARKET_NAME_WITH_STATUS:0 "#bold [MARKET.GetNameNoFormatting]#!"

 PEACE_ACCEPTANCE_SUMMARY:0 "#title Acceptance Score: #bold $VAL|+$#!#!"
 CAPITULATION_DESIRE_SUMMARY: "[Country.GetName]'s [concept_capitulation_desire]\nCurrent: #value $VAL|+=$#!\n$TOOLTIP_DELIMITER$\n#title Due to:#!"
 PEACE_ACCEPTANCE_BASE_VALUE:0 "Base Value: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_SUPPORT:0 "[concept_war_support]: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_LEADER:1 "[Country.GetName] is [concept_war_leader]: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WHITE_PEACE:0 "White Peace: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_OWN_WAR_GOALS: "[Country.GetAdjective] [Concept('concept_war_goal', '$concept_war_goals$')] that will be lost: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_ENEMY_WAR_GOALS_ON_SELF: "[Concept('concept_war_goal', '$concept_war_goals$')] that will be pressed on [Country.GetName]: #bold $VAL|=+$#!"

 MEMBERS_SUMMARY_ITEM: "[InterestGroup.GetTextIcon]"
 MEMBERS_SUMMARY_FORMAT: "($MEMBERS_LIST$)"

 PEACE_ACCEPTANCE_PRESSED_WARGOAL:0 "[WAR_GOAL.GetName] is part of the [concept_peace_deal]: $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_WARGOAL:0 "[WAR_GOAL.GetName] is achievable through capitulation: $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_PRESSED_WARGOAL:0 "[WAR_GOAL.GetName] is part of the [concept_peace_deal]: $VAL|=+$ (effect reduced because the [concept_war_goal] is likely to be lost in capitulation)"
 PEACE_ACCEPTANCE_TOTAL_VICTORY:0 "Complete Victory: #bold $VAL|=+$#!"
 ADD_WARGOAL_ITEM:2 "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc]\n[ConcatIfNeitherEmpty(WarGoal.GetAddWarGoalDiplomaticIncidentDesc, '\n')][ConcatIfNeitherEmpty(AddWarGoalPanel.GetDiplomaticPlay.GetCanAddWarGoalDesc( WarGoal.Self ), '\n')]"

 UNIFICATION_SUPPORT_ATTITUDE_SCORE:0 "#v [Country.GetAttitudeTowards(COUNTRY_THIRD_PARTY.Self).GetName]#! attitude: #v $VALUE$#!"
 UNIFICATION_SUPPORT_RELATIONS_SCORE:0 "#v [Country.GetRelationsWithDesc(COUNTRY_THIRD_PARTY.Self)]#! relations: #v $VALUE$#!"
 UNIFICATION_SUPPORT_RANK_SCORE:0 "[Country.GetName] is a #v [COUNTRY.GetRank]#!: #v $VALUE$#!"
 UNIFICATION_SUPPORT_POWER_BLOC_SCORE: "[Country.GetName] and [TARGET_COUNTRY.GetName] are [Concept('concept_power_bloc_member','$concept_power_bloc_members$')]: #v $VAL$#!"
 UNIFICATION_SUPPORT_COHESION_SCORE: "[PowerBloc.GetName] has [CohesionLevel.GetName] [concept_power_bloc_cohesion]: #v $VAL$#!"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_ENTRY:0 "[Country.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE$#!#!#!"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_DESC:0 "Support for [CountryFormation.GetAdjective] [Concept('concept_unification_candidate', '$concept_unification_candidates$')]:\n$DETAILS$"
 UNIFICATION_CANDIDATE_SUPPORT_BREAKDOWN:0 "#header [Country.GetAdjectiveNoFormatting] support for [COUNTRY_THIRD_PARTY.GetName] as [concept_unification_candidate] of [CountryFormation.GetName]: #v $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"

 NO_VALID_WAR_GOALS:1 "No valid [Concept('concept_war_goal', '$concept_war_goals$')]"

 WARGOAL_TOOLTIP:3 "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc][ConcatIfNeitherEmpty('\n\n',WarGoal.GetInfamyDesc)][ConcatIfNeitherEmpty('\n\n',WarGoal.GetStatusString)]"
 WARGOAL_ACTIVE_TOOLTIP:1 "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc][ConcatIfNeitherEmpty('\n\n',WarGoal.GetInfamyDesc)][ConcatIfNeitherEmpty('\n\n',WarGoal.GetStatusString)]"
 WARGOAL_INFAMY_DESC:1 "Demanding this resulted in @infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] for [WAR_GOAL.GetCreator.GetName]"
 WARGOAL_POTENTIAL_INFAMY_DESC:1 "Demanding this would result in @infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] for [WAR_GOAL.GetCreator.GetName]"
 BASE_WARGOAL_MANEUVERS_COST_DESC:3 "Demanding this uses up @maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcBaseManeuversCost|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')]"
 ADD_WARGOAL_MANEUVERS_COST_DESC:1 "Demanding this uses up @maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcManeuversCostToAdd|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')]"
 WARGOAL_IS_INVALID:0 "This [concept_war_goal] is #N invalid#! and cannot currently be pressed by [WarGoal.GetHolder.GetName]:#!\n$ERRORS$"
 WARGOAL_IS_EXECUTED:1 "This [concept_war_goal] has been enforced against [WAR_GOAL.GetWarGoalStakeholder.GetName]"
 WARGOAL_IS_DEMANDED:0 "This [concept_war_goal] is being presented as a demand in a [concept_diplomatic_play]"
 WARGOAL_IS_PRESSED:1 "This [concept_war_goal] is #P being pressed#! by [WarGoal.GetHolder.GetName] in the [WAR_GOAL.GetWar.GetName] and will be enforced if the current [concept_peace_deal] is accepted by all involved Countries"
 WARGOAL_IS_NOT_PRESSED:1 "This [concept_war_goal] is #N NOT being pressed#! by [WarGoal.GetHolder.GetName] in the [WAR_GOAL.GetWar.GetName] and will NOT be enforced if the current [concept_peace_deal] is accepted by all involved Countries"
 OBLIGATION_MANEUVERS_COST:1 "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]"
 OBLIGATION_MANEUVERS_COST_TOOLTIP:2 "#header [concept_obligation]#!\n[Concept('concept_maneuver', '$concept_maneuvers$')] Cost: @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]\nWe have [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
 OBLIGATION_MANEUVERS_DESC:2 "Offering an [concept_obligation] always costs @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 OBLIGATION_CALL_IN_MANEUVERS_COST:0 "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]"
 OBLIGATION_CALL_IN_MANEUVERS_COST_TOOLTIP:0 "#header [concept_obligation]#!\n[Concept('concept_maneuver', '$concept_maneuvers$')] Cost: @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]\nWe have [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
 OBLIGATION_CALL_IN_MANEUVERS_DESC:1 "Calling in an [concept_obligation] always costs @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 SWAY_OFFER_MANEUVERS_DESC: "Offering $NAME|v$ always costs @maneuvers!$COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')]"
 OFFER_SUPPORT: "Negotiate Support"

 SWAY_OFFER_MANEUVERS_COST_DESC:1 "#header @maneuvers! $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')] to $SWAY_OFFER|v$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADD_WARGOAL_MANEUVERS_COST:1 "@maneuvers![WarGoal.CalcManeuversCostToAdd|v]"
 ADD_WARGOAL_MANEUVERS_COST_TOOLTIP:1 "#header [concept_war_goal] [Concept('concept_maneuver', '$concept_maneuvers$')] Cost: [WarGoal.CalcManeuversCostToAdd|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetManeuversCostToAddDesc]\nWe have [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
 BASE_WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcBaseManeuversCost|v]"
 BASE_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal] [Concept('concept_maneuver', '$concept_maneuvers$')] Cost: [WarGoal.CalcBaseManeuversCost|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetBaseManeuversCostDesc]\nWe have [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
 WARGOAL_INFAMY_TOOLTIP:0 "#header [concept_war_goal] [concept_infamy]: [WarGoal.GetInfamyAmount|-1]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetInfamyDesc]"
 WARGOAL_INFAMY:0 "@infamy![WarGoal.GetInfamyAmount|-1]"
 WARGOAL_WILL_ENACT_LAWS: "The following $concept_laws$ will be imposed: $LAWS$"

 WAR_SUPPORT_CANNOT_BE_NEGATIVE: "[concept_war_support] cannot be reduced below #variable 0#! because neither their [concept_capital_state] nor the following [Concept('concept_war_goal','$concept_war_goals$')] are being occupied:"
 WAR_SUPPORT_CANNOT_BE_NEGATIVE_WAR_GOAL_ENTRY:0 "- [WAR_GOAL.GetName]"

 DO_COUNTRY_ACCEPT_THIS_PEACE_DEAL: "Do you accept this [concept_peace_deal]?"
 DAYS_UNTIL_PEACE_DEAL_FAILS: "#v [War.GetDaysUntilPeaceDealFails] days#! left"
 CURRENTLY_REJECTING_PEACE_DEAL_TOOLTIP: "You are currently rejecting the [concept_peace_deal] which will be fully rejected in #v [War.GetDaysUntilPeaceDealFails] days#! unless you change your mind"
 REJECTING_PEACE_DEAL_TOOLTIP: "If you reject, the [concept_peace_deal] will be fully rejected in #v [War.GetDaysUntilPeaceDealFails] days#! unless you change your mind"
 ACCEPTING_PEACE_DEAL_TOOLTIP: "If you accept, the [War.GetName] [concept_war] will end and the above #b pressed#! [Concept('concept_war_goal', '$concept_war_goals$')] will be enforced"
 CURRENTLY_ACCEPTING_PEACE_DEAL_TOOLTIP: "You have accepted the [concept_peace_deal] which means the [War.GetName] [concept_war] will end and all #b pressed#! [Concept('concept_war_goal', '$concept_war_goals$')] will be enforced"
 WAR_PANEL_CURRENT_PEACE_DEAL_PROPOSER:0 "Proposed by [WarPanel.GetWar.GetCountryProposingPeace.GetName]"
 WAR_PANEL_NO_CURRENT_PEACE_DEAL:0 "No Current [concept_peace_deal]"
 WAR_PANEL_CURRENT_PEACE_DEAL:1 "Current [concept_peace_deal]"
 WAR_PANEL_OVERVIEW:0 "Overview"
 WAR_PANEL_PEACE:0 "Make Peace"
 WAR_PANEL_PEACE_TOOLTIP:2 "#header $WAR_PANEL_CURRENT_PEACE_DEAL$#!\n$TOOLTIP_DELIMITER$\n#title Pressed [Concept('concept_war_goal', '$concept_war_goals$')]:#!\n[War.GetPressedWarGoalsString]\n\n[ConcatIfNeitherEmpty(War.GetPeaceDealValidationDesc, '\n' )][War.GetAcceptActivePeaceDealDesc]"
 WAR_PANEL_ALL_ACCEPT_PEACE:2 "@green_checkmark_box! #bold All parties agree to this [concept_peace_deal].#!"
 WAR_PANEL_NONE_ACCEPT_PEACE:2 "@red_cross! #bold No party agrees to this [concept_peace_deal].#!"
 WAR_PANEL_ACCEPT_PEACE_ONE:2 "@green_checkmark_box! $COUNTRY$ #bold agrees#! to this [concept_peace_deal]."
 WAR_PANEL_ACCEPT_PEACE_LIST:2 "@green_checkmark_box! $LIST$ #bold agree#! to this [concept_peace_deal]."
 WAR_PANEL_NOT_ACCEPT_PEACE_ONE:2 "@red_cross! $COUNTRY$ #bold does not agree#! to this [concept_peace_deal]."
 WAR_PANEL_NOT_ACCEPT_PEACE_LIST:2 "@red_cross! $LIST$ #bold do not agree#! to this [concept_peace_deal]."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_ONE:2 "@green_checkmark_box! $COUNTRY$ #bold will likely agree#! to this [concept_peace_deal]."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_LIST:2 "@green_checkmark_box! $LIST$ #bold will likely agree#! to this [concept_peace_deal]."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_ONE:2 "@red_cross! $COUNTRY$ #bold will likely not agree#! to this [concept_peace_deal]."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_LIST:2 "@red_cross! $LIST$ #bold will likely not agree#! to this [concept_peace_deal]."
 WAR_PANEL_ACCEPT_PEACE:1 "We do #bold #N not#!#! accept this [concept_peace_deal]"
 WAR_PANEL_NOT_ACCEPT_PEACE:1 "We accept this [concept_peace_deal]"
 WAR_PANEL_PEACE_YES:1 "#header Peace Acceptance#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! would #P #bold Accept#!#! the current [concept_peace_deal]\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_NO:1 "#header Peace Acceptance#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! would #N #bold Refuse#!#! the current [concept_peace_deal]\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_PLAYER:0 "They are player-controlled, and so the choice is up to them."
 WAR_PANEL_CAPITULATE:0 "Capitulate"
 WAR_PANEL_CAPITULATE_TOOLTIP:0 "Immediately leave the war. All wargoals targeting us will be enforced.\n[GetDesc(WarPanel.GetWar.Capitulate(GetPlayer.Self))]"
 WAR_PANEL_PROPOSE_PEACE_DEAL:0 "Propose a [concept_peace_deal]"
 WAR_PANEL_PROPOSE_PEACE:0 "Propose [concept_peace_deal]"
 WAR_PANEL_PROPOSE_PEACE_TOOLTIP:0 "#header $WAR_PANEL_PROPOSE_PEACE$#!\n$TOOLTIP_DELIMITER$\nSuggest peace to all other negotiating parties on the basis of our proposed [concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.ProposePeaceDeal(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptProposedPeaceDealDesc(GetPlayer.Self)]"
 WAR_PANEL_WHITE_PEACE:0 "White Peace"
 WAR_PANEL_SET_WHITE_PEACE:0 "Set Terms to White Peace"
 WAR_PANEL_SET_WHITE_PEACE_TOOLTIP:0 "#header $WAR_PANEL_SET_WHITE_PEACE$#!\n$TOOLTIP_DELIMITER$\nRemove all pressed [Concept('concept_war_goal', '$concept_war_goals$')] from our proposed [concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.SetWhitePeace(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptWhitePeaceDealDesc]"

 CANNOT_CAPITULATE_OVERLORD_IN_WAR:0 "Cannot capitulate while your suzerain is still participating"
 CANNOT_CAPITULATE_SOVEREIGNTY_VIOLATED:0 "Cannot capitulate in a war we joined due to having our sovereignty violated"
 CANNOT_CAPITULATE_OVERLORD_WARGOAL_STAKEHOLDER:0 "Cannot capitulate while your suzerain is the stakeholder in wargoals targeting your country"
 WAR_PANEL_PARTICIPANT_TOOLTIP:0 "[WarParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarParticipant.GetWarSupportDescDelayed]\n[WarParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarParticipant.GetCanCapitulateDesc)]"
 WAR_RIGHT_LEADER_TOOLTIP:0 "[War.AccessRightSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessRightSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessRightSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessRightSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_LEFT_LEADER_TOOLTIP:0 "[War.AccessLeftSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessLeftSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessLeftSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessLeftSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_ATTACKER_LEADER_TOOLTIP:0 "[War.AccessAttackerLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessAttackerLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessAttackerLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessAttackerLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_DEFENDER_LEADER_TOOLTIP:0 "[War.AccessDefenderLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessDefenderLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessDefenderLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessDefenderLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_PANEL_RIGHT_LEADER_TOOLTIP:0 "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetCanCapitulateDesc)]"
 WAR_PANEL_LEFT_LEADER_TOOLTIP:0 "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetCanCapitulateDesc)]"

 WAR_PANEL_WAR_SUPPORT_DESC:0 "#HEADER War Support#! ($COUNTRY_NAME$)\nCurrent Value: #variable $SUPPORT|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_INITIAL:1 "Initial [concept_war_support]: #variable [GetDefine('NDiplomacy','BASE_WAR_SUPPORT')|+=1]#!"
 WAR_PANEL_WAR_SUPPORT_DESC_BATTLES:0 "\nFrom Battles: #variable $BATTLES|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_EXHAUSTION:0 "\nFrom Exhaustion: #variable $EXHAUSTION|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_SITUATIONS:1 "\nFrom Events: #variable $SITUATIONS|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_UNABLE_TO_CAPITULATE: "@warning! Unable to capitulate due to:\n$DETAILS$"

 PEACE_TOAST_TITLE:0 "Peace Treaty"
 PEACE_SIGNED_DATE:0 "Signed on [DiplomaticPlay.GetEndDate]"
 CAPITULATION_TITLE:0 "Capitulation"
 CAPITULATION_ENFORCED:0 "The following wargoals were enforced on [Country.GetName]"

 IS_PROMOTED:0 "is promoted to"
 IS_DEMOTED:0 "is demoted to"
 REMAINS_SAME_RANK:0 "remains"

 COMMANDER_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v0$#!#!"
 COMMANDER_COMMAND_LIMIT_UNITS:0 "$NUM_UNITS|v$"
 COMMANDER_COMMAND_LIMIT_UNITS_TOOLTIPPABLE:0 "#tooltippable #tooltip:$NUM_UNITS_BREAKDOWN$ $NUM_UNITS|v$#!#!"
 COMMANDER_COMMAND_LIMIT_DIVIDER:0 " / "
 COMMANDER_COMMAND_LIMIT_ENDING_BATTALIONS:1 " $NAME$"
 COMMANDER_COMMAND_LIMIT_ENDING_FLOTILLAS:1 " $NAME$"

 #Terrains
 plains:0 "Plains"
 ocean:0 "Ocean"
 lakes:0 "Lakes"
 river:0 "River"
 forest:0 "Forest"
 hills:0 "Hills"
 mountain:0 "Mountains"
 jungle:0 "Jungle"
 wetland:0 "Wetlands"
 desert:0 "Desert"
 tundra:0 "Tundra"
 savanna:0 "Savanna"
 snow:0 "Arctic"
 farmland_rye:0 "Farmlands"
 farmland_rice:0 "Paddy Fields"
 farmland_millet:0 "Farmlands"
 plantation:0 "Farmlands"
 pasture:0 "Farmlands"
 farmland_wheat:0 "Farmlands"
 farmland_maize:0 "Farmlands"
 cleared_land:0 "Open Land"
 mining:0 "Mines"
 forestry:0 "Timberlands"
 docks:0 "Dockyards"

 MILITARY_FORMATION_FRONT_DISTRIBUTION: "[Front.GetName]: @battalions! $NUM_UNITS|v$:\n$BREAKDOWN$"
 MILITARY_FORMATION_STATE_DISTRIBUTION_ENTRY: "$TAB$@battalions! $NUM_UNITS|v$ from [State.GetName]"

 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN_HEADER:0 "Troop distribution:"
 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN:0 "[Front.GetName]: @battalions! $NUM_TROOPS|v$ ($PERCENT_OF_TROOPS|%1+$)"

 MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP:3 "#header Units#!\n[MilitaryFormation.GetName] contains [GetUnitStrengthHeader( MilitaryFormation.GetCurrentManpower, MilitaryFormation.GetMaxManpower, MilitaryFormation.GetCombatUnitsTypeIcon )]"

 REGULARS:1 "Regulars"
 CONSCRIPTS:1 "Conscripts"

 EVENT_DLC_TOOLTIP: "This event is part of the #v [Event.GetDLCName]#! DLC"

 FORMATION_PANEL_DEBUG_INFO: "#title Debug Information#!:\nID: #variable [MilitaryFormation.GetIDString]#!"
 FORMATION_PANEL_ARMY_MOBILIZATION_FORMATTED: "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')]: $VALUE|v%0$"

 WAR_PANEL_INITIATOR_HEADER:1 "Initiator"
 WAR_PANEL_INITIATOR_HEADER_TOOLTIP:1 "The Initiator's side in this [concept_war]"
 WAR_PANEL_TARGET_HEADER:1 "Target"
 WAR_PANEL_TARGET_HEADER_TOOLTIP:1 "The Target's side in this [concept_war]"
 WAR_PANEL_INITIATOR_WARGOALS:1 "#title Initiator [Concept('concept_war_goal', '$concept_war_goals$')]#!"
 WAR_PANEL_TARGET_WARGOALS:1 "#title Target [Concept('concept_war_goal', '$concept_war_goals$')]#!"

 PROMOTION_EFFECTS_TOOLTIP: "[AddTextIf(IsValid(Character.GetPromoteCommand), Character.GetNextCommanderRankBenefits)]"
 PROMOTE_CHARACTER_HEADER: "#header Promote [Character.GetFullName][AddTextIf(Not(Character.IsMaxRank), Concatenate(' to ', Character.GetRankNameFor(Character.GetNextCommanderRank)))]#!"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP: "$PROMOTE_CHARACTER_HEADER$[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\nEffects:\n', Localize('PROMOTION_EFFECTS_TOOLTIP'))][ConcatIfNeitherEmpty('\n\n', GetDesc(Character.GetPromoteCommand))]"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP_MAX_RANK:0 "#header Promote [Character.GetFullName]#!\n\n#N [GetDesc(Character.GetPromoteCommand)]#!"

 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER: "#header Split into new [SelectLocalization(Character.GetMilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]#!"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_TOOLTIP: "$MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER$\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(Character.SplitIntoOwnFormation),'\n\n')]#indent_newline:3 [Character.GetFullName] would be in command of [Character.GetNumUnitsThatWouldBeSplitOff|v0] [Concept('concept_unit','$concept_units$')] due to:\n[Character.GetCommandLimit] [concept_command_limit]\n[Character.GetMilitaryFormation.GetCommandLimit] [Character.GetMilitaryFormation.GetName] total [concept_command_limit]\n[Character.GetMilitaryFormation.GetNumCombatUnits|v0] number of [Concept('concept_unit','$concept_units$')] in [Character.GetMilitaryFormation.GetName]#!\n\n@information! For more fine-grained control, use the #b Transfer#! button in the #b Military Formation#! panel."
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY: "[concept_army]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET: "[concept_fleet]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION: "Are you sure you want to split $CHARACTERS$ and $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] into a new [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_UNITS: "Are you sure you want to split $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] into a new [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_COMMANDERS: "Are you sure you want to split $CHARACTERS$ (with no [Concept('concept_unit','$concept_units$')]) into a new [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]?"

 RECRUIT_CHARACTER_HEADER:0 "#header Recruit Character#!"

 ACQUIRING_TITLE:0 "#title Acquiring#!"
 COST_TITLE:0 "#title Cost#!"
 CONSUMED_TITLE:0 "#title Consumed#!"
 BALANCE_TITLE:0 "#title Balance#!"
 STOCKPILE_TITLE:0 "#title Stockpile#!"

 COMMANDER_ORDER_REDUNDANT:0 "#V Already assigned to this order#!"
 COMMANDER_ORDER_NAVAL_NO_COASTAL:1 "#N [STATE.GetName] controls no coastal provinces#!"
 COMMANDER_ORDER_NAVAL_COAST_FULLY_IMPASSABLE:0 "#N The $ENEMY_ADJ$ coast of $STATE_NAME$ has no passable provinces#!"
 COMMANDER_ORDER_NAVAL_NOT_ENEMY:0 "#N Not at war with [COUNTRY.GetName]#!"
 COMMANDER_ORDER_NAVAL_REPAIRING:0 "#N $ADMIRAL_REPAIRING_DATE$#!"
 COMMANDER_ORDER_NAVAL_NEED_GENERAL:3 "#N [Country.GetName] has no [Concept('concept_general', '$concept_generals$')] in a coastal [concept_hq] with troops to perform a Naval Invasion#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NOT_COASTAL:1 "#N The [concept_general] must be located in a coastal [concept_hq] to perform a Naval Invasion#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NO_TROOPS:0 "#N The [concept_general] has no [Concept( 'concept_battalion', '$concept_battalions$')] to perform a Naval Invasion#!"
 COMMANDER_ORDER_POWER_PROJECTION_ALREADY_PRESENT:0 "#N Already present in [STRATEGIC_REGION.GetName], which automatically generates an [concept_interest] there.#!"
 COMMANDER_ORDER_POWER_PROJECTION_NOT_ADJACENT:0 "#N Not an adjacent #variable [concept_strategic_region]#!"
 COMMANDER_ORDER_ADVANCE_FRONT_FAIL_NOT_PARTICIPATING:0 "#N [Country.GetName] is not participating in [Front.GetName]#!"
 COMMANDER_ORDER_DEFEND_FRONT_FAIL_NOT_PARTICIPATING:0 "#N [Country.GetName] is not participating in [Front.GetName]#!"
 COMMANDER_ORDER_PATROL_SAME_HQ:0 "#N Need to target a remote HQ#!"
 COMMANDER_ORDER_PATROL_NOT_FRIENDLY_HQ:0 "#N Can only target friendly HQs#!"

 COMMANDER_PANEL_CURRENT_ORDER: "Current [concept_order]: #b [Character.GetOrderType.GetAltName( 'gerund' )]#! [AddLocalizationIf(Not(Or(Character.IsAdmiral, Character.GetOrderType.IsStandBy)), 'COMMANDER_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_SHORT: "Current [concept_order]: #b [Character.GetOrderType.GetName]#!"
 COMMANDER_PANEL_NEXT_ORDER_SHORT: "Next [concept_order]: #b [Character.GetNextOrderType.GetName]#!"
 FORMATION_PANEL_CURRENT_ORDER: "Current [concept_order]: #TODO#b [MilitaryFormation.GetFormationOrder.GetType.GetAltName( 'gerund' )]#!#! [AddLocalizationIf(Not(Or(MilitaryFormation.IsFleet, MilitaryFormation.GetFormationOrder.GetType.IsStandBy)), 'FORMATION_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(Character.IsAtFront,Character.GetMilitaryFormation.GetCurrentFront.GetName)]"
 FORMATION_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(MilitaryFormation.IsAtFront,MilitaryFormation.GetCurrentFront.GetName)]"
 NEXT: "Next"

 FORMATION_SETTINGS: "Formation Settings"
 ALLOW_BORROWING_AND_LENDING: "Allow borrowing and lending troops"

 NEXT_OR_CURRENT_ORDER: "[AddLocalizationIf(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), 'CURRENT_ORDER_STATUS')][AddLocalizationIf(ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self), 'NEXT_ORDER_STATUS')][AddTextIf(And(Not(StringIsEmpty(GetDesc( Character.SelectOrder( CommanderOrderType.Self )))), Or(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self))), '\n')][GetDesc( Character.SelectOrder( CommanderOrderType.Self ))]"

 UNAVAILABLE_ORDERS: "Unavailable [Concept('concept_order', '$concept_orders$')]"
 UNAVAILABLE_ORDERS_TOOLTIP: "There are #v [GetDataModelSize(Character.AccessUnavailableOrders)]#! currently unavailable [Concept('concept_order', '$concept_orders$')]"
 TRAIT_UNLOCKABLE_ORDERS_TITLE: "Unlocks the following [Concept('concept_order', '$concept_orders$')]"
 RECRUIT_COMMANDER_SPECIAL_ORDERS_TITLE: "Available special [Concept('concept_order', '$concept_orders$')]"
 NO_SPECIAL_ORDERS_TITLE: "No available special [Concept('concept_order', '$concept_orders$')]"

 MAKE_PEACE_NOT_AT_WAR_WITH:0 "#N #HEADER [COUNTRY.GetName]#! is not at war with #HEADER [TARGET_COUNTRY.GetName]#!#!"

 LOCAL_GOOD: "[concept_local_good]"
 LOCAL_GOODS: "[Concept('concept_local_good','$concept_local_goods$')]"
 GOODS_STATE_PANEL_PRICE_MARKET_SHARE: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v1]#!#! [Concept('concept_market_price', '$concept_market_price_share$')]"
 GOODS_PANEL_STATE_PRICE_RIGHT_NOW:2 "#variable [Goods.GetStatePriceWithTooltip|1]#!"
 GOODS_PANEL_STATE_PRICE_COMPARE:2 "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD','GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE')]"
 GOODS_PANEL_PRICE_RIGHT_NOW:0 "#variable [Goods.GetMarketPriceWithTooltip|1]#!"
 GOODS_PANEL_PRICE_COMPARE:0 "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-]#! compared to [concept_base_price]\nMarket Balance: #variable [Goods.GetMarketBuyAndSellOrdersBalance|=D+]#!"
 GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE: "$GOODS_LOCAL_PRICE_DIFF$$GOODS_STATE_PANEL_PRICE_MARKET_SHARE$"
 GOODS_LOCAL_PRICE_DIFF: "[Goods.GetStateToMarketPriceDiff|%0=-] compared to [Goods.GetMarket.GetName] [Concept('concept_market_price', '$MARKET_PRICE$')]\n"
 SOLD_BY:0 "#title Sold by#!"
 BOUGHT_BY:0 "#title Bought by#!"
 PRODUCED_BY:0 "Produced By"
 CONSUMED_BY:0 "Consumed By"
 RESOURCE_POTENTIALS:0 "[Concept('concept_resource_potential','$concept_resource_potentials$')]"
 INFORMATION:0 "Information"
 STATE_MODIFIERS:0 "State Modifiers:\n[State.GetModifier.GetDesc]"

 SP_CAPACITY_CONCEPT:0 "#concept The Military will try to reach the Strength Point Capacity by taking the money from your Military Budget, buy Military Goods and use them to train Soldiers in your Barracks and Naval Bases.#!"

 STAPLE:0 "Staple"
 STAPLE_FILTER:0 "#instruction Show/Hide#! #header Staple Goods#!\n\n#concept Staple Goods are Staple Goods#!"
 INDUSTRIAL_GOODS_FILTER:0 "#instruction Show/Hide#! #header Industrial Goods#!\n\n#concept Industrial Goods are Goods produced by Manufacturing Industries that can be used by other Manufacturing Industries.#!"
 LUXURY_GOODS_FILTER:0 "#instruction Show/Hide#! #header Luxury Goods#!\n\n#concept Luxury Goods are Goods that Pops start consuming at higher levels of [concept_sol].#!"
 MILITARY_GOODS_FILTER:0 "#instruction Show/Hide#! #header Military Goods#!\n\n#concept Military Goods are Goods that the Military Uses.#!"

 NATIONAL_SP_CAPACITY:0 "#title National Strength Point Capacity#!"
 ARMY_TITLE:0 "@army_SP! #TITLE Army#!"
 NAVY_TITLE:0 "#title @navy_SP! Navy#!"
 NAVY_SP_CAPACITY_TITLE:0 "#HEADER Navy Strength Point Capacity#!\n$TOOLTIP_DELIMITER$\nTarget: #variable @army_SP![Country.GetNavySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
 ARMY_SP_CAPACITY_TITLE:0 "#HEADER Army Strength Point Capacity#!\n$TOOLTIP_DELIMITER$\nTarget: #variable @navy_SP![Country.GetArmySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
 COMMANDS_TITLE:0 "#title Commands#!"
 CURRENT_ARMY_SP:0 "Current: #variable @army_SP![Country.GetStrengthPointArmy]#!"
 CURRENT_NAVY_SP:0 "Current: #variable @navy_SP![Country.GetStrengthPointNavy]#!"
 UNASSIGNED_CHARACTERS_TITLE:0 "#title Unassigned Characters#!"
 PRIO_TITLE:0 "#title Prio:#!"
 TRAITS_TITLE:0 "#title Traits#!"
 AGE_VALUE:0 "#title Age:#! #BOLD [Character.GetAge]#!"
 INTEREST_GROUP_VALUE:0 "#title [concept_interest_group]:#! #BOLD #underline [Character.GetInterestGroup.GetName]#!#!"
 INTEREST_GROUP_VALUE_TWO_ROWS:0 "#title [concept_interest_group]:#!\n#BOLD #underline [InterestGroup.GetName]#!#!"
 RULER_OF_COUNTRY:0 "Head of State in #variable [Character.GetCountry.GetName]"
 HEIR_OF_COUNTRY:0 "Heir Apparent in #variable [Character.GetCountry.GetName]#!"
 AT_THE_WAR_OFFICE:0 "Unassigned"
 RECRUIT_CHARACTER_GENERAL:1 "Recruit additional [concept_general]"
 RECRUIT_CHARACTER_ADMIRAL:1 "Recruit additional [concept_admiral]"
 CREATE_ARMY_FORMATION: "Create [concept_army]"
 CREATE_FLEET_FORMATION: "Create [concept_fleet]"
 RECRUIT_CHARACTER_GENERAL_HEADER:0 "#bold Select General to recruit#!"
 RECRUIT_CHARACTER_ADMIRAL_HEADER:0 "#bold Select Admiral to recruit#!"
 RECRUIT_CHARACTER_BUTTON:0 "Recruit"
 RECRUIT_COMMANDER_TOO_MANY_OF_TYPE:0 "[MilitaryFormation.GetName] already has [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [Character.GetPrimaryRoleName]s and cannot recruit more"
 RECRUIT_COMMANDER_TARGET_WILL_EXCEED_LIMIT: "[MILITARY_FORMATION.GetName] would have more than [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [CHARACTER.GetPrimaryRoleName]s after the ongoing merge(s), and cannot recruit more"
 RECRUIT_COMMANDER_WRONG_COUNTRY:0 "#R [Character.GetFullName] does not belong to [Country.GetName]#!"
 RECRUIT_COMMANDER_HQ_WRONG_COUNTRY:0 "#R [Hq.GetName] does not belong to [Country.GetName]#!"
 RECRUIT_COMMANDER_FORMATION_WRONG_COUNTRY:0 "#R [MilitaryFormation.GetName] does not belong to [Country.GetName]#!"
 RECRUIT_COMMANDER_TEMP_HQ:0 "#R [Hq.GetName] is a temporary [concept_hq]#!"
 CHARACTER_TOOLTIP:0 "[Character.GetInfoTooltip]"
 CHARACTER_IS_BUSY:0 "[Character.GetFullName] is [concept_busy] and cannot take any assignments"

 CREATE_FORMATION_TEMP_HQ: "#R [Hq.GetName] is a temporary [concept_hq]#!"
 CREATE_FORMATION_HQ_WRONG_COUNTRY: "#R [Hq.GetName] does not belong to [Country.GetName]#!"

 DISBAND_UNIT_WRONG_COUNTRY: "#[CombatUnit.GetName] does not belong to [Country.GetName]"
 DISBAND_UNIT_FORMATION_WRONG_COUNTRY: "#R [MilitaryFormation.GetName] does not belong to [Country.GetName]#!"
 UPGRADE_UNIT_FORMATION_WRONG_COUNTRY: "$DISBAND_UNIT_FORMATION_WRONG_COUNTRY$"
 DISBAND_UNIT_TYPE_EMPTY: "[MilitaryFormation.GetName] does not have any [CombatUnitType.GetName]"

 DISBAND_COMBAT_UNIT: "Disband [CombatUnit.GetName|v][ConcatIfNeitherEmpty('\n\n', GetDesc( CombatUnit.GetMilitaryFormation.GetDisbandUnitCommand( CombatUnit.Self ) ) )]\n\nThis will remove one level of [CombatUnit.GetBuilding.GetName] in [CombatUnit.GetBuilding.GetState.GetName]"

 character_role_general:0 "General"
 character_role_admiral:0 "Admiral"
 character_role_politician:0 "Politician"
 character_role_agitator: "Agitator"
 character_role_ruler:0 "Ruler"
 character_role_heir:1 "Heir Apparent"

 character_role_general_title:0 "General"
 character_role_admiral_title:0 "Admiral"
 character_role_politician_title:0 "" # Empty on purpose
 character_role_agitator_title:0 "" # Intentionally empty

 ROLE:0 "[concept_character_role]"
 CHARACTER_PRIMARY_ROLE:0 "#v [Character.GetAllRoleNames]#!"
 CHARACTER_PRIMARY_ROLE_TOOLTIP:0 "#header [Character.GetFullName]#! is a #v [Character.GetAllRoleNames]#!"

 INPUT_MULT:0 "[concept_input_mult]: #v [Building.GetInputMult|-=%0]#!"
 INPUT_MULT_TOOLTIP:0 "[Building.GetInputMultDesc]"

 THROUGHPUT:0 "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_CONSTANT', 'THROUGHPUT_CHANGING')]"
 THROUGHPUT_CONSTANT:0 "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#!"
 THROUGHPUT_CHANGING:1 "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#! @arrow_right! #v [Building.GetThroughputBonusTarget|%=+0]#!"
 THROUGHPUT_TOOLTIP:0 "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_TOOLTIP_CONSTANT', 'THROUGHPUT_TOOLTIP_CHANGING')]"
 THROUGHPUT_TOOLTIP_CONSTANT:0 "#header Throughput Bonus#!\n[Building.GetThroughputDesc]"
 THROUGHPUT_TOOLTIP_CHANGING:0 "The Building's [concept_throughput] is changing.\n\n#header Throughput Bonus#!\n[Building.GetThroughputDesc]"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_PER_LEVEL:0 "$EFFECT$ per Level (capped at Level $MAX_LEVEL|v$)"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_TOTAL:0 "$EFFECT$ Total (capped at $MAX_EFFECT$)"
 BUILDING_ECONOMY_OF_SCALE_CAP_TOOLTIP:0 "[Building.GetName] in [Building.GetState.GetName] is subject to [concept_economy_of_scale] effects up to level [Building.GetModifier.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_TYPE_ECONOMY_OF_SCALE_CAP_TOOLTIP:1 "[BUILDING_TYPE.GetName] in [STATE.GetName] is subject to [concept_economy_of_scale] effects up to level [MODIFIER.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_ECONOMY_OF_SCALE_NATIONALIZATION_EFFECT: "[concept_economy_of_scale] bonuses reduced by $AMOUNT|=+%0$ due to $LEVELS|v$/$TOTAL_LEVELS|v$ [concept_nationally_owned] levels."

 character_ig_info:0 "[concept_interest_group]: #variable [CHARACTER.GetInterestGroup.GetName]#!"
 character_name_info:0 "[CHARACTER.GetFullNameWithTitle]"
 character_role_info:1 "#bold [CHARACTER.GetPrimaryRoleName]#!"
 character_age_info:0 "Age: #variable [CHARACTER.GetAge]#!"
 character_traits_info:0 "#title Traits#!\n[CHARACTER.GetTraitsDesc]"
 character_command_limit_army:0 "[concept_command_limit]: [CHARACTER.GetCommandLimit]#! @battalions!"
 character_command_limit_navy:1 "[concept_command_limit]: [CHARACTER.GetCommandLimit]#! @flotillas!"
 character_ideology_info:0 "Ideology: [CHARACTER.GetIdeology.GetName]"

 CHARACTER_TRAIT_FORMAT:0 "#variable $TRAIT$#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY:0 "#title As Ruler:#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND:0 "#title As Commander:#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER:0 "#title As [concept_interest_group] Leader:#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR: "#title As [concept_agitator]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY_INACTIVE:0 "#title As Ruler (Inactive):#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND_INACTIVE:0 "#title As Commander (Inactive):#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER_INACTIVE:0 "#title As [concept_interest_group] Leader (Inactive):#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR_INACTIVE: "#title As [concept_agitator] (Inactive):#!"

 POPULARITY_HATED:0 "#r Hated#!"
 POPULARITY_DISLIKED:1 "#r Disliked#!"
 POPULARITY_NEUTRAL:0 "Neutral"
 POPULARITY_LIKED:1 "#g Liked#!"
 POPULARITY_LOVED:0 "#g Loved#!"

 character_info_with_ig_tooltip_general:0 "$character_info_tooltip_general$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_admiral:0 "$character_info_tooltip_admiral$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_politician:0 "$character_info_tooltip_politician$\n\n$character_ig_info$"

 character_info_tooltip_general:0 "#HEADER $character_name_info$#!\n$character_role_info$ \n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_army$\n\n$character_traits_info$"
 character_info_tooltip_admiral:0 "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_navy$\n\n$character_traits_info$"
 character_info_tooltip_politician:0 "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_ideology_info$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_ruler:0 "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_heir:0 "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"

 MILITARY_PANEL:0 "Military"
 MILITARY_PANEL_TAB_ARMY:0 "Army"
 MILITARY_PANEL_TAB_ARMY_SELECTED:0 "#bold Army#!"
 MILITARY_PANEL_TAB_GARRISON:0 "Garrisons"
 MILITARY_PANEL_TAB_GARRISON_SELECTED:0 "#bold Garrisons#!"
 MILITARY_PANEL_TAB_NAVY:0 "Navy"
 MILITARY_PANEL_TAB_NAVY_SELECTED:0 "#bold Navy#!"

 TITLE_RULER:0 "#title Head of State#!"
 TITLE_HEIR:0 "#title Heir Apparent#!"
 TITLE_LEADER:0 "#title Leader#!"

 IDEOLOGY_STRONG_APPROVAL:1 "#P Strongly Endorse#!"
 IDEOLOGY_APPROVAL:1 "#P Endorse#!"
 IDEOLOGY_NEUTRAL:0 "#V Neutral#!"
 IDEOLOGY_DISAPPROVAL:1 "#N Oppose#!"
 IDEOLOGY_STRONG_DISAPPROVAL:1 "#N Strongly Oppose#!"

 IDEOLOGY_NO_LAW_STANCES:0 "#bold No Stances#!"
 IDEOLOGY_LAW_STANCE_GROUP:0 "#title Stance on $LAW_GROUP$#!"
 IDEOLOGY_LAW_STANCE_STRONGLY_APPROVE:2 "#P Strongly $concept_endorse$#! $LAWS$"
 IDEOLOGY_LAW_STANCE_APPROVE:2 "#P $concept_endorse$#! $LAWS$"
 IDEOLOGY_LAW_STANCE_DISAPPROVE:2 "#N $concept_oppose$#! $LAWS$"
 IDEOLOGY_LAW_STANCE_STRONGLY_DISAPPROVE:2 "#N Strongly $concept_oppose$#! $LAWS$"
 IDEOLOGY_LAW_STANCE_NEUTRAL:0 "#V Neutral#! towards $LAWS$"

 POL_PANEL_IG_STATUS_HEADER:0 "#title Approval#!"
 ig_approval_loyal:0 "#bold #P Loyal#!#!"
 ig_approval_happy:0 "#bold #P Happy#!#!"
 ig_approval_neutral:0 "#bold Neutral#!"
 ig_approval_unhappy:0 "#bold #N Unhappy#!#!"
 ig_approval_angry:0 "#bold #N Angry#!#!"

 WILL_RADICALIZE_WARNING:1 "@warning! Will [Concept('concept_radical', '$concept_radicalize$')] the [INTEREST_GROUP.GetName]"

 IG_APPROVAL_FROM_LEADER: "(from [CHARACTER.GetFullName] [INTEREST_GROUP.GetTextIcon])"
 IG_APPROVES_OF_LAW: "#BOLD $VAL|+=$#! from @approves! [Law.GetName]\n"
 IG_DISAPPROVES_OF_LAW: "#BOLD $VAL|+=$#! from @disapproves! [Law.GetName]\n"
 IG_APPROVES_OF_LAW_CHANGE:1 "@approves! $NAME$ $CLOUT_OPTIONAL$: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (from #v $CURR_APPROVAL|+$#! to #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_APPROVES_OF_PREVIOUS_LAW_CHANGE:1 "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! the recent change from [LAW_OTHER.GetName] to [LAW.GetName]: #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 IG_DISAPPROVES_OF_LAW_CHANGE:1 "@disapproves! $NAME$ $CLOUT_OPTIONAL$: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (from #v $CURR_APPROVAL|+$#! to #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_DISAPPROVES_OF_PREVIOUS_LAW_CHANGE:1 "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_opposes$#!#! the recent change from [LAW_OTHER.GetName] to [LAW.GetName]: #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 
 IG_NAME_WITH_LEADER: "[INTEREST_GROUP.GetName] (from [CHARACTER.GetFullName])"
 IG_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! [Law.GetName]: #BOLD $VAL|+=$#!\n"
 IG_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_oppose$#!#! [Law.GetName]: #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold Strongly $concept_endorse$#!#! [Law.GetName]: #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold Strongly $concept_oppose$#!#! [Law.GetName]: #BOLD $VAL|+=$#!\n"

 IG_APPROVES_OF_LAW_CHANGE_BREAKDOWN:1 "@approves! #variable [INTEREST_GROUP.GetName]#! #P #bold $concept_endorse$#!#! replacing #variable $OLD_LAW$#! ($OLD_APPROVAL$) with #variable $LAW$#! ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (from $CURR_APPROVAL|=$ to $PROJECTED_APPROVAL|=$)"
 IG_DISAPPROVES_OF_LAW_CHANGE_BREAKDOWN:1 "@disapproves! #variable [INTEREST_GROUP.GetName]#! #N #bold $concept_oppose$#!#! replacing #variable $OLD_LAW$#! ($OLD_APPROVAL$) with #variable $LAW$#! ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (from $CURR_APPROVAL|=$ to $PROJECTED_APPROVAL|=$)"
 IG_LAW_APPROVAL_BREAKDOWN:0 "[InterestGroup.GetLawApprovalBreakdown(Law.Self)]"
 IG_APPROVAL_DECAY_DESC:0 "\n#bold After being passed#!, $APPROVAL_DELTA|+=$ will decay to #BOLD $VAL|+=$#! over the following $MONTHS|0v$ Months"
 IG_APPROVAL_DECAY_IN_PROGRESS_DESC:0 "(This reaction is decaying in $MONTHS$ months and will be replaced with an approval rating of #BOLD $VAL|+=$#! ($APPROVAL$).)"
 IG_WITH_CLOUT:0 "([INTEREST_GROUP.GetClout|%1v])"
 IG_MARGINAL_WITH_CLOUT:0 "([INTEREST_GROUP.GetClout|%1v] - [concept_marginalized])"
 NO_CHANGE_IN_APPROVAL:0 "[INTEREST_GROUP.GetName] likes $LAW$ as much as $OLD_LAW$"

 ENACTING: "Enacting"
 CURRENTLY_ENACTING:0 "Currently enacting:"
 ZOOM_TO_CAPITAL_STATE:0 "Zoom to [Country.GetCapital.GetName] ([concept_capital_state])"

 GOV_STABILITY_DROP_FROM_LAW:0 "$TAB$ #variable $IGNAME$#! $IDEOLOGY$: #BOLD #N -$VAL|0%$#!#!"
 IG_STABILITY_DROP_FROM_LAW:0 "Enacted $LAW$"
 IG_STABILITY_BONUS_SINGLE_GROUP:0 "Sole [concept_interest_group] in Government: #variable #P $VAL|=0%$#!#!#!\n"
 IG_STABILITY_PENALTY_RELATION:0 "#bold $DISLIKING_IG$#! dislikes #bold $LEADER_IG$#!: #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_BONUS_RELATION:0 "#bold $LIKING_IG$#! likes #bold $LEADER_IG$#!: #variable #P $VAL|=0%$#!#!\n"
 IG_STABILITY_PENALTY_RECENT_LAW:0 "#bold $DISLIKING_IG$#! opposed recently passed Laws: #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_PENALTY_OPPOSITION:0 "Opposition Clout: #variable #N $VAL|0%$#!#!\n"

 GOV_IG_ENACTMENT_SUPPORT:1 "   @approves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%1v$) #P #bold $concept_endorse$#!#!: #BOLD $VAL|-=$#! days"
 GOV_IG_ENACTMENT_NEUTRAL:0 "   [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) are #tooltippable #tooltip:INDIFFERENT_BREAKDOWN indifferent#!#!: #BOLD $VAL|-=$#! days"
 GOV_IG_ENACTMENT_OPPOSITION:1 "   @disapproves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) #bold #N $concept_oppose$#!#!: #BOLD $VAL|-=$#! days"

 LAW_APPROVAL:0 "#bold [Law.GetPercentPolStrApprove|%1]#!"
  #LAW_APPROVAL: "#bold [Law.GetNumIGsApprove]#! ([Law.GetPercentPolStrApprove|%0])"
 LAW_DISAPPROVAL:0 "#bold [Law.GetPercentPolStrDisapprove|%1]#!"
  #LAW_DISAPPROVAL: "#bold [Law.GetNumIGsDisapprove]#! ([Law.GetPercentPolStrDisapprove|%0])"
 LAW_INDIFFERENT:0 "#bold [Law.GetPercentPolStrUndecided|%1]#!"
  #LAW_UNDECIDED: "#bold [Law.GetNumIGsUndecided]#! ([Law.GetPercentPolStrUndecided|%0])"
 TOOLTIP_LAW_APPROVAL:2 "#header @approves! [Concept('concept_endorse_oppose', '$concept_endorsement$')]#!\n$LAW_IGS_APPROVE$"
 TOOLTIP_LAW_INDIFFERENT:2 "#header @indifferent! [Concept('concept_endorse_oppose', '$concept_indifferent$')]#!\n$LAW_IGS_INDIFFERENT$"
 TOOLTIP_LAW_DISAPPROVAL:2 "#header @disapproves! [Concept('concept_endorse_oppose', '$concept_opposition$')]#!\n$LAW_IGS_DISAPPROVE$"
 LAW_IGS_APPROVE:2 "#variable [Law.GetPercentPolStrApprove|%1]#! of the [concept_clout] in the [concept_country] @approves! $concept_endorses$ #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsApproveList)]"
 LAW_IGS_DISAPPROVE:2 "#variable [Law.GetPercentPolStrDisapprove|%1]#! of the [concept_clout] in the [concept_country] @disapproves! $concept_opposes$ #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsDisapproveList)]"
 LAW_IGS_INDIFFERENT:1 "#variable [Law.GetPercentPolStrUndecided|%1]#! of the [concept_clout] in the [concept_country] #bold do not care#! about #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsUndecidedList)]"

 LAW_NO_GOVERNMENT_OR_MOVEMENT_SUPPORT:0 "No [concept_interest_group] [concept_in_government] approves of [Law.GetName] and there is no [concept_political_movement] backing it"
 LAW_NO_CHANCE_TO_PASS:3 "[concept_enactment_success] chance is above #v 0%#!"
 NEVER:0 "#b Permanent#!"

 TOOLTIP_IDEOLOGY:0 "#HEADER [Ideology.GetName]#!\n$TOOLTIP_DELIMITER$\n[Ideology.GetLawStanceDesc]\n\n#lore [Ideology.GetDesc]#!"
 TOOLTIP_IG_TRAIT_FROM_PAIR:0 "#HEADER [InterestGroupAndTraitPair.GetInterestGroup.GetName] - [InterestGroupAndTraitPair.GetTrait.GetName]#! [InterestGroupAndTraitPair.GetTrait.GetInactiveString(InterestGroupAndTraitPair.GetInterestGroup)]\n[InterestGroupAndTraitPair.GetTrait.GetModifiersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n$TOOLTIP_DELIMITER$\n[InterestGroupAndTraitPair.GetTrait.GetTriggersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n\n#lore [InterestGroupAndTraitPair.GetTrait.GetDesc]#!"

 TOOLTIP_STATE_TRAIT:0 "#HEADER [StateTrait.GetName]#!\n[StateTrait.GetModifiersDesc]"

 IN_GOVERNMENT:0 "[concept_in_government]"
 IN_OPPOSITION:0 "[concept_in_opposition]"
 IN_GOVERNMENT_WITH_ICON: "@in_government! [concept_in_government]"
 IN_OPPOSITION_WITH_ICON: "@in_opposition! [concept_in_opposition]"
 MARGINAL:0 "[concept_marginalized]"
 MARGINAL_GROUPING:0 "$MARGINAL$"
 MARGINAL_AND_INACTIVE_GROUPING:0 "Marg + Inactive"
 INTEREST_GROUP_ITEM:1 "#variable [INTEREST_GROUP.GetClout|1%]#! [INTEREST_GROUP.GetName]"
 INTEREST_GROUP_ITEM_POPULATION:1 "[INTEREST_GROUP.GetName]: #variable [INTEREST_GROUP.GetPopulation|K]#!"
 POP_TYPE_POPULATION_ITEM:0 "$TYPE$: #variable $VAL|K$#!\n"
 LEADING_IG:1 "#header Leading [concept_interest_group]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n\nSince [InterestGroup.GetName] is the [concept_interest_group] with the most [concept_political_strength] in Government it is considered the leading [concept_interest_group]."
 FAVORS_IDEOLOGY:0 "Favors #variable $IDEOLOGY_NAME$#!: $VAL|+=$"
 OPPOSES_IDEOLOGY:0 "Opposes #variable $IDEOLOGY_NAME$#!: $VAL|+=$"
 RELATION_TO_IG:0 "Total relation to #variable $IG_NAME$#!: $RELATION_VALUE|+=$\n$TOOLTIP_DELIMITER$\n$RELATION_BREAKDOWN$"
 IN_GOVERNMENT_DESC:0 "#HEADER In Government#!\n$TOOLTIP_DELIMITER$\n[concept_in_government_desc]"
 IN_OPPOSITION_DESC:0 "#HEADER In Opposition#!\n$TOOLTIP_DELIMITER$\n$[concept_in_opposition_desc]$"
 MARGINAL_DESC:0 "#HEADER Marginalized#!\n$TOOLTIP_DELIMITER$\n[concept_marginalized_desc]"
 IN_REVOLUTION_DESC:0 "#HEADER In Revolution#!\n$TOOLTIP_DELIMITER$\n$IN_REVOLUTION_CONCEPT$"

 IG_IDEOLOGY_LABEL: "[Ideology.GetNameNoFormatting][AddLocalizationIf( Ideology.IsCharacterIdeology, 'IG_IDEOLOGY_FROM_LEADER')]"
 IG_IDEOLOGY_FROM_LEADER: " #lore (from Leader)#!"

 SECESSION_ALERT_ENTRY_CHANCE:0 "[CULTURE.GetName] [CULTURE.GetChanceForSecessionMovement( GetPlayer.Self )|%1v]"
 SECESSION_ALERT_ENTRY_GROWING:0 "[CULTURE.GetName]"

 COST_OF_WAR_ENTRY:0 "[Country.GetName] $TYPE$: [GetPlayer.GetCustom('currency_symbol')]$COST|vD$"
 COST_OF_WAR_TYPE_MATERIEL:0 "Military Goods"
 COST_OF_WAR_TYPE_WAGES:0 "Conscript Wages"
 COST_OF_WAR_TOOLTIP:0 "#header Total Cost of War: [GetPlayer.GetCustom('currency_symbol')]$COST|vD$#!\n$COST_OF_WAR_TYPE_MATERIEL$: [GetPlayer.GetCustom('currency_symbol')]$MATERIEL_COST|vD$\n$COST_OF_WAR_TYPE_WAGES$: [GetPlayer.GetCustom('currency_symbol')]$WAGES_COST|vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 FILTERS:0 "Filters"
 
 revolution_name: "[concept_revolution]"
 secession_name: "[concept_secession]"

 REVOLUTIONS_HEADER:0 "#header $concept_revolution$#!"
 REVOLUTIONS_HEADER_TOOLTIP:0 "There are [Concept('concept_interest_group', '$concept_interest_groups$')] actively trying to overthrow the government!"
 SECESSION_HEADER:1 "#header $concept_secession$#!"
 SECESSION_HEADER_TOOLTIP:1 "A part of the [concept_country] is trying to break away!"
 SECESSIONS: "Secessions"

 CIVIL_WAR_PROGRESS_TOOLTIP: "#header [PoliticalMovement.GetCivilWar.GetName] Progress#!\n#v [PoliticalMovement.GetCivilWar.GetProgress|1%]#! total progress[ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_CLOCK_CHECKPOINT'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_PROGRESS_AT_CHECKPOINT'))]\n$TOOLTIP_DELIMITER$\nIf it reaches #v 100%#! a [concept_civil_war] will break out.\n\n[PoliticalMovement.GetCivilWar.GetMaxProgressDesc]"

 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY:1 "$TAB$$VALUE|%0v$ risk for [STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_GUARANTEED:0 "$TAB$[STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_UNIT:0 "$ICON$ $VALUE|v$"
 UPRISING_PROGRESS_TOOLTIP_NUM_UNITS: "Supported by @battalions!$ARMY_UNITS|v$ and @flotillas!$NAVY_UNITS|v$"
 UPRISING_PROGRESS_TOOLTIP_CIVIL_WAR_CONSCRIPTION_RATE: "Will be able to raise an additional @conscripts!$NUM_UNITS|v$ due to $CONSCRIPTION_RATE|=v%$ [Concept('concept_conscription_center','$concept_conscription$')] rate from Popular Support and [Concept('concept_insurrection','$concept_insurrectionary$')] [concept_interest_group] [concept_clout]"

 CIVIL_WAR_MAX_PROGRESS_BREAKDOWN:2 "Maximum progress is #v $TOTAL_MAX|%0$#! due to: #indent_newline:3 \n$POLITICAL_MOVEMENT_RADICALISM_WITH_LABEL$"
 CIVIL_WAR_MAX_UNSUPPORTED_PROGRESS:0 "This revolution cannot sustain progress above [Multiply_CFixedPoint('(CFixedPoint)$PROGRESS_LIMIT$','(CFixedPoint)100'))|0v] because the [concept_political_movement] lacks support from an [concept_interest_group]."
 CIVIL_WAR_PROGRESS_AT_MAX_PROGRESS:1 "#header Weekly Progress\n$TOOLTIP_DELIMITER$\n[concept_revolution] is at current maximum progress of #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100'))|0]#!#!"
 CIVIL_WAR_PROGRESS_ABOVE_MAX_PROGRESS:1 "#header Weekly Progress\n$TOOLTIP_DELIMITER$\n[concept_revolution] is above maximum progress of #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100'))|0]#!#!"

 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_TOOLTIP: "#header [concept_revolution] Progress#!\n$PROGRESS|=%-1$ on next checkpoint\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_FROM_RADICALISM: "#v $PROGRESS|=%-1$#! from [Concept( 'concept_radical', '$concept_radicalism$' )]"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_NEAR_CAP: "\nThis [Concept('concept_political_movement', '$concept_political_movement_short$')] cannot progress past $MAX_PROGRESS|%0v$ (currently at $PROGRESS|1%v$) and the progress on the next checkpoint is therefore reduced to $MAX_DELTA|=%-1$"

 REVOLUTIONS_UPRISING_HEADER_LOYALIST:0 "Opposing [CivilWar.GetUprisingCountry.GetName]!"
 REVOLUTIONS_UPRISING_HEADER_REBEL:0 "Opposing [CivilWar.GetOriginCountry.GetName]!"
 REVOLUTIONS_IG_LIST_HEADER:0 "#title Insurrectionary [Concept('concept_interest_group', '$concept_interest_groups$')]:#!"
 REVOLUTIONS_IG_LIST_HEADER_TOOLTIP:0 "The insurrectionary [Concept('concept_interest_group', '$concept_interest_groups$')] in the country"
 BATTALIONS_STILL_FIGHTING:0 "@battalions! Battalions"
 BATTALIONS_FIGHTING_HISTORY:0 "@battalions! Battalions fighting history"
 MANPOWER_FIGHTING_HISTORY:0 "Fighting capable men"

 SECESSION_UPRISING_HEADER:0 "#N #BOLD [CivilWar.GetUprisingCountry.GetName] have seceeded from us!#!#!"
 SECESSION_UPRISING_HEADER_LOYALIST:1 "We are fighting the traitors in [CivilWar.GetUprisingCountry.GetName]!"
 SECESSION_UPRISING_HEADER_REBEL:0 "We are fighting the tyrants in [CivilWar.GetOriginCountry.GetName]!"

 ADD_TO_GOVERNMENT:0 "Add To Government"
 REMOVE_FROM_GOVERNMENT:0 "Remove From Government"
 LEGITIMACY_CHANGE_SWITCH_TOOLTIP:0 "This would result in a [concept_legitimacy] change of #variable $VAL|+=0$#! (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)\n$TOOLTIP_DELIMITER$\nThe resulting Government Legitimacy would look like this:\n$DESC$"
 TOOLTIP_REFORM_GOVERNMENT:0 "#HEADER $REFORM_GOVERNMENT$#!\n[ReformGovernment.GetConfirmDesc][ConcatIfNeitherEmpty('\n', AddLocalizationIf(LessThan_int32(ReformGovernment.GetPredictedLegitimacy, '(int32)25'), 'ILLEGITIMATE_GOVERNMENT_WARNING_REFORM'))]"
 ILLEGITIMATE_GOVERNMENT_WARNING_REFORM: "@warning! This would result in an [ReformGovernment.GetPredictedLegitimacyLevel.GetNameNoFormatting] meaning no [Concept('concept_law', '$concept_laws$')] can be [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacted$')] without a [concept_political_movement]"
 ILLEGITIMATE_GOVERNMENT_WARNING: "@warning! This is an [Country.GetGovernmentLegitimacyLevel.GetNameNoFormatting] meaning no [Concept('concept_law', '$concept_laws$')] can be [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacted$')] without a [concept_political_movement]"

 ADD_TO_GOVERNMENT_SHORT:0 "Add"
 REMOVE_FROM_GOVERNMENT_SHORT:0 "Remove"
 FORM_GOV_DATE_INVALID:0 "We cannot change the #variable $IG$#!'s government status again until #BOLD #V $DATE$#!#!\n"
 FORM_GOV_IG_NOT_IN_GOVERNMENT:0 "Not [concept_in_government]"
 FORM_GOV_REVOLUTIONARY_COUNTRY:0 "Revolutionary [Concept('concept_interest_group', '$concept_interest_groups$')] cannot be removed in a Revolutionary Country"
 FORM_GOV_IG_ALREADY_IN_GOVERNMENT:0 "Already [concept_in_government]"
 FORM_GOV_IG_IS_MARGINAL:0 "Cannot be promoted to power while [concept_marginalized]"
 FORM_GOV_IG_IS_ANGRY:1 "Cannot be promoted to power while [concept_approval] is at $ig_approval_angry$"
 FORM_GOV_IG_IS_INSURRECTIONARY:0 "Cannot be promoted to power because they are insurrectionary"
 FORM_GOV_IG_IS_SUPPRESSED:0 "Cannot be promoted to power while suppressed"
 FORM_GOV_GOVERNMENT_TOO_SMALL:0 "Your government must contain at least one [concept_interest_group]"
 FORM_GOV_MISSING_PARTY_IG:1 "Your government is missing [InterestGroup.GetName] which is part of [Party.GetName] [Party.GetMembersSummary]."
 FORM_GOV_NO_CHANGE:0 "There are no changes to the current [concept_government]."
 FORM_GOV_EMPTY:0 "Government must contain at least one [concept_interest_group]."
 FORM_GOV_RECENT_REGIME_CHANGE:0 "We recently had a forced regime change."
 FORM_GOV_IG_WANTS_TO_JOIN_PARTY:0 "$IG_NAME$ wants to join $PARTY_NAME$"
 FORM_GOV_CIVIL_WAR_COUNTRY:0 "Countries born of a [concept_civil_war] cannot reform their [concept_government] while the [concept_civil_war] is ongoing"

 MEMBERS: "Members"
 RULER_JOIN_IG_SHORT:0 "Join"
 RULER_JOIN_IG_LONG:0 "Have [concept_ruler] Join [concept_interest_group]"
 RULER_LEGITEMACY_NO_CHANGE_TOOLTIP:0 "This would not result in a [concept_legitimacy] change (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 RULER_LEGITEMACY_CHANGE_TOOLTIP:0 "This would result in a [concept_legitimacy] change of #variable $VAL|+=0$#! (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 TOOLTIP_RULER_JOIN_IG_DESC:0 "\n$TOOLTIP_DELIMITER$\nHave your [concept_ruler] join this [concept_interest_group] to promote their ideologies\n\nThis will greatly anger their current [concept_interest_group] and we will be unable to change the [concept_ruler]'s [concept_interest_group] again for [GetDefine( 'NPolitics', 'RULER_CHANGE_IG_COOLDOWN_YEARS' )|v] years#!"
 TOOLTIP_RULER_JOIN_IG:0 "#HEADER $IG_RIGHT_CLICK_MENU_RULER_JOIN_IG$#!\n[InterestGroup.GetRulerJoinGovDesc]"

 SUPPRESS_SHORT:0 "$concept_suppress$"
 SUPPRESS_NOT_SHORT:0 "Stop [Concept('concept_suppress','$concept_suppressing$')]"
 SUPPRESSED:0 "[Concept('concept_suppress','$concept_suppressed$')]"
 BOLSTER_SHORT:1 "$concept_bolster$"
 BOLSTER_NOT_SHORT:1 "Stop [Concept('concept_bolster','$concept_bolstering$')]"
 BOLSTERED:1 "[Concept('concept_bolster','$concept_bolstered$')]"
 TOOLTIP_SUPPRESS:0 "#header $SUPPRESS_SHORT$ [PoliticalMovement.GetName]#!\n$SUPPRESSION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleSuppression)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_SUPPRESS_NOT:0 "#header $SUPPRESS_NOT_SHORT$ [PoliticalMovement.GetName]#!\n[GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_BOLSTER:0 "#header $BOLSTER_SHORT$ [PoliticalMovement.GetName]#!\n$PROMOTION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleBolstering)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_BOLSTER_NOT:0 "#header $BOLSTER_NOT_SHORT$ [PoliticalMovement.GetName]#!\n[GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_SUPPRESSED:0 "#header $SUPPRESSED$#!\n$TOOLTIP_DELIMITER$\n$SUPPRESSION_EFFECTS$"
 TOOLTIP_BOLSTERED:0 "#header $BOLSTERED$#!\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS$"
 SUPPRESSION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_suppression_attraction_mult')] $country_suppression_attraction_mult$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetSuppressionEffectDesc)]\n\n#title Cost:#! [PoliticalMovement.GetCountry.GetSuppressionCostDesc] Weekly"
 PROMOTION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_bolster_attraction_mult')] $country_bolster_attraction_mult$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetBolsteringEffectDesc)]\n\n#title Cost:#! [PoliticalMovement.GetCountry.GetBolsteringCostDesc] Weekly"

 SUPPRESSION_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! @aut![concept_authority]"
 SUPPRESSION_COST_TOOLTIP: "#header [concept_suppress] Cost: $VAL|v0$ @aut![concept_authority]#!\n$TOOLTIP_DELIMITER$\nBase: @aut!$BASE|v0$\n$BREAKDOWN$"

 BOLSTER_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! @aut![concept_authority]"
 BOLSTER_COST_TOOLTIP: "#header [concept_bolster] Cost: $VAL|v0$ @aut![concept_authority]#!\n$TOOLTIP_DELIMITER$\nBase: @aut!$BASE|v0$\n$BREAKDOWN$"

 PROMOTE_COMMANDER:0 "Promote"
 CHANGE_RANK_CANNOT_PROMOTE:2 "[Character.GetFullName] is at the highest level of command as [Character.GetRankName] and cannot be promoted further."
 CHANGE_RANK_CANNOT_PROMOTE_RULER:1 "[Character.GetFullName] is the [Character.GetPrimaryRoleTitle] of [Character.GetCountry.GetName] and cannot be promoted beyond [Character.GetRankName]"

 DESIGNATE_STRATEGIC_OBJECTIVE_REACHED_MAX:1 "[Country.GetNameNoFormatting] has reached the maximum number of [Concept('concept_strategic_objective', '$concept_strategic_objectives$')] in this [concept_theater]"
 DESIGNATE_STRATEGIC_OBJECTIVE_IMPOSSIBLE_STATE:1 "[State.GetNameNoFormatting] is not in a [Country.GetAdjectiveNoFormatting] enemy [concept_front] nor is owned by [Country.GetNameNoFormatting]"

 SUPPRESS_MOVEMENT_IS_PROMOTED:2 "[concept_political_movement] is [Concept('concept_bolster','$concept_bolstered$')]"
 SUPPRESS_MOVEMENT_INSUFFICIENT_AUT:0 "Insufficient available $AUTHORITY$, $REQVAL|1v$ needed "
 SUPPRESS_MOVEMENT_NO_SUPPRESSION_POWER:1 "No legal capacity to [concept_suppress] [Concept('concept_political_movement', '$concept_political_movements$')]"
 PROMOTE_MOVEMENT_IS_SUPPRESSED:1 "[concept_political_movement] is [Concept('concept_suppress','$concept_suppressed$')]"
 PROMOTE_MOVEMENT_INSUFFICIENT_AUT:0 "Insufficient available $AUTHORITY$, $REQVAL|1v$ needed"
 PROMOTE_MOVEMENT_NO_PROMOTION_POWER:2 "No legal capacity to [concept_bolster] [Concept('concept_political_movement', '$concept_political_movements$')]"

 IG_IS_IN_GOVERNMENT:0 "[concept_in_government]: #variable [GetDefine( 'NPolitics', 'IG_IN_GOVERNMENT_APPROVAL' )|+=]#!"
 IG_IS_IN_OPPOSITION:0 "[concept_in_opposition]: #variable [GetDefine( 'NPolitics', 'IG_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_POWERFUL_IS_IN_OPPOSITION:0 "[concept_powerful] and [concept_in_opposition]: #variable [GetDefine( 'NPolitics', 'IG_POWERFUL_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_INSURRECTIONARY_IN_GOVERNMENT:0 "[Concept('concept_insurrection','$concept_insurrectionary$')] [Concept('concept_interest_group', '$concept_interest_groups$')] [concept_in_government] have maxed [concept_approval]"
 IG_LAW_APPROVAL_CAPPED:1 "Total [concept_approval] of #B $TOTAL|+=$#! (Capped from actual value of #B $UNCAPPED|+=$#!) is due to:"
 IG_LAW_APPROVAL:1 "Total [concept_approval] of #B $TOTAL|+=$#! is due to:"
 IG_LOYALISTS_APPROVAL:1 "#v $POL_STR|0%$#! of [concept_political_strength] in the [concept_interest_group] is [concept_loyalist]: #v $APPROVAL|=+$#!"
 IG_RADICALS_APPROVAL:1 "#v $POL_STR|0%$#! of [concept_political_strength] in the [concept_interest_group] is [concept_radical]: #v $APPROVAL|=+$#!"
 IG_ACTIVE_LAWS_HEADER:0 "#title Active Laws#!"
 IG_LAW_CHANGES_HEADER:0 "#title Law Changes#!"
 IG_OTHER_FACTORS_HEADER:0 "#title Other Factors#!"
 IG_LOBBY_APPEASEMENT: "$VALUE|=+$ from [POLITICAL_LOBBY.GetName] $concept_political_lobby_appeasement$"
 IG_APPROVAL_FROM_APPEASEMENT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=+$#!#! from [concept_political_lobby_appeasement] of [Concept('concept_political_lobby','$concept_political_lobbies$')]"
 IG_LOBBY_APPEASEMENT_NUM_LOBBIES_MULTIPLIER: "Multiplied by #v x$MULTIPLIER$#! because they are part of $NUM_LOBBIES|v$ [Concept('concept_political_lobby','$concept_political_lobbies$')]"

 IS_SUPPRESSED_ATTRACTION:1 "[Concept('concept_suppress','$concept_suppressed$')]: #variable $VAL|+=%0$#!"
 IS_BOLSTERED_ATTRACTION:2 "[Concept('concept_bolster','$concept_bolstered$')]: #variable $VAL|+=%0$#!"

 PEOPLE_ABROAD_TOOLTIP:0 "#BOLD #V Unincorporated Population#!#!\n$TOOLTIP_DELIMITER$\n$ABROAD_POP_CONCEPT$"
 INTEREST_GROUP_TITLE:0 "#title [concept_interest_group]#!"
 LAW_TITLE:0 "#title Law#!"
 CLOUT_TITLE:0 "#title Clout#!"
 SP_TITLE:0 "#title Army Strength Points#!"
 SP_NAVAL_TITLE:0 "#title Naval Strength Points#!"
 REVOLUTION_TITLE:0 "#title Revolution!#!"
 REVOLUTION_CAPITAL_STATE_PROGRESS:0 "Capital State Provinces Held: "
 REVOLUTION_CAPITAL_TAKE_DESC:0 "Once the revolution holds all provinces in the capital state they start a countdown to victory.\n#variable [RevolutionaryFaction.GetCountry.GetName]#! is holding #variable [RevolutionaryFaction.GetCapitalControl]#! provinces, the revolters are holding #variable [RevolutionaryFaction.GetRevolutionCapitalControl]#!"
 REVOLUTION_VICTORY_DESC:0 "When the revolters hold all Capital provinces this bar will start to fill, once it is full the revolters will win and force all their demands"
 REVOLUTION_SURRENDER_DESC:0 "This bar represents how much Strength Points is still in commands that are fighting for the revolution, if the remaining Strength Points drops below [GetDefineCountryRevolutionarySurrenderCutoff|1%] of the Strength Points that the faction had when the revolution broke out, they will surrender"
 REVOLUTION_VICTORY_DETAILS:0 "If the rebels win they will enforce the following:\n[RevolutionaryFaction.GetVictoryEffectDesc]"

 COUNTRY_NAME: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$"
 REVOLUTION_COUNTRY_NAME:0 "Revolutionary [ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$"
 SECESSION_COUNTRY_NAME:0 "$ADJECTIVE$ Uprising"
 COUNTRY_ADJECTIVE: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$"
 REVOLUTION_COUNTRY_ADJECTIVE: "Revolutionary [ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$"
 SECESSION_COUNTRY_ADJECTIVE: "$ADJECTIVE$ Uprising"

 SECESSION_NO_REVOLT_TAG:0 "Stalled"
 SECESSION_NO_REVOLT_TAG_TOOLTIP:0 "This [concept_secession] lacks a national identity to rally behind, and so cannot secede."

 WAR_GOAL_WORTH:1 "#header [concept_war_goal]#!\nThis [concept_war_goal] costs #BOLD [WarGoal.GetWorth]#! War Score for [WarGoal.GetInitiator.GetName] to pursue. You can press [Concept('concept_war_goal', '$concept_war_goals$')] worth Your War Score minus Their War Score."

 WAR_START_TITLE:0 "War with #variable [COUNTRY.GetName] #!has broken out!"
 WAR_START_TITLE_NOPLAYER:0 "War between #variable $ATTACKER$ #! and #variable $DEFENDER$ #! has broken out!"
 WAR_START_DESC:0 "The #variable $PLAY_NAME$ #!play in #variable $WHERE$ #!has resulted in a war between #bold you #!and #bold $MAIN_ENEMY$#!."
 WAR_START_DESC_NOPLAYER:0 "The $PLAY_NAME$ play in $WHERE$ has resulted in a war between #bold $FIRST$ #! and #bold $SECOND$#!."

 REGIONS_TITLE:0 "#title Regions#!"
 TOOLTIP_RADICALISM:0 "#header Radicalism#!\n$TOOLTIP_DELIMITER$\n[INTEREST_GROUP.GetActiveIncidents]\n"
 NEXT_RADICALISM_INCIDENT:0 "Will cause Radicalism Incident in:\n#variable [INTEREST_GROUP.GetNextIncident]#! in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! weeks ([INTEREST_GROUP.GetRadicalism|%1] progress )"
 TOOLTIP_STATE_RADICALISM:0 "#header Radicalism#!\n$TOOLTIP_DELIMITER$\n[STATE.GetActiveRadicalismIncidents]\n"
 RADICALISM_IN_STATE:0 "#BOLD #V Radicalism#!#! in #BOLD #V $STATE$#!#!\n$TOOLTIP_DELIMITER$\n"
 RADICALISM_GROUPS_IN_STATE_HEADER:0 "The following [Concept('concept_interest_group', '$concept_interest_groups$')] will cause an Radicalism Incident:"
 RADICALISM_GROUPS_IN_STATE_ITEM:0 "#variable [INTEREST_GROUP.GetName]#! in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! weeks ([INTEREST_GROUP.GetRadicalism|%1] progress )"

 RADICALISM_INCIDENT_START_EFFECTS_HEADER:0 "#title Start Effects:#!"
 RADICALISM_INCIDENT_EFFECT_GROUPS_HEADER:0 "#title Effect Groups:#!"
 RADICALISM_INCIDENT_END_EFFECTS_HEADER:0 "#title End Effects:#!"
 RADICALISM_INCIDENT_DEMAND_HEADER:0 "#title Demand:#!"

 BUILDING_OPTION_CHANGE:0 "Change"
 BUILDING_OPTION_CHANGE_TOOLTIP:0 "#header Change Building#!\nChange the #variable [BuildingType.GetBuildingGroupName]#! building in this state to #variable [BuildingType.GetName]#!"
 CHANGE_BUILDING_NEW:0 "#bold Alternative Building#!"
 CHANGE_BUILDING_CURRENT:0 "#bold Current Building#!"
 CHANGE_BUILDING_HEADER:0 "#BOLD [Building.GetBuildingGroupName] in [Building.GetState.GetName]#!"
 BUILDING_CHANGE_WRONG_TYPE:0 "#N [BUILDING.GetBuildingGroupName] buildings cannot be changed in this way#!"
 BUILDING_CHANGE_NO_ALTERNATIVES:0 "#N There are no alternative [BUILDING.GetBuildingGroupName] buildings to change to in this state#!"
 BUILDING_PANEL_EXPAND:0 "Expand"
 BUILDING_PANEL_DOWNSIZE:0 "Downsize"
 BUILDING_PANEL_CHANGE:0 "Change"
 CANNOT_DOWNSIZE_NOT_DOWNSIZEABLE:0 "#N Building type cannot be downsized#!"
 CANNOT_DOWNSIZE_BUILDING_PROTECTED:0 "This [concept_building] is protected from being downsized due to:\n$DETAILS$"
 CANNOT_DOWNSIZE_UNDER_CONSTRUCTION:0 "#N Building cannot be downsized while it is being expanded#!"
 CANNOT_DOWNSIZE_INVALID_BUILDING:0 "#N Invalid building#!"
 CANNOT_DOWNSIZE_NO_OWNERSHIP:0 "#N Building cannot be downsized as there are no owned levels#!"
 CANNOT_DOWNSIZE_REVOLUTION: "#N Cannot be downsized due to the brewing [concept_revolution]#!"
 CANNOT_DOWNSIZE_SECESSION: "#N Cannot be downsized due to the growing [concept_secession] movement#!"
 CANNOT_DISBAND_REVOLUTION: "#N Cannot be disbanded due to the brewing [concept_revolution]#!"
 CANNOT_DISBAND_SECESSION: "#N Cannot be disbanded due to the growing [concept_secession] movement#!"
 BUILDING_DOWNSIZE_TOOLTIP:1 "#header $BUILDING_PANEL_DOWNSIZE$#!\nReduce the size of the [Building.GetName] in [Building.GetState.GetName] to #v $NEW_LEVEL$#!"
 BUILDING_DOWNSIZE_TOOLTIP_HEADER: "#bold $BUILDING_PANEL_DOWNSIZE$#!"
 BUILDING_CHANGE_TOOLTIP:0 "#header Change Building#!\nChange the #variable [BUILDING.GetBuildingGroupName]#! building in this state"
 BUILDING_CHANGE_CAN_SWITCH_TO:0 "#bold Alternative Buildings:#!"
 RADICALIZATION_CHANGES_DOWNSIZE: "@warning! Downsizing this [concept_building] will [Concept('concept_radical', '$concept_radicalize$')] part of the [concept_workforce] if it results in employees being laid off"

 BUILDING_PROD_METH_ALREADY_ACTIVE:0 "This [concept_production_method] is already active"
 BUILDING_PROD_METH_ALREADY_ACTIVE_BULK:0 "This [concept_production_method] is already active in all buildings"
 BUILDING_DETAILS_PRODUCED_MODIFIER_TOOLTIP:0 "#header [ModifierEntry.GetName]#!\n[ModifierEntry.GetDesc]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]"

 TOOLTIP_NEW_PRODUCTION_METHOD:0 "#header New Production Method Available#!\n$TOOLTIP_DELIMITER$\nA newly researched Production Method can be activated on this building."

 POLITICAL_ACTION_REFORM_DESC:0 "implement #variable $REFORM_GROUP$ - $REFORM$#!"
 POLITICAL_ACTION_REFORM_PAST_TENSE_DESC:0 "Implemented #variable $REFORM_GROUP$ - $REFORM$#!"
 POLITICAL_ACTION_TAX_DESC:0 "set the taxes for the #variable $STRATA$#! to #variable $VALUE|%$#!"
 POLITICAL_ACTION_TAX_PAST_TENSE_DESC:0 "Set the taxes for the #variable $STRATA$#! to #variable $VALUE|%$#!"
 POLITICAL_ACTION_BUILDING_DESC:0 "build a size #variable $LEVEL$ $BUILDING_TYPE$#!"
 POLITICAL_ACTION_BUILDING_PAST_TENSE_DESC:0 "Built a size #variable $LEVEL$ $BUILDING_TYPE$#!"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_DESC:0 "start a $PLAY_TYPE$ [concept_diplomatic_play] against $AGAINST$"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_PAST_TENSE_DESC:0 "Started a $PLAY_TYPE|v$ [concept_diplomatic_play] against $AGAINST|v$"
 POLITICAL_ACTION_EXPAND_MARKET_DESC:0 "expand your market coverage"
 POLITICAL_ACTION_EXPAND_MARKET_PAST_TENSE_DESC:0 "Expanded your market coverage"
 INTERACTION_NOT_ALLOWED_FOR: "This action is not allowed for [COUNTRY.GetName]"

 CANNOT_AFFORD_LAW:0 "You cannot afford @aut!#variable $VAL$#!"
 LAW_HAS_NOT_PASSED_COOLDOWN:0 "You must wait until #variable $DATE$#! before you can make changes to your $TYPE$."
 LACKING_TECHNOLOGY_GLOBAL_SINGLE:0 "$TECHNOLOGY$ has #b not#! yet been invented"
 LACKING_TECHNOLOGY_GLOBAL_MULTI:1 "One of these has to be invented"
 LACKING_TECHNOLOGY_SINGLE:2 "[Country.GetName] must have invented [Technology.GetName]"
 LACKING_TECHNOLOGY_MULTI:2 "[Country.GetName] must have invented one of\n$BREAKDOWN$"
 LACKING_TECHNOLOGY_MULTI_ENTRY:0 "[Technology.GetName]"

 LACKING_IDENTITY_SINGLE: "[Country.GetNameNoFormatting] has [concept_power_bloc_identity] [PowerBlocIdentity.GetName]"
 LACKING_IDENTITY_MULTI: "[Country.GetNameNoFormatting] has one [concept_power_bloc_identity] of:\n$BREAKDOWN$"
 LACKING_IDENTITY_MULTI_ENTRY: "[PowerBlocIdentity.GetName]"

 LACKING_PRINCIPLE_SINGLE: "[Country.GetNameNoFormatting] has [concept_power_bloc_principle] [PowerBlocPrinciple.GetName]"
 LACKING_PRINCIPLE_MULTI: "[Country.GetNameNoFormatting] has one [concept_power_bloc_principle] of:\n$BREAKDOWN$"
 LACKING_PRINCIPLE_MULTI_ENTRY: "[PowerBlocPrinciple.GetName]"

 LACKING_UNLOCKING_LAW_SINGLE:2 "[Country.GetName] must have enacted $LAW$"
 LACKING_UNLOCKING_LAW_MULTI: "[Country.GetName] must have enacted one of:"
 LACKING_UNLOCKING_LAW_MULTI_WITH_BREAKDOWN: "$LACKING_UNLOCKING_LAW_MULTI$\n$BREAKDOWN$"
 LACKING_UNLOCKING_LAW_MULTI_ENTRY: "[Law.GetFullName]"

 LACKING_UNLOCKING_STATE_RELIGION_SINGLE:1 "[GetPlayer.GetName] have [Religion.GetName] as a State [concept_religion]"
 LACKING_UNLOCKING_STATE_RELIGION_MULTI:1 "[GetPlayer.GetName] have one of these as a State [concept_religion]:"
 HAS_DISALLOWING_STATE_RELIGION_SINGLE:1 "[GetPlayer.GetName] may #b not#! have [Religion.GetName] as a State [concept_religion]"
 HAS_DISALLOWING_STATE_RELIGION_MULTI:1 "[GetPlayer.GetName] may #b not#! have any of these as a State [concept_religion]:"
 HAS_DISALLOWING_LAW_SINGLE:0 "You are not allowed to have enacted $LAW$"
 HAS_DISALLOWING_LAW_MULTI:0 "You are not allowed to have enacted any one of:"
 LACKING_PRODUCTION_METHOD_SINGLE:1 "$PRODUCTION_METHOD$ is active in the building"
 LACKING_PRODUCTION_METHOD_MULTI:1 "One of these is active in the building:"
 LACKING_PRODUCTION_METHOD_BULK: "@warning! $COUNT|v$ $concept_states$ have incompatible $concept_production_methods$"
 LAW_DISALLOWED_BY_LAW_SINGLE:2 "[Country.GetName] must #b not#! have enacted $LAW$"
 LAW_DISALLOWED_BY_LAW_MULTI:2 "[Country.GetName] must #b not#! have enacted any of:"
 REQUIRES_ACCESS_TO_GOODS: "State has access to [Goods.GetName]"
 REQUIRES_ACCESS_TO_GOODS_BULK: "@warning! $COUNT|v$ $concept_states$ do not have access to required $concept_goods$"

 DIPLOMATIC_ACTION_INSTANT:0 "[concept_instant_diplomatic_action]"
 DIPLOMATIC_ACTION_ONGOING:0 "[concept_ongoing_diplomatic_action]"
 DIPLOMATIC_ACTION_PACT:0 "[concept_diplomatic_pact]"
 DIPLOMATIC_ACTION_HEADER:0 "[SelectLocalization(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_HEADER', 'DIPLOMATIC_ACTION_NON_ACTIVE_HEADER')]"
 DIPLOMATIC_ACTION_NON_ACTIVE_HEADER: "#header #tooltippable #tooltip:[DiplomaticAction.GetTooltipTag],DIPLOMATIC_ACTION_DESC [DiplomaticAction.GetType.GetName]#!#!#!"
 DIPLOMATIC_ACTION_ACTIVE_HEADER: "#header [DiplomaticAction.GetBreakName]#!"
 DIPLOMATIC_ACTION_SECOND_HEADER: "[AddLocalizationIf(DiplomaticAction.IsActivePact, Concatenate('$BREAK$', ' '))][SelectLocalization(DiplomaticAction.GetType.IsInstantDiplomaticAction, 'DIPLOMATIC_ACTION_INSTANT', 'DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION')] with [DiplomaticAction.GetSecondCountry.GetName]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION: "[SelectLocalization(DiplomaticAction.GetType.IsOngoingDiplomaticPact, 'DIPLOMATIC_ACTION_PACT', 'DIPLOMATIC_ACTION_ONGOING')][AddLocalizationIf(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_PACT_NAME')]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_NAME: " ([DiplomaticAction.GetName])"
 BREAK: "Break"
 DIPLOMATIC_ACTION_DESC:0 "[DiplomaticAction.GetDesc]"
 DIPLOMATIC_ACTION_TOOLTIP:0 "[DiplomaticAction.GetTooltip]"
 DIPLOMATIC_PROPOSAL_TITLE:0 "[Proposal.GetDiplomaticAction.GetProposalNotificationName]"
 DIPLOMATIC_PROPOSAL_DESC: "[ConcatIfNeitherEmpty(Proposal.GetDiplomaticAction.GetMaintenanceCostForAcceptingCountryDesc, '\n\n')][Proposal.GetDiplomaticAction.GetProposalNotificationDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"
 DIPLOMATIC_PROPOSAL_OFFER_OBLIGATION_DESC:1 "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_OFFER_OBLIGATION$"
 DIPLOMATIC_PROPOSAL_CALL_IN_OBLIGATION_DESC:0 "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_CALL_IN_OBLIGATION_SHORT$"
 DIPLOMATIC_PROPOSAL_BREAK_TITLE:0 "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakName]"
 DIPLOMATIC_PROPOSAL_BREAK_DESC:0 "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"

 DIPLOMATIC_ACTION_MODIFIERS: "[DiplomaticAction.GetModifierDesc]"
 DIPLOMATIC_ACTION_MODIFIER_HEADER: "#title Adds Modifiers for [COUNTRY.GetName]:#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_ACTIVE: "#title Modifiers for [COUNTRY.GetName]:#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_BREAK: "#title Removes Modifiers for [COUNTRY.GetName]:#!"
 DIPLOMATIC_ACTION_LOBBY_MEMBER_MODIFIER_HEADER: "#title Members of relevant $LOBBY_CATEGORY$:#!"

 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST: "Will cost us $COST$ to maintain"
 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST_BREAK: "Will no longer cost us $COST$ to maintain"
 DIPLOMATIC_ACTION_ON_ENACT:0 "#title Effects:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_BREAK:0 "#title If we break this [concept_diplomatic_pact]:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_END:0 "#title If we end this [concept_ongoing_diplomatic_action]:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_ACCEPT:0 "#title If accepted:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DECLINE:0 "#title If declined:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DAILY:0 "#title Each day while active:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_WEEKLY:0 "#title Each week while active:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_MONTHLY:0 "#title Each month while active:#!\n$DESC$"
 DIPLOMATIC_ACTION_INCOME_TRANSFER:0 "• Would transfer #tooltippable #tooltip:$BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$#!#! from [COUNTRY.GetName] to [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_ACTIVE:0 "• Transfers #tooltippable #tooltip:$BREAKDOWN_TAG$ [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$#!#! from [COUNTRY.GetName] to [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_BREAK: "• Would stop transferring [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$ from [COUNTRY.GetName] to [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS: "• Would transfer [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$ from [COUNTRY.GetName] to [Concept('concept_pop', '$concept_pops$')] in [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_ACTIVE: "• Transfers [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$ from [COUNTRY.GetName] to [Concept('concept_pop', '$concept_pops$')] in [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_BREAK: "• Would stop transferring [GetPlayer.GetCustom('currency_symbol')]$MONEY|Kv$ from [COUNTRY.GetName] to [Concept('concept_pop', '$concept_pops$')] in [TARGET_COUNTRY.GetName] each week"
 DIPLOMATIC_ACTION_RIVALRY: "• Having a [concept_rivalry] with [TARGET_COUNTRY.GetName] grants the following benefits:\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_ACTIVE: "• Our [concept_rivalry] with [TARGET_COUNTRY.GetName] grants the following benefits:\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_BREAK: "• Ends the [concept_rivalry] with [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO: "• Would establish an [concept_embargo] against [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO_ACTIVE: "• Maintains an [concept_embargo] against [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO_BREAK: "• Ends the [concept_embargo] against [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD: "• Would facilitate [concept_technology_spread] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD_ACTIVE: "• Facilitates [concept_technology_spread] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD_BREAK: "• Ends the facilitation of [concept_technology_spread] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE: "• Creates an [concept_alliance] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE_ACTIVE: "• Maintains an [concept_alliance] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE_BREAK: "• Breaks off the [concept_alliance] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT: "• Creates a [concept_defensive_pact] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_ACTIVE: "• Maintains a [concept_defensive_pact] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_BREAK: "• Breaks off the [concept_defensive_pact] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE: "• Establishes a [COUNTRY.GetAdjective] [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] for [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_ACTIVE: "• Maintains a [COUNTRY.GetAdjective] [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] for [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_BREAK: "• Removes the [COUNTRY.GetAdjective] [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] for [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT: "• Creates a [concept_trade_agreement] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_ACTIVE: "• Maintains a [concept_trade_agreement] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_BREAK: "• Breaks off the [concept_trade_agreement] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS: "• [TARGET_COUNTRY.GetName] will grant [concept_foreign_investment_rights] to [COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [TARGET_COUNTRY.GetName] grants [concept_foreign_investment_rights] to [COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_BREAK: "•  Ends the [concept_foreign_investment_rights] granted by [TARGET_COUNTRY.GetName] to [COUNTRY.GetName]"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS: "• [COUNTRY.GetName] and [TARGET_COUNTRY.GetName] will grant mutual [concept_foreign_investment_rights] to each other"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [COUNTRY.GetName] and [TARGET_COUNTRY.GetName] grant mutual [concept_foreign_investment_rights] to each other"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_BREAK: "• Ends the mutual  [concept_foreign_investment_rights] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_SUBJECT_RELATION: "• Creates a $SUBJECT_TYPE$ [concept_subject] relation between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName], with [COUNTRY.GetName] as the suzerain"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_ACTIVE: "• Maintains a $SUBJECT_TYPE$ [concept_subject] relation between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_BREAK: "• Ends the $SUBJECT_TYPE$ [concept_subject] relation between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_EFFECT: "• Improves [concept_relations] by #g +1#! every $DAYS|v$ days$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_EFFECT: "• Damages [concept_relations] by #r -1#! every $DAYS|v$ days$MINDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_BREAK_EFFECT: "• Would no longer improve [concept_relations] by #g +1#! every $DAYS|v$ days$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_BREAK_EFFECT: "• Would no longer damage [concept_relations] by #r -1#! every $DAYS|v$ days$MINDESC$"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE: "• Would exempt [TARGET_COUNTRY.GetName] from joining [COUNTRY.GetAdjective] [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_ACTIVE: "• Exempts [TARGET_COUNTRY.GetName] from joining [COUNTRY.GetAdjective] [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_BREAK: "• No longer exempts [TARGET_COUNTRY.GetName] from joining [COUNTRY.GetAdjective] [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_MARKET_CONTROL: "• Would grant [COUNTRY.GetName] control over their own [concept_market]"
 DIPLOMATIC_ACTION_MARKET_CONTROL_ACTIVE: "• Grants [COUNTRY.GetName] control over their own [concept_market]"
 DIPLOMATIC_ACTION_MARKET_CONTROL_BREAK: "• Returns [COUNTRY.GetName] to the [Concept('concept_overlord','$concept_overlord_possessive$')] [concept_market]"
 DIPLOMATIC_ACTION_AUTO_SUPPORT: "• [COUNTRY.GetName] will automatically support [TARGET_COUNTRY.GetName] in $LIST$ [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_ACTIVE: "• [COUNTRY.GetName] automatically supports [TARGET_COUNTRY.GetName] in $LIST$ [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_BREAK: "• [COUNTRY.GetName] will no longer automatically support [TARGET_COUNTRY.GetName] in $LIST$ [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"

 THEY_OFFER_OBLIGATION:1 "They are offering to owe us an [concept_obligation] if we accept."
 THEY_CALL_IN_OBLIGATION_SHORT:0 "They are calling in our [concept_obligation], so rejecting their offer would have negative diplomatic consequences for us."
 THEY_CALL_IN_OBLIGATION:1 "@warning! They are calling in our [concept_obligation]. Rejecting would repudiate the [concept_obligation] with the following consequences for us:\n$REPUDIATE_OBLIGATION_EFFECTS$"
 WE_NOW_OWE_OBLIGATION:1 "We now owe them an [concept_obligation]"
 THEY_USED_OBLIGATION:1 "They used an [concept_obligation] to force us to accept."
 REPUDIATE_OBLIGATION_EFFECTS:1 "- Greatly reduced [concept_relations] with the [concept_country] whose [concept_obligation] we repudiated\n- Reduced [concept_relations] with all other countries we owe an [concept_obligation]\n- Reduced [concept_prestige], slower [concept_infamy] decay and widespread mistrust for new [Concept('concept_obligation', '$concept_obligations$')] from us for a period of #v 5#! years\n"
 repudiated_obligation:0 "Repudiated Obligation"

 proposal_break_pact_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]"
 proposal_break_pact_tooltip:0 "#title $proposal_break_pact_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_desc$"

 proposal_break_pact_owe_obligation_name:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_owe_obligation_desc:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_break_pact_owe_obligation_tooltip:1 "#header $proposal_break_pact_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_owe_obligation_desc$"

 proposal_break_pact_call_in_obligation_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_call_in_obligation_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_break_pact_call_in_obligation_tooltip:0 "#header $proposal_break_pact_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_call_in_obligation_desc$"

 proposal_diplomatic_action_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]"
 proposal_diplomatic_action_tooltip:0 "#header $proposal_diplomatic_action_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_desc$"

 proposal_diplomatic_action_owe_obligation_name:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_owe_obligation_desc:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_diplomatic_action_owe_obligation_tooltip:1 "#header $proposal_diplomatic_action_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_owe_obligation_desc$"

 proposal_diplomatic_action_call_in_obligation_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_call_in_obligation_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_diplomatic_action_call_in_obligation_tooltip:0 "#header $proposal_diplomatic_action_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_call_in_obligation_desc$"

 proposal_sway_offer_tooltip:0 "#header $proposal_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_sway_offer_desc$"
 proposal_sway_offer_name:0 "Attempt to Sway"
 proposal_sway_offer_desc:0 "#variable [SCOPE.sC('actor').GetName]#! is attempting to sway us to their side in their [concept_diplomatic_play] against #variable [SCOPE.sC('target').GetName]#!."

 proposal_reverse_sway_offer_tooltip:2 "#header $proposal_reverse_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_reverse_sway_offer_desc$"
 proposal_reverse_sway_offer_name:2 "Offer of Support"
 proposal_reverse_sway_offer_desc:2 "#variable [SCOPE.sC('actor').GetName]#! is offering us their support in the [concept_diplomatic_play] against #variable [SCOPE.sC('target').GetName]#!."

 proposal_diplomatic_demand_tooltip: "#header $proposal_diplomatic_demand_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_demand_desc$"
 proposal_diplomatic_demand_name: "[concept_diplomatic_demand]"
 proposal_diplomatic_demand_desc: "[SCOPE.sC('actor').GetName] demands '[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]' from us."

 notification_diplomatic_action_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_notification_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]"
 notification_diplomatic_action_notification_tooltip:0 "#header $notification_diplomatic_action_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_notification_desc$"

 notification_diplomatic_action_used_obligation_notification_name:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_used_obligation_notification_desc:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_used_obligation_notification_tooltip:1 "#header $notification_diplomatic_action_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_used_obligation_notification_desc$"

 notification_diplomatic_proposal_accepted_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]"
 notification_diplomatic_proposal_accepted_tooltip:0 "#header $notification_diplomatic_proposal_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_desc$"

 notification_diplomatic_proposal_accepted_owe_obligation_name:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_owe_obligation_desc:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_accepted_owe_obligation_tooltip:1 "#header $notification_diplomatic_proposal_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_owe_obligation_desc$"

 notification_diplomatic_proposal_declined_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedName]"
 notification_diplomatic_proposal_declined_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedDesc]"
 notification_diplomatic_proposal_declined_tooltip:0 "#header $notification_diplomatic_proposal_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_declined_desc$"

 notification_diplomatic_action_overlord_decrease_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] changed [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetName] to [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] decreased [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAdjective] [concept_autonomy] from [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetHigherAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetName] and made them their [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_tooltip: "#header $notification_overlord_decrease_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_overlord_decrease_autonomy_notification_desc$"

 notification_diplomatic_action_overlord_increase_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] changed [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetName] to [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_increase_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] increased [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAdjective] [concept_autonomy] from [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetName] and made them their [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_increase_autonomy_notification_tooltip: "#header $notification_diplomatic_action_overlord_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_overlord_increase_autonomy_notification_desc$"

 notification_diplomatic_action_subject_increase_own_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] changed to [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] increased their [concept_autonomy] from [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry).GetName] to become a [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_tooltip: "#header $notification_subject_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_subject_increase_autonomy_notification_desc$"

 notification_diplomatic_action_break_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_notification_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]"
 notification_diplomatic_action_break_notification_tooltip:0 "#header $notification_diplomatic_action_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_notification_desc$"

 notification_diplomatic_action_break_used_obligation_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_used_obligation_notification_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_break_used_obligation_notification_tooltip:0 "#header $notification_diplomatic_action_break_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_used_obligation_notification_desc$"

 notification_diplomatic_proposal_break_accepted_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]"
 notification_diplomatic_proposal_break_accepted_tooltip:0 "#header $notification_diplomatic_proposal_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_desc$"

 notification_diplomatic_proposal_break_accepted_owe_obligation_name:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_owe_obligation_desc:1 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_break_accepted_owe_obligation_tooltip:1 "#header $notification_diplomatic_proposal_break_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_owe_obligation_desc$"

 notification_diplomatic_proposal_break_declined_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedName]"
 notification_diplomatic_proposal_break_declined_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedDesc]"
 notification_diplomatic_proposal_break_declined_tooltip:0 "#header $notification_diplomatic_proposal_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_declined_desc$"

 notification_diplomatic_proposal_third_party_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyName]"
 notification_diplomatic_proposal_third_party_notification_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDesc]"
 notification_diplomatic_proposal_third_party_notification_tooltip:0 "#header $notification_diplomatic_proposal_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_notification_desc$"

 notification_diplomatic_proposal_third_party_break_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakName]"
 notification_diplomatic_proposal_third_party_break_notification_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDesc]"
 notification_diplomatic_proposal_third_party_break_notification_tooltip:0 "#header $notification_diplomatic_proposal_third_party_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_notification_desc$"

 notification_diplomatic_proposal_third_party_accepted_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedName]"
 notification_diplomatic_proposal_third_party_accepted_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedDesc]"
 notification_diplomatic_proposal_third_party_accepted_tooltip:0 "#header $notification_diplomatic_proposal_third_party_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_accepted_desc$"

 notification_diplomatic_proposal_third_party_declined_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedName]"
 notification_diplomatic_proposal_third_party_declined_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedDesc]"
 notification_diplomatic_proposal_third_party_declined_tooltip:0 "#header $notification_diplomatic_proposal_third_party_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_declined_desc$"

 notification_diplomatic_proposal_third_party_break_accepted_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedName]"
 notification_diplomatic_proposal_third_party_break_accepted_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedDesc]"
 notification_diplomatic_proposal_third_party_break_accepted_tooltip:0 "#header $notification_diplomatic_proposal_third_party_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_accepted_desc$"

 notification_diplomatic_proposal_third_party_break_declined_name:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedName]"
 notification_diplomatic_proposal_third_party_break_declined_desc:0 "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedDesc]"
 notification_diplomatic_proposal_third_party_break_declined_tooltip:0 "#header $notification_diplomatic_proposal_third_party_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_declined_desc$"

 notification_diplomatic_pact_auto_break_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] broken"
 notification_diplomatic_pact_auto_break_notification_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] with [AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsFirstCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName)][AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsSecondCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName)] can no longer be maintained because the following conditions are no longer true:\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_auto_break_notification_tooltip:1 "#header $notification_diplomatic_pact_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_auto_break_notification_desc$"

 notification_diplomatic_pact_third_party_auto_break_notification_name:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] broken"
 notification_diplomatic_pact_third_party_auto_break_notification_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] between [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] and [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] can no longer be maintained because the following conditions are no longer true:\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_third_party_auto_break_notification_tooltip:1 "#header $notification_diplomatic_pact_third_party_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_third_party_auto_break_notification_desc$"

 notification_character_died_notification_name:2 "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName]) has died"
 notification_character_died_notification_desc:1 "Former [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName] [SCOPE.GetRootScope.GetCharacter.GetFullName] has died."
 notification_character_died_notification_tooltip:0 "$notification_character_died_notification_name$\n$notification_character_died_notification_desc$"

 notification_character_new_formation_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName]) has new [concept_military_formation]"
 notification_character_new_formation_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] now belongs to [AccessScopeReference(SCOPE.GetRootScope).AccessCharacter.GetMilitaryFormation.GetName]"
 notification_character_new_formation_notification_tooltip: "$notification_character_new_formation_notification_name$\n$notification_character_new_formation_notification_desc$"

 notification_character_died_war_office_notification_name:0 "$notification_character_died_notification_name$"
 notification_character_died_war_office_notification_desc:0 "Our character [SCOPE.GetRootScope.GetCharacter.GetFullName] has died in the War Office"
 notification_character_died_war_office_notification_tooltip:0 "$notification_character_died_war_office_notification_name$\n$notification_character_died_war_office_notification_desc$"

 notification_agitator_spawned_name:1 "An [concept_agitator] appears!"
 notification_agitator_spawned_desc:1 "[SCOPE.sCha('character').GetAgitatorSpawnedNotificationText]"
 notification_agitator_spawned_tooltip:1 "$notification_agitator_spawned_name$\n$notification_agitator_spawned_desc$"

 notification_acquired_technology_notification_name:0 "[SCOPE.sT('technology').GetName] acquired!"
 notification_acquired_technology_notification_desc:0 "We have acquired [SCOPE.sT('technology').GetName]"
 notification_acquired_technology_notification_tooltip:0 "$notification_acquired_technology_notification_name$\n$notification_acquired_technology_notification_desc$"

 notification_spreading_technology_notification_name:0 "[SCOPE.sT('technology').GetName] spreading"
 notification_spreading_technology_notification_desc:0 "Knowledge of [SCOPE.sT('technology').GetName] has started to spread to us"
 notification_spreading_technology_notification_tooltip:0 "$notification_spreading_technology_notification_name$\n$notification_spreading_technology_notification_desc$"

 notification_price_report_name:1 "[SCOPE.GetRootScope.GetCountry.GetCapital.GetMarket.GetName] Monthly Price Report"
 notification_price_report_desc:1 "[SCOPE.GetRootScope.GetCountry.GetPriceReportDesc]"
 notification_price_report_tooltip:1 "$notification_price_report_name$\n$notification_price_report_desc$"

 notification_law_changed_notification_name:0 "[SCOPE.GetRootScope.GetLaw.GetName] passed"
 notification_law_changed_notification_desc:0 "We have finished enacting the [SCOPE.GetRootScope.GetLaw.GetName] Law"
 notification_law_changed_notification_tooltip:0 "$notification_law_changed_notification_name$\n$notification_law_changed_notification_desc$"

 notification_claim_added_notification_name: "[SCOPE.sC('actor').GetName] [Concept('concept_claim','$concept_claims$')] [SCOPE.sStateRegion('region').GetName]"
 notification_claim_added_notification_desc: "[SCOPE.sStateRegion('region').GetName] is now [Concept('concept_claim','$concept_claimed$')] by [SCOPE.sC('actor').GetName]"
 notification_claim_added_notification_tooltip: "$notification_claim_added_notification_name$\n$notification_claim_added_notification_desc$"

 notification_institution_investment_increased_name:0 "[SCOPE.GetRootScope.GetInstitution.GetName] Investment increased"
 notification_institution_investment_increased_desc:0 "Increased Investment in the [SCOPE.GetRootScope.GetInstitution.GetName] Institution to [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
 notification_institution_investment_increased_tooltip:0 "$notification_institution_investment_increased_name$\n$notification_institution_investment_increased_desc$\n\n#i Effect:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"

 notification_institution_investment_decreased_name:0 "[SCOPE.GetRootScope.GetInstitution.GetName] Investment decreased#!"
 notification_institution_investment_decreased_desc:0 "Decreased Investment in the [SCOPE.GetRootScope.GetInstitution.GetName] Institution to [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
 notification_institution_investment_decreased_tooltip:0 "$notification_institution_investment_decreased_name$\n$notification_institution_investment_decreased_desc$\n\n#i Effect:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"

 notification_rank_changed_notification_name:0 "Power Rank Changed"
 notification_rank_changed_notification_desc:0 "We are now a [SCOPE.sC('actor').GetRank|v]"
 notification_rank_changed_notification_tooltip:0 "$notification_rank_changed_notification_name$\n$notification_rank_changed_notification_desc$"

 notification_heir_born_notification_name:0 "Heir Born"
 notification_heir_born_notification_desc:0 "[SCOPE.GetRootScope.GetCharacter.GetFullName], [concept_heir] to the throne of [SCOPE.GetRootScope.GetCharacter.GetCountry.GetName] has been born"
 notification_heir_born_notification_tooltip:0 "$notification_heir_born_notification_name$\n$notification_heir_born_notification_desc$"

 notification_cobelligerent_in_default_notification_name: "Co-belligerent in Default"
 notification_cobelligerent_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetName] is in [concept_default]. They will be more likely to capitulate or accept peace."
 notification_cobelligerent_in_default_notification_tooltip: "$notification_cobelligerent_in_default_notification_name$\n$notification_cobelligerent_in_default_notification_desc$"

 notification_country_nationalized_building_name: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] Nationalized Building"
 notification_country_nationalized_building_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] [Concept('concept_nationalize','$concept_nationalized$')] the [SCOPE.GetRootScope.GetBuilding.GetName] in [SCOPE.GetRootScope.GetBuilding.GetState.GetName], paying out a compensation of #v [GetPlayer.GetCustom('currency_symbol')][SCOPE.GetValue('number')|D]#! in return\n\nTheir actions have reduced our mutual relations by [SCOPE.GetValue('relations')|=+0]"
 notification_country_nationalized_building_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"

 notification_country_nationalized_building_no_compensation_name: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] Nationalized Building"
 notification_country_nationalized_building_no_compensation_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] [Concept('concept_nationalize','$concept_nationalized$')] the [SCOPE.GetRootScope.GetBuilding.GetName] in [SCOPE.GetRootScope.GetBuilding.GetState.GetName] without paying out a monetary compensation\n\nTheir actions have reduced our mutual relations by [SCOPE.GetValue('relations')|=+0]"
 notification_country_nationalized_building_no_compensation_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"

 notification_fleet_defeated_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] Defeated"
 notification_fleet_defeated_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] must return to [SCOPE.sHQ('hq').GetName]."
 notification_fleet_defeated_tooltip: "$notification_fleet_defeated_notification_name$\n$notification_fleet_defeated_notification_desc$"

 notification_fleet_repaired_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] Repaired"
 notification_fleet_repaired_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] was fully repaired."
 notification_fleet_repaired_tooltip: "$notification_fleet_repaired_notification_name$\n$notification_fleet_repaired_notification_desc$"

 notification_enemy_in_default_notification_name: "Enemy in Default"
 notification_enemy_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetName] is in [concept_default]. They will be more likely to capitulate or accept peace."
 notification_enemy_in_default_notification_tooltip: "$notification_enemy_in_default_notification_name$\n$notification_enemy_in_default_notification_desc$"

 notification_formation_could_not_find_other_formation_to_automatically_merge_into_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could not find another [concept_military_formation] to merge into"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could not find another [concept_military_formation] to merge into, so it's being stationed in [SCOPE.sHQ('hq').GetName] instead"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_tooltip: "$notification_formation_could_not_find_other_formation_to_automatically_merge_into_name$\n$notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc$"

 COMMANDER_COMBAT_UNIT_HEADER:0 "[CHARACTER.GetFullName]:"

 HQ_TROOP_ALLOCATION_CHANGE_HEADER:0 "[HQ.GetNameNoFlag] troop changes:"
 HQ_TROOP_ALLOCATION_CHANGE_COMMANDER:0 "[CHARACTER.GetFullName]:"
 HQ_TROOP_ALLOCATION_CHANGE_ENTRY:1 "[Hq.GetCombatUnitsIcon] #v $VALUE|+=$#! from [BUILDING.GetName] in [State.GetName]"

 HQ_TROOP_ALLOCATION_CHANGE_UNIT_TYPE:1 "$ICON_STR$ #tooltippable #tooltip:$BREAKDOWN$ $VALUE|+=$#!#! $UNIT_TYPE_NAME$"

 MILITARY_PANEL_GENERALS:0 "#ITALIC Generals#!"
 MILITARY_PANEL_ADMIRALS:0 "#ITALIC Admirals#!"

 HQ_PANEL_HOME_STATISTICS:0 "#title Statistics#!"

 HQ_PANEL_TOTAL_HEADER:0 "#title Currently in [Hq.GetNameNoFlag]#!"

 HQ_MAP_MARKER_TOOLTIP: "#header [Hq.GetName]#!"

 FRONT_SUPPLIED_BY_HQ_ITEM:0 "$TAB$@battalions! #v $NUM$#! to [Front.GetName]\n"

 CAN_TRAIN_NO_BARRACKS:0 "#N You do not have any $BUILDING_NAMES$.#!"
 CAN_TRAIN_NO_BARRACKS_OR:0 "or"
 CAN_TRAIN_MAXIMUM_SOLDIERS:0 "#N You have reached your soldier maximum#!"
 CAN_TRAIN_REACHED_TARGET:0 "#N You have reached your Strength Points Target#!"
 CAN_TRAIN_NO_BUDGET:0 "#N Your current budget is not enough for training any more troops#!"

 CONDITIONS_TOOLTIP:0 "\n#title Conditions:#!\n$CONDITIONS$"
 MODIFIERS_TOOLTIP:0 "#header [InterestGroupModifier.GetName]#!\n$TOOLTIP_DELIMITER$\n[InterestGroupModifier.GetDesc]\n\nTime remaining: [InterestGroupModifier.GetRemainingDays]"
 STATE_INDUSTRY_OUTPUT_MULT:0 "TEST"
 STATE_INDUSTRY_OUTPUT_MULT_desc:0 "TESTING_DESC"

 TECHNOLOGY_PLACE_IN_QUEUE: "#header [Technology.GetName]#!\n#v ##[Technology.GetResearchQueuePosition(GetPlayer.Self)]#! in Queue\nEstimated to be researched in [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]"

 ELECTION_RESULTS_TITLE:0 "#BOLD Election results <2>#!"
 TOTAL_VOTES_TITLE:0 "#title Total Votes#!"
 LOCATION_TITLE:0 "#title Location#!"
 COUNTRY_TITLE:0 "#title Country#!"
 TOTAL_POLITICAL_STRENGTH_TITLE:0 "#title Total [concept_political_strength]#!"
 TOTAL_CAPITAL_GAIN_TITLE:0 "#title [concept_authority] Gain#!"
 POPULATION_TITLE:0 "#title Population#!"
 WORKING_ADULTS_TITLE:0 "#title Workforce#!"
 WORKING_ADULTS_INCOME_TITLE:0 "#title Workforce Income#!"
 DEPENDENTS_TITLE:0 "#title Dependents#!"
 DEPENDENTS_INCOME_TITLE:0 "#title Dependents Income#!"
 VOTES_TITLE:0 "#title Votes#!"
 CULTURE_TITLE:0 "#title [concept_culture]#!"
 RELIGION_TITLE:0 "#title [concept_religion]#!"
 MAJORITY_RELIGION_TITLE:0 "Majority Religion"
 POL_STR_TITLE:0 "[concept_political_strength]"
 POLITICAL_STRENGTH_TITLE:0 "#title [concept_political_strength]#!"
 TOTAL_CAPITAL_GAIN_DESC:0 "#title [concept_authority] Gain#!"
 TIME_REMAINING:0 "Time remaining: #BOLD [GetPlayer.GetGovernmentData.GetTimeRemainingElection] days#!"
 CHANGE_GOVERNMENT_BUTTON:0 "Form Government: (#BOLD [GetPlayer.GetGovernmentData.GetCost] @aut!#!)"
 FORM_GOVERNMENT:0 "Form Government"
 NAME_OF_GOVERNMENT_TYPE:1 "[concept_government_type]"
 CHANGE_GOVERNMENT_TOOLTIP:0 "#header Change Ruling [Concept('concept_interest_group', '$concept_interest_groups$')]#!\n$TOOLTIP_DELIMITER$\nThis will change your ruling $concept_interest_groups$ to the selected ones."
 VERY_GOOD_IDEA:0 "#title $VERY_GOOD_IDEA_NAME$#!"
  #(>[GetGoodThreshold|+2])#!"
 VERY_BAD_IDEA:0 "#title $VERY_BAD_IDEA_NAME$#!"
  #(<[GetVeryBadThreshold|+2])#!"
 GOOD_IDEA:0 "#title $GOOD_IDEA_NAME$#!"
  #(>[GetBadThreshold|+2] && <[GetGoodThreshold|+2])#!"
 BAD_IDEA:0 "#title $BAD_IDEA_NAME$#!"
  #(>[GetVeryBadThreshold|+2] && <[GetBadThreshold|+2])#!"
 VERY_GOOD_IDEA_NAME:0 "Strongly wants"
 VERY_BAD_IDEA_NAME:0 "Strongly opposes"
 GOOD_IDEA_NAME:0 "Wants"
 BAD_IDEA_NAME:0 "Opposes"
 NEUTRAL_IDEA_NAME:0 "Ambivalent on"

 VERY_GOOD_IDEA_TOOLTIP:0 "#bold #P Strongly Wants#!#! this"
 VERY_BAD_IDEA_TOOLTIP:0 "#bold #N Strongly Opposes#!#! this"
 GOOD_IDEA_TOOLTIP:0 "#bold #P Wants#!#! this"
 BAD_IDEA_TOOLTIP:0 "#bold #N Opposes#!#! this"
 NEUTRAL_IDEA_TOOLTIP:0 "are #header Indifferent#! towards this"

 EVENT_NO_TIME_LIMIT:0 "No time limit"
 EVENT_WINDOW_EVENT_LOCATION:2 "[SelectLocalization(Or(EventWindow.GetEvent.HasCategory('enactment'), EventWindow.GetEvent.HasCategory('revolution')), 'EVENT_WINDOW_CATEGORY_SUBTITLE', 'EVENT_WINDOW_SUBTITLE')]"
 EVENT_WINDOW_SUBTITLE: "Event in [EventWindow.AccessEvent.GetState.GetName]"
 EVENT_WINDOW_CATEGORY_SUBTITLE: "[AddLocalizationIf(EventWindow.GetEvent.HasCategory('enactment'), 'EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE')][AddLocalizationIf(EventWindow.GetEvent.HasCategory('revolution'), 'EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE')]"
 EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE: "[AddLocalizationIf(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, Concatenate(GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult, ' '))]Event for the [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enactment$')] of [GetPlayer.GetLawBeingEnacted.GetName]"
 EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE: "$REVOLUTION_EVENT_TOOLTIP$"
 test.pink_elephant_tooltip:0 "Remaining Days: [EVENT.GetRemainingDays]"
 test.election_tooltip:0 "Election Results are in!"
 test.pre.election_tooltip:0 "#BOLD Election in [GetPlayer.GetGovernmentData.GetTimeRemainingPreElection] days#!\nCurrent Standing of Votes:"
 test.acquired_technology_tooltip:0 "New technology acquired!"

 PEOPLE_ABROAD_TITLE:0 "#title Unincorporated Population#!"
 POLITICALLY_UNALIGNED_TITLE:1 "#title [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]#!"
 POLITICALLY_UNALIGNED_TITLE_NO_FORMATTING:1 "#title Politically Unaligned#!" # Don't turn this into a concept, it will break some IG tooltips
 TRAIT_INACTIVE:0 "(Inactive)"

 politically_unaligned_POPULATION:1 "[Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')] Population: [Country.GetInactivePopulation|kv]"
 POLITICALLY_UNALIGNED_POPULATION_TOOLTIP:1 "#header [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')] Population#!\nTotal: [GetPlayer.GetInactivePopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactivePopulationDesc]"
 POLITICALLY_INVOLVED_POPULATION_TOOLTIP:1 "#header [Concept('concept_politically_unaligned_aligned', '$concept_politically_involved$')] Population#!\nTotal: [GetPlayer.GetPoliticallyInvolvedPopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPoliticallyInvolvedPopulationDesc]"

 POLITICAL_STRENGTH_SUBTITLE:0 "#title [concept_political_strength]#!"

 BUILDING_EXPANSION_LEVEL_BREAKDOWN_DESC:0 "[BUILDING.GetExpansionLevelDesc]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_URBAN_CAPACITY:0 "[concept_urbanization] level of #v [STATE.GetUrbanization]#!"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_TRADE_ROUTE_LEVELS:0 "#v $NUM_TRADE_ROUTE_LEVELS$ level(s)#! of [Concept('concept_trade_route', '$concept_trade_routes$')] originating in [STATE.GetName]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP:0 "[Building.GetExpansionLevelBreakdown]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN:0 "[BUILDING.GetName] maximum level of $MAXIMUM|v$ is due to:\n$TAB$$EXPLANATION$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_ARABLE_LAND:0 "Available [concept_arable_land] in [STATE.GetName]: $AVAILABLE_ARABLE_LAND|v$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_LAND_SHARE:0 "Total Potential in [STATE_REGION.GetName]: $MAX_IN_STATE_REGION|v$\n$TAB$Share of land owned by [STATE.GetName] in [STATE_REGION.GetName]: $LAND_SHARE|v1%$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_UNCAPPED:0 "[BUILDING.GetName] has no maximum level"
 BUILDING_HAS_INVALID_LEVELS_IN_QUEUE:0 "This building has invalid levels in the [concept_construction_queue]."
 CONSTRUCTION:0 "Construction"

 CHANGE_SPEED_NOT_HOST_OR_LOCAL:0 "#N Only host is allowed to change game speed#!"
 INCREASE_SPEED_ALREADY_MAX:0 "#N Cannot increase game speed more#!"
 DECREASE_SPEED_ALREADY_MIN:0 "#N Cannot decrease game speed more#!"
 INCREASE_SPEED_TOOLTIP:0 "Increase game speed"
 DECREASE_SPEED_TOOLTIP:0 "Decrease game speed"
 GAME_PAUSED:0 "Game is paused. #instruction Click#! to resume"
 GAME_RUNNING:0 "Game is running. #instruction Click#! to pause"
 TOGGLE_PAUSE_NOT_HOST_OR_LOCAL:0 "#N Only host is allowed to toggle pause#!"
 PAUSED_BY_PLAYER_MP:0 "Paused by #v [TimeKeeper.GetPausedBy]#!"
 PAUSED_BY_UNPAUSE_ONLY_ME:0 "Only you can unpause the game for [TimeKeeper.GetTimeAnyoneUnpause] more seconds"
 PAUSED_BY_UNPAUSE_ONLY_PAUSED_BY:0 "Only #v [TimeKeeper.GetPausedBy]#! can unpause for [TimeKeeper.GetTimeAnyoneUnpause] more seconds"
 PAUSED_BY_UNPAUSE_ANYONE:0 "Anyone can unpause"

 ESTABLISH_COLONY_BUILDING_TOOLTIP:0 "#variable [BUILDING_TYPE.GetName]#!"

 STATE_COLONY_ACTIVE_INTEREST:0 "The next growth of the colony is estimated to occur on #variable [State.GetColonyGrowthDateDesc]#!\n\nProgress increases each day by #variable [State.GetDailyColonyProgress|%]#! due to: \n[State.GetColonyGrowthModifierDesc]"
 STATE_COLONY_TOOLTIP_INACTIVE_INTEREST:0 "\n#R Cannot gain additional progress due to no [concept_active_interest] in [State.GetStateRegion.GetStrategicRegion.GetName]#!"
 STATE_COLONY_TOOLTIP:4 "#header Establishing [State.GetOwner.GetAdjective] Colony in [State.GetName]#!\n[GetPlayer.GetTensionTooltip( State.GetNextColonyProvince.GetState.GetOwner )][ConcatIfNeitherEmpty('\n', AddLocalizationIf( GreaterThan_int32(GetPlayer.GetTensionWith( State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), 'TENSIONS_ARE_HIGH'))]\n$TOOLTIP_DELIMITER$\nProgress towards gaining an additional province: #variable [State.GetColonyProgress|%]#!\n[SelectLocalization( State.IsColonyProgressBlockedByInactiveInterest, 'STATE_COLONY_TOOLTIP_INACTIVE_INTEREST', 'STATE_COLONY_ACTIVE_INTEREST' )]"
 TENSIONS_ARE_HIGH: "@warning! [Concept('concept_tension', '$concept_tensions$')] are high"

 MARKET_CAPITAL:0 "#title [concept_market_capital]#!\n[Market.GetMarketCapital.GetName]"
 MOVE_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY:0 "#N Cannot move the capital while involved in a [concept_diplomatic_play]#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY:0 "#N Cannot move the [concept_market_capital] while involved in a [concept_diplomatic_play]#!"
 MOVE_CAPITAL_FORBIDDEN_WHILE_AT_WAR:0 "#N Cannot move the capital while at [concept_war]#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_AT_WAR:0 "#N Cannot move the [concept_market_capital] while at [concept_war]#!"
 MOVE_CAPITAL_ALREADY_MOVED_RECENTLY:0 "#N We recently changed our [concept_capital_state] and cannot change it again until $DATE|v$#!"
 MOVE_CAPITAL_IS_ALREADY_CAPITAL:0 "#N [STATE.GetName] is already our [concept_capital_state]#!"
 MOVE_CAPITAL_NOT_INCORPORATED:0 "#N Can only make an [concept_incorporated_state] into the [concept_capital_state]#!"
 MOVE_CAPITAL_NOT_CULTURAL_HOMELAND:0 "#N Can only make a [concept_homeland] of any of your [concept_primary_cultures] into the [concept_capital_state]#!"
 MOVE_MARKET_CAPITAL_ALREADY_MOVED_RECENTLY:0 "#N We recently changed our [concept_market_capital] and cannot change it again until $DATE|v$#!"
 MOVE_MARKET_CAPITAL_IS_ALREADY_CAPITAL:0 "#N [STATE.GetName] is already our [concept_market_capital]#!"
 MOVE_MARKET_CAPITAL_NOT_INCORPORATED:0 "#N Can only make an [concept_incorporated_state] into the [concept_market_capital]#!"
 MOVE_MARKET_CAPITAL_NOT_MARKET_OWNER:1 "#N We are part of another [Concept('concept_country','$concept_country_possessive$')] [concept_market] and cannot move the [concept_market_capital]#!"
 INCORPORATE_STATE_NO_NEIGHBOUR:1 "Can only incorporate a state neighboring an already incorporated state"
 INCORPORATE_STATE_COLONY_NOT_FINISHED:2 "Cannot incorporate a [concept_colony] while it is still growing"
 INCORPORATE_STATE_ALREADY_INCORPORATED:1 "Already incorporated"
 INCORPORATE_STATE_ALREADY_INCORPORATING:1 "Already incorporating"
 INCORPORATE_STATE_HAS_DIPLOMATIC_PLAY_IN_REGION:0 "A [concept_decentralized_nation] has an active [concept_diplomatic_play] in this [concept_state_region]"
 INCORPORATE_STATE_HAS_TRUCE_IN_REGION:0 "Cannot incorporate a [concept_colony] while having a truce and not having [concept_colonization_rights] with the [concept_decentralized_nation] in this [concept_state_region]"
 INCORPORATE_STATE_CANNOT_INCORPORATE_TREATY_PORT:1 "Cannot incorporate a [concept_treaty_port]"
 INCORPORATE_STATE_INCORPORATION_DISALLOWED:1 "Cannot be incorporated due to:#!\n$TAB$[State.GetModifier.GetDescFor('state_disallow_incorporation_bool')]"
 INCORPORATE_STATE_NOT_ENOUGH_BUREAUCRACY:4 "@warning! The cost of [Concept('concept_incorporated_state', '$concept_incorporating$')] $STATE_NAME$ would lead to a deficit (@bur!$PROJECTED_TOTAL|v+1$)"
 incorporate_state:0 "Incorporate State"
 incorporate_state_tooltip:2 "#header $incorporate_state$#!\n$TOOLTIP_DELIMITER$\n[concept_incorporated_state_desc]"

 REVOLUTIONARY_PARTY_CANNOT_JOIN_GOVERNMENT:1 "One or more Interest Groups in the [Party.GetName] [Party.GetMembersSummary] supports an ongoing Revolution"
 SUPPRESSED_PARTY_CANNOT_JOIN_GOVERNMENT: "One or more Interest Groups in the [Party.GetName] [Party.GetMembersSummary] is [Concept('concept_suppress','$concept_suppressed$')]"

 UNINCORPORATE_STATE_TOOLTIP:0 "Click to cancel incorporation"

 ESTABLISH_COLONY_STATE_NOT_VALID:1 "Target is not a valid [concept_state]."
 ESTABLISH_COLONY_REVOLUTIONARY:0 "Revolutionary states cannot [Concept('concept_colony','$concept_colonize$')] states until civil war has ended."
 ESTABLISH_COLONY_NO_INTEREST:1 "We must have an [concept_interest] in $REGION|v$ to [Concept('concept_colony','$concept_colonize$')] here."
 ESTABLISH_COLONY_TYPE_NOT_VALID:1 "[concept_colony] type is not valid."
 ESTABLISH_COLONY_TARGET_COUNTRY_NOT_VALID:1 "There are no valid targets for [Concept('concept_colony','$concept_colonization$')] in the [concept_state]."
 ESTABLISH_COLONY_ALREADY_HAS_COLONY:1 "We already have a [concept_colony] here!"
 ESTABLISH_COLONY_ALREADY_HAS_TREATY_PORT: "We already have a [concept_treaty_port] here!"
 ESTABLISH_COLONY_OUT_OF_RANGE:1 "We cannot reach this [concept_state]"
 ESTABLISH_COLONY_CANNOT_AFFORD_MAINTENANCE:1 "We cannot afford the maintenance cost of $NEXTCOST|v$ @bur!/month!\nYou only have $CURRENTINCOME|v$ @bur!/month available."
 ESTABLISH_COLONY_INTEREST_MARKER_INSUFFICIENT:0 "Our [concept_interest] is insufficient!"
 ESTABLISH_COLONY_BAD_RANK:1 "[Concept('concept_country','$concept_countries$')] of [COUNTRY.GetRank] [concept_rank] cannot establish [Concept('concept_colony','$concept_colonies$')]"
 ESTABLISH_COLONY_NO_COLONIAL_GROWTH:1 "We do not produce any [concept_colonial_growth]"
 ESTABLISH_COLONY_TRUCE_BLOCKED: "[Concept('concept_colony','$concept_colonization$')] here is not allowed while we have a truce with the natives"
 ESTABLISH_COLONY_DIPLO_PLAY_BLOCKED: "[Concept('concept_colony','$concept_colonization$')] here is not allowed while any [concept_country] in the [concept_state_region] is an ongoing [concept_diplomatic_play] or [concept_war]"
 ESTABLISH_COLONY_MISSING_TECH:1 "We do not have the required #variable '$TECH$'#! [concept_technology]"
 ESTABLISH_COLONY_FOREIGN_CLAIMS:0 "We cannot colonize this [concept_state_region] because the following [Concept('concept_country', '$concept_countries$')] have [Concept('concept_claim', '$concept_claims$')] and maintain $INTERESTS$ there: $LIST$"

 CANCEL_COLONY_TOOLTIP:1 "Cancel [Concept('concept_colony','$concept_colonization$')]"
 CANCEL_COLONY_NO_COLONY:1 "#N We do not have a [concept_colony] here!#!"
 CANCEL_COLONY_HAS_DIPLO_PLAY:1 "#N Not possible to remove a [concept_colony] while part of an active [concept_diplomatic_play]#!"
 CANCEL_COLONY_TARGET_COUNTRY_NOT_VALID:1 "#N There are no valid targets that could take over the [concept_colony] from us#!"

 COLONIZATION_PAUSED:1 "[Concept('concept_colony','$concept_colonization$')] Paused"
 COLONIZATION_IS_OCCUPIED_IN_WAR: "[State.GetName] is [Concept('concept_occupation','$concept_occupied$')]"
 COLONIZATION_ISOLATED_FROM_MARKET: "[State.GetName] is [Concept('concept_isolated_state','$concept_isolated_state_short$')] from its [concept_market]"
 COLONIZATION_STOPPED_ACTIVE_DIPLOMATIC_PLAY: "[Concept('concept_colony','$concept_colonization$')] is on hold due to ongoing [concept_native_uprising]"
 COLONIZATION_STOPPED_TRUCE: "[Concept('concept_colony','$concept_colonization$')] is on hold while we have a truce with the natives"

 CANNOT_ESTABLISH_COLONY_HOVER:0 "#header #N Cannot Colonize [STATE_REGION.GetName]#!#!"
 CANNOT_ESTABLISH_COLONY_NOT_A_STATE_REGION: "#header #N You cannot Colonize this#!#!"
 ESTABLISH_COLONY_HOVER:0 "#header Colonize [STATE_REGION.GetName]#!"
 REMOVE_COLONY_TOOLTIP:0 "#header Remove colony from [StateRegion.GetName]"
 REMOVE_COLONY_CONFIRM:0 "#header Do you want to cancel [Concept('concept_colony', '$concept_colonizing$')] in [STATE.GetName]?#!\n\nYou will lose all progress in this state including already [Concept('concept_colony', '$concept_colonized$')] provinces\n[STATE.GetColonyProvinceProgressDesc]\nProgress towards gaining an additional province: #tooltippable #tooltip:[STATE.GetTooltipTag],STATE_COLONY_TOOLTIP [STATE.GetColonyProgress|%]#!#!"
 STATE_PROVINCES_COLONIZED:0 "#variable $CURRENT$#!/#variable $TOTAL$#! provinces [Concept('concept_colony', '$concept_colonized$')]"

 HAS_NO_INTEREST_MARKER:0 "#N This region has no [concept_interest]#!"
 HAS_INTEREST_MARKER:0 "#N This region already already contains an [concept_interest]#!"
 NO_STATE_ADJACENT_REGION:0 "#N Owns no State bordering this Region#!"
 LACKING_DIPLO_CAPITAL:0 "#N Requires @inf!$VALUE|0$#!"
 RIVAL_RULES_NOT_MET:0 "#N Rivalry conditions not met!"
 SET_INTEREST_MARKER:0 "#header Set Level $LEVEL$ [concept_interest]#!"
 IM_RANK_UNDER_MIN:0 "#N Can't Downgrade Level $LEVEL$ [concept_interest]#!"
 IM_RANK_OVER_MAX:0 "#N Can't Upgrade Level $LEVEL$ [concept_interest]#!"
 IM_COUNTRY_RANK_TOO_LOW:0 "#N Country rank needs to be at least $RANK$ to do this#!"

 INTERESTS:0 "[Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_ALREADY_HAS_INTEREST:0 "[Country.GetName] already has an [concept_interest] in [StrategicRegion.GetName]"
 DECLARE_INTEREST_TOO_MANY_DECLARED_INTERESTS:1 "[Country.GetName] cannot declare any more [Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_ADD_TOOLTIP:1 "#header [concept_declared_interest] in [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nAdd a [concept_declared_interest] in [StrategicRegion.GetName]\nWe are currently using [GetPlayer.GetNumDeclaredInterests|v] of our #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')]"
 DECLARE_INTEREST_REMOVE_TOOLTIP:1 "#header [concept_declared_interest] in [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nRemove our [concept_declared_interest] in [StrategicRegion.GetName]\nWe are currently using [GetPlayer.GetNumDeclaredInterests|v] of our #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')]"
 DECLARE_INTEREST_NOT_COASTAL_NOT_ADJACENT:1 "[StrategicRegion.GetName] is neither coastal nor adjacent to any of our natural [Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_COASTAL_BUT_NO_COAST:1 "[StrategicRegion.GetName] not adjacent to any of our natural [Concept('concept_interest', '$concept_interests$')] and we do not have a coast"

 ACTOR_COUNTRY_NOT_VALID:0 "Actor country not valid."
 TARGET_COUNTRY_NOT_VALID:0 "#N Target country not valid.#!"
 TARGET_STATE_NOT_VALID:0 "#N Target State not valid.#!"
 TARGET_STRATEGIC_REGION_NOT_VALID:0 "#N Invalid [concept_strategic_region].#!"

 NO_ACTIVE_RESEARCH:0 "No Current Research"
 ACTIVE_RESEARCH:0 "Current Research"
 PASSIVELY_SPREADING_TECHS:0 "[concept_technology_spread]"
 REMAINING_RESEARCH_QUEUE:0 "#v +[GetDataModelSize(AccessPlayer.GetResearchQueueBottom)]#!"
 START_RESEARCH_COMMANDS:0 "\n#instruction Click to start researching [Technology.GetName] immediately\n$SHORTCUT_KEY_MOD_shift$Click to add it to the research queue#!"
 START_RESEARCH_COMMANDS_IN_QUEUE:0 "\n#instruction Click to start researching [Technology.GetName] immediately#!"

 RESEARCH_TECHNOLOGY_BUTTON:0 "Start New Research ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 REPLACE_TECHNOLOGY_BUTTON:0 "Replace Research ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 RESEARCH_TECHNOLOGY_BUTTON_TOOLTIP:0 "#header Select New Research#!\nThere are [AccessPlayer.AccessNumResearchableTechnologies|v] Technologies you can Research"
 INNOVATION_DESCRIPTION:0 "Weekly Innovation: #v @innovation![Country.GetWeeklyInnovation|+0]#!"
 INNOVATION_TOOLTIP:0 "#header [concept_innovation]#!\nWe are generating #v @innovation![Country.GetWeeklyInnovation|+2]#! [concept_innovation] each week:\n[Country.GetWeeklyInnovationDesc]\n\nA maximum of @innovation![Country.GetWeeklyMaxInnovation|v2] [concept_innovation] can be invested into active research each week:\n[Country.GetWeeklyMaxInnovationDesc]\n\nAny [concept_innovation] that are unspent due to investment caps or lack of active research will increase the rate of [concept_technology_spread] to our country"
 TECHNOLOGY_SPREAD_RATE_DESCRIPTION:0 "[concept_technology_spread]: #v [Country.GetWeeklyTechnologySpreadDesc]#!"
 TECHNOLOGY_SPREAD_RATE_TOOLTIP:0 "#header [concept_technology_spread]#!\n$TECHNOLOGY_SPREAD_RATE_BREAKDOWN$[ConcatIfNeitherEmpty('\n\n',Country.GetCurrentlySpreadingTechsDesc)]"
 TECHNOLOGY_SPREAD_RATE_BREAKDOWN:0 "[Country.GetWeeklyTechnologySpreadBreakdown]"
 CURRENTLY_SPREADING_TECHS:0 "#header Currently spreading technologies#!\n$BREAKDOWN$"
 TECH_SPREAD_ENTRY:0 "$PROGRESS|%0v$ - [Technology.GetName] ([Technology.GetCategoryName])"
 TECHNOLOGY_TYPE_DESCRIPTION:0 "#b [Technology.GetEra.GetNumber]#!"
 TECHNOLOGY_INVENTED_IN:0 "Invented in #BOLD [Technology.GetOrigin.GetName]#!"
 TECHNOLOGY_IN_QUEUE:0 "Predicted to finish in #v [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]#! (Queue position: #v [Technology.GetResearchQueuePosition(GetPlayer.Self)]#!)"
 TECHNOLOGY_TOOLTIP_COST:2 "#title Cost:#! #tooltippable #tooltip:TECHNOLOGY_COST @innovation![TECHNOLOGY.GetCost( GetPlayer.Self )|0vk]#!#! Innovation ([TECHNOLOGY.PredictTimeLeftDesc( GetPlayer.Self )] to research)"
 TECHNOLOGY_TOOLTIP_MODIFIERS_LABEL:0 "#title Modifiers#!"
 TECHNOLOGY_TOOLTIP_ADOPTION_EFFECTS_LABEL:0 "#title Adoption Effects#!"
 TECHNOLOGY_TOOLTIP_SPREAD_EFFECTS_LABEL:0 "#title Spread Effects#!"
 TECHNOLOGY_TOOLTIP_UNLOCKS_LABEL:0 "#title Unlocks#!"
 TECHNOLOGY_TOOLTIP_LORE:0 "#lore $LORE$#!"
 COMMON_KNOWLEDGE:0 "Common knowledge"
 RESEARCHABLE_TITLE:0 "#title Researchable#!"
 NUM_URBAN_BUILDINGS:0 "#header Urban Buildings#!\nThere are a total of #variable [StatesPanel.GetNumUrbanLevels]#! Levels of Urban Buildings in [State.GetName]"
 NUM_RESOURCE_BUILDINGS:0 "#header Resource Buildings#!\nThere are a total of #variable [StatesPanel.GetNumResourceLevels]#! Levels of Resource Buildings in [State.GetName]"
 NUM_AGRICULTURE_BUILDINGS:0 "#header Agriculture Buildings#!\nThere are a total of #variable [StatesPanel.GetNumAgricultureLevels]#! Levels of Agriculture Buildings in [State.GetName]"
 NUM_DEVELOPMENT_BUILDINGS:0 "#header Development Buildings#!\nThere are a total of #variable [StatesPanel.GetNumDevelopmentLevels]#! Levels of Development Buildings in [State.GetName]"

 TECHNOLOGY_PROGRESS_FORMAT_NO_SPREAD:1 "#P $FIXED_TECH_PROGRESS|0$#!"
 TECHNOLOGY_PROGRESS_FORMAT_WITH_SPREAD:1 "#v $MIN_TECH_PROGRESS|0+$ - $MAX_TECH_PROGRESS|0+$#!"
 TECHNOLOGY_SPREAD_FORMAT:1 "#v $MIN_TECH_SPREAD|0+$ - $MAX_TECH_SPREAD|0+$#!"
 TECHNOLOGY_NO_SPREAD_FORMAT:1 "#v $TECH_SPREAD|0+$#!"
 TECHNOLOGY_PROGRESS_WEEKS_MIN_MAX:1 "$MIN_TIME$ - $MAX TIME$"

 BUILD_URBAN_BUILDING:1 "Build new Urban Building\nThis action has #v [StatesPanel.AccessState.GetNumConstructableUrbanBuildings|+]#! valid targets"
 STATE_GDP:0 "GDP: #variable [State.GetGDPContributionPercentage|%1]#!"
 STATE_TAX:0 "Tax: #variable [State.GetTaxationRevenue|+=K]#!"

 NUM_RURAL_BUILDINGS:0 "#header Rural Buildings#!\nThere are a total of #variable [StatesPanel.GetNumRuralLevels]#! Levels of Rural Buildings in [State.GetName]"
 NUM_RURAL_BUILDINGS_OVERVIEW:0 "#header Rural Buildings#!\nThere are a total of #variable [StatesPanel.GetNumRuralLevels]#! Levels of Rural Buildings in [State.GetName]"

 NUM_POPS:0 "#header Population#!\nThere is a total of [State.GetPopulationSize|Kv] people living in [State.GetName]"
 NUM_SOL:2 "#header [concept_sol]#! in [State.GetName]\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_ALL [State.GetAverageStandardOfLivingAll|1v]#!#!)\n$TOOLTIP_DELIMITER$\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_ALL [State.GetExpectedStandardOfLivingAll|v1]#!#!)\n[State.GetPopulationRatioBelowExpectedStandardOfLiving|%v1] of [Concept('concept_pop', '$concept_pops$')] have a [concept_sol] below $EXPECTED_SOL_SHORT$"

 STATE_SOL_ALL:0 "#header Average [concept_sol] for all [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelAll] ([State.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescAll]"
 STATE_SOL_POOR:0 "#header Average [concept_sol] for $lower$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelPoor] ([State.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescPoor]"
 STATE_SOL_MIDDLE:0 "#header Average [concept_sol] for $middle$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelMiddle] ([State.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescMiddle]"
 STATE_SOL_RICH:0 "#header Average [concept_sol] for $upper$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelRich] ([State.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescRich]"
 STATE_EXPECTED_SOL_ALL:0 "#header Average [concept_expected_sol] for all [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)] ([State.GetExpectedStandardOfLivingAll|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescAll]"
 STATE_EXPECTED_SOL_POOR:0 "#header Average [concept_expected_sol] for $lower$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)] ([State.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescPoor]"
 STATE_EXPECTED_SOL_MIDDLE:0 "#header Average [concept_expected_sol] for $middle$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)] ([State.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescMiddle]"
 STATE_EXPECTED_SOL_RICH:0 "#header Average [concept_expected_sol] for $upper$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)] ([State.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescRich]"

 WE_NOW_HAVE_LAW:1 "#bold We now have [PlayerMessageItem.GetLaw.GetName]!#!"
 GAINED_MODS:1 "#title Gained from changing to [PlayerMessageItem.GetLaw.GetName]:#!"
 LOST_MODS:1 "#title Lost from changing from [PlayerMessageItem.GetPrevLaw.GetName]:#!"
 ENACT_APPROVAL_CHANGES:1 "#title [concept_interest_group] approval changes from enacting [PlayerMessageItem.GetLaw.GetName]#!"
 ABOLISH_APPROVAL_CHANGES:1 "#title [concept_interest_group] approval changes from abolishing [PlayerMessageItem.GetPrevLaw.GetName]#!"
 LAW_LORE:1 "#lore #bold [PlayerMessageItem.GetLaw.GetName]#!\n[PlayerMessageItem.GetLaw.GetFlavor]#!"
 LAW_LORE_HEADER: "#b [PlayerMessageItem.GetLaw.GetFlavor]#!"
 PREVIOUS_LAW_POPUP_HEADER: "Changed from [PlayerMessageItem.GetPrevLaw.GetName]"

 INVALID_ERA:0 "Invalid era"
 TECHNOLOGY_PROGRESS:1 "#v @innovation! [Technology.GetProgress(GetPlayer.Self)|D]#! / #maximum [Technology.GetCost(GetPlayer.Self)|D]#!"
 TECHNOLOGY_COST:2 "[Technology.GetCostDesc(GetPlayer.Self)]"
 TECHNOLOGY_COST_DESC: "#header Cost to Research [Technology.GetName]: @innovation!$COST|0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TECHNOLOGY_COST_DETAILS: "Base Cost for [Concept('concept_technology_era', '$concept_technology_era_short$')]: @innovation!$VAL|0v$"
 TECHNOLOGY_COST_PENALTY: "Ahead of time Penalty @innovation!$VAL|0-$ due to:\n$DESC$"
 RESEARCH_PENALTY_BASE: "$VAL|v0$ from Base Value"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS: "#n x#!$VAL|0-$ from unresearched [Concept('concept_technology', '$concept_technologies$')] from earlier eras:\n$DESC$"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ONE_ENTRY: "#n x#!$VAL|0-$ from the number of unresearched [Concept('concept_technology', '$concept_technologies$')] from #v Era [Era.GetNumber]#!"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ENTRY: "$TAB$$TAB$$VAL|0-=$ from $NUM|v$ $concept_technologies$ in #v Era [Era.GetNumber]#!"

 TECHNOLOGY_PROGRESS_GAIN:0 "#v #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_GAIN_BREAKDOWN [GetPlayer.GetWeeklyTechnologyProgressDescForTech(Technology.Self)]#!#!#!"
 TECHNOLOGY_PROGRESS_TIME_LEFT:0 "[Technology.GetTimeLeftDesc( GetPlayer.Self )] left"
 TECHNOLOGY_PROGRESS_WITH_GAIN:0 "$TECHNOLOGY_PROGRESS$ ($TECHNOLOGY_PROGRESS_GAIN$)"
 TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT:0 "$TECHNOLOGY_PROGRESS_WITH_GAIN$ ($TECHNOLOGY_PROGRESS_TIME_LEFT$)"

 NO_TECH_IN_RESEARCH_QUEUE:0 "No queued [Concept('concept_technology', '$concept_technologies$')]"
 RESEARCH_QUEUE:0 "Research Queue"
 ADD_TO_TECH_QUEUE:0 "Add [Technology.GetName] to the research queue"
 REMOVE_TECH_FROM_QUEUE:0 "Remove [Technology.GetName] from the research queue"
 HOW_TO_ADD_TO_RESEARCH_QUEUE:0 "Add [Concept('concept_technology', '$concept_technologies$')] to the research queue by SHIFT + clicking an available tech or click the #b +#! next to it."
 TECH_QUEUE_BUTTON_NUMBER:0 "#b [Add_int32('(int32)1', Add_int32(GetDataModelSize(AccessPlayer.GetResearchQueueTop), GetDataModelSize(AccessPlayer.GetResearchQueueBottom)))]#!"

 TECHNOLOGY_SPREAD_TOOLTIP:0 "#header [concept_technology_spread]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]"
 TECHNOLOGY_GAIN_BREAKDOWN:3 "#header Technology Progress#!\nFrom [Technology.GetCategoryName] Research Speed: #tooltippable #tooltip:[Technology.GetTooltipTag]|[GetPlayer.GetTooltipTag],RESEARCH_SPEED_TOOLTIP #v [GetPlayer.GetWeeklyResearchSpeed|=+1]#!#!#!\nFrom [concept_technology_spread]: #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_SPREAD_TOOLTIP [GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]#!#!"
 RESEARCH_SPEED_TOOLTIP: "[Country.GetWeeklyResearchSpeedDesc]"
 BASE_WEEKLY_TECH_SPREAD:0 "Base weekly [concept_technology_spread]: #v $VALUE|+2$#!"
 RANDOMIZED_WEEKLY_TECH_SPREAD:1 "This results in a [concept_technology_spread] of between #P $MIN|1$#! and #P $MAX|1$#! @innovation![concept_innovation] invested each week in [Concept('concept_technology', '$concept_technologies$')] that are spreading to us."
 TECH_SPREAD_FROM_NEIGHBOR:0 "[concept_technology_spread] from $COUNTRY|v$: #v $VALUE|+=2$#! (Neighbor)"
 TECH_SPREAD_FROM_PACT:0 "[concept_technology_spread] from $COUNTRY|v$: #v $VALUE|+=2$#! ($PACT$)"
 TECH_SPREAD_MAX_CAP:0 "[concept_technology_spread] capped at #v $VALUE|+2$#!/week"

 test.acquired_technology.t:0 "[ROOT.GetCountry.GetName] acquired [ROOT.GetTechnology.GetName]!"
 test.acquired_technology.d:0 "TODO Description"
 test.acquired_technology.f:0 "TODO Flavor"

 SHOW_MORE:0 "#header Show more#!"
 SHOW_LESS:0 "#header Show less#!"

 BATTLE_SIZE_BASE_TOTAL_BATTALIONS_ON_FRONT:0 "Total $concept_battalions$ on $concept_front$"
 BATTLE_SIZE_BASE_NAVAL_INVASION_GENERALS_BATTALIONS:0 "$concept_battalions$ that made landfall"
 BATTLE_SIZE_BASE_NAVAL_INVASION_GARRISONED_BATTALIONS:0 "Garrisoned $concept_battalions$"
 BATTLE_SIZE_NUMERIC_ADVANTAGE:0 "Numeric advantage on [concept_front]"
 BATTLE_SIZE_TERRAIN_INFRASTRUCTRE:0 "Limited by [concept_terrain] and [concept_infrastructure]\n$TAB$[SCOPE.sProvince('province').GetTerrainName] [concept_combat_width]: [SCOPE.sProvince('province').GetTerrainCombatWidth|v1]\n$TAB$[SCOPE.sProvince('province').GetState.GetName] $concept_infrastructure$: [SCOPE.sProvince('province').GetState.GetInfrastructure|v0]"
 BATTLE_SIZE_MAX_AMOUNT_REACHED:0 "Maximum number of Battalions reached"
 BATTLE_SIZE_MIN_AMOUNT_REACHED:0 "Minimum required to advance"
 BATTLE_SIZE_FRONT_SIZE:0 "From length of Front"
 BATTLE_SIZE_CONCENTRATION_ACROSS_LENGTH_OF_FRONT:0 "Low concentration of $concept_battalions$ across length of Front"
 NAVAL_BATTLE_SIZE_ADMIRAL_SHARE: "Share of [Concept('concept_flotilla','$concept_flotillas$')] available for [concept_admiral] in his [concept_military_formation]"
 NAVAL_BATTLE_SIZE_NUM_COMMANDERLESS_UNITS: "Number of [Concept('concept_flotilla','$concept_flotillas$')] missing an [concept_admiral] in this [concept_military_formation]"

 JOURNAL_ENTRY_TOOLTIP:1 "[SelectLocalization(Not(StringIsEmpty(JournalEntry.GetStatusDesc)), 'JOURNAL_ENTRY_STATUS', '' )][SelectLocalization(StringIsEmpty(JournalEntry.GetStatusDesc), 'JOURNAL_ENTRY_TOOLTIP_WITH_LINE', JournalEntry.GetTooltip )]"
 JOURNAL_ENTRY_STATUS:1 "[JournalEntry.GetStatusDesc]\n\n"
 JOURNAL_ENTRY_TOOLTIP_WITH_LINE:0 "[JournalEntry.GetTooltip]"
 JOURNAL_ENTRY_ACTIVATION_HEADER:0 "#title Will activate if:\n#!"
 JOURNAL_ENTRY_COMPLETION_HEADER:0 "#title Will complete if:\n#!"
 JOURNAL_ENTRY_FAILURE_HEADER:0 "#title Will fail if:\n#!"
 JOURNAL_ENTRY_INVALIDATION_HEADER:0 "#title Will become invalid if:\n#!"
 JOURNAL_ENTRY_TIMEOUT:0 "#title Will time out in #v $TIMELEFT_STRING$#!#!"
 JOURNAL_ENTRY_WITH_GROUP: "[JournalEntry.GetType.GetGroup.GetName]\n$concept_journal_entry$"

 DIPLO_PLAY_SET_POSITION:0 "Move"
 DIPLOMATIC_PLAY_CONFIRMATION_HEADER:1 "#header Demand [DiplomaticPlayType.GetWarGoalType.GetName]#!"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_TOOLTIP:0 "Support #v [DiplomaticPlay.GetTarget.GetName]#! unconditionally in this [concept_diplomatic_play].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportTargetValidTooltip(GetPlayer))]"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_OPPOSING_SUBJECTS: "@warning! You have subjects who are supporting the opposing side in this play, they will be forced to become neutral and so will suffer a #r #bold [GetDefine('NDiplomacy','RELATION_PENALTY_OVERLORD_KICK_BACKER_SUBJECT')]#!#! relation hit with you#!"
 SUPPORT_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP:0 "Support #v [DiplomaticPlay.GetInitiator.GetName]#! unconditionally in this [concept_diplomatic_play].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportInitiatorValidTooltip(GetPlayer))]"
 LEAN_TOWARDS_TARGET_DIPLOMATIC_PLAY_TOOLTIP:1 "Set your stance as #b Leaning Towards#! #v [DiplomaticPlay.GetTarget.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetLeanTowardsTargetValidTooltip(GetPlayer)]"
 LEAN_TOWARDS_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP:1 "Set your stance as #b Leaning Towards#! #v [DiplomaticPlay.GetInitiator.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetLeanTowardsInitiatorValidTooltip(GetPlayer)]"
 BE_ON_THE_FENCE_DIPLOMATIC_PLAY_TOOLTIP:1 "Set your stance as #b On The Fence#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetBeOnTheFenceValidTooltip(GetPlayer)]"
 YIELD_DIPLOMATIC_PLAY_TOOLTIP:0 "#HEADER Yield#! your position in this [concept_diplomatic_play][ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetYieldValidTooltip(GetPlayer))]"
 DECLARE_NEUTRALITY_DIPLOMATIC_PLAY_TOOLTIP:0 "Declare yourself to be neutral in this [concept_diplomatic_play][ConcatIfNeitherEmpty(DiplomaticPlay.GetDeclareNeutralityValidTooltip(GetPlayer),'\n\n')]"
 DIPLOMATIC_PLAY_INITIATOR_TOOLTIP:0 "#variable [DiplomaticPlay.GetInitiator.GetName]#! is the initiator of this [concept_diplomatic_play]"
 DIPLOMATIC_PLAY_DESCRIPTION_TOOLTIP:0 "This [concept_diplomatic_play] is to force #variable [DiplomaticPlay.GetTarget.GetName]#! to #variable [DiplomaticPlay.GetDiplomaticPlayType.GetName]#!"
 DIPLOMATIC_PLAY_INTEREST_MARKER_TOOLTIP:0 "#variable [DiplomaticPlay.GetTarget.GetName]#! has a Level #variable [DiplomaticPlay.GetInterestMarker(DiplomaticPlay.GetTarget).GetInterestStatus]#! [concept_interest] in the [concept_strategic_region] of this [concept_diplomatic_play]"
 DIPLOMATIC_PLAY_SUPPORTS_TOOLTIP:0 "#variable [Country.GetName]#! supports this"
 DIPLOMATIC_PLAY_OPPOSES_TOOLTIP:0 "#variable [Country.GetName]#! opposes this"
 DIPLOMATIC_PLAY_UNDECIDED_TOOLTIP:0 "#variable [Country.GetName]#! is undecided"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_TOOLTIP:1 "Play as [DiplomaticPlay.GetInitiator.GetName|v]\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetSwitchSideBreakdown][ConcatIfNeitherEmpty( GetDesc( DiplomaticPlay.SwitchSide( GetPlayer )), '\n\n' )]"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_BREAKDOWN_CURRENT_GOVERNMENT:0 "Current Government:"
 DIPLO_PLAY_TAKE_SIDE_CURRENT_BACKER_CONFIRM: "Abandon support for [COUNTRY.GetName]? Any [Concept('concept_war_goal', '$concept_war_goals$')] or [Concept('concept_obligation', '$concept_obligations$')] they have promised to us will be lost and our [concept_relations] with them will be reduced by #variable #N [GetDefine('NDiplomacy', 'DIPLOMATIC_PLAY_ABANDON_SUPPORT_RELATIONS_IMPACT')]#!#!."
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_SUBJECT: "[TARGET_COUNTRY.GetName] will replace [COUNTRY.GetName] as your [concept_subject] once the [concept_war] starts."
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_POWER_BLOC_MEMBER: "[TARGET_COUNTRY.GetName] will replace [COUNTRY.GetName] as a member of your [concept_power_bloc] once the [concept_war] starts."

 DIPLOMATIC_PLAY_ESCALATION:0 "[DiplomaticPlay.GetPhaseName|v]"
 DIPLOMATIC_PLAY_ESCALATION_TOOLTIP:1 "#header Escalation#!\nPhase: [DiplomaticPlay.GetPhaseName|v]\nValue: #variable [DiplomaticPlay.GetEscalation]#!"
 DIPLOMATIC_PLAY_SUPPORTS:1 "#header Supports#!"
 DIPLOMATIC_PLAY_OPPOSES:1 "#header Opposes#!"
 DIPLOMATIC_PLAY_UNDECIDED:1 "#header Undecided#!"
 DIPLOMATIC_PLAY_NAME:0 "[concept_diplomatic_play] in [DiplomaticPlay.GetStrategicRegion.GetName]"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY:1 "Switch Sides"
 DIPLOMATIC_PLAY_OUTLINER_TOOLTIP:0 "#header [concept_diplomatic_play] in [DiplomaticPlay.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_INITIATOR$: [DiplomaticPlay.GetInitiator.GetName]\n$DIPLO_PLAY_TARGET$: [DiplomaticPlay.GetTarget.GetName]"

 COUNTRY_STRENGTH_POINT_ARMY_TOOLTIP:0 "Total Army Strength Point\n#variable [Country.GetStrengthPointArmy]#!\n\nEffectiveness: #variable [Country.GetCombatEffectivenessArmy|2]#!\nReinforcement Rate (not implemented): #variable [Country.GetReinforcementRateArmy]#!\nAvailable Barracks Strength Points capacity: #variable [Country.GetBarracksStrengthPointCapacityArmy] Strength Points#!"
 COUNTRY_STRENGTH_POINT_NAVY_TOOLTIP:0 "Total Navy Strength Point\n#variable [Country.GetStrengthPointNavy]#!\n\nKill Rate: #variable [Country.GetKillRateNavy]#!\nReinforcement Rate: #variable [Country.GetReinforcementRateNavy]#!\nAvailable Barracks Strength Points capacity: #variable [Country.GetBarracksStrengthPointCapacityNavy] Strength Points#!"
 NATIONAL_RESERVE_TOOLTIP:0 "#HEADER National Reserve#!\n$TOOLTIP_DELIMITER$\n[concept_gold_reserves_desc]"
 INTEREST_GROUP:0 "[concept_interest_group]"
 INCREASE:0 "increase"
 DECREASE:0 "decrease"
 NO_PREVIOUS_ELECTION: "No previous [concept_election]"

 ADMIRAL_REPAIRING_DATE: "[Character.GetFullName] has recently lost a naval battle and is unavailable"
 ADMIRAL_REPAIRING_DATE_TOOLTIP: "#header Repairing#!\n[Character.GetFullName] has recently lost a naval battle and is unavailable"

 NO_ORDERS:0 "No Orders"
 IN_RESERVE:0 "In Reserve"

 CURRENT:0 "Current"
 START_OF_BATTLE:0 "Start of Battle"
 END_OF_BATTLE: "End of Battle"
 UNDER_COMMAND:0 "Under Command"
 BORROWED:0 "Borrowed"
 DETAILS:0 "Details"
 YOU:0 "(You)"
 ENEMY:0 "(Enemy)"

 COMBAT_UNIT_NOT_MOBILIZED:0 "Inactive (not [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')])"
 COMBAT_UNIT_NOT_UNDER_DIRECT_COMMAND:0 "Inactive (in battle but not under direct command)"

 BATTLE_IN:0 "Battle in $STATE_REGION_NAME$"
 BATTLE_NEAR:0 "Battle near $CITY_NAME$"
 BATTLE_FOR:0 "Battle for $CITY_NAME$"
 MILITARY_LENS_CHARACTER_TOOLTIP:0 "#HEADER $NAME$ #!"

 TOOLTIPPABLE_FORMAT: "#tooltippable #tooltip:$TOOLTIP_TAG$ $STRING$#!#!"

 BATTLE_STATUS_OVERVIEW: "#header [Battle.GetName]#!\nA battle between [Battle.GetAttacker.GetName] and [Battle.GetDefender.GetName]"
 BATTLE_DAYS_DURATION: "The battle lasted for [Battle.GetDurationInDaysRaw|v] days between\n[Battle.GetStartDate|v] and [Battle.GetEndDate|v]."
 BATTLE_STATUS_INCONCLUSIVE: "This battle between [Battle.GetAttacker.GetName] and [Battle.GetDefender.GetName] ended inconclusively.\n$BATTLE_DAYS_DURATION$"

 BATTLE_STATUS_CONCLUDED: "#header [Battle.GetName]#!\nWinner: [Battle.GetWinner.GetName][AddTextIf(GreaterThan_CFixedPoint(Battle.GetOccupationWonRaw,'(CFixedPoint)0'),Concatenate('\n$BATTLE_STATUS_OCCUPATION_WON_LABEL$',Battle.GetOccupationWon))]\n\n$BATTLE_DAYS_DURATION$"

 BATTLE_STATE_VICTORY_SCORE_FORMAT: "$VALUE|0v$"
 BATTLE_STATE_OCCUPATION_FORMAT: "$VALUE|%0v$"

 BATTLE_STATUS_OCCUPATION_WON_LABEL: "Occupation Won: "
 BATTLE_STATUS_OCCUPATION_WON_TOOLTIP:1 "#header Total Occupation Won#!\n[Battle.GetWinner.GetName] won [Battle.GetOccupationWonRaw|%0v] [concept_occupation] in the [Battle.GetName]\n$TOOLTIP_DELIMITER$\nVictory score: [Battle.GetVictoryScore]\n\nThis resulted in:\n$BREAKDOWN$"
 BATTLE_STATE_OCCUPATION_ENTRY_GAINED: "$VALUE_MAYBE_BREAKDOWN$ Occupation gained in [Battle.GetState.GetName]"
 BATTLE_STATE_OCCUPATION_ENTRY_CLEARED: "$VALUE_MAYBE_BREAKDOWN$ Occupation cleared from [Battle.GetState.GetName]"

 BATTLE_SCORE_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 BATTLE_VICTORY_BASE: "Base"
 BATTLE_VICTORY_UNIT_OCCUPATION_MULT: "Unit State Occupation Modifier"

 VICTORY_SCORE_TOOLTIP: "#header [Battle.GetName] Victory Score#!\nWinner: [Battle.GetWinner.GetName] $STRING$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 OCCUPATION_COST_TOOLTIP: "#header Occupation cost#!\n[Battle.GetState.GetName]: $COST|0v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 OCCUPATION_COST_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 OCCUPATION_COST_FROM_POPULATION: "[SCOPE.GetRootScope.GetState.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')]"
 OCCUPATION_COST_FROM_NUM_HAZARDOUS_PROVINCES: "[SCOPE.ScriptValue('provinces_with_hazardous_terrain')|0v] [GetLabel('label_hazardous').GetName|v] [Concept('concept_province','$concept_provinces$')] in [SCOPE.GetRootScope.GetState.GetName]"
 OCCUPATION_COST_FROM_NUM_FORESTED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_forested_terrain')|0v] [GetLabel('label_forested').GetName|v] [Concept('concept_province','$concept_provinces$')] in [SCOPE.GetRootScope.GetState.GetName]"
 OCCUPATION_COST_FROM_NUM_ELEVATED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_elevated_terrain')|0v] [GetLabel('label_elevated').GetName|v] [Concept('concept_province','$concept_provinces$')] in [SCOPE.GetRootScope.GetState.GetName]"

 OCCUPATION_COST_FROM_INFRASTRUCTURE_USAGE: "[SCOPE.GetRootScope.GetState.GetInfrastructureUsage|0v] [concept_infrastructure_usage] compensating for difficult [concept_terrain]"
 OCCUPATION_COST_FROM_CONCENTRATION_OF_BATTALIONS: "[SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetName] has [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumMobilizedUnitsInTheater|0v] defending @battalions! [Concept('concept_mobilize_battalion','$concept_mobilize_battalions_mobilized$')] across [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumProvinces|0v] [Concept('concept_province','$concept_provinces$')]"
 OCCUPATION_COST_MAX_VALUE_REACHED: "Maximum Cost Reached"
 OCCUPATION_COST_MIN_VALUE_REACHED: "Minimum Cost Reached"

 TOOLTIP_STATE_OCCUPATION_PIESLICE: "#header [concept_occupation] in [State.GetName]#!\n[OccupationPiechartData.GetCountry.GetName] [SelectLocalization(ObjectsEqual(State.AccessOwner, OccupationPiechartData.GetCountry), 'IS_STILL_IN_CONTROL_OF', 'OCCUPIES')] [OccupationPiechartData.GetOccupationFraction|v0%] of [State.GetName]"
 OCCUPIES: "occupies"
 IS_STILL_IN_CONTROL_OF: "is still in control of"
 MILITARY_FORMATION_MANPOWER_TOOLTIP: "#header [concept_manpower]#!\n@manpower![MilitaryFormation.GetCurrentManpower|vK] / #maximum [MilitaryFormation.GetMaxManpower|vK]#! [concept_manpower]"

 BATTLE_UNITS_AT_START_TOOLTIP:0 "#header Initial number of [Concept('concept_unit','$concept_units$')]#!\n$UNIT_ICON$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )]: $VALUE|v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BATTLE_INITIAL_WANTED_UNITS:0 "Wanted $UNIT_ICON$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )] at the start of the Battle"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER:1 "$UNIT_ICON$ $VALUE|v$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )]"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER_START_OF_BATTLE:1 "[ConcatIfNeitherEmpty( Battle.GetAttackerNumWantedUnitsDesc, '\n' )]Got $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ attacking at the start of the Battle"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER_START_OF_BATTLE:1 "[ConcatIfNeitherEmpty( Battle.GetDefenderNumWantedUnitsDesc, '\n' )]Got $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ defending at the start of the Battle"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER:1 "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Attacking with @manpower! [Battle.CalcCurrentAttackerManpower|*1v] [concept_manpower]"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER:1 "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Defending with @manpower! [Battle.CalcCurrentDefenderManpower|*1v] [concept_manpower]"
 BATTLE_BATTALIONS_BREAKDOWN_DIRECTLY_COMMANDED:1 "$UNIT_ICON$ $VALUE|v$ under Direct Command of [Character.GetFullName]"
 BATTLE_BATTALIONS_BREAKDOWN_BY_GENERAL:1 "$UNIT_ICON$ $VALUE|v$ borrowed from [Character.GetFullName]"
 BATTLE_BATTALIONS_BREAKDOWN_BY_FORMATION: "$UNIT_ICON$ $VALUE|v$ borrowed from [MilitaryFormation.GetName]"
 BATTLE_ATTACKER_CURRENT_MORALE_TOOLTIP:0 "Attackers morale is currently #[GetMoraleColorString( Battle.CalcCurrentAttackerMorale )] [Battle.CalcCurrentAttackerMorale|0%]#!"
 BATTLE_DEFENDER_CURRENT_MORALE_TOOLTIP:0 "Defenders morale is currently #[GetMoraleColorString( Battle.CalcCurrentDefenderMorale )] [Battle.CalcCurrentDefenderMorale|0%]#!"
 BATTLE_ATTACKER_INITIAL_MORALE_TOOLTIP:0 "Attackers initial morale was #[GetMoraleColorString( Battle.GetInitialAttackerMorale )] [Battle.GetInitialAttackerMorale|0%]#!"
 BATTLE_DEFENDER_INITIAL_MORALE_TOOLTIP:0 "Defenders initial morale was #[GetMoraleColorString( Battle.GetInitialDefenderMorale )] [Battle.GetInitialDefenderMorale|0%]#!"
 BATTLE_ATTACKER_ENDING_MORALE_TOOLTIP:0 "Attackers morale at the end was #[GetMoraleColorString( Battle.GetEndingAttackerMorale )] [Battle.GetEndingAttackerMorale|0%]#!"
 BATTLE_DEFENDER_ENDING_MORALE_TOOLTIP:0 "Defenders morale at the end was #[GetMoraleColorString( Battle.GetEndingDefenderMorale )] [Battle.GetEndingDefenderMorale|0%]#!"
 BATTLE_BATTALION_GROUP_AVERAGE_MORALE:0 "Average morale of units is #[GetMoraleColorString( BattleBuildingEntry.GetAverageMorale )] [BattleBuildingEntry.GetAverageMorale|0%]#!"
 BATTLE_NONALLY_VICTORY:0 "[Battle.GetWinner.GetName] was victorious!"
 BATTLE_ALLY_VICTORY:0 "Your ally [Battle.GetWinner.GetName] was victorious!"
 BATTLE_ALLY_DEFEAT:0 "Your ally [Battle.GetLoser.GetName] was defeated!"
 BATTLE_INCONCLUSIVE_OUTCOME: "An inconclusive outcome!"
 BATTLE_CAPTURING_COUNTRY:0 "[Battle.GetCapturingCountry.GetName] captured [Battle.GetNumCapturedProvinces|v] provinces"
 BATTLE_COUNTRY_DEFEAT:0 "[Battle.GetLoosingProvincesCountry.GetName] lost [Battle.GetNumCapturedProvinces|v] provinces"
 DEAD_TOOLTIP_ATTACKER:0 "The [Battle.GetAttacker.GetAdjective] side has suffered [Battle.GetAttackerTotalDead|0v] [concept_dead]"
 DEAD_TOOLTIP_DEFENDER:0 "The [Battle.GetDefender.GetAdjective] side has suffered [Battle.GetDefenderTotalDead|0v] [concept_dead]"
 WOUNDED_TOOLTIP_ATTACKER:0 "The [Battle.GetAttacker.GetAdjective] side has suffered [Battle.GetAttackerTotalWounded|0v] [concept_wounded]"
 WOUNDED_TOOLTIP_DEFENDER:0 "The [Battle.GetDefender.GetAdjective] side has suffered [Battle.GetDefenderTotalWounded|0v] [concept_wounded]"
 DEMORALIZED_TOOLTIP_ATTACKER:1 "The [Battle.GetAttacker.GetAdjective] side has [Battle.GetAttackerTotalDemoralized|0v] [concept_morale_demoralized] soldiers"
 DEMORALIZED_TOOLTIP_DEFENDER:1 "The [Battle.GetDefender.GetAdjective] side has [Battle.GetDefenderTotalDemoralized|0v] [concept_morale_demoralized] soldiers"
 BATTLE_MODIFIER_UNDER_COMMAND_HEADER:0 "Units under direct command gain following benefits:\n$TOOLTIP_DELIMITER$\n"
 BATTLE_MODIFIER_TOOLTIP_ATTACKER:0 "[Battle.GetAttackerUnderCommandBreakdown]"
 BATTLE_MODIFIER_TOOLTIP_DEFENDER:0 "[Battle.GetDefenderUnderCommandBreakdown]"
 BATTLE_BORROWED_TOOLTIP:0 "Borrowed units are not affected by the modifiers of the [concept_commander]"

 MISSING_CHARACTER:0 "#N There is no Character assigned to this Command#!"
 DETACHMENTS:0 "#title Detachments#!"

 MARKET_STATUS_MARKET_CAPITAL: "In [MARKET.GetName] ([Concept('concept_market_capital','$concept_market_capital_short$')])\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_CONNECTED_STATE: "In [MARKET.GetName]\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_ISOLATED: "Part of the [MARKET.GetName] ([concept_isolated_state])"

 MARKET_STATUS_CONNECTION_INFO: "[concept_infrastructure]: [State.GetInfrastructureBalance|0+=][AddLocalizationIf(LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'),'MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS')]"
 MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS: "\n@warning! Low [concept_market_access]: #variable [State.GetMarketAccess|%0v]#!"

 MARKET_ACCESS_DESC_HEADER:1 "[concept_market_access] in [State.GetName]: $MARKET_ACCESS|%0v$\n$TOOLTIP_DELIMITER$\n"
 MARKET_ACCESS_DESC_BASE_MIN:0 "Because [concept_infrastructure] is at #b 0#!, base [concept_market_access] is #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE_MAX:1 "Because [concept_infrastructure_usage] is lower than or equal to [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), base [concept_market_access] is #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE:1 "@warning! Because [concept_infrastructure_usage] is higher than [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), base [concept_market_access] is reduced to #N $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_CONNECTED_LAND:1 "Connected to the [State.GetMarket.GetName] through a land route"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS:2 "Connected to the [State.GetMarket.GetName] through the ports of [ShippingLane.GetBeginState.GetName] and [ShippingLane.GetEndState.GetName] at full base [concept_market_access] of #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS_INEFFICIENT:2 "Connected to the [State.GetMarket.GetName] via [ShippingLane.GetCountry.GetAdjectiveNoFormatting] [concept_shipping_lane] through the ports of [ShippingLane.GetBeginState.GetName] and [ShippingLane.GetEndState.GetName], with [concept_market_access] reduced to #N $MARKET_ACCESS|%0v$#! due to low [concept_shipping_lane_effectiveness]"
 MARKET_ACCESS_DESC_DISCONNECTED_OVERSEAS:1 "Unable to connect to [State.GetMarket.GetName] through either land route or ports"
 MARKET_ACCESS_DESC_NO_EXIT_PORT:0 "Unable to connect to [State.GetMarket.GetName] via land, and [State.GetName] has no port"
 MARKET_ACCESS_DESC_NO_ENTRY_PORT:0 "Unable to connect to [State.GetMarket.GetName] via land, and the port in [State.GetName] has no other port to connect to in [State.GetMarket.GetName]"

 MARKET_PANEL_DETAILS_TAB_LABEL:1 "Goods"
 MARKET_PANEL_DETAILS_TAB_LABEL_BOLD:0 "#bold $MARKET_PANEL_DETAILS_TAB_LABEL$#!"
 MARKET_PANEL_STATES_TAB_LABEL:1 "Members"
 MARKET_PANEL_STATES_TAB_LABEL_BOLD:0 "#bold $MARKET_PANEL_STATES_TAB_LABEL$#!"
 MARKET_PANEL_FOOD_SECURITY_TAB_LABEL:0 "Food Security"
 MARKET_PANEL_GOODS_PRICE_GOLD:0 "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=o]#!"
 MARKET_PANEL_GOODS_PRICE:0 "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=v]"
 MARKET_PANEL_GOODS_PRICE_BLUE:0 "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=u]#!"
 GOODS_LOCAL_PRICE_GOLD:0 "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=o]#!"
 GOODS_LOCAL_PRICE:0 "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=v]"
 GOODS_LOCAL_PRICE_BLUE:0 "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=u]#!"
 MARKET_PANEL_BALANCE_GOLD:0 "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|o=D]#!"
 MARKET_PANEL_BALANCE:0 "[FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Dv]"
 MARKET_PANEL_BALANCE_BLUE:0 "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|u=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|o=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE: "[FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Dv]"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|u=D]#!"
 BUILDING_AVERAGE_WAGE:2 "[GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! [concept_average_wage]"
 BUILDING_AVERAGE_WAGE_FLIPPED:0 "[concept_average_wage]: [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! "
 TOOLTIP_BUILDING_AVERAGE_WAGE:3 "#header [Building.GetName] [concept_average_wage]: [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualWage|Dv]#![AddLocalizationIf(Building.IsSubsidized,'INCLUDED_WAGE_SUBSIDIES')]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdown]"
 INCLUDED_WAGE_SUBSIDIES:0 "\nIncludes [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualWageSubsidies|Dv] from being [Concept('concept_subsidies','$concept_subsidized$')]"
 POPTYPE_AVG_ANNUAL_WAGE_ENTRY:1 "#tooltippable #tooltip:[Building.GetTooltipTag]|[PopType.GetTooltipTag],TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE [GetPlayer.GetCustom('currency_symbol')]$WAGE|Dv$#!#! - [PopType.GetName] ([Building.GetNumEmployeesOfType(PopType.Self)|vD])"
 TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE:0 "#header [PopType.GetName] in [Building.GetName]#!\n[concept_average_wage] [GetPlayer.GetCustom('currency_symbol')][Building.GetAverageAnnualWageForPopType(PopType.Self)|Dv]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdownForPopType(PopType.Self)]"
 POP_AVG_ANNUAL_WAGE_ENTRY:1 "[GetPlayer.GetCustom('currency_symbol')]$WAGE|Dv$ - [Pop.GetCulture.GetName] [Pop.GetReligion.GetName] ([Pop.GetNumWorkforce|vD])"
 NON_LOCAL_GOODS: "Not [Concept('concept_good_production','$concept_good_produced$')] or [Concept('concept_good_consumption','$concept_good_consumed$')] in [State.GetName]"

 STARVATION_HEADER: "Starvation"
 FOOD_SECURITY_SPECIFIC_COUNTRY: "[FoodSecurityFilter.GetSelectedCountry.GetName]"
 FOOD_SECURITY_SPECIFIC_STATE: "[FoodSecurityFilter.GetSelectedState.GetCountry.GetFlagTextIcon] [FoodSecurityFilter.GetSelectedState.GetName]"
 FOOD_SECURITY_COUNTRY_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')][AddLocalizationIf(ObjectsEqual(GetPlayer.Self, FoodSecurityFilter.GetSelectedCountry.Self),' (You)')]"
 FOOD_SECURITY_COUNTRY_FILTER_TOOLTIP: "Filter on [Concept('concept_country','$concept_countries$')] in the [Market.GetOwner.GetFlagTextIcon] [Market.GetName]"
 FOOD_SECURITY_STATE_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')]"
 FOOD_SECURITY_STATE_FILTER_TOOLTIP: "Filter on [Concept('concept_state','$concept_states$')] in the [Market.GetOwner.GetFlagTextIcon] [Market.GetName]"
 FOOD_SECURITY_FILTER_ALL_STATES: "All [Concept('concept_state','$concept_states$')]"
 FOOD_SECURITY_FILTER_ALL_COUNTRIES: "All [Concept('concept_country','$concept_countries$')]"
 SHOW_STARVATION_MAP_MODE: "Show [concept_starvation] on the map"
 SHOW_HARVEST_CONDITIONS_MAP_MODE: "Show [Concept('concept_harvest_condition','$concept_harvest_conditions$')] on the map"
 MARKET_COUNTRIES_FILTER_TITLE: "Select a [concept_country] to filter on"
 MARKET_STATES_FILTER_TITLE: "Select a [concept_state] to filter on"
 NO_ONGOING_FAMINES: "No Ongoing [Concept('concept_famine','$concept_famines$')]"
 HAS_ONGOING_FAMINES: "Ongoing [Concept('concept_famine','$concept_famines$')] in [FoodSecurity.GetNumStatesWithFamineFormatted] [Concept('concept_state','$concept_states$')]"
 NUM_STATES_WITH_FAMINE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#!"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_STATE: "@goods_shortage! [Goods.GetShortageRatioInState|0%v]"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_MARKET: "@goods_shortage! [Goods.GetShortageRatioInMarket|0%v]"
 FOOD_SECURITY_GOODS_ITEM_NO_SHORTAGE: "No $concept_shortage$"
 FOOD_SECURITY_POPULATION_NUMBER: "#v 999K#! [Concept('concept_pop', '$concept_pops$')]"
 GOODS_MARKET_PRICE_HEADER_SHORT: "[Concept('concept_market_price', '$concept_market_price_short$')]"
 BASIC_FOOD_POP_NEED_HEADER: "Basic Food Pop Need"
 BASIC_FOOD_GOODS_CONTRIBUTION_BAR_CHART_HEADER: "[Concept('concept_good', '$concept_goods$')] contribution to the [GetPopNeed('popneed_basic_food').GetName] [Concept('concept_pop_needs','$concept_pop_need_short$')]"
 BASIC_FOOD_GOODS_LIST_HEADER: "[GetPopNeed('popneed_basic_food').GetName][ConcatIfNeitherEmpty(' ', AddLocalizationIf(GoodsList.HasStateContext, 'POP_NEED_IN_STATE'))] consists of the following [Concept('concept_goods_substitution','$concept_goods_substitutable$')] [Concept('concept_good', '$concept_goods$')]"
 POP_NEED_IN_STATE: "in [GoodsList.GetState.GetCountry.GetFlagTextIcon] [GoodsList.GetState.GetName]"
 POP_NEEDS_GOOD_BAR_CHART_ITEM_TOOLTIP: "#header [Goods.GetName]#!\n[GoodsList.GetPopConsumptionRatio(Goods.Self)|0%v] of the [GetPopNeed('popneed_basic_food').GetName] [Concept('concept_pop_needs','$concept_pop_need_short$')] is filled with [Goods.GetName] in the [Goods.GetMarket.GetName], [SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')][ConcatIfNeitherEmpty(', ', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY',  AddLocalizationIf(Not(FoodSecurityFilter.HasSpecificState), 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')))]\n$TOOLTIP_DELIMITER$\n[concept_market_price]: [GetPlayer.GetCustom('currency_symbol')][Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])"
 FOOD_SECURITY_HARVEST_CONDITION_TOOLTIP: "#header [HarvestConditionType.GetName]#!\n[HarvestConditionList.GetNumStatesWithType(HarvestConditionType.Self)|v] [Concept('concept_state','$concept_states$')] affected\n$TOOLTIP_DELIMITER$\n[HarvestConditionList.GetStatesBreakdown(HarvestConditionType.Self)]"

 BALANCE_TOOLTIP:2 "#header [Building.GetBalance|D+=] Weekly Balance#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\nThe Balance of [GetPlayer.GetCustom('currency_symbol')]#v [Building.GetBalance|D+=]#! is due to:\n$TAB$Weekly Revenue: #v [GetPlayer.GetCustom('currency_symbol')][Building.GetLastRevenue|D+=]#!\n$TAB$Weekly Expenses: #v [GetPlayer.GetCustom('currency_symbol')][Negate_CFixedPoint(Building.GetTotalExpenses)|+=D]#!"
 BUILDING_BALANCE_PROFIT:1 "#v [GetPlayer.GetCustom('currency_symbol')]$VALUE|D+$#! from positive balance and withdrawn reserves goes to:\n$BREAKDOWN$"
 BUILDING_BALANCE_PROFIT_WASTE:0 "Wasted profit:\n$BREAKDOWN$"
 BUILDING_BALANCE_LOSS:0 "#v [GetPlayer.GetCustom('currency_symbol')]$VALUE|D-$#! to cover low balance is taken from:\n$BREAKDOWN$"
 BALANCE_INVESTMENT:1 "[concept_reinvestment]: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"
 BALANCE_CASH_DEPOSIT:0 "[concept_cash_reserves]: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"
 BALANCE_SHAREHOLDER_DIVIDENDS:2 "[concept_workforce] [concept_dividends]: #v [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D$#!#!#!"
 BALANCE_GOVERNMENT_DIVIDENDS: "[concept_government_dividends]: #v $VAL|D$#!"
 BALANCE_OTHER_BUILDING_DIVIDENDS: "[concept_dividends] to other [Concept('concept_building', '$concept_buildings$')]: #v $VAL|D$#!"
 BALANCE_DIVIDENDS_TAX:0 "[concept_budget_dividends_taxes]: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D$#!"
 BALANCE_CASH_WITHDRAW:0 "[concept_cash_reserves]: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!"
 BALANCE_SHAREHOLDER_LOSSES:2 "[concept_workforce] pockets: #v [GetPlayer.GetCustom('currency_symbol')]#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D-$#!#!#!"
 BALANCE_OTHER_BUILDING_LOSSES: "[concept_ownership_share] holders in other [Concept('concept_building', '$concept_buildings$')]: #v $VAL|D-$#!"
 BALANCE_GOVERNMENT_LOSSES: "The [concept_treasury]: #v $VAL|D-$#!"
 BALANCE_SUBSISTENCE_WASTE:0 "[concept_subsistence_building] waste: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!"
 BALANCE_DIVIDENDS_TAX_WASTE:0 "[concept_tax_waste]: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|D-$#!"

 SHAREHOLDER_BALANCE:0 "[GetPlayer.GetCustom('currency_symbol')]$VAL|Dv$ - [Pop.GetName] ($SHARE|%1$)"

 BUILDING_BUDGET:0 "Budget: #BOLD [GetPlayer.GetCustom('currency_symbol')][Building.GetLastIncome|1]#!"
 BUILDING_TAXES:0 "Weekly Taxes:"
 TOOLTIP_BUILDING_TAXES_TOOLTIP:0 "#header Weekly Taxes#!\nTotal: [GetPlayer.GetCustom('currency_symbol')][Building.GetTaxationRevenue|D+=]\n$TOOLTIP_DELIMITER$\n[Building.GetTaxationRevenueTooltip]\n\n[concept_taxes_desc]"
 UNINCORPORATED_STATE_NO_TAX:0 "Buildings in [Concept('concept_unincorporated_state', '$concept_unincorporated_states$')] do not pay any Income Taxes\n"
 BUILDING_TYPE_NO_TAX:0 "This type of [concept_building] does not pay out taxes\n"
 INCOME_TAX:0 "[concept_budget_income_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$INCOME_TAX_BREAKDOWN$')] #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#!#!"
 INCOME_TAX_BREAKDOWN:0 "#header Income taxes#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|D+=$\n$TOOLTIP_DELIMITER$\nTax Rates:\n$BREAKDOWN$"
 INCOME_TAX_ENTRY:0 "$ENTRY_TYPE$: [GetPlayer.GetCustom('currency_symbol')]$VAL|vD$\n$BREAKDOWN$"
 POLL_TAX:0 "[concept_budget_poll_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$POLL_TAX_BREAKDOWN$')] #variable [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$#!#!#!"
 POLL_TAX_BREAKDOWN:0 "#header Poll taxes#!\nTotal: [GetPlayer.GetCustom('currency_symbol')]$VAL|D+=$\n$TOOLTIP_DELIMITER$\nTax Rates:\n$BREAKDOWN$"
 POLL_TAX_ENTRY:0 "$ENTRY_TYPE$: [GetPlayer.GetCustom('currency_symbol')]$VAL|vD$\n$BREAKDOWN$"
 DIVIDENDS_TAX:0 "[concept_budget_dividends_taxes]: [GetPlayer.GetCustom('currency_symbol')]$VAL|D+$"
 BUILDING_TAX_MODIFIER:0 "Building tax modifier: #variable $VAL|%0+$#!"
 MAINTAINING:0 "Maintaining @arrow_none!"
 HIRING:0 "Scaling up @arrow_up_up!"
 DOWNSIZING:0 "Tightening belt @arrow_down_down!"
 EARNINGS_BREAKDOWN:0 "#header Earnings#!\nValue: [GetPlayer.GetCustom('currency_symbol')][Building.GetEarnings|vD=]\n$TOOLTIP_DELIMITER$\nRevenue: #BOLD #V [GetPlayer.GetCustom('currency_symbol')][Building.GetLastRevenue|D+=]#!#![Building.GetLastMaterialExpensesDesc][Building.GetLastSlaveUpkeepDesc]"
 WORKFORCE:0 "#title Workforce #!"
 SORTED_BY:0 "Sorted by #BOLD Average Wage#!"
 SORTED_BY_POPULATION: "Sorted by #BOLD Population#!"
 WARS_LABEL:0 "#title Wars#!"
 WARS:0 "[Concept('concept_war','$concept_wars$')]"
 NO_WARS:0 "No $WARS$"
 ACTIVE_DIPLOMATIC_PLAYS:0 "Active [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 NO_ACTIVE_DIPLOMATIC_PLAYS:0 "No $ACTIVE_DIPLOMATIC_PLAYS$"
 DIPLOMATIC_PLAYS_AND_WARS: "$concept_wars$ & $concept_diplomatic_plays$"
 ONGOING_DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_ongoing_diplomatic_action', '$concept_ongoing_diplomatic_actions$')]"
 NO_WARS_OR_DIPLOMATIC_PLAYS: "No Active [Concept('concept_war','$concept_wars$')] or [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_NAME:0 "[DiplomaticAction.GetNameNoFormatting]"
 DIPLOMATIC_ACTION_ACTIVE_AND_NON_ACTIVE_NAME: "[DiplomaticAction.GetNameWithContext]"
 DIPLOMATIC_ACTION_BREAK_NAME: "[DiplomaticAction.GetBreakName]"
 DIPLO_ACTIONS:0 "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] targeting [Country.GetName]"
 NO_DIPLO_ACTIONS:0 "No Possible [concept_diplomatic_action]"
 NO_OVERLORD_ACTIONS:0 "No Possible [concept_overlord_action]"
 NO_SUBJECT_ACTIONS:0 "No Possible [concept_subject_action]"
 NO_BLOC_LEADER_ACTIONS:0 "No Possible [concept_bloc_leader_action]"
 NO_BLOC_MEMBER_ACTIONS:0 "No Possible [concept_bloc_member_action]"
 NO_DIPLO_PLAYS:0 "No Possible [concept_diplomatic_play]"
 NO_ACTIVE_DIPLOMACY:0 "No Active Diplomacy"
 DIPLOMATIC_DEMANDS_TARGETING_COUNTRY:0 "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] targeting [Country.GetName]"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY:0 "Unavailable $concept_diplomatic_demands_short$"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_STATE:0 "Unavailable $concept_diplomatic_demands_short$ targeting $concept_states$"
 NO_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY:0 "No [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] available"
 NO_DIPLOMATIC_DEMANDS_TARGETING_STATE: "No [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] available"
 DIPLOMATIC_STATUS_HEADER:0 "#title Diplomatic Status#!"
 TRUCES:0 "Truces"
 OBLIGATIONS_OWED_FROM:2 "Owed Obligations From"
 OBLIGATIONS_OWED_TO:1 "Owes Obligations To"
 INTEREST_MARKERS:0 "#title [Concept('concept_interest', '$concept_interests$')]#!"
 OH_DEER:0 ""#italic Oh deer, we have#! #bold [ErrorDeer.NumberOrErrors|v]#! #italic error(s)!#!""
 ERROR_DEER_SLOW_TICK_OPERATIONS:0 "#header Slow Tick Operations#!"
 NOT_AVAILABLE:0 "N/A"
 SOL_SHORT:2 "[Concept('concept_sol', '$SOL_SHORT_TEXT$')]"
 SOL_SHORT_TEXT:0 "SoL"

 TRUCE_WITH:0 "[concept_truce] with [Country.GetName]"
 TRUCE_TOOLTIP:0 "#header [concept_truce] with [Country.GetName]#!\n$TOOLTIP_DELIMITER$\n$concept_truce$ lasts until #variable [Truce.GetFirstTruceDate]#!"

 BATTLE_LOSSES_ATTACKER_STATS:0 "Attacking Army losses: #v [Negate_int32(Battle.GetAttackerLostUnits)|+=]#!"
 BATTLE_LOSSES_DEFENDER_STATS:0 "Defending Army losses: #v [Negate_int32(Battle.GetDefenderLostUnits)|+=]#!"

 THEATER:0 "Theater"
 show_supply_areas_lens_option:0 "Show Supply Areas"
 show_supply_areas_lens_option_tooltip:0 "Show Supply Areas"
 planned_advance:0 "Planned Advance"
 rapid_advance:0 "Rapid Advance"
 dispersed:0 "Dispersed"
 defensive:0 "Defensive"
 TITLE_MAIN_OBJECTIVE:0 "#title Main Objective#!"
 STOCKPILE_CURRENT_TOOLTIP:0 "#header Stockpile#!\n$TOOLTIP_DELIMITER$\n$STOCKPILE_MAXIMUM_TOOLTIP$"
 STOCKPILE_MAXIMUM_TOOLTIP:0 "#title Stockpile modifiers:#!\n[Stockpile.GetCapacityBreakdown]\n\n$STRATEGIC_GOODS_STOCKPILE_CONCEPT$"
 PACKAGE_TOOLTIP:0 ""
 STRATEGIC_GOODS_STOCKPILE_CONCEPT:0 "#concept How many Munitions Crates that are currently in the Stockpile / How many Munition Crates there can be in the Stockpile at most.#!"
 OBJ_STANCE_TOOLTIP:0 "#header Objective Stance: #![AreaOfOperation.GetAOStance(GetPlayer)]"
 OBJ_STANCE_DETACHMENT_TOOLTIP:0 "#header Objective Stance: #![MilitaryCommandDetachment.GetAOStance]"

 occupation_lens_option:0 "Occupation"
 occupation_lens_option_tooltip:0 "#header Occupation#!"
 power_projection_lens_option:0 "Power Projection"
 power_projection_lens_option_tooltip:0 "#header Power Projection#!"
 no_power_projection:0 "Remove Power Projection"

 create_army_lens_option:0 "Create Army"
 create_army_lens_option_tooltip:0 "#header Create Army#!"
 create_fleet_lens_option:0 "Create Fleet"
 create_fleet_lens_option_tooltip:0 "#header Create Fleet#!"

 HAS_NO_POWER_PROJECTION:0 "#N There is no power projection in this state#!"
 HAS_POWER_PROJECTION:0 "#N There is a power projection in progress in this state#!"
 ALREADY_HAS_POWER_PROJECTION:0 "#N This command already has $LEVEL$#!"
 COMMAND_NOT_ADJACENT_TO_STRATEGIC_REGION:0 "#N This command is not adjacent to this strategic region#!"
 COMMAND_NOT_IN_STRATEGIC_REGION:0 "#N This command is not in this strategic region#!"

 establish_presence:0 "Establish Presence"
 project_power:0 "Project Power"
 project_great_power:0 "Project Great Power"

 presence:0 "Presence"
 power:0 "Power"
 no_power:0 "No Power"

 RANK_HEADER:0 "#header Power Rank#!"
 RANK_TOOLTIP_NEXT:1 "If the $concept_prestige$ of [COUNTRY.GetName] becomes at least [COUNTRY.GetPrestigeForNextRank|v], their $concept_rank$ will increase to [COUNTRY.GetNextRank|v]"
 RANK_TOOLTIP_PREV:1 "If the $concept_prestige$ of [COUNTRY.GetName] is reduced below [COUNTRY.GetPrestigeToMaintainRank|v] for an extended time, their $concept_rank$ will decrease to [COUNTRY.GetPreviousRank|v]"
 RANK_TOOLTIP_MAX_SUBJECT:1 "@information! [COUNTRY.GetName] cannot achieve a higher $concept_rank$ than $HIGHEST_RANK|v$ due to being the [concept_subject] of [Country.GetOverlord.GetName], limiting them to a maximum score position of #v ##$HIGHEST_POSITION$#! in the world"
 RANK_TOOLTIP_MAX_COUNTRY_TYPE:1 "@information! [COUNTRY.GetName] cannot achieve a higher $concept_rank$ than $HIGHEST_RANK|v$ due to their $COUNTRY_TYPE|v$ status, limiting them to a maximum score position of #v ##$HIGHEST_POSITION$#! in the world"

 COUNTRY_RANK_TOOLTIP:1 "#header [concept_rank]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetName] currently holds the $concept_rank$ of #variable [COUNTRY.GetRank]#! with an overall score position of #variable ##[COUNTRY.GetCountryScorePositionDesc]#! in the world.\n\n[concept_prestige]: @prestige!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]#!#!"
 COUNTRY_PRESTIGE_BREAKDOWN:0 "#header [concept_prestige] of [Country.GetName]#!\nCurrent: @prestige![Country.GetPrestige|v]\n$TOOLTIP_DELIMITER$\n[Country.GetPrestigeDesc]"
 OBSERVER_RANK_TOOLTIP:0 "#header [concept_rank]#!\n#v ##0 #!$OBSERVER_NO_COUNTRY_SELECTED$"

 POWER_BLOC_RANK_TOOLTIP: "#header [concept_power_bloc_rank]#!\n$TOOLTIP_DELIMITER$\n$POWER_BLOC_NAME$ is currently #variable $POWER_BLOC_RANK_FORMATTED$#! of all [Concept('concept_power_bloc', '$concept_power_blocs$')] on account of their total [concept_prestige] of @prestige!#v #tooltippable #tooltip:$POWER_BLOC_TOOLTIP_TAG$,POWER_BLOC_PRESTIGE_BREAKDOWN $POWER_BLOC_TOTAL_PRESTIGE$#!#!#!"
 POWER_BLOC_PRESTIGE_BREAKDOWN: "#header [concept_prestige] of [PowerBloc.GetName]#!\nTotal: @prestige![PowerBloc.GetTotalPrestige|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetPrestigeDesc]"
 POWER_BLOC_PRESTIGE_BREAKDOWN_COUNTRY_ITEM: "[COUNTRY.GetName]: @prestige!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]#!#!"
 POWER_BLOC_MEMBER_COUNTRY_NAME_AND_PRESTIGE: "[Country.GetName] (@prestige!#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [Country.GetPrestige|v]#!#![AddLocalizationIf(Country.IsPowerStruggling, 'POWER_BLOC_POWER_STRUGGLE_WARNING')])"
 POWER_BLOC_POWER_STRUGGLE_WARNING: "#tooltip:[Country.GetTooltipTag],COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS @warning!#!"

 HOMELAND_MAP_MARKER_TOOLTIP:0 "The [HomelandMarker.GetCulture.GetName] people considers [State.GetName] their [concept_homeland].\nOwner: [State.GetOwner.GetName]"

 CURRENT_RANK_INFO:0 "Becoming a #variable [COUNTRY.GetNextRank]#! requires #variable #bold [COUNTRY.GetPrestigeForNextRank]#!#! Prestige.\n\nTheir [concept_prestige] of #variable #bold [COUNTRY.GetPrestige]#!#! is due to:\n[COUNTRY.GetPrestigeDesc]\n\nIf [concept_prestige] drops below #v [COUNTRY.GetPrestigeForCurrentRank]#!, they will lose their #v [COUNTRY.GetRank]#! status."
 CURRENT_RANK_INFO_LOWERCASE:0 "Becoming a #variable [Country.GetNextRank]#! requires #variable #bold [Country.GetPrestigeForNextRank]#!#! [concept_prestige].\n\nTheir [concept_prestige] of #variable #bold [Country.GetPrestige]#!#! is due to:\n[Country.GetPrestigeDesc]\n\nIf [concept_prestige] drops below #v [Country.GetPrestigeForCurrentRank]#!, they will lose their #v [Country.GetRank]#! status."

 AGENDAS_TITLE:0 "\n#title Agendas:#!"
 COST:0 "Cost: #variable $VALUE$#! $TYPE$"
 COST_MONEY:0 "Cost: [GetPlayer.GetCustom('currency_symbol')]#variable $VALUE|K$#!"
 COST_CREDIT:0 "Cost: [GetPlayer.GetCustom('currency_symbol')]#variable $VALUE|K$#! credit"
 AUTHORITY:1 "@aut![Nbsp][concept_authority]"
 BUREAUCRACY:1 "@bur![Nbsp][concept_bureaucracy]"
 INFLUENCE:1 "@inf![Nbsp][concept_influence]"

 VERY_STRONGLY_AGAINST_PROGRESS:0 "#N #bold Very Strongly Against#!#!"
 STRONGLY_AGAINST_PROGRESS:0 "#N #bold Strongly Against#!#!"
 AGAINST_PROGRESS:0 "#N #bold Against#!#!"
 FOR_PROGRESS:0 "#P #bold For#!#!"
 STRONGLY_FOR_PROGRESS:0 "#P #bold Strongly For#!#!"
 VERY_STRONGLY_FOR_PROGRESS:0 "#P #bold Very Strongly For#!#!"

 DURATION: "Duration"

 STARTING_DIPLO_PLAYS:0 "Starting [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 MODIFIER_LABEL:0 ""
 MODIFIERS_HEADER:0 "#title Modifiers#!"
 MODIFIERS_ATTACKER_HEADER:0 "#title Attacker Modifiers#!"
 MODIFIERS_DEFENDER_HEADER:0 "#title Defender Modifiers#!"
 CASUALTIES_ATTACKER_HEADER:0 "#title Attacker Casualties#!"
 CASUALTIES_DEFENDER_HEADER:0 "#title Defender Casualties#!"
 CASUALTY_ENTRY_HEADER:0 "[CultureCasualtyStatistics.GetCulture.GetName|vD]"
 CASUALTY_ENTRY_DEAD:0 "Dead: [CultureCasualtyStatistics.GetDead|vD]"
 CASUALTY_ENTRY_WOUNDED:0 "Wounded: [CultureCasualtyStatistics.GetWounded|vD]"
 CASUALTY_ENTRY_TOOLTIP:0 "[CultureCasualtyStatistics.GetDead|v] dead and [CultureCasualtyStatistics.GetWounded|v] wounded [CultureCasualtyStatistics.GetCulture.GetName] [Concept('concept_pop', '$concept_pops$')] on this side of the battle"

 BATTLE_STARTING_ATTACKER_STATS:1 "Attacking army at start of battle:\n@battalions![Battle.GetStartingAttackerUnits|v] Battalions\n@manpower![Battle.GetStartingAttackerManpower|v] Manpower"
 BATTLE_END_ATTACKER_STATS:1 "Attacking army at end of battle:\n@battalions![Battle.GetFinalAttackerUnits|v] Battalions\n@manpower![Battle.GetFinalAttackerManpower|v] Manpower"
 BATTLE_STARTING_DEFENDER_STATS:1 "Defending army at start of battle:\n@battalions![Battle.GetStartingDefenderUnits|v] Battalions\n@manpower![Battle.GetStartingDefenderManpower|v] Manpower"
 BATTLE_END_DEFENDER_STATS:1 "Defending army at end of battle:\n@battalions![Battle.GetFinalDefenderUnits|v] Battalions\n@manpower![Battle.GetFinalDefenderManpower|v] Manpower"


 OFFER_OBLIGATION:2 "Offer [concept_obligation]"
 CALL_IN_OBLIGATION:3 "Call in [concept_obligation]"
 SWAY_TYPE_CALL_ALLY: "Call [concept_ally]"
 SWAY_TYPE_BECOME_SUBJECT: "Become [concept_subject]"
 SWAY_TYPE_TRANSFER_SUBJECT: "Transfer [Concept('concept_subject', '$concept_subjects$')]"
 SWAY_TYPE_TRANSFER_STATE: "Transfer [Concept('concept_state', '$concept_states$')]"
 SWAY_TYPE_DIPLOMATIC_PACT: "[Concept('concept_diplomatic_pact','$concept_diplomatic_pacts$')]"
 SWAY_OFFER_TRANSFER_SUBJECT: "Transfer [COUNTRY_THIRD_PARTY.GetName]"
 SWAY_OFFER_BECOME_SUBJECT: "Become #v $SUBJECT_TYPE$#!"
 SWAY_OFFER_TRANSFER_STATE: "Transfer [STATE.GetName]"

 SWAY_OFFER_WARGOAL_TYPE: "Sway with [WarGoalType.GetName]"
 REVERSE_SWAY_OFFER_WARGOAL_TYPE: "Ask for [WarGoalType.GetName]"
 REVERSE_SWAY_OFFER_OBLIGATION: "Ask for [concept_obligation]"
 REVERSE_SWAY_CALL_IN_OBLIGATION: "Ask to call in [concept_obligation]"
 SWAY_OFFER_TYPE: "Sway with [SwayOfferType.GetName]"
 REVERSE_SWAY_OFFER_TYPE: "Ask for [SwayOfferType.GetName]"
 SWAY_OFFER_NAME: "Sway with $NAME|v$"
 REVERSE_SWAY_OFFER_NAME: "Ask for $NAME|v$"

 DIPLO_PLAY_PREFERENCE_ON_THE_FENCE:0 "No preference for either side"
 DIPLO_PLAY_STRONG_PREFERENCE_INITIATOR:0 "Preference for [DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_STRONG_PREFERENCE_TARGET:0 "Preference for [DiplomaticPlay.GetTarget.GetName]"
 DIPLO_PLAY_PREFERENCE_INITIATOR:0 "Slight preference for [DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_PREFERENCE_TARGET:0 "Slight preference for [DiplomaticPlay.GetTarget.GetName]"
 DIPLO_PLAY_PREFERENCE_FOR_COUNTRY_DESC:0 "#header [COUNTRY.GetName] Preference for [COUNTRY_THIRD_PARTY.GetName]#!\n$DETAILS$"
 DIPLO_PLAY_PREFERENCE_TOOLTIP:1 "#header Support Preferences of [COUNTRY.GetName]#!\n$TOOLTIP_DELIMITER$\nTendency to support [INITIATOR_COUNTRY.GetName]: #tooltippable #tooltip:$INITIATOR_BREAKDOWN_TAG$ $INITIATOR_SCORE|v$#!#!\nTendency to support [TARGET_COUNTRY.GetName]: #tooltippable #tooltip:$TARGET_BREAKDOWN_TAG$ $TARGET_SCORE|v$#!#!"
 DIPLO_PLAY_PREFERENCE_DESC:1 "[COUNTRY.GetAdjective] Relative Preference for [ALLY_COUNTRY.GetName]: $SCORE|+=$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN:1 "Preference to support [ALLY_COUNTRY.GetName]: #v $ALLY_SCORE|+=$#!#indent_newline:3 \n$ALLY_BREAKDOWN$\n#!\nPreference to support [ENEMY_COUNTRY.GetName]: #v $ENEMY_SCORE|+=$#!#indent_newline:3 \n$ENEMY_BREAKDOWN$#!\n\n[concept_neutrality]: #v $NEUTRALITY_SCORE$#! #indent_newline:3 \n$NEUTRALITY_BREAKDOWN$#!\n\n@information! Relative Preference is calculated from the [COUNTRY.GetAdjective] preference to support [ALLY_COUNTRY.GetName] #b minus#! either their preference to support [ENEMY_COUNTRY.GetName] or their [concept_neutrality] score, whichever result ends up lower"
 DIPLO_PLAY_CANNOT_SUPPORT_COUNTRY: "#header [COUNTRY.GetName] Preference for [COUNTRY_THIRD_PARTY.GetName]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetName] is unable to support [COUNTRY_THIRD_PARTY.GetName] due to:\n$ERRORS$"
 DIPLO_PLAY_NEUTRALITY_ALREADY_COMMITTED: "[concept_neutrality] is always #n 0#! when a [concept_country] has already committed to a side"

 DIPLO_PLAY_PREFERENCE_DESC_NESTED_TOOLTIPS:1 "[COUNTRY.GetAdjective] Relative Preference for [ALLY_COUNTRY.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $SCORE|+=$#!#!"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN_NESTED_TOOLTIPS:1 "#header [COUNTRY.GetAdjective] Relative Preference for [ALLY_COUNTRY.GetName]: $SCORE|+=$#!\n$TOOLTIP_DELIMITER$\nPreference to support [ALLY_COUNTRY.GetName]: #tooltippable #tooltip:$ALLY_BREAKDOWN_TAG$ $ALLY_SCORE|v$#!#!\nPreference to support [ENEMY_COUNTRY.GetName]: #tooltippable #tooltip:$ENEMY_BREAKDOWN_TAG$ $ENEMY_SCORE|v$#!#!\n[concept_neutrality]: #tooltippable #tooltip:$NEUTRALITY_BREAKDOWN_TAG$ $NEUTRALITY_SCORE|v$#!#!\n\n@information! Relative Preference is calculated from the [COUNTRY.GetAdjective] preference to support [ALLY_COUNTRY.GetName] minus either their preference to support [ENEMY_COUNTRY.GetName] or their [concept_neutrality] score, whichever result ends up lower"

 CALL_ALLY_DECLINED_BROKEN_PACTS_DESC: "If we decline, we will break these [Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')] with them:\n#v $LIST$#!"

 SWAY_OFFER_TITLE:1 "Sway Attempt"
 REVERSE_SWAY_OFFER_TITLE: "Offer of Support"
 SWAY_OFFER_TITLE_SELECTOR: "[SelectLocalization( Proposal.GetDiplomaticPlay.GetIncomingSway(Proposal.GetActor.Self, Proposal.GetRecipient.Self).IsReverseSway, 'REVERSE_SWAY_OFFER_TITLE', 'SWAY_OFFER_TITLE' )]"
 SWAY_OFFER_WARGOAL_DESC:7 "[COUNTRY.GetName] offers us the [concept_war_goal] of #variable [WarGoal.GetName]#! if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_OBLIGATION_DESC:3 "[COUNTRY.GetName] offers to owe us a [concept_obligation] if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_CALL_IN_OBLIGATION_DESC:2 "[COUNTRY.GetName] is requesting our support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName].\n\n$THEY_CALL_IN_OBLIGATION$"
 SWAY_OFFER_CALL_ALLY_DESC:2 "[COUNTRY.GetName] is calling on our support as their [concept_ally] in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]\n\nIf we accept, we will be able to add a [concept_war_goal] for ourselves as a [concept_secondary_demand][ConcatIfNeitherEmpty('\n\n',GetPlayer.GetPactsBrokenFromCallToArmsDeclinedDesc(COUNTRY.Self))]"
 SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetName] offers to become our $SUBJECT_TYPE|v$ if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetName] offers to transfer their [concept_subject] of [COUNTRY_THIRD_PARTY.GetName] to us if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetName] offers to transfer their [concept_state] of [STATE.GetName] to us if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetName] offers us a [DIPLOMATIC_ACTION_TYPE.GetName] if we will back them in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName]."
 REVERSE_SWAY_OFFER_WARGOAL_DESC:3 "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for the [concept_war_goal] of #variable [WarGoal.GetName]#!."
 REVERSE_SWAY_OFFER_OBLIGATION_DESC:2 "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for us owing them an [concept_obligation]."
 REVERSE_SWAY_OFFER_CALL_IN_OBLIGATION_DESC:2 "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for absolving the [concept_obligation] they owe us."
 REVERSE_SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] if we become their $SUBJECT_TYPE|v$."
 REVERSE_SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for transfering our [concept_subject] of [COUNTRY_THIRD_PARTY.GetName]."
 REVERSE_SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for transfering our [concept_state] of [STATE.GetName]."
 REVERSE_SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetName] offers us their support in the ongoing [concept_diplomatic_play] against [ENEMY_COUNTRY.GetName] in exchange for a [DIPLOMATIC_ACTION_TYPE.GetName]."

 DIPLOMATIC_DEMAND_PROPOSAL_DESC: "[COUNTRY.GetName] demands '[WAR_GOAL.GetName]' from us. Accepting will cede the demanded [concept_war_goal] and create a [concept_truce] for #v 5#! years.\n\n@warning! If we refuse, they will start a [concept_diplomatic_play] against us which may escalate into a [concept_war]."
 DIPLOMATIC_DEMAND_LENS_DESC: "#header [DIPLOMATIC_PLAY_TYPE.GetName|v] [concept_diplomatic_demand]#!\n$TOOLTIP_DELIMITER$\nDemand an '[DIPLOMATIC_PLAY_TYPE.GetName|v]' [concept_war_goal] from another [concept_country]. If they accept, the selected [concept_war_goal] will be ceded and a Truce will be created. If they refuse, a [concept_diplomatic_play] will start with you as the [concept_initiator].\n\n@information! You can also decide to start the [concept_diplomatic_play] immediately in order to make additional demands against your target."

 SWAY_NEITHER_PRIMARY_PARTICIPANT: "Neither [concept_country] is a primary participant of this [concept_diplomatic_play]"
 ALREADY_HAS_SWAY_IN_THIS_COUNTRY:0 "We are already attempting to sway this country."
 ALREADY_SWAYING_COUNTRY:1 "We are already attempting to [concept_sway] or [concept_offer_support] to another [concept_country]."
 ALREADY_BEING_SWAYED: "We are currently the target of a [concept_sway] or [Concept('concept_offer_support','$concept_offer_of_support$')] from another [concept_country]."
 RECENTLY_DECLINED_SWAY: "[COUNTRY.GetName] recently declined a [concept_sway] or [Concept('concept_offer_support','$concept_offer_of_support$')] from us, we can try again on #v $DATE$#!"
 ALREADY_OWES_OBLIGATION_TO:1 "We already owe #variable [COUNTRY.GetName]#! an [concept_obligation]."
 ADD_WARGOAL_PANEL_HEADER:0 "#BOLD Add [concept_war_goal]#!"
 ADD_WARGOAL_NOT_ALLOWED:0 "This [concept_diplomatic_play] does not allow adding additional wargoals."
 ADD_WARGOAL_TOOLTIP:0 "#header Add [concept_war_goal]#!\n[DiplomaticPlay.GetCountryCanAddWarGoalDesc(GetPlayer)]"
 CLICK_TO_ADD_WARGOAL:0 "#instruction Click to open [concept_war_goal] selection#!"
 WARGOAL_TRUST_COST:0 "Trust cost: #BOLD #N [WarGoalType.GetTrustCost]#!#!"
 TOOLTIP_WARGOAL_TRUST_COST:0 "The amount of Trust deducted when adding this wargoal"
 ADD_WARGOAL_NOT_PARTICIPANT:0 "[COUNTRY.GetName] is not part of this [concept_diplomatic_play]"
 ADD_WARGOAL_NOT_PRIMARY_PARTICIPANT:0 "[COUNTRY.GetName] is not a primary participant of this [concept_diplomatic_play] and did not join via a $SWAY_TYPE_CALL_ALLY$ [concept_sway]"
 SIDE_NOT_VALID_IN_DIPLOMATIC_PLAY:0 "No valid side to join"
 ADD_WARGOAL_NOT_ENOUGH_TRUST:0 "Need $COST$ Trust to add this wargoal"
 ADD_WARGOAL_TARGET_NOT_IN_REGION:0 "[COUNTRY.GetName] is not present in #variable $REGION$#!"
 ADD_WARGOAL_ALREADY_EXISTS:0 "This wargoal is already part of the war"
 ADD_WARGOAL_NOT_ENOUGH_MANEUVERS:1 "We need at least $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')] to take this action"
 ADD_WARGOAL_NO_MANEUVERS_REMAINING:0 "No [Concept('concept_maneuver', '$concept_maneuvers$')] left for this side of the [concept_diplomatic_play]"
 ADD_WARGOAL_ON_ALLY:0 "Cannot add a wargoal on an ally"
 ADD_WARGOAL_WAR_HAS_STARTED:0 "The war has already started"
 ADD_WARGOAL_ALLY_TOO_COSTLY: "Supporters in a [concept_diplomatic_play] can only add [Concept('concept_war_goal', '$concept_war_goals$')] that cost [GetDefine('NDiplomacy','ALLY_WARGOAL_MAX_MANEUVERS_COST')] [Concept('concept_maneuver', '$concept_maneuvers$')] or less"
 ADD_WARGOAL_ALREADY_ADDED_WARGOAL: "Has already added a [concept_war_goal]"
 ADD_WARGOAL_NOT_ON_A_SIDE: "[COUNTRY.GetName] has not yet taken a side in the [concept_diplomatic_play]"
 JOIN_DIPLO_PLAY_COUNTRY_ALREADY_SWAYED:0 "[COUNTRY.GetName] already has an accepted sway offer"
 CANNOT_REVERSE_SWAY_CALL_ALLY: "$CALL_ALLY$ cannot be used for [concept_offer_support]"
 CANNOT_CALL_ALLY_NON_ALLY: "$CALL_ALLY$ can only be used on [Concept('concept_ally', '$concept_allies$')]"
 COUNTRY_ALREADY_SUBJECT: "[COUNTRY.GetName] is already a [concept_subject]"
 NOT_VALID_SUBJECT_TYPE: "#v $SUBJECT_TYPE$#! is not a valid [concept_subject] type for this interaction"
 STATE_IS_CAPITAL: "[STATE.GetName] is the [concept_capital_state]"
 NOT_VALID_DIPLOMATIC_ACTION: "[DIPLOMATIC_ACTION.GetName] is not valid for this interaction"
 ALREADY_ACTIVE_PACT: "Already have an active [concept_diplomatic_pact] for [DIPLOMATIC_ACTION.GetName]"
 COUNTRY_MUST_BE_SUBJECT: "[COUNTRY_THIRD_PARTY.GetName] is not a [concept_subject] of [COUNTRY.GetName]"
 WARGOAL_MUST_BE_INDEPENDENT: "[COUNTRY.GetName] must not be a [concept_subject]"
 ALREADY_PROMISED_SWAY: "[COUNTRY.GetName] has already promised this [concept_sway] to another [concept_country]"
 SWAY_OFFER_NOT_VALID_FOR_SUBJECT: "[COUNTRY.GetName] can only be [Concept('concept_sway','$concept_swayed$')] against their [concept_overlord] with an #v $war_goal_independence_type_name$#! or #v $war_goal_increase_autonomy_type_name$#! [concept_war_goal], and only if their [concept_liberty_desire] is high enough"
 WARGOAL_NOT_POWER_BLOC_LEADER: "[COUNTRY.GetName] must be the leader of a [concept_power_bloc]"
 WARGOAL_NOT_IN_POWER_BLOC_LED_BY: "[COUNTRY.GetName] must be in a [concept_power_bloc] led by [TARGET_COUNTRY.GetName]"

 NUM_BUILDINGS_WITH_PROD_METHOD_ACTIVE:0 "[ProductionMethod.GetNumOfBuildingsUsingThis(GetPlayer.Self)|v] [Concept('concept_building', '$concept_buildings$')] currently have [ProductionMethod.GetName] active:\n[ProductionMethod.GetBuildingTypesUsingThisDesc(GetPlayer.Self)]"
 BUILDING_TYPE_USING_PM_ENTRY:0 "[BuildingType.GetName]: #variable $NUM$#!"
 ACTIVE_PRODUCTION_METHODS_PRODUCING:1 "[Concept('concept_production_method', '$concept_production_methods$')] producing [Goods.GetTextIcon][Nbsp][Goods.GetName] in [GetPlayer.GetName]"
 ACTIVE_PRODUCTION_METHODS_CONSUMING:1 "[Concept('concept_production_method', '$concept_production_methods$')] using [Goods.GetTextIcon][Nbsp][Goods.GetName] in [GetPlayer.GetName]"
 INACTIVE_PRODUCTION_METHODS:0 "Not currently active"
 PRODUCTION_METHOD_ITEM:0 "#variable [ProductionMethod.GetName]#!"
 BUILDING_TYPE_BULK_CHANGE_TOOLTIP: "[BuildingBrowserBuildingTypeItem.GetBulkChangeTooltip( ProductionMethodGroup.Self )][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetBuildingsInCountry), 'CANNOT_BULK_CHANGE_NOT_OWNED'))]"
 CANNOT_BULK_CHANGE_NOT_OWNED: "@red_cross! None of the [BuildingBrowserBuildingTypeItem.GetBuildingType.GetName] are owned by you"

 PARTIES_TITLE:0 "#title Parties#!"
 COLONIZABLE_NO_POWER_PROJECTION:0 "#N Colonizable nations cannot initiate Power Projections#!"
 MARKET_CONTROLLER_TOOLTIP:1 "[concept_market_owner_desc]"
 MILITARY_THEATER:0 "[concept_theater]"

 STRATEGIC_REGION_MARKER_ADD_IM:0 "#header Add  [concept_interest]#!\nChoose a #bold Power Projection#! Regional Mission to use your military Strength Points to project your Power in #variable [StrategicRegion.GetName]#!\n\n[concept_power_projection_desc]"
 STRATEGIC_REGION_MARKER_START_DP:0 "#header Start [concept_diplomatic_play]#!\nYou have an #variable Interest#! in #variable [StrategicRegion.GetName]#!, meaning you can start a [concept_diplomatic_play] here"

 TOOLTIP_INTEREST_GROUP:1 "#header [InterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n\nClout: [InterestGroup.GetClout|%1v]\nPopulation: #variable [InterestGroup.GetPopulation|*]#!\n\n#lore [InterestGroup.GetDesc]#!\n"
 INTEREST_GROUP_NAME_WITH_CLOUT_VALUE: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"
 TOOLTIP_ENACT_LAW_NAME: "#header Enact [Law.GetName]#!"
 TOOLTIP_ENACT_LAW_CURRENT_LAW_NAME: "Current [concept_law]: [Law.GetActiveGroupLaw.GetName]"
 TOOLTIP_CANCEL_LAW:0 "#header Cease Enacting [Law.GetName]#!\nYou will lose all progress.[ConcatIfNeitherEmpty('\n',Law.PredictRadicalismChangesFromCancellationDesc)]"
 TOOLTIP_CANCEL_LAW_DISALLOWED: "#header Cannot Cease Enacting [Law.GetName]#!\n$COMMAND_DESC$"
 TOOLTIP_CANCEL_LAW_COOLDOWN:2 "@warning! You will not be able to attempt to enact [Law.GetName] again for #v [GetDefine('NPolitics','LAW_ENACTMENT_COOLDOWN_DAYS')|0] days#!."
 TOOLTIP_CANCEL_LAW_POLITICAL_MOVEMENT_EFFECT: "@warning! The [concept_political_movement] to [PoliticalMovement.GetName] will be enraged by this, resulting in:\n[GetStaticModifier('supported_law_cancelled').GetDesc]"
 TOOLTIP_ENACT_COMMON: "[JoinText('\n\n', Law.GetReplacedLawEffect, JoinText('\n\n', Law.PredictLegitimacyChangeToEnactDesc, Law.PredictApprovalChangesDuringEnactmentDesc))][ConcatIfNeitherEmpty('\n',Law.PredictRadicalismChangesFromEnactmentDesc)][ConcatIfNeitherEmpty('\n\n',Law.PredictMovementLoyalistsFromEnactmentDesc)]"
 TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE: "#title Temporary [concept_approval] Changes from [Concept('concept_endorse_oppose', '$concept_endorsement$')]:#!"
 PREDICT_APPROVAL_WHILE_ENACT:0 "$TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE$\n$BREAKDOWN$"
 CLICK_TO_OPEN_LAW_GROUP:0 "#instruction Click to view [concept_law_group]#!"
 COMMAND_CONFIRMATION_START_IMPOSING_LAW: "#b Impose#! [Law.GetName] on [Law.GetCountry.GetName]?\n\n$LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN$"
 LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN: "In #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! days one of the following will happen:\n$IMPOSITION_OUTCOME_SUCCESS$\n$IMPOSITION_OUTCOME_ADVANCE$\n$IMPOSITION_OUTCOME_DEBATE$\n$IMPOSITION_OUTCOME_STALL$"

 IMPOSITION_OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallWithImpositionChance|v%1]#!#!"

 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )] Chance#!\nCurrently: [Law.GetCheckpointSuccessWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointSuccessWithImpositionBreakdown)), 'IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointSuccessWithImpositionBreakdown]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )] Chance#!\nCurrently: [Law.GetCheckpointAdvanceWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceWithImpositionBreakdown)), 'IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointAdvanceWithImpositionBreakdown]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )] Chance#!\nCurrently: [Law.GetCheckpointDebateWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateWithImpositionBreakdown)), 'IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointDebateWithImpositionBreakdown]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )] Chance#!\nCurrently: [Law.GetCheckpointStallWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallWithImpositionBreakdown)), 'IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointStallWithImpositionBreakdown]"

 COMMAND_CONFIRMATION_CANCEL_LAW_ENACTMENT:0 "[Law.GetCancelTooltip]"

 LAW_ENACTMENT_PROGRESS_TOPBAR:0 "[SelectLocalization( GetPlayer.IsEnactingLaw, 'ENACTING_LAW', 'NOT_ENACTING_LAW' )]\n[GetPlayer.GetLawEnactmentProgressDesc]"
 ENACTING_LAW:0 "[GetPlayer.GetName] is currently enacting #variable [GetPlayer.GetLawBeingEnacted.GetName]#!"
 NOT_ENACTING_LAW:0 "[GetPlayer.GetName] is not actively enacting a new [concept_law]."
 LAW_ENACTMENT_PHASE_LABEL: "Phase #v [Law.GetEnactmentPhase]/3#!"
 LAW_ENACTMENT_SETBACKS_LABEL: "[Concept('concept_enactment_setback', '$concept_enactment_setbacks_short$')]:"
 LAW_ENACTMENT_ATTEMPT_TOO_SOON:0 "An attempt to enact [Law.GetName] was made too recently. Wait $TIME_REMAINING$ before another attempt."
 LAW_ENACTMENT_PROGRESS:6 "#header [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacting$')] [Law.GetName]#!\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')]: [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]\n$TOOLTIP_DELIMITER$\n$LAW_ENACTMENT_OUTCOME_BREAKDOWN$[AddLocalizationIf(Law.HasEnactmentLastCheckpoint,'LAW_ENACTMENT_LAST_CHECKPOINT')]"
 LAW_ENACTMENT_PROGRESS_NOT_STALLED:3 "[SelectLocalization(EqualTo_int32(Add_int32('(int32)1', Law.GetEnactmentPhase), GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')), 'LAW_ENACTMENT_PROGRESS_LAST_PHASE', 'LAW_ENACTMENT_PROGRESS_PHASES')]"
 LAW_ENACTMENT_PROGRESS_PHASES: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! chance to progress to [Law.GetCountry.GetCustom(Law.GetNextEnactmentPhaseKey)|v] on #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString]#!#!"
 LAW_ENACTMENT_PROGRESS_LAST_PHASE: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! chance to pass the [concept_law] on #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString]#!#!"
 LAW_ENACTMENT_PROGRESS_STALLED:2 "$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_ENACTMENT_LAST_CHECKPOINT: "The outcome of the last checkpoint on [Law.GetEnactmentLastCheckpointDate.GetString] was [Law.GetEnactmentLastCheckpointResult|v]"
 LAW_ENACTMENT_OUTCOME_BREAKDOWN: "In #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! days one of the following will happen:\n$OUTCOME_SUCCESS$\n$OUTCOME_ADVANCE$\n$OUTCOME_DEBATE$\n$OUTCOME_STALL$[AddTextIf(Law.HasEnactmentLastCheckpoint,'\n\n')]"

 LAW_BEING_ENACTED_DESC: "Currently being [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacted$')] in [Law.GetCountry.GetName] (next checkpoint in #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] days#!#!)\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')]: [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]"

 LAW_ENACTMENT_STALLED_WARNING:0 "#r Law enactment is currently stalled!#!"
 LAW_ENACTMENT_STALL_BREAKDOWN:0 "[Law.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_STALL_BREAKDOWN_FULL:0 "[Law.GetCountry.GetModifier.GetTooltipFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_MIN_TOTAL_DAYS: "Minimum days: [GetDefine('NPolitics','LAW_ENACTMENT_MIN_TOTAL_DAYS')|v^2]"
 LAW_NEXT_CHECKPOINT_TIME:0 "In [Law.GetCheckpointRemainingDays|v] days ([Law.GetCheckpointEndDateString])"
 LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP:1 "#header Law Enactment Time#!\n[Law.GetCheckpointTotalDays|v] days between checkpoints\n$TOOLTIP_DELIMITER$\nBase Days for [Law.GetName]: [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
 LAW_NEXT_CHECKPOINT_TIME_DESC: "The next law enactment checkpoint will occur in [Law.GetCheckpointRemainingDays|v] days ([Law.GetCheckpointEndDateString])\n\n[Law.GetCheckpointTotalDays|v] days between checkpoints\n$TOOLTIP_DELIMITER$\nBase Days for [Law.GetName]: [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"

 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC:0 "$NEXT_CHECKPOINT$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_DATE:0 "$NEXT_CHECKPOINT_NO_DATE$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_NESTING:0 "$NEXT_CHECKPOINT_NO_NESTING$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 NEXT_CHECKPOINT:2 "On next checkpoint #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#!, one of the following will happen:"
 NEXT_CHECKPOINT_SHORT_WITH_LABEL: "[Law.GetCheckpointRemainingDays|v] days until next checkpoint (#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#!)"
 NEXT_CHECKPOINT_NO_DATE:0 "On next checkpoint, one of the following will happen:"
 NEXT_CHECKPOINT_SHORT:0 "#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!:"
 NEXT_CHECKPOINT_IS:0 "The next checkpoint is: #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!"
 NEXT_CHECKPOINT_NO_NESTING:1 "On next checkpoint on #v [Law.GetCheckpointEndDateString]#!, one of the following will happen:"
 OUTCOME_SUCCESS:1 "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_SUCCESS_SHORT: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_ADVANCE:1 "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceChance|v%0]#!#!#!"
 OUTCOME_DEBATE:1 "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateChance|v%0]#!#!#!"
 OUTCOME_STALL:1 "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|-%0]#!#!#!"

 LAST_CHECKPOINT_RESULT_SUCCESS: "[Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )]"
 LAST_CHECKPOINT_RESULT_ADVANCE: "[Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )]"
 LAST_CHECKPOINT_RESULT_DEBATE: "[Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )]"
 LAST_CHECKPOINT_RESULT_STALL: "[Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )]"

 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )] Chance#!\nCurrently: [Law.GetCheckpointSuccessChance|v%1][SelectLocalization(StringIsEmpty(Law.GetCheckpointSuccessBreakdown), 'CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS', 'CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS: "\n$TOOLTIP_DELIMITER$\n#title No [Concept('concept_interest_group', '$concept_interest_groups$')] [concept_in_government] [Concept('concept_endorse_oppose','$concept_endorses$')] this [concept_law], nor are there any supporting [Concept('concept_political_movement', '$concept_political_movements$')]#!"
 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointSuccessBreakdown]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )] Chance#!\nCurrently: [Law.GetCheckpointAdvanceChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceBreakdown)), 'CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointAdvanceBreakdown]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )] Chance#!\nCurrently: [Law.GetCheckpointDebateChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateBreakdown)), 'CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointDebateBreakdown]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )] Chance#!\nCurrently: [Law.GetCheckpointStallChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallBreakdown)), 'CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title This is due to:#!\n[Law.GetCheckpointStallBreakdown]"

 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_HEADER:1 "From [Concept('concept_endorse_oppose','$concept_endorsing$')] [Concept('concept_interest_group', '$concept_interest_groups$')] [concept_in_government]:"
 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_ITEM:0 "$TAB$[InterestGroup.GetName]: [InterestGroup.GetClout|=v%1]"

 ENACTMENT_OPPOSING_IGS_BREAKDOWN_HEADER:0 "From opposing [Concept('concept_interest_group', '$concept_interest_groups$')] with low [concept_approval]:"
 ENACTMENT_OPPOSING_IGS_BREAKDOWN_ITEM:0 "$TAB$[InterestGroup.GetName]: $VALUE|=v%1$ (#v x$MULTIPLIER|1$#! from $APPROVAL_RATING$)"
 ENACTMENT_STALL_MULT_BREAKDOWN: "Stall chance is modified by $MULTIPLIER|=+$ due to:\n$DETAILS$"

 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_HEADER:0 "From supporting [Concept('concept_political_movement', '$concept_political_movements$')]:"
 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_ITEM:0 "$TAB$[PoliticalMovement.GetName]: $EFFECT|=v%1$"

 ENACTMENT_RULER_BREAKDOWN_ITEM:0 "[Character.GetFullName] has the [Ideology.GetName] [concept_ideology]: $VALUE|=v%1$"

 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_HEADER:0 "From opposing [Concept('concept_political_movement', '$concept_political_movements$')]:"
 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_ITEM:0 "$TAB$[PoliticalMovement.GetName]: $EFFECT|=v%1$"

 ENACTMENT_PAST_CHECKPOINTS_HEADER:0 "From past checkpoints:"

 ENACTMENT_DEBATE_CHANCE_EFFECTS_BREAKDOWN:0 "[concept_enactment_debate] chance of $DEBATE_CHANCE|v%1$ results in:\n$TAB$$DESC$"
 ENACTMENT_FACTOR_ENTRY:0 "[concept_end_of_discussion_factor]: x$VAL|v2$"

 ENACTMENT_BREAKDOWNS_BASE_CHANCE_ENTRY:0 "Base: $VAL|v%1$"
 ENACTMENT_BASE_SUCCESS_CHANCE_ENTRY:0 "[concept_base_success_chance]: $VAL|=v%1$"
 ENACTMENT_SUCCESS_CHANCE_ENTRY:0 "[concept_enactment_success] chance: $VAL|=v%1$"
 ENACTMENT_ADVANCE_CHANCE_ENTRY:0 "[concept_enactment_advance] chance: $VAL|=v%1$"
 ENACTMENT_ADVANCE_FACTOR_ENTRY:0 "[concept_advance_factor]: x$VAL|v2$"
 ENACTMENT_STALL_CHANCE_ENTRY:0 "[concept_enactment_stall] chance: $VAL|=v%1$"

 ENACTMENT_FASTENACT_IS_ACTIVE:0 ""fastenact" is active"

 ENACTMENT_EVENT_DESCRIPTION: "This is a law enactment event. This event was #italic probably#! spawned by the last enactment checkpoint for the currently enacting law [Law.GetName]. The checkpoint happened on [Law.GetEnactmentLastCheckpointDate.GetString] and resulted in [Law.GetEnactmentLastCheckpointResult]."

 LAWS_WITH_GVT_SUPPORT:0 "Laws with Governmental or Movement support"
 LAWS_WITHOUT_GVT_SUPPORT:0 "Laws without Governmental or Movement support"

 CHEAPEST_LAWS_HEADER:1 "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT:1 "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithoutGovernmentOrMovementSupport)|v])"
 CHEAPEST_LAWS_HEADER_REFORM:0 "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT_REFORM:0 "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithoutGovernmentOrMovementSupport)|v])"
 LAWS_HAS_CHANGED:0 "Will Change!"
 CHEAPEST_LAWS_IG_HEADER:0 "#bold Laws the [InterestGroup.GetName] wants to pass#!"

 PREDICTED_LAWS_WITH_GVT_SUPPORT:0 "$LAWS_WITH_GVT_SUPPORT$ ($PREDICTION$)"
 PREDICTED_LAWS_WITHOUT_GVT_SUPPORT:0 "$LAWS_WITHOUT_GVT_SUPPORT$ ($PREDICTION$)"

 TOOLTIP_CHANGE_FROM_LAW:0 "#header Change [LawGroup.GetName] [concept_law]#!\nYou have #variable [LawGroup.GetNumEnactable|+]#! available alternatives to [LawGroup.GetName] in [Law.GetName]"
 TOOLTIP_CHANGE_FROM_LAW_CURRENTLY_ENACTING:0 "#header Change [LawGroup.GetName] [concept_law]#!\nYou are currently enacting [GetPlayer.GetLawBeingEnacted.GetName] in [GetPlayer.GetLawBeingEnacted.GetGroup.GetName]\nIf you were not, you would have #variable [LawGroup.GetNumPotentialEnactable|+]#! available alternatives to [LawGroup.GetName] in [Law.GetName]"
 PREDICT_LEGITIMACY_TO_ENACT:0 "Enacting this [concept_law] would change [concept_government] [concept_legitimacy] by #variable $VAL|=+0$#!"
 LAW_BEING_ENACTED:0 "Being Enacted"
 ENACTING_TO_LAW:0 "Enacting [GetPlayer.GetLawBeingEnacted.GetName]"
 LAW_NO_EFFECT:0 "#italic No effect#!\n"
 ENACT: "Enact"
 ENACT_LAW:1 "#b Enact#! with #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+0%]#!#!#! [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )] chance and #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|v0%]#!#! [Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )] chance at first checkpoint"
 
 ENACT_LAW_CHANCES_HEADER: "#title At the first checkpoint:#!"
 ENACT_LAW_SUCCESS_CHANCE: "@green_checkmark! #v [Law.GetCheckpointSuccessChance|+0%]#!"
 ENACT_LAW_STALL_CHANCE: "@red_cross! #v [Law.GetCheckpointStallChance|-0%]#!"
 SUCCESS_CHANCE_SHORT_CONCEPT: "[Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )]"
 STALL_CHANCE_SHORT_CONCEPT: "[Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )]"
 REENACT_LAW:0 "Re-enact"
 CHANGE_FROM_LAW:0 "Change"
 LAW_CANNOT_ENACT_TRIGGER_DESC:0 "To enact this Law you must satisfy the following:\n$REASON$\n"
 LAW_WOULD_CAUSE_STABILITY_DROP_DESC:0 "Enacting this [concept_law] would cause a Stability penalty of #BOLD #N -$VAL|0%$#!#!\n$REASON$\n"
 CHANGE_LAW_HEADER:0 "#BOLD $concept_law_group$#!"

 LAW_GROUP_DOES_NOT_APPLY_TO_COUNTRY: "The [concept_law_group] for [Law.GetName] ([Law.GetGroupName]) does not apply to [Law.GetCountry.GetName]"
 LAW_ALREADY_ENACTED:0 "[Law.GetName] has already been enacted"
 LAW_ALREADY_ENACTING:1 "[Law.GetCountry.GetName] is already enacting #variable [Law.GetName]#!, progress so far: #variable [Law.GetCheckpointProgress|%1]#!"
 LAW_IS_CIVIL_WAR:0 "#N Cannot do this while in Civil War!#!"
 LAW_CANNOT_ENACT:0 "[LAW.GetCountry.GetName] is unable to enact any [Concept('concept_law','$concept_laws$')]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]#!"
 LAW_CANNOT_CANCEL_ENACTMENT: "[LAW.GetCountry.GetName] is unable to cancel the enactment of any [Concept('concept_law','$concept_laws$')]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_cancel_law_enactment_bool')]#!"
 LAW_MUST_HAVE_POLITICAL_MOVEMENT: "[LAW.GetCountry.GetName] can only enact [Concept('concept_law','$concept_laws$')] with support from a [concept_political_movement]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_must_have_movement_to_enact_laws_bool')]#!"

 YOU_MUST_HAVE:0 "You #bold must#! have "
 YOU_CANNOT_HAVE:0 "You #bold can not#! have "
 ENACTED:0 " enacted"
 OR_WITH_SPACE:0 " $OR$ "

 DIPLOMACY:0 "Diplomacy"
 BUTTON_DIPLOMATIC_OVERVIEW:0 "#header Diplomacy#!"
 BUTTON_JOURNAL:0 "#header Journal#!"
 BUTTON_BUILDINGS:0 "#header Buildings#!"
 BUTTON_DECISIONS:0 "#header Decisions#!"

 LAW_ABOLITION_COST:0 "Cost to abolish: #variable @aut!$VAL$#!"
 LAW_ABOLITION_BASECOST:0 "Base cost: #variable $VAL$#!"
 LAW_ABOLITION_PREMIUM:0 "Premium from government resistance: #N #bold +$VAL$#!#!"

 SWITCHING_TO:0 "Reform Underway:"
 ACTIVE_LAWS_TITLE:0 "#title [Concept('concept_law', '$concept_laws$')]#!"
 ACTIVE_INSTITUTIONS_TITLE:0 "#title Institutions#!"
 REFORM:0 "Reform"

 tariff_import_priority:1 "Protect Domestic Supply"
 tariff_export_priority:1 "Encourage Exports"
 tariff_no_priority:1 "No Priority"

 tariff_level_very_low:0 "Very Low"
 tariff_level_low:0 "Low"
 tariff_level_medium:0 "Medium"
 tariff_level_high:0 "High"
 tariff_level_very_high:0 "Very High"
 expense_level_very_low:0 "Very Low"
 expense_level_low:0 "Low"
 expense_level_medium:0 "Medium"
 expense_level_high:0 "High"
 expense_level_very_high:0 "Very High"
 government_wages_very_low:0 "$expense_level_very_low$ [concept_budget_government_wages]"
 government_wages_low:0 "$expense_level_low$ [concept_budget_government_wages]"
 government_wages_medium:0 "$expense_level_medium$ [concept_budget_government_wages]"
 government_wages_high:0 "$expense_level_high$ [concept_budget_government_wages]"
 government_wages_very_high:0 "$expense_level_very_high$ [concept_budget_government_wages]"
 military_wages_very_low:0 "$expense_level_very_low$ [concept_budget_military_wages]"
 military_wages_low:0 "$expense_level_low$ [concept_budget_military_wages]"
 military_wages_medium:0 "$expense_level_medium$ [concept_budget_military_wages]"
 military_wages_high:0 "$expense_level_high$ [concept_budget_military_wages]"
 military_wages_very_high:0 "$expense_level_very_high$ [concept_budget_military_wages]"
 tax_level_very_low:0 "Very Low"
 tax_level_low:0 "Low"
 tax_level_medium:0 "Medium"
 tax_level_high:0 "High"
 tax_level_very_high:0 "Very High"
 tax_modifier_very_low:0 "$tax_level_very_low$ [concept_budget_income_taxes]"
 tax_modifier_low:0 "$tax_level_low$ [concept_budget_income_taxes]"
 tax_modifier_medium:0 "$tax_level_medium$ [concept_budget_income_taxes]"
 tax_modifier_high:0 "$tax_level_high$ [concept_budget_income_taxes]"
 tax_modifier_very_high:0 "$tax_level_very_high$ [concept_budget_income_taxes]"
 EFFECTS_FOR_TAX_LEVELS:0 "Effects on [Concept('concept_taxes','$concept_taxation$')] levels:#indent_newline:2 \n$BREAKDOWN$#!"
 EFFECTS_FOR_CURRENT_TAX_LEVEL:0 "#variable $LEVEL$#! $TAX_OR_EXPENSE_LEVEL_CURRENT$#indent_newline:2 \n$BREAKDOWN$#!"
 EFFECTS_FOR_OTHER_TAX_LEVEL_TITLE:0 "#variable $LEVEL$ [Concept('concept_taxes','$concept_taxation$')] Level#!\nWith $LAW$ [concept_law]"
 EFFECTS_FOR_OTHER_TAX_LEVEL:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $LEVEL$#!#!#!"
 INCOME_TAX_LEVEL_TITLE:0 "#title Income Taxes#!"
 CONSUMPTION_TAX_LEVEL_TITLE:0 "#title Consumption Taxes#!"
 PREDICTED_TAX_LEVEL_REVENUE:0 "Predicted Revenue: [GetPlayer.GetCustom('currency_symbol')]$VALUE|Kv$"
 CURRENT_TAX_LEVEL_REVENUE:0 "Current Revenue: [GetPlayer.GetCustom('currency_symbol')]$VALUE|Kv$"
 PREDICTED_TAX_LEVEL_DELTA:0 "Change in revenue from current tax level: #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_INCOME|+=D$#!"
 PREDICTED_TAX_LAW_DELTA:0 "Change in revenue from current tax law: #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_INCOME|+=D$#!"
 TAX_LEVEL_HEADER:0 "#variable $TAX_LEVEL$ Taxes#!"
 TAX_LEVEL_TAX_LAW:0 "Taxation Law: [LawType.GetName]"
 TAX_LEVEL_NO_TAX_LAW:0 "Taxation Law: None"
 TAXED_GOODS:0 "Currently Taxed [Concept('concept_good', '$concept_goods$')]: $GOODSDESC$"
 TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER:0 "#header Effects:#!"
 TAX_OR_EXPENSE_LEVEL_CURRENT:0 "#i #b (Current Level)#!#!"
 GOVERNMENT_WAGES_LEVEL:0 "$GOVERNMENT_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 GOVERNMENT_WAGES_LEVEL_TITLE:0 "#title Government Wages#!"
 GOVERNMENT_WAGES_LEVEL_HEADER:0 "#variable $EXPENSE_LEVEL$ Government Wages#!"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_CURRENT:0 "The average annual government wage of [GetPlayer.GetCustom('currency_symbol')]$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ costs [GetPlayer.GetCustom('currency_symbol')]$CURRENT_WEEKLY_EXPENSES|vD$ weekly"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_NEW:0 "Changing it by #variable $WAGE_CHANGE_MULT|-=%0$#! to [GetPlayer.GetCustom('currency_symbol')]$NEW_AVERAGE_ANNUAL_WAGE|v2$ would $CHANGETYPE$ costs by #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_EXPENSES|-=D$#! to [GetPlayer.GetCustom('currency_symbol')]$NEW_WEEKLY_EXPENSES|vD$"
 MILITARY_WAGES_LEVEL:0 "$MILITARY_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 MILITARY_WAGES_LEVEL_TITLE:0 "#title Military Wages#!"
 MILITARY_WAGES_LEVEL_HEADER:0 "#variable $EXPENSE_LEVEL$ Military Wages#!"
 MILITARY_WAGES_WEEKLY_EXPENSES_CURRENT:0 "The average annual military wage of [GetPlayer.GetCustom('currency_symbol')]$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ costs [GetPlayer.GetCustom('currency_symbol')]$CURRENT_WEEKLY_EXPENSES|vD$ weekly"
 MILITARY_WAGES_WEEKLY_EXPENSES_NEW:0 "Changing it by #variable $WAGE_CHANGE_MULT|-=%0$#! to [GetPlayer.GetCustom('currency_symbol')]$NEW_AVERAGE_ANNUAL_WAGE|v2$ would $CHANGETYPE$ costs by #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_EXPENSES|-=D$#! to [GetPlayer.GetCustom('currency_symbol')]$NEW_WEEKLY_EXPENSES|vD$"

 EFFECTS_ON_ACCEPTANCE_law_ethnostate: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Pops with low Acceptance values face a harsh life, while Pops in higher statuses prosper more#!#!"
 EFFECTS_ON_ACCEPTANCE_law_national_supremacy: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Low Acceptance status Pops are punished, Pops in higher statuses more accepting of the government#!#!"
 EFFECTS_ON_ACCEPTANCE_law_racial_segregation: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Moderate consequences for Pops with low Acceptance values#!#!"
 EFFECTS_ON_ACCEPTANCE_law_cultural_exclusion: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Life for Pops with the lowest Acceptance status is not pleasant, but manageable#!#!"
 EFFECTS_ON_ACCEPTANCE_law_multicultural: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Pops will lead similar lives with only few negative consequences, even when they aren't as accepted#!#!"

 WELFARE_PAYMENTS_BREAKDOWN:0 "#tooltip_header Welfare Payments#!\nTotal: #v #N [GetPlayer.GetCustom('currency_symbol')]-[GetPlayer.GetWelfarePaymentsExpenses|D-]"

 NO_TARIFFS:0 "No [concept_tariffs] for any [Concept('concept_good', '$concept_goods$')]"
 NO_TARIFFS_SINGLE_GOOD:0 "No [concept_tariffs] for [Goods.GetName]"
 EFFECTS_FOR_TARIFF_LEVEL:0 "Effects for #variable $LEVEL$#! [concept_tariffs]:"
 PREDICTED_TARIFF_LEVEL_REVENUE:1 "Predicted Revenue: [GetPlayer.GetCustom('currency_symbol')]$VALUE|Kv$"
 PREDICTED_TARIFF_LEVEL_DELTA:1 "Change in revenue from current [Concept('concept_tariffs','$concept_tariff$')] focus: #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_INCOME|+=D$#!"
 PREDICTED_TARIFF_LAW_DELTA:1 "Change in revenue from current [Concept('concept_tariffs','$concept_tariff$')] law: #variable [GetPlayer.GetCustom('currency_symbol')]$DELTA_INCOME|+=D$#!"
 TARIFF_LEVEL_HEADER:1 " #header [concept_market_good_policy]: $TARIFF_LEVEL$ #!"
 TARIFF_LEVEL_TARIFF_LAW:0 "Trade Policy: [LawType.GetName]"
 TARIFF_LEVEL_NO_TARIFF_LAW:0 "Trade Policy: None"

 LOCAL_PRICES: "Local Prices"

 LAW_FROM_TO:0 "[GetPlayer.GetActiveLawFromGroup(Law.GetGroup.GetKey).GetName] to [Law.GetName]"
 GROW_INSTITUTION:0 "#header Increase [INSTITUTION.GetName]'s investment level#!"
 SHRINK_INSTITUTION:0 "#header Decrease [INSTITUTION.GetName]'s investment level#!"
 INSTITUTION_CHANGE_TITLE:0 "#bold Effect of Level $LEVEL|v$:#!"
 CANCEL_INSTITUTION_SIZE_CHANGE_TOOLTIP:0 "Cancel increasing institution's investment level"

 LAW_INSTITUTION_TOOLTIP:0 "#header [Law.GetInstitutionType.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_TYPE_EFFECT_PER_LEVEL:0 "#b [INSTITUTION_TYPE.GetName] effect per level:#!\n$BREAKDOWN$"
 LAW_INSTITUTION_EFFECT_PER_LEVEL:0 "#b Effect per level from [Law.GetName]:#!\n$BREAKDOWN$"
 INSTITUTION_PROVIDING_LAWS:0 "$LAW_LIST$ [concept_law]"

 DISABLES_INSTITUTION:0 "Disables the [INSTITUTION.GetName] [concept_institution]"
 PROVIDES_INSTITUTION_TYPE:0 "Enables the [INSTITUTION_TYPE.GetName] [concept_institution]\nAdditional $BUREAUCRACY$ Cost: $COST|=v1$"
 PROVIDES_INSTITUTION:0 "Enables the [INSTITUTION.GetName] [concept_institution]"
 INSTITUTION_TYPE_NEW_EFFECT:1 "[LawType.GetName] would provide [INSTITUTION_TYPE.GetName] (Level #v 1#!) with:\n$EFFECTS$"
 INSTITUTION_NEW_EFFECT:1 "[LawType.GetName] would provide [INSTITUTION.GetName] (Level [Institution.GetInvestmentLevel|v]) with:\n$EFFECTS$"
 INSTITUTION_SAME_EFFECT:1 "[LawType.GetName] is providing [Institution.GetName] (Level [Institution.GetInvestmentLevel|v]) with:\n$EFFECTS$"
 COUNTRY_CANNOT_AFFORD_NEW_INSTITUTION_TYPE:1 "@red_cross! [Law.GetCountry.GetName] lacks the #v @bur![Multiply_CFixedPoint(GetPlayer.GetInstitutionInvestmentBureaucracyFactor,'(CFixedPoint)-1')]#! [concept_bureaucracy] required to fund a new [INSTITUTION_TYPE.GetName] [concept_institution]"

 INVESTMENT_CURRENT_LEVEL:0 "This is the current [concept_investment_level]."
 INVESTMENT_TOO_LOW:0 "You cannot reduce your level of investment in this institution below its minimum level of $MIN|v$."
 INVESTMENT_TOO_HIGH:0 "You cannot increase your level of investment in this institution above its maximum level of $MAX|v$.\n\nThe max level of this institution is due to:\n$BREAKDOWN$"
 INVESTMENT_EXCEEDS_INCOME:2 "You cannot afford the #v @bur!$BUR_REQ|0$#! [concept_bureaucracy] required for this investment level."
 INVESTMENT_WEEKLY_COST_CHANGE:0 "Weekly cost change: #variable @bur! $COSTCHANGE|1=$#!"
 LAW_DOES_NOT_SUPPORT_INVESTMENT:1 "This Law does not have [Concept('concept_investment_level', '$concept_investment_levels$')]"

 ON_RESEARCHED: "#title When researched:#!"
 ON_ENACT:0 "#title When enacted:#!"
 ON_REVOKE:0 "#title When revoked:#!"
 ON_REVOKE_ACTIVE:0 "#title When the currently active $LAW$ is revoked#!"
 THIS_IS_DUE_TO:0 "#title The total effect of this Law is due to:#!"
 LAW_EFFECT:0 "#bold Effect(s):#!"
 LAW_EFFECT_FOR_LEVEL:0 "#bold Effect(s) for [concept_investment_level] #variable $LEVEL$#!:#!"
 BASE_LAW_EFFECT:0 "#bold Base Effect(s):#!"
 FOR_EACH_LAW_INVESTMENT_LEVEL:0 "#bold Effect(s) Per [concept_investment_level]:#!"
 LAW_EFFECT_FOR_CURRENT_INVESTMENT_LEVEL:0 "#bold You are currently getting the following for [concept_investment_level] #variable $LEVEL$#!:#!"
 LAW_EFFECT_FOR_TARGET_INVESTMENT_LEVEL:0 "#bold You would get the following for [concept_investment_level] #variable $LEVEL$#!:#!"
 LAW_ALLOWED_BUILDING_GROUPS_FROM_INVESTMENT_POOL:0 "Funds in the [concept_investment_pool] can be used to build "
 CULTURE_ACCEPT_RULE_CHANGE:1 "[Concept('concept_culture','$ONE_OR_MANY_CULTURES$')] will be [Concept('concept_accepted_culture','$concept_accepted_culture_short$')] based on:\n" # this loc string is likely to be cut, see C++ code that uses it
 RELIGION_ACCEPT_RULE_CHANGE:1 "[Concept('concept_religion','$ONE_OR_MANY_RELIGIONS$')] will be [Concept('concept_accepted_religion','$concept_accepted_religion_short$')] based on:\n" # this loc string is likely to be cut, see C++ code that uses it

 ONE_OR_MANY_CULTURES: "Culture(s)"
 ONE_OR_MANY_RELIGIONS: "Religion(s)"

 MARKET_TITLE:0 "#title Market#!"
 UNITS_PRODUCED_TITLE:0 "#title Units Produced#!"
 PRICE_TITLE:0 "#title Price#!"
 IMPORTED:0 "Imported"
 EXPORTED:0 "Exported"
 ARMY_STOCKPILE:0 "Army Stockpile"
 NAVY_STOCKPILE:0 "Navy Stockpile"
 CHARACTER_NAME_FORMAT:0 "$FIRST$ $LAST$"
 CHARACTER_NAME_WITH_TITLE_FORMAT:0 "$TITLE$ $FIRST$ $LAST$"
 EXPORT_ROUTE:0 "[concept_trade_route]"
 IMPORT_ROUTE:0 "[concept_trade_route]"
 TO_MARKET:0 "To [MARKET.GetName]"
 FROM_MARKET:0 "From [MARKET.GetName]"

 CHARACTER_PANEL_SUBTITLE:2 "[SelectLocalization( Character.IsInExilePool, 'CHARACTER_PANEL_SUBTITLE_EXILE', 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT' )]"
 CHARACTER_PANEL_SUBTITLE_EXILE: "[Concept('concept_exile', '$concept_exiled$')] [Character.GetPrimaryRoleName]"

 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT: "[SelectLocalization( And( Not( Character.IsInExilePool ), And( Character.IsGeneral, Character.IsAtFront ) ), 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES' , 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION') ]"
 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES: "[Character.GetPrimaryRoleTitle] at [Character.GetFront.GetName]"

 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION: "[SelectLocalization( And(Not( Character.IsInExilePool ), And(Character.IsAdmiral, Character.GetOrderType.IsRaidConvoys) ), 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES' , 'CHARACTER_PANEL_SUBTITLE_OTHER') ]"
 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES: "[Character.GetPrimaryRoleTitle]"

 CHARACTER_PANEL_SUBTITLE_OTHER: "[SelectLocalization(Character.IsRuler, Concept('concept_ruler', Character.GetPrimaryRoleTitle), Character.GetPrimaryRoleName)] [SelectLocalization(Character.IsRuler, 'of','in')] [Character.GetCountry.GetName]"

 INSUFFICIENT_AUT:0 "You need #variable #N $VAL$#!#! $AUTHORITY$ but have only #variable $CURRENT$#!"
 INSUFFICIENT_BUR:0 "You need #variable #N $VAL$#!#! $BUREAUCRACY$ but have only #variable $CURRENT$#!"
 INSUFFICIENT_DIP:0 "You need #variable #N $VAL$#!#! $INFLUENCE$ but have only #variable $CURRENT$#!"

 GDP:0 "[concept_gdp]"
 GDP_SHORT:1 "[Concept('concept_gdp', '$concept_gdp_short$')]"
 TOOLTIP_GDP:0 "The [concept_gdp] of the country, is based on the [concept_good_production] of goods and their market prices"

 GDP_OWNED_BY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%1v$#!#!"
 GDP_OWNED_BY_ENTRY: "$VALUE|%2v$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCED|Dv$) in [State.GetName]"
 GDP_OWNED_BY_TOOLTIP_NONE: "#header $OTHER_COUNTRY$ owns no part of [Country.GetAdjective] [concept_gdp]#!"
 GDP_OWNED_BY_TOOLTIP: "#header [Country.GetAdjective] [concept_gdp] owned by $OTHER_COUNTRY$#!\nValue: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\nMost contributing [Concept('concept_state','$concept_states$')]:\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_TOOLTIP_NONE: "#header $OTHER_COUNTRY$ owns no part of [concept_gdp] in [State.GetName]#!"
 GDP_OWNED_BY_STATE_TOOLTIP: "#header [concept_gdp] in [State.GetName] owned by $OTHER_COUNTRY$#!\nValue: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_ENTRY_THIS: "$VALUE|%2v$ ([GetPlayer.GetCustom('currency_symbol')]$PRODUCED|Dv$) by [Country.GetName]"
 GDP_OWNED_BY_STATE_ENTRY_NOT_THIS: "#italic $GDP_OWNED_BY_STATE_ENTRY_THIS$#!"

 GOV_EXP_SHORT:1 "[Concept('concept_government_expenses', '$concept_government_expenses_short$')]"

 CREDIT:0 "[concept_credit]"
 CREDIT_TOOLTIP:0 "#header Credit Limit: #N [GetPlayer.GetCustom('currency_symbol')]$CREDIT|Dv$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n[concept_credit_desc]"
 CREDIT_DETAIL_BASE:0 "Base: #N [GetPlayer.GetCustom('currency_symbol')]$BASE|Dv$#!"
 CREDIT_DETAIL:0 "[BUILDING_TYPE.GetName]: #N [GetPlayer.GetCustom('currency_symbol')]$RESERVES|Dv$#!"
 GOLD_RESERVE_LIMIT:0 "Gold Reserve Limit: #N [GetPlayer.GetCustom('currency_symbol')]$LIMIT|Dv$#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]\n\n[concept_gold_reserves_desc]"

 RESERVES:0 "Reserves:"
 PRINCIPAL:0 "[concept_principal]:"
 TOOLTIP_PRINCIPAL:0 "#header [concept_principal]#!\n$TOOLTIP_DELIMITER$\n[concept_principal_desc]"

 REMAINING_CREDIT:0 "Remaining [concept_credit]:"
 NO_MODIFIER_DATA_COLLECTED:0 "No modifier data has been collected, modifier breakdowns are not stored in the savegame to reduce savegame size, try running a while to get a proper breakdown"
 DOMESTIC_LOANS:1 "#title [concept_loans]#!"
 TOOLTIP_DOMESTIC_LOANS:1 "#header [concept_loans]#!\n$TOOLTIP_DELIMITER$\n[concept_loans_desc]"

 INTEREST_RATE:0 "Interest Rate: #variable [GetPlayer.GetYearlyInterestRate|1%]#!"
 TOOLTIP_INTEREST_RATE:0 "#header Interest rate#!\nLast week you paid [GetPlayer.GetCustom('currency_symbol')]#variable [GetPlayer.GetInterestPayment|1]#! in interest at a yearly interest rate of #variable [GetPlayer.GetYearlyInterestRate|2%]#!\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_INTEREST_RATE_ADD:0 "#BOLD #V Additive Interest Rate Modifiers#!#!"
 TOOLTIP_INTEREST_RATE_PER_LOAN:0 "#BOLD #V Interest Rate Per Loan Modifiers#!#!"
 TOOLTIP_INTEREST_RATE_MULT:0 "#BOLD #V Multiplicative Interest Rate Modifiers#!#!"
 TOOLTIP_INTEREST_RATE_GOVERNMENT_OWNED_DEBT:2 "Multiplied by #v x$MULTIPLIER$#! from [concept_nationally_owned] [Concept('concept_building','$concept_buildings$')]"

 TAKE_LOAN:0 "Borrow #variable [GetPlayer.GetCustom('currency_symbol')][GetPlayer.GetLoanIncrement|1*]#!"
 TOOK_LOAN:0 "Took a domestic loan"
 TOOLTIP_TAKE_LOAN:0 "#header Take Loan#!\n$TOOLTIP_DELIMITER$\nBorrow #variable [GetPlayer.GetCustom('currency_symbol')]$AMOUNT$#! from Domestic sources.\nThis will increase your Principal and Interest Rate\n\n"
 TAKE_LOAN_NOT_ENOUGH_CREDIT:0 "#N You do not have enough Credit to take out another Loan!#!"
 TAKE_LOAN_NEGATIVE_CASHFLOW:0 "#N Your projected Expenses for next week are greater than your current treasury!#!"
 TAKE_LOAN_NOT_ENOUGH_POWER:0 "#N You do not have enough power capital to take a loan!#!"

 PAY_BACK_LOAN:0 "Repay #variable [GetPlayer.GetCustom('currency_symbol')]$AMOUNT|1*$#!"
 PAID_BACK_LOAN:0 "Repaid a domestic loan"
 TOOLTIP_PAY_BACK_LOAN:0 "#header Repay Loan#!\n$TOOLTIP_DELIMITER$\nRepay #variable [GetPlayer.GetCustom('currency_symbol')]$AMOUNT$#! of our domestic loans.\nThis will decrease our principal and interest rate\n\n"
 PAY_BACK_LOAN_NOT_ENOUGH_MONEY:0 "#N You do not have enough money to pay back any loans!#!"
 PAY_BACK_LOAN_NO_LOANS:0 "#N You have no loans to pay back!#!"
 PAY_BACK_LOAN_NOT_ENOUGH_POWER:0 "#N You do not have enough power capital to pay back loans!#!"

 PAY_BACK_SEVERAL_LOANS:0 "Repay #variable [GetPlayer.GetCustom('currency_symbol')]$AMOUNT$#!"
 PAID_BACK_SEVERAL_LOANS:0 "Repaid several domestic loans"
 TOOLTIP_PAY_BACK_SEVERAL_LOANS:0 "#header Repay all Loans#!\n$TOOLTIP_DELIMITER$\nRepay #variable [GetPlayer.GetCustom('currency_symbol')]$AMOUNT$#!.\nThis will decrease our principal and interest rate\n\n"

 NAVAL_MISSION_NOT_HOSTILE:0 "#N Target state does not belong to a nation you are at war with!#!"
 NAVAL_MISSION_NO_COASTLINE:0 "#N Target state is not a coastal state!#!"
 NAVAL_MISSION_NO_PORT:0 "#N Target state has no ports!#!"
 NAVAL_INVASION_NO_BEACHHEAD:0 "#N Target state has no province were we can create a beachhead!#!"

 BLOCKADE_MISSION_NOT_AT_WAR:0 "#N Can only blockade ports when at war!#!"

 TIMED_MODIFIERS:2 "[Concept('concept_timed_modifier', '$concept_timed_modifiers$')]"

 maintain:0 "Maintain"
 maintain_desc:0 "The character is maintaining a naval presence here and may seize opportunities for interception or escape as they arise."
 evade:0 "Evade"
 evade_desc:0 "The character is evading enemy fleets, sinking supply flotillas vessels as they are able without exposing their position."
 bulwark:0 "Bulwark"
 bulwark_desc:0 "The character is escorting friendly supply flotillas for protection, doing minimal damage to enemy forces."

 CASUALTIES_DUE_TO_ATTRITION_TOOLTIP:0 "#header Casualties from Attrition#!\nFrom Desertion: #variable $SPIRIT_SP|+=3$#! SP last tick\nFrom lower Concentration: #variable $CONCENTRATION_SP|+=3$#! SP last tick"

 AGITATORS_IN_QUEUE:2 "#v [GetDataModelSize(PoliticalMovement.GetBottomSupportingCharacters)|=]#!"
 AGITATORS_IN_QUEUE_DESC_ENTRY: "[CHARACTER.GetFullName] - [LabelingHelper.GetLabelForSupport(PoliticalMovement.GetCharacterSupport(CHARACTER.Self))] (#tooltippable #tooltip:[GetRawTextTooltipTag(PoliticalMovement.GetCharacterSupportDesc(CHARACTER.Self))] [PoliticalMovement.GetCharacterSupport(CHARACTER.Self)|v0]#!)#!"

 outliner_title_wars:0 "#outliner_header Wars#!"
 outliner_title_diplo_plays:0 "#outliner_header Diplomatic Plays#!"
 outliner_title_situations:0 "#outliner_header Events#!"
 outliner_title_commanders:0 "#outliner_header Commanders#!"
 outliner_title_formations:0 "#outliner_header Formations#!"
 outliner_title_politicians:0 "#outliner_header Politicians#!"
 outliner_title_countries:0 "#outliner_header Countries#!"
 outliner_title_unrecognized_countries:0 "#outliner_header Unrecognized Countries#!"
 outliner_title_generals:0 "#outliner_header Generals#!"
 outliner_title_admirals:0 "#outliner_header Admirals#!"
 outliner_title_army: "#outliner_header Army#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP #variable @battalions![GetPlayer.GetBattalions|0]#!#!)"
 outliner_title_navy: "#outliner_header Navy#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP #variable @navy_SP![GetPlayer.GetWarships|0]#!#!)"
 outliner_title_agitators: "#outliner_header Agitators#!"
 outliner_title_companies: "#outliner_header Companies#!"
 outliner_title_interest_groups:0 "#outliner_header Interest Groups#!"
 outliner_title_marginalized_interest_groups:0 "#outliner_header Marginalized Groups#!"
 outliner_title_markets:0 "#outliner_header Markets#!"
 outliner_title_isolated_states:0 "#outliner_header Isolated States#!"
 outliner_title_colonies:0 "#outliner_header Colonies#!"
 outliner_title_states:0 "#outliner_header States#!"
 outliner_title_unincorporated_states:0 "#outliner_header Unincorporated Territory#!"
 outliner_title_players:0 "#outliner_header Players#!"

 outliner_title_market:0 "#outliner_header [OutlinerEntry.AccessScope.AccessMarket.GetNameNoFormatting]#!"
 outliner_title_goods:0 "#outliner_header Goods#!"
 outliner_title_staple:0 "#outliner_header Staple Goods#!"
 outliner_title_industrial:0 "#outliner_header Industrial Goods#!"
 outliner_title_luxury:0 "#outliner_header Luxury Goods#!"
 outliner_title_military:0 "#outliner_header Military Goods#!"
 outliner_title_buildings:0 "#outliner_header Buildings#!"
 outliner_title_building_type:0 "#outliner_header [OutlinerEntry.AccessScope.AccessBuildingType.GetNameNoFormatting]#!"
 outliner_title_political_lobbies: "#outliner_header Political Lobbies#!"
 outliner_title_non_revolutionary_political_movements: "#outliner_header Political Movements#!"

 ADD_ANYTHING_TO_OUTLINER:0 "#title You can Pin more stuff here!#!"

 POLITICS_PANEL_HEADER:0 "Politics"
 LAW_CATEGORIES_HEADER:0 "Legal Categories#!"
 POLITICS_PANEL_HEADER_CHANGE_CONSTITUTION:0 "#BOLD Change [concept_law]#!"
 POLITICS_PANEL_HEADER_CHANGE_LAW:0 "#BOLD Change Law#!"
 EXILE_POOL_INTEREST_GROUP_FILTER: "[SelectLocalization(GetExilePool.IsInterestGroupFilteredToShowOnly(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_RESET', 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY')]\n[SelectLocalization(GetExilePool.IsInterestGroupFiltered(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW', 'EXILE_POOL_INTEREST_GROUP_FILTER_HIDE')]"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY: "#instruction Click#! to show only [Concept('concept_exile','$concept_exiled$')] [Concept('concept_agitator','$concept_agitators$')] supporting [InterestGroup.GetName]"
 EXILE_POOL_INTEREST_GROUP_FILTER_RESET: "#instruction Click#! to reset filters"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW: "#instruction $SHORTCUT_KEY_MOD_shift$Click#! to show [Concept('concept_exile','$concept_exiled$')] [Concept('concept_agitator','$concept_agitators$')] supporting [InterestGroup.GetName]"
 EXILE_POOL_INTEREST_GROUP_FILTER_HIDE: "#instruction $SHORTCUT_KEY_MOD_shift$Click#! to hide [Concept('concept_exile','$concept_exiled$')] [Concept('concept_agitator','$concept_agitators$')] supporting [InterestGroup.GetName]"
 NO_EXILED_AGITATORS: "No [Concept('concept_exile','$concept_exiled$')] [Concept('concept_agitator','$concept_agitators$')] in the selected [Concept('concept_interest_group','$concept_interest_groups$')]"

 ENACT_NEW_LAW:0 "Enact New Law"
 ABOLISH:0 "Abolish"
 NO_MARKET_SHORTAGES: "No Market Goods [concept_shortage]"

 NARROW_VICTORY:0 "Narrow victory in the $BATTLE_NAME$"
 NARROW_LOSS:0 "Unforeseen defeat in the $BATTLE_NAME$"
 NORMAL_VICTORY:0 "Battlefield victory in the $BATTLE_NAME$"
 NORMAL_LOSS:0 "Battlefield defeat in the $BATTLE_NAME$"
 HEROIC_VICTORY:0 "Heroic victory in the $BATTLE_NAME$"
 HEROIC_LOSS:0 "Humiliating defeat in the $BATTLE_NAME$"

 YEARLYGROWTH:0 "Annual Net Growth: #variable $NETGROWTHRATE|%=+1$#!"
 YEARLYBIRTHS:1 "Yearly Births: #variable $VAL|+0$#! (Annual Birth Rate: #tooltippable #tooltip:$BREAKDOWN_TAG$ $BIRTHRATE|%1=+$#!#!)"
 BIRTHS_FROM_SOL:0 "From [concept_sol]: #variable $VAL|+=0$#!"
 YEARLYDEATHS:1 "Yearly Deaths: #variable $VAL|-0$#! (Annual Mortality: #tooltippable #tooltip:$BREAKDOWN_TAG$ $MORTALITY|%1=-$#!#!)"
 DEATHS_FROM_SOL:0 "From [concept_sol]: #variable $VAL|-=0$#!"
 CURRENTLITERACY:0 "Literate members of total [concept_pop] population: $VAL|1*v$\nLiteracy Rate: $RATE|%2v$ $TRENDARROW$"

 POP_ASSIMILATION:1 "#header Monthly [concept_assimilation] to [CULTURE.GetName]: $TOTAL_ASSIMILATED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase: $BASE_ASSIMILATED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Assimilation Base Rate: $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\nSince the [Pop.GetName] have high enough [concept_acceptance], live in an [concept_incorporated_state], and don't consider [Pop.GetState.GetName] a [concept_homeland], they are $concept_assimilating$ into [CULTURE.GetName] $concept_culture$ as it is the most $concept_accepted$ $concept_culture$ that they share a [concept_cultural_heritage_trait] with where they live."
 POP_CONVERSION:1 "#header Monthly [concept_conversion] to [RELIGION.GetName]: $TOTAL_CONVERTED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase: $BASE_CONVERTED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Conversion Base Rate: $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\n[RELIGION.GetName] is selected as it is the most [Concept('concept_acceptance','$concept_accepted$')] [concept_religion] in [Pop.GetState.GetName]"
 POP_ASSIMILATION_RADICALS: "Base assimilation rate is multiplied by x$FACTOR|2v$ due to $RADICALS_FRACTION|v%$ [Concept('concept_radical', '$concept_radicals$')]\n"
 POP_ASSIMILATION_MIN:0 "Minimum assimilation of $MIN|v$\n"
 POP_CONVERSION_RADICALS: "Base conversion rate is multiplied by x$MULT|2v$ due to $RADICALS_FRACTION|v%$ [Concept('concept_radical', '$concept_radicals$')]\n"
 POP_CONVERSION_UNINCORPORATED: "Base conversion rate is multiplied by x$MULT|2v$ in [Concept('concept_unincorporated_state','$concept_unincorporated_states$')]\n"
 POP_CONVERSION_MIN:0 "Minimum conversion of $MIN|v$\n"

 EDUCATION_ACCESS_HEADER:0 "[concept_education_access]: #tooltippable #tooltip:$TAG$,EDUCATION_ACCESS_DETAILS_TOOLTIP $VAL|2%$#!#!"
 EDUCATION_ACCESS_DETAILS:0 "#header [concept_education_access]#!\nEducation Access: [POP.GetEducationAccess|2%v]\nWealth: [POP.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 EDUCATION_ACCESS_UNIVERSAL:1 "From $institution_schools$ level of #b $INSTITUTE_LEVEL|v$#!: #b $VALUE|=+2%$#!"
 EDUCATION_ACCESS_DETAILS_TOOLTIP:0 "[Pop.GetEducationAccessDetailsDesc]"
 EDUCATION_ACCESS_FROM_WEALTH:1 "From [concept_wealth] level of $WEALTH|v$: #b $TOTAL|=+2%$#!\n#P #b $PER_LEVEL|%|2$#!#! for each level of [concept_wealth]:"
 EDUCATION_ACCESS_POP_TYPE:0 "From [POP.GetPopType.GetName] [concept_profession]: #b $VALUE|=+%2$#!"
 INSTITUTION_FROM_EACH_LEVEL:0 "each level of $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"
 INSTITUTION_PER_LEVEL:0 "per level of $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"

 STATE_POTENTIAL_QUALIFICATIONS:1 "#header Potentially Employable [concept_pop_qualifications] in [State.GetName]#!\n$STATE_QUALIFICATIONS_SUMMARY$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSUFFICIENT_QUALIFICATIONS_TO_FILL_POSITIONS:0 "@red_cross! $POSITIONS|vD$ [POP_TYPE.GetName] needed for full employment, only $QUALIFICATIONS|vD$ available"
 #[State.GetPotentialQualificationsDesc]
 STATE_QUALIFICATIONS_SUMMARY: "[SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '$INSUFFICIENT_QUALIFICATIONS$', '$SUFFICIENT_QUALIFICATIONS$')]"
 INSUFFICIENT_QUALIFICATIONS: "@red_cross! Does not have potentially employable Qualifications to fill all current Vacancies"
 SUFFICIENT_QUALIFICATIONS: "@green_checkmark! Has potentially employable Qualifications to fill all current Vacancies"

 STATE_POTENTIAL_QUALIFICATIONS_ENTRY:0 "#tooltippable #tooltip:[State.GetTooltipTag]|[PopType.GetTooltipTag],STATE_POTENTIAL_POPTYPE_QUALIFICATIONS $POTENTIAL_QUALIFICATIONS|vD$#!#! [PopType.GetName] ($POTENTIAL_QUALIFICATIONS_CHANGE|=vD$ / month)"
 STATE_POTENTIAL_POPTYPE_QUALIFICATIONS:0 "[State.GetPotentialQualificationsBreakdown(PopType.Self)]"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN:0 "#header Potentially Employable [PopType.GetName] in [State.GetName]: [State.GetPotentialQualifications(PopType.Self)|vD]#!\nMonthly change: $TOTAL_QUALIFICATIONS_CHANGE|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN_ENTRY:1 "$EMPLOYABLE_QUALIFICATIONS|vD$ [AddTextIf( Not(Pop.IsEmployed), '$concept_unemployed$')] [Pop.GetName] [AddTextIf( Pop.IsEmployed, Concatenate('in ', Pop.GetBuilding.GetName))] (#tooltippable #tooltip:[Pop.GetTooltipTag]|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $QUALIFICATIONS_CHANGE|=vD$#!#! / month)"
 POP_POPTYPE_QUALIFICATIONS_CHANGE:0 "[Pop.GetQualificationsChangeDesc(PopType.Self)]"
 POP_QUALIFICATIONS_ENTRY:0 "[PopType.GetName]: $QUALIFICATIONS|vD$ (#tooltippable #tooltip:$TAG$|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $CHANGEVAL|+=D$#!#! / month)"

 QUALIFICATIONS_CHANGE_POPTYPE_TOOLTIP: "#header [PopType.GetName] Qualifications#!\n $CURRENT_WORKFORCE|vD$ [Concept('concept_individual', '$concept_individuals$')] currently\n #v $MONTHLY_CHANGE|=+D$#! each month\n$TOOLTIP_DELIMITER$\n #v $MONTHLY_CHANGE|=+D$#! [PopType.GetName] each month due to: #indent_newline:3 \n#v $BASE_VALUE|=+D$#! base value\n$BREAKDOWN$#!\n\n[PopType.GetQualificationsGrowthDesc]"
 
 WORKFORCE_FACTOR_DESC: "#v ×$FACTOR|2$#! multiplier from [concept_workforce] influence (@population! #v $SIZE|D$#!)"

 QUALIFICATIONS_LOWER_BOUND: "(Capped to @population! #b $VALUE|vD$#!#!)"
 QUALIFICATIONS_UPPER_BOUND: "(Capped to @population! #b $VALUE|vD$#!#!)"

 QUEUE_CONSTRUCTION_POINTS_SUMMARY:1 "[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))]"
 QUEUE_CONSTRUCTION_POINTS_SUMMARY_TOOLTIP:0 "#header Estimated Construction Time#!\n[Country.GetName] has roughly [LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] left in the [concept_construction_queue]\n$TOOLTIP_DELIMITER$\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] in the [concept_government_construction] Queue\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedPrivateConstructionQueueDuration, '(int32)7'))] in the [concept_private_construction] Queue"

 NUM_PRIVATE_CONSTRUCTION_TOOLTIP:0 "#header [Concept('concept_private_construction', '$concept_private_constructions$')]#!\nThere are [Country.GetNumPrivateConstructionsInQueue|v] [Concept('concept_private_construction', '$concept_private_constructions$')] in the [Country.GetAdjective] [concept_construction_queue]"
 NUM_GOVERNMENT_CONSTRUCTION_TOOLTIP:0 "#header [Concept('concept_government_construction', '$concept_government_constructions$')]#!\nThere are [Country.GetNumGovernmentConstructionsInQueue|v] [Concept('concept_government_construction', '$concept_government_constructions$')] in the [Country.GetAdjective] [concept_construction_queue]"

 QUALIFICATIONS_LITERACY_FACTOR:0 "from [concept_literacy] [Pop.GetLiteracyRate|v0%]"
 QUALIFICATIONS_WEALTH_FACTOR:0 "from [concept_wealth] [Pop.GetCurrentWealth|v0]"
 QUALIFICATIONS_FAVORED_TYPE:0 "from being [Pop.GetPopType.GetName]"
 QUALIFICATIONS_INSUFFICIENT_LITERACY_DECAY:0 "from insufficient [concept_literacy] ([Pop.GetLiteracyRate|v0%])"
 QUALIFICATIONS_INSUFFICIENT_WEALTH_DECAY:0 "from insufficient [concept_wealth] ([Pop.GetCurrentWealth|v0])"
 QUALIFICATIONS_PEASANTS_UNDER_SERFDOM:0 "from being [Pop.GetPopType.GetName] under [GetLawType('law_serfdom').GetName]"
 QUALIFICATIONS_CLERGYMEN_UNDER_TOTAL_SEPARATION: "from being [Pop.GetPopType.GetName] under [GetLawType('law_total_separation').GetName]"

 QUALIFICATIONS_DEPLOYED_SERVICEMEN: "from being [Pop.GetPopType.GetName] deployed in war"

 POTENTIALS_CULTURAL_RELIGIOUS_ACCEPTANCE: "from high [concept_acceptance] of [concept_religion]"
 QUALIFICATIONS_CULTURAL_DISCRIMINATION: "from low [concept_acceptance] of [concept_culture]"
 POTENTIALS_RELIGIOUS_DISCRIMINATION: "from low [concept_acceptance] of [concept_religion]"

 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES:0 "from [GetLawType('law_peasant_levies').GetName]"
 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES_DESC:0 "Most [GetPopType('officers').GetName] [concept_pop_qualifications] will originate from [GetPopType('aristocrats').GetName]"

 GROWTH_TITLE:0 "#title Growth#!"
 LITERACY_TITLE:0 "#title [concept_literacy]#!"
 INCOME_TITLE:0 "#title Income#!"
 EXPENSES_TITLE:0 "#title Expenses#!"
 PRIMARY_IG_TITLE:0 "#title [Concept('concept_interest_group','$concept_interest_groups$')]#!"
 IG_TITLE:0 "#title IG#!"
 POP_TYPE_INFORMATION:0 "[Pop.GetPopType.GetName] in [Pop.GetState.GetOwner.GetName]"

 GOODS_IN_COUNTRY:0 "[Goods.GetName] in [GetPlayer.GetName]"

 GUIDE_ME:0 "Guide Me"
  # TUTORIAL_CANNOT_START: "Cannot start lesson while another tutorial lesson is active"
 TELL_ME_HOW:0 "Tell Me How"
 TELL_ME_WHY:0 "Tell Me Why"

 RADICALS_TITLE:0 "$concept_radicals$"
 LOYALISTS_TITLE:0 "$concept_loyalists$"

 RELATIONS_TITLE:0 "#title Relation#!"
 TOWARDS_THEM_TITLE:1 "#title Us @arrow_right! Them#!"
 TOWARDS_US_TITLE:1 "#title Them @arrow_right! Us#!"

 OUR_COUNTRY_TEXT:0 "We are playing as #variable [Country.GetName]#!"
 RELATION_WITH:0 "Our relations are #BOLD [Country.GetRelationsWithDesc( GetPlayer )]#! ([Country.GetRelationsWith(GetPlayer)|+])"

 CANNOT_MOVE_COMMANDER_NON_FRIENDLY_HQ:0 "#N [Hq.GetName] is not own or ally [concept_hq]#!"
 MOVE_COMMANDER_ALREADY_THERE_TOOLTIP:0 "#N [Character.GetFullName] is already at [Hq.GetName]#!"

 ADD_GENERAL_ROLE:0 "Grant Command"
 REMOVE_GENERAL_ROLE:0 "Remove Command"
 ADD_GENERAL_ROLE_DESC:0 "#header $ADD_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nAllow [CHARACTER.GetFullName]  to become a [concept_general] and command an army in addition to their current duties[ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
 REMOVE_GENERAL_ROLE_DESC:0 "#header $REMOVE_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nRemove [CHARACTER.GetFullName] from their command as a [concept_general][ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"

 MAP_INTERACTION_MOVE_COMMANDER_DESC:0 "Select Headquarters for [Character.GetFullName] to move to"
 MAP_INTERACTION_MOVE_COMMANDER_PERFORMED:0 "[Character.GetFullName] moved"

 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_DESC:0 "Reset Production Methods to national standards"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_SELECT:0 "#header Reset Production Methods#!\nThe following adjustments will be made across [State.GetName]:\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING:0 "#header Reset Production Methods#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid(Building.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]This would reset [Concept('concept_production_method','$concept_production_methods$')] for $NAME$ in [State.GetName] to match your most common national standards. The following adjustments will be made:\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING_TYPE:0 "#header Reset Production Methods#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid($BUILDING_TYPE$.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]All [Concept('concept_production_method','$concept_production_methods$')] for all $NAME$ in [Country.GetName] will reset to match your most common national standards. The following adjustments will be made:\n\n$LIST$"
 RESET_PM_NOT_VALID: "@red_cross! There are no [Concept('concept_production_method','$concept_production_methods$')] to reset"
 RESET_PM_BUILDING:0 "Reset Production Methods in [Building.GetState.GetName]"
 RESET_PM_BUILDING_TYPE:0 "Reset Production Methods across [Country.GetName]"

 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_PERFORMED:0 "$concept_production_methods$ aligned"
 RESET_PRODUCTION_METHODS_ALL_BUILDINGS_STANDARD:0 "All [Concept('concept_production_method','$concept_production_methods$')] already aligned with the national standard"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY:0 "[Building.GetName]: $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY_WITH_STATE_NAME:0 "[Building.GetName] in [Building.GetState.GetName]: $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"

 notification_peace_agreement_signed_war_leader_tooltip:0 "#header $notification_peace_agreement_signed_war_leader_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_leader_desc$"
 notification_peace_agreement_signed_war_leader_name:0 "Peace with [SCOPE.sC('recipient').GetName]"
 notification_peace_agreement_signed_war_leader_desc:0 "We signed a peace agreement with #variable [SCOPE.sC('recipient').GetName]#!, ending our state of hostilities."

 notification_peace_agreement_signed_war_participant_tooltip:0 "#header $notification_peace_agreement_signed_war_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_participant_desc$"
 notification_peace_agreement_signed_war_participant_name:0 "Peace between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
 notification_peace_agreement_signed_war_participant_desc:0 "#variable [SCOPE.sC('actor').GetName]#! signed a peace agreement with #variable [SCOPE.sC('target').GetName]#!, ending our state of hostilities."

 notification_peace_agreement_signed_non_participant_tooltip:0 "#header $notification_peace_agreement_signed_non_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_non_participant_desc$"
 notification_peace_agreement_signed_non_participant_name:0 "Peace between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
 notification_peace_agreement_signed_non_participant_desc:0 "#variable [SCOPE.sC('actor').GetName]#! signed a peace agreement with #variable [SCOPE.sC('target').GetName]#!, ending the state of hostilities between them."

 notification_self_capitulated_tooltip:0 "#header $notification_self_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_self_capitulated_desc$"
 notification_self_capitulated_name:0 "Our Country Capitulates"
 notification_self_capitulated_desc:0 "Our Country has capitulated. All wargoals targeting us have been enforced."

 notification_enemy_capitulated_tooltip:0 "#header $notification_enemy_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_enemy_capitulated_desc$"
 notification_enemy_capitulated_name:0 "#variable [SCOPE.sC('target').GetName]#! capitulates"
 notification_enemy_capitulated_desc:0 "Our enemy #variable [SCOPE.sC('target').GetName]#! has capitulated. All wargoals targeting them have been enforced."

 notification_ally_capitulated_tooltip:0 "#header $notification_ally_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ally_capitulated_desc$"
 notification_ally_capitulated_name:0 "#variable [SCOPE.sC('target').GetName]#! capitulates"
 notification_ally_capitulated_desc:0 "Our ally #variable [SCOPE.sC('target').GetName]#! has capitulated. All wargoals targeting them have been enforced."

 notification_diplo_play_start_notification_tooltip:0 "#header $notification_diplo_play_start_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_notification_desc$"
 notification_diplo_play_start_notification_name:1 "[SCOPE.sC('actor').GetAdjective] [concept_diplomatic_play] against us"
 notification_diplo_play_start_notification_desc:1 "[SCOPE.sC('actor').GetName] started a [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] [concept_diplomatic_play] against us."

 notification_diplo_play_start_third_party_notification_tooltip:0 "#header $notification_diplo_play_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_third_party_notification_desc$"
 notification_diplo_play_start_third_party_notification_name:3 "[SCOPE.sC('actor').GetFlagTextIcon] [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] in [SCOPE.GetRootScope.GetDiplomaticPlay.GetStrategicRegion.GetName]"
 notification_diplo_play_start_third_party_notification_desc:1 "[SCOPE.sC('actor').GetName] started a [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] [concept_diplomatic_play] against [SCOPE.sC('target').GetName]."

 notification_diplo_play_back_down_notification_tooltip:0 "#header $notification_diplo_play_back_down_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_notification_desc$"
 notification_diplo_play_back_down_notification_name:0 "[SCOPE.sC('actor').GetName] backs down"
 notification_diplo_play_back_down_notification_desc:0 "[SCOPE.sC('actor').GetName] backed down in our [concept_diplomatic_play], yielding the primary wargoal to us."

 notification_diplo_play_back_down_involved_notification_tooltip:0 "#header $notification_diplo_play_back_down_involved_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_involved_notification_desc$"
 notification_diplo_play_back_down_involved_notification_name:0 "[SCOPE.sC('actor').GetName] backs down"
 notification_diplo_play_back_down_involved_notification_desc:0 "[SCOPE.sC('actor').GetName] backed down in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]."

 notification_diplo_play_join_side_notification_tooltip:0 "#header $notification_diplo_play_join_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_join_side_notification_desc$"
 notification_diplo_play_join_side_notification_name:0 "[SCOPE.sC('actor').GetName] sides with [SCOPE.sC('target').GetName]"
 notification_diplo_play_join_side_notification_desc:0 "[SCOPE.sC('actor').GetName] sided with [SCOPE.sC('target').GetName] in the [concept_diplomatic_play] against [SCOPE.sC('recipient').GetName]."

 notification_diplo_play_abandon_side_notification_tooltip:0 "#header $notification_diplo_play_abandon_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_abandon_side_notification_desc$"
 notification_diplo_play_abandon_side_notification_name:0 "[SCOPE.sC('actor').GetName] abandoned [SCOPE.sC('target').GetName]"
 notification_diplo_play_abandon_side_notification_desc:0 "[SCOPE.sC('actor').GetName] abandoned their support for [SCOPE.sC('target').GetName] in the [concept_diplomatic_play] against [SCOPE.sC('recipient').GetName]."

 notification_diplo_play_war_start_third_party_notification_tooltip:0 "#header $notification_diplo_play_war_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_war_start_third_party_notification_desc$"
 notification_diplo_play_war_start_third_party_notification_name:0 "War between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
 notification_diplo_play_war_start_third_party_notification_desc:0 "War has broken out between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]."

 notification_diplo_play_subject_released_notification_tooltip:0 "#header $notification_diplo_play_subject_released_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_notification_desc$"
 notification_diplo_play_subject_released_notification_name:0 "[SCOPE.sC('target').GetName] breaks free"
 notification_diplo_play_subject_released_notification_desc:0 "Due to the failure of [SCOPE.sC('actor').GetName] to protect their subject [SCOPE.sC('target').GetName] their pact is now null and void."

 notification_diplo_play_subject_released_overlord_notification_tooltip:0 "#header $notification_diplo_play_subject_released_overlord_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_overlord_notification_desc$"
 notification_diplo_play_subject_released_overlord_notification_name:0 "[SCOPE.sC('target').GetName] breaks free"
 notification_diplo_play_subject_released_overlord_notification_desc:0 "Due to our failure to protect our subject of [SCOPE.sC('target').GetName] they have become independent."

 notification_diplo_play_declare_neutrality_notification_tooltip:0 "#header $notification_diplo_play_declare_neutrality_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_declare_neutrality_notification_desc$"
 notification_diplo_play_declare_neutrality_notification_name:0 "[SCOPE.sC('actor').GetName] declares neutrality"
 notification_diplo_play_declare_neutrality_notification_desc:0 "[SCOPE.sC('actor').GetName] declared themselves to be neutral in [concept_diplomatic_play] between [SCOPE.sC('initiator').GetName] and [SCOPE.sC('target').GetName]."

 notification_resource_discovered_tooltip:0 "#header $notification_resource_discovered_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_discovered_desc$"
 notification_resource_discovered_name:1 "[SCOPE.sBT('target').GetDiscoveredResourceName] discovered in [SCOPE.GetRootScope.GetStateRegion.GetName]"
 notification_resource_discovered_desc:1 "[SCOPE.sBT('target').GetDiscoveredResourceName] has been discovered in [SCOPE.GetRootScope.GetStateRegion.GetName]. The [concept_state_region] can now support additional [SCOPE.sBT('target').GetName]."

 notification_resource_depleted_tooltip:0 "#header $notification_resource_depleted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_depleted_desc$"
 notification_resource_depleted_name:1 "[SCOPE.sBT('target').GetDiscoveredResourceName] depleted in [SCOPE.GetRootScope.GetStateRegion.GetName]"
 notification_resource_depleted_desc:1 "[SCOPE.sBT('target').GetDiscoveredResourceName] has been depleted in [SCOPE.GetRootScope.GetStateRegion.GetName]. The [concept_state_region] can now support fewer [SCOPE.sBT('target').GetName]."

 notification_new_culture_obsession_tooltip:0 "#header $notification_new_culture_obsession_name$#!\n$TOOLTIP_DELIMITER$\n$notification_new_culture_obsession_desc$"
 notification_new_culture_obsession_name:0 "[SCOPE.GetRootScope.GetCulture.GetName] obsessed with [SCOPE.sG('goods').GetName]"
 notification_new_culture_obsession_desc:0 "The [SCOPE.GetRootScope.GetCulture.GetName] culture has become obsessed with [SCOPE.sG('goods').GetName]."

 notification_commander_order_invalidated_tooltip:0 "#header $notification_commander_order_invalidated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_commander_order_invalidated_desc$"
 notification_commander_order_invalidated_name:0 "New Commander Order"
 notification_commander_order_invalidated_desc:0 "[SCOPE.GetRootScope.GetCharacter.GetFullName] now has [SCOPE.sCOT('target').GetName] Order (Previously [SCOPE.sCOT('actor').GetName])"

 notification_migration_target_created_tooltip:0 "#header $notification_migration_target_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_desc$"
 notification_migration_target_created_name:1 "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] Mass Immigration"
 notification_migration_target_created_desc:1 "Large numbers of [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] people have begun migrating from [SCOPE.sC('country').GetName] to [SCOPE.GetRootScope.GetState.GetName] and the surrounding [Concept('concept_state', '$concept_states$')]."

 notification_migration_target_created_other_tooltip:0 "#header $notification_migration_target_created_other_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_other_desc$"
 notification_migration_target_created_other_name:1 "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] Mass Emigration"
 notification_migration_target_created_other_desc:1 "Large numbers of [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] people have begun migrating from our [concept_country] to [SCOPE.GetRootScope.GetState.GetName] and the surrounding [Concept('concept_state', '$concept_states$')]."

 notification_country_swayed_tooltip:0 "#header $notification_country_swayed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_swayed_desc$"
 notification_country_swayed_name:0 "[SCOPE.sC('recipient').GetName] swayed"
 notification_country_swayed_desc:0 "[SCOPE.sC('recipient').GetName] was swayed to the side of [SCOPE.sC('actor').GetName] in their [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"

 notification_sway_offer_accepted_tooltip:0 "#header $notification_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_accepted_desc$"
 notification_sway_offer_accepted_name:0 "[SCOPE.sC('recipient').GetName] swayed"
 notification_sway_offer_accepted_desc:0 "[SCOPE.sC('recipient').GetName] was swayed to our side in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"

 notification_reverse_sway_offer_accepted_tooltip: "#header $notification_reverse_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_accepted_desc$"
 notification_reverse_sway_offer_accepted_name: "[SCOPE.sC('recipient').GetName] accepted our support"
 notification_reverse_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetName] accepted our [Concept('concept_offer_support','$concept_offer_of_support$')] in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"

 notification_sway_offer_rejected_tooltip:0 "#header $notification_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_rejected_desc$"
 notification_sway_offer_rejected_name:0 "Attempt to sway [SCOPE.sC('recipient').GetName] failed"
 notification_sway_offer_rejected_desc:0 "[SCOPE.sC('recipient').GetName] refused to be swayed to our side in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"

 notification_reverse_sway_offer_rejected_tooltip: "#header $notification_reverse_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_rejected_desc$"
 notification_reverse_sway_offer_rejected_name: "[SCOPE.sC('recipient').GetName] refused [Concept('concept_offer_support','$concept_offer_of_support$')]"
 notification_reverse_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetName] rejected our [Concept('concept_offer_support','$concept_offer_of_support$')] in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"

 notification_diplomatic_demand_accepted_tooltip: "#header $notification_diplomatic_demand_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_accepted_desc$"
 notification_diplomatic_demand_accepted_name: "[SCOPE.sC('recipient').GetName] accepts demands"
 notification_diplomatic_demand_accepted_desc: "[SCOPE.sC('recipient').GetName] accepted the [concept_diplomatic_demand] of '[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]' by [SCOPE.sC('actor').GetName]"

 notification_diplomatic_demand_rejected_tooltip: "#header $notification_diplomatic_demand_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_rejected_desc$"
 notification_diplomatic_demand_rejected_name: "[SCOPE.sC('recipient').GetName] refuses demands"
 notification_diplomatic_demand_rejected_desc: "[SCOPE.sC('recipient').GetName] refused our [concept_diplomatic_demand] of '[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]', triggering a [concept_diplomatic_play]"

 notification_interest_activated_tooltip:0 "#header $notification_interest_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_desc$"
 notification_interest_activated_name:0 "[SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] [concept_interest] activated"
 notification_interest_activated_desc:1 "We will now be able to participate in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')], conduct diplomacy, create [Concept('concept_trade_route', '$concept_trade_routes$')] with [Concept('concept_country', '$concept_countries$')] in the [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] region."

 notification_interest_deactivated_tooltip:0 "#header $notification_interest_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_desc$"
 notification_interest_deactivated_name:1 "[SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] [concept_interest] deactivated"
 notification_interest_deactivated_desc:1 "We may no longer be able to participate in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')], conduct diplomacy, create [Concept('concept_trade_route', '$concept_trade_routes$')] with [Concept('concept_country', '$concept_countries$')] in the [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] region."

 notification_interest_activated_third_party_tooltip:0 "#header $notification_interest_activated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_third_party_desc$"
 notification_interest_activated_third_party_name:1 "Diplomatic ties with [SCOPE.sCountry('actor').GetName]"
 notification_interest_activated_third_party_desc:1 "Due to [SCOPE.sCountry('actor').GetName] establishing an [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], we can now conduct diplomacy with them."

 notification_interest_deactivated_third_party_tooltip:0 "#header $notification_interest_deactivated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_third_party_desc$"
 notification_interest_deactivated_third_party_name:1 "Diplomatic ties with [SCOPE.sCountry('actor').GetName] lost"
 notification_interest_deactivated_third_party_desc:1 "Due to [SCOPE.sCountry('actor').GetName] losing their [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], we are no longer able to conduct diplomacy with them."

 notification_colony_created_tooltip:0 "#header $notification_colony_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_created_desc$"
 notification_colony_created_name:0 "[SCOPE.sCountry('actor').GetName] colonized [SCOPE.GetRootScope.GetState.GetStateRegion.GetName]"
 notification_colony_created_desc:0 "[SCOPE.sCountry('actor').GetName] has established the [concept_colony] of [SCOPE.GetRootScope.GetState.GetName]."

 notification_colony_complete_tooltip:0 "#header $notification_colony_complete_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_desc$"
 notification_colony_complete_name:0 "Colonization of [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] completed"
 notification_colony_complete_desc:0 "Our colonization of [SCOPE.GetRootScope.GetState.GetName] has completed, and the former [concept_colony] is now a proper [concept_state]."

 notification_colony_complete_third_party_tooltip:0 "#header $notification_colony_complete_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_third_party_desc$"
 notification_colony_complete_third_party_name:0 "[SCOPE.sCountry('actor').GetAdjective] colonization of [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] completed"
 notification_colony_complete_third_party_desc:0 "The [SCOPE.sCountry('actor').GetName] colonization of [SCOPE.GetRootScope.GetState.GetName] has completed, and the former [concept_colony] is now a proper [concept_state]."

 notification_ig_trait_activated_tooltip:0 "#header $notification_ig_trait_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_activated_desc$"
 notification_ig_trait_activated_name:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] activated"
 notification_ig_trait_activated_desc:1 "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effects#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"

 notification_ig_became_influential_tooltip:0 "#header $notification_ig_became_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_influential_desc$"
 notification_ig_became_influential_name:1 "[SCOPE.GetRootScope.GetInterestGroup.GetName] are now [concept_influential]"
 notification_ig_became_influential_desc:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_marginalized], and now they are [concept_influential]."

 notification_ig_became_powerful_tooltip:0 "#header $notification_ig_became_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_powerful_desc$"
 notification_ig_became_powerful_name:1 "[SCOPE.GetRootScope.GetInterestGroup.GetName] are now [concept_powerful]"
 notification_ig_became_powerful_desc:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_influential], and now they are [concept_powerful]."

 notification_ig_no_longer_powerful_tooltip:0 "#header $notification_ig_no_longer_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_powerful_desc$"
 notification_ig_no_longer_powerful_name:1 "[SCOPE.GetRootScope.GetInterestGroup.GetName] are no longer [concept_powerful]"
 notification_ig_no_longer_powerful_desc:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_powerful], and now they are [concept_influential]."

 notification_ig_no_longer_influential_tooltip:0 "#header $notification_ig_no_longer_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_influential_desc$"
 notification_ig_no_longer_influential_name:1 "[SCOPE.GetRootScope.GetInterestGroup.GetName] are no longer [concept_influential]"
 notification_ig_no_longer_influential_desc:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_influential], and now they are [concept_marginalized]."

 notification_ig_trait_deactivated_tooltip:0 "#header $notification_ig_trait_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_deactivated_desc$"
 notification_ig_trait_deactivated_name:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] deactivated"
 notification_ig_trait_deactivated_desc:1 "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effects (no longer being provided)#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"

 notification_ig_movement_left_marginal_name:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
 notification_ig_movement_left_marginal_desc:0 "This is due to interest group becoming marginal"
 notification_ig_movement_left_marginal_tooltip:0 "#header $notification_ig_movement_left_marginal_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_marginal_desc$"

 notification_ig_movement_left_in_government_name:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
 notification_ig_movement_left_in_government_desc:0 "This is due to interest group becoming a part of the government"
 notification_ig_movement_left_in_government_tooltip:0 "#header $notification_ig_movement_left_in_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_in_government_desc$"

 notification_ig_movement_left_happy_name:0 "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
 notification_ig_movement_left_happy_desc:0 "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)"
 notification_ig_movement_left_happy_tooltip:0 "#header $notification_ig_movement_left_happy_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_happy_desc$"

 notification_parties_activated_name:0 "Newly formed parties"
 notification_parties_activated_desc:0 "New parties formed in our country: [SCOPE.GetRootScope.GetCountry.GetRecentPartiesDesc]"
 notification_parties_activated_tooltip:1 "#header $notification_parties_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_parties_activated_desc$"

 RECENT_PARTIES_ITEM:0 "[Party.GetName]"
 RECENT_PARTIES_DESC:0 "$PARTIES_LIST$"

 notification_ig_resigned_government_tooltip:0 "#header $notification_ig_resigned_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_resigned_government_desc$"
 notification_ig_resigned_government_name:0 "Resignation from [concept_government]"
 notification_ig_resigned_government_desc:1 "[SCOPE.GetRootScope.GetInterestGroup.GetName] has resigned from the [concept_government] due to their [concept_approval] being at $ig_approval_angry$"

 notification_violate_sovereignty_third_party_joins_name:2 "[SCOPE.sC('third_party_country').GetName] aids [SCOPE.sC('target_country').GetName]"
 notification_violate_sovereignty_third_party_joins_desc:1 "[SCOPE.sC('third_party_country').GetName] has come to the aid of [SCOPE.sC('target_country').GetName] after their sovereignty was violated by [SCOPE.sC('initiator').GetName]."

 SUBSIDIZED_YES:2 "$SUBSIDIZED_YES_HEADER$[ConcatIfNeitherEmpty('\n\n', Building.GetSubsidiesDesc)]\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'REVOKE_SUBSIDIES_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_YES_HEADER:3 "#header [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nThis [concept_building] is $concept_subsidized$ and costs #N #bold [GetPlayer.GetCustom('currency_symbol')][Building.GetSubsidies|D]#!#! / week"
 REVOKE_SUBSIDIES_POSSIBLE:0 "#instruction Click to stop subsidizing it#!"
 SUBSIDIES_MANDATED_BY_MODIFIER:0 "$MODIFIERNAME$#indent_newline:3 \n$DESCRIPTION$#!"

 SUBSIDIZED_NO:4 "$SUBSIDIZED_NO_HEADER$\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'SUBSIDIZE_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_NO_HEADER:1 "#header Not [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nThis [concept_building] is not $concept_subsidized$"
 SUBSIDIZE_POSSIBLE:0 "#instruction Click to subsidize it#!"
 NOT_PERMITTED_TO_SUBSIDIZE_BUILDING_GROUP:0 "Subsidizing this [concept_building] is not permitted in our country. This is usually determined by economic [Concept('concept_law', '$concept_laws$')]."
 CANNOT_SUBSIDIZE_GOVERNMENT_BUILDINGS:0 "[Concept('concept_government_building', '$concept_government_buildings$')] cannot be subsidized."
 CANNOT_SUBSIDIZE_SUBSISTENCE_BUILDINGS:0 "[Concept('concept_subsistence_building', '$concept_subsistence_buildings$')] cannot be subsidized."
 CANNOT_SUBSIDIZE_OWNS_OTHER_BUILDINGS: "[Concept('concept_building','$concept_buildings$')] that get all their [concept_revenue] from other $concept_buildings$ cannot be subsidized."

 SUBSIDIZED_ALL_YES:1 "All domestic buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to remove all domestic subsidies.#!"
 SUBSIDIZED_ALL_NO:1 "None of the domestic buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to subsidize all domestic buildings.#!"
 SUBSIDIZED_ALL_MIXED:1 "Some of the domestic buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to subsidize all domestic buildings.#!"

 AUTO_EXPAND_ALL_YES:0 "#header Automatic Expansion#!\nAll buildings in this group are being Automatically Expanded.\n\n#instruction Click to remove all Automatic Expansion.#!"
 AUTO_EXPAND_ALL_NO:0 "#header No Automatic Expansion#!\nNone of the buildings in this group are being Automatically Expanded.\n\n#instruction Click to Automatically Expand all buildings.#!"
 AUTO_EXPAND_ALL_MIXED:0 "#header Some Automatic Expansion#!\nSome of the buildings in this group are being Automatically Expanded.\n\n#instruction Click to Automatically Expand all buildings.#!"

 PRIVATIZATION_ALL_YES:1 "All buildings in this group have Privatization toggled on.\n\n#instruction Click to remove all Privatization.#!"
 PRIVATIZATION_ALL_NO:1 "All of the buildings in this group have Privatization toggled off.\n\n#instruction Click to Privatize all buildings.#!"
 PRIVATIZATION_ALL_MIXED:1 "Some of the buildings in this group have Privatization toggled on.\n\n#instruction Click to Privatize all buildings.#!"
 PRIVATIZATION_ALL_INVALID: "There are no buildings in this group that can toggle Privatization"

 SUBSIDIES_TOOLTIP:2 "Wage [concept_subsidies] required: #v [GetPlayer.GetCustom('currency_symbol')]$VAL|-0$#!\n$TAB$[Concept('concept_building_wage', '$concept_building_wages$')] required to maintain full employment: #v [GetPlayer.GetCustom('currency_symbol')]$SUB_VAL|0$#!\n$TAB$$NAME$ capacity to pay: #v [GetPlayer.GetCustom('currency_symbol')]$REG_VAL|0+$#!\n\nInput Goods Subsidy required #v [GetPlayer.GetCustom('currency_symbol')]$BALANCE_VAL|-0$#!"

 BUILDING_RIGHT_CLICK_MENU_TITLE:0 "[Building.GetName]"
 BUILDING_ACTIONS_RIGHT_CLICK_MENU_TITLE: "Available actions for [Building.GetName] in [State.GetName]"
 SHOW_BUILDING_ACTIONS: "Show actions for [Building.GetName] in [Building.GetState.GetName][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(ObjectsEqual(Building.GetState.GetOwner.Self, GetPlayer.Self)), 'BUILDING_NOT_OWNED_BY_PLAYER'))]"
 BUILDING_NOT_OWNED_BY_PLAYER: "@red_cross! This [concept_building] is #b not#! located in [GetPlayer.GetName] $YOU$"
 BUILDING_RIGHT_CLICK_MENU_SUBTITLE:0 "in [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_EXPAND:0 "Expand in [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_EXPAND_FOREIGN: "Expand in [State.GetCountry.GetFlagTextIcon] [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_DOWNSIZE:0 "Downsize"
 BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION:0 "Cancel Expansion"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_ON:0 "Subsidize"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_OFF:0 "Revoke Subsidies"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_ON:0 "Auto-Expand"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_OFF:0 "Stop Auto-Expanding"
 CANCEL_CONSTRUCTION_TOOLTIP:0 "#header $BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION$#!\nCancel the ongoing expansion of this building."
 CANCEL_CONSTRUCTION_MODIFIERS_INSTRUCTIONS:0 "#instruction Click to cancel 1 level#!\n#instruction $SHORTCUT_KEY_MOD_shift$Click to cancel $SHIFT_NUM_LEVELS$ levels#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to cancel $CTRL_NUM_LEVELS$ levels#!"

 IG_RIGHT_CLICK_MENU_TITLE:0 "[InterestGroup.GetName]"
 IG_RIGHT_CLICK_MENU_ADD_GOV:0 "Add to Government"
 IG_RIGHT_CLICK_MENU_REM_GOV:0 "Remove from Government"
 RIGHT_CLICK_MENU_SUPPRESS:0 "$SUPPRESS_SHORT$"
 RIGHT_CLICK_MENU_SUPPRESS_NOT:0 "$SUPPRESS_NOT_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER:0 "$BOLSTER_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER_NOT:0 "$BOLSTER_NOT_SHORT$"

 IG_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(InterestGroup.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 COUNTRY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(Country.IsPinnedInOutliner, 'UNPIN_COUNTRY_IN_OUTLINER', 'PIN_COUNTRY_IN_OUTLINER')]"
 POLITICAL_MOVEMENT_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(PoliticalMovement.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 DIPLOMATIC_PLAY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(DiplomaticPlay.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 CHARACTER_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(Character.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 STATE_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(State.IsPinnedInOutliner, 'UNPIN_STATE_IN_OUTLINER', 'PIN_STATE_IN_OUTLINER')]"
 MARKET_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(Market.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 GOODS_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(Goods.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 MILITARY_FORMATION_RIGHT_CLICK_MENU_PIN_IN_OUTLINER:0 "[SelectLocalization(MilitaryFormation.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 PIN_IN_OUTLINER:0 "Pin in Outliner"
 UNPIN_IN_OUTLINER:0 "Unpin from Outliner"
 PIN_COUNTRY_IN_OUTLINER: "Pin [Country.GetName] in Outliner"
 UNPIN_COUNTRY_IN_OUTLINER: "Unpin [Country.GetName] from Outliner"
 PIN_STATE_IN_OUTLINER: "Pin [State.GetName] in Outliner"
 UNPIN_STATE_IN_OUTLINER: "Unpin [State.GetName] from Outliner"

 SELECT_ORDER_RIGHT_CLICK_MENU_TITLE: "Select [concept_order] for [Character.GetFullName]"

 CHARACTER_RIGHT_CLICK_MENU_TITLE:0 "[Character.GetFullName]"
 CHARACTER_RIGHT_CLICK_MENU_SUBTITLE:0 "[Character.GetRoleTitle]"
 CHARACTER_RIGHT_CLICK_MENU_INFORMATION: "Information"
 CHARACTER_RIGHT_CLICK_MENU_PROMOTE_COMMANDER:0 "Promote"
 CHARACTER_RIGHT_CLICK_MENU_SPLIT_INTO_OWN_FORMATION: "Split Formation"

 DECREE_RIGHT_CLICK_MENU_TITLE:0 "[Decree.GetName] in [Decree.GetState.GetName]"
 DECREE_RIGHT_CLICK_MENU_REMOVE:0 "Cancel"

 SET_DEFAULT_UNIT_TYPE_RIGHT_CLICK_MENU_TITLE: "Set default [concept_combat_unit_type]"

 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST:0 "Declare Interest"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST:0 "Revoke Interest"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST_TOOLTIP:0 "Revoke our Interest in [State.GetStateRegion.GetStrategicRegion.GetName]"
 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST_TOOLTIP:0 "Declare an Interest in [State.GetStateRegion.GetStrategicRegion.GetName]"

 DECREE_DUPLICATE_ROAD_MAINTENANCE:0 "No other countries have set $decree_road_maintenance$ in the [concept_state_region]"

 MARKET_RIGHT_CLICK_MENU_TITLE:0 "[Market.GetName]"
 MARKET_RIGHT_CLICK_MENU_MANAGE_MARKET:0 "Manage Market"
 MANAGE_MARKET:0 "Manage"

 STATE_RIGHT_CLICK_MENU_TITLE:0 "[Country.GetName]"
 STATE_RIGHT_CLICK_MENU_SUBTITLE:0 "[State.GetName]"
 STATE_RIGHT_CLICK_MENU_COUNTRY_TITLE:0 "#header [Country.GetNameNoFlag]#! (Country)"
 STATE_RIGHT_CLICK_MENU_STATE_TITLE:0 "#header [State.GetName]#! (State)"
 MARKET_RIGHT_CLICK_MENU_MARKET_TITLE:0 "#header [State.GetMarket.GetName]#! (Market)"
 STATE_RIGHT_CLICK_MENU_STRATEGIC_REGION_TITLE:0 "#header [State.GetStateRegion.GetStrategicRegion.GetName]#! ([concept_strategic_region])"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS: "[Concept('concept_subject_action', '$concept_subject_actions$')]"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS_TOOLTIP: "Show potential [Concept('concept_subject_action', '$concept_subject_actions$')]"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS: "[Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS_TOOLTIP: "Show potential [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS_TOOLTIP: "Show potential [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 STATE_RIGHT_CLICK_MENU_DIPLOMACY:0 "Open Diplomacy"
 STATE_RIGHT_CLICK_MENU_COUNTRY_INFORMATION:0 "Information"
 STATE_RIGHT_CLICK_MENU_COLONIZE:0 "Colonize"
 STATE_RIGHT_CLICK_MENU_CREATE_MARKET:0 "Create Market"
 STATE_RIGHT_CLICK_MENU_INCORPORATE:0 "$INCORPORATE$"
 STATE_RIGHT_CLICK_MENU_CANCEL_INCORPORATION:0 "Cancel Incorporation ([State.GetIncorporationProgress|v%0] complete)"

 SUBJECT_ACTIONS_BUTTON_TOOLTIP: "#header Show [Concept('concept_subject_action', '$concept_subject_actions$')] with [Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailableSubjectDiploActions)|+]#! actions available"
 OVERLORD_ACTIONS_BUTTON_TOOLTIP: "#header Show [Concept('concept_overlord_action', '$concept_overlord_actions$')] with [Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailableOverlordDiploActions)|+]#! actions available"
 BLOC_ACTIONS_BUTTON_TOOLTIP: "#header Show [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] with [Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocMemberDiploActions)|+]#! actions available"
 BLOC_LEADER_ACTIONS_BUTTON_TOOLTIP: "#header Show [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] with [Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocLeaderDiploActions)|+]#! actions available"

 IMPOSE_LAWS_IN_SUBJECT: "Impose [Concept('concept_law', '$concept_laws$')] in [Country.GetName]"

 SUBJECT_COUNTRY_NAME_HEADER_TOOLTIP: "Sort by [concept_country] name"
 SUBJECT_LIBERTY_DESIRE_HEADER_TOOLTIP: "Sort by [concept_liberty_desire]"
 SUBJECT_RANK_HEADER_TOOLTIP: "Sort by [concept_rank]"
 BY_SUBJECT_TYPE: "By Subject Type"

 POWER_BLOC_COUNTRY_NAME_HEADER_TOOLTIP: "Sort by [concept_country] name"
 POWER_BLOC_LIBERTY_DESIRE_HEADER_TOOLTIP: "Sort by [concept_power_bloc_leverage]"
 POWER_BLOC_RANK_HEADER_TOOLTIP: "Sort by [concept_rank]"

 POTENTIAL_SUBJECT_ACTIONS: "Potential [Concept('concept_subject_action', '$concept_subject_actions$')]"
 POTENTIAL_SUBJECT_ACTIONS_TOOLTIP: "Show potential [Concept('concept_subject_action', '$concept_subject_actions$')]"
 POTENTIAL_OVERLORD_ACTIONS: "Potential [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 POTENTIAL_OVERLORD_ACTIONS_TOOLTIP: "Show potential [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 POTENTIAL_BLOC_ACTIONS: "Potential [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 POTENTIAL_BLOC_ACTIONS_TOOLTIP: "Show potential [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 POTENTIAL_BLOC_LEADER_ACTIONS: "Potential [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"
 POTENTIAL_BLOC_LEADER_ACTIONS_TOOLTIP: "Show potential [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"
 POTENTIAL_DIPLOMATIC_ACTIONS: "Potential [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 POTENTIAL_DIPLOMATIC_ACTIONS_TOOLTIP: "Show potential [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 POTENTIAL_DIPLOMATIC_DEMANDS: "Potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TOOLTIP: "Show potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES: "Potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] targeting [Concept('concept_state', '$concept_states$')] in [Country.GetName]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES_TOOLTIP: "Show potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] targeting [Concept('concept_state', '$concept_states$')] in [Country.GetName]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_SPECIFIC_STATE_TOOLTIP: "Show potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] targeting [State.GetName]"

 AVAILABLE_SUBJECT_ACTIONS: "Available [Concept('concept_subject_action', '$concept_subject_actions$')]"
 AVAILABLE_SUBJECT_ACTIONS_TOOLTIP: "Show available [Concept('concept_subject_action', '$concept_subject_actions$')]"
 AVAILABLE_OVERLORD_ACTIONS: "Available [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 AVAILABLE_OVERLORD_ACTIONS_TOOLTIP: "Show available [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 AVAILABLE_BLOC_ACTIONS: "Available [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 AVAILABLE_BLOC_ACTIONS_TOOLTIP: "Show available [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 AVAILABLE_BLOC_LEADER_ACTIONS: "Available [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"
 AVAILABLE_BLOC_LEADER_ACTIONS_TOOLTIP: "Show available [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"

 SUBJECT_ACTIONS: "$concept_subject_actions$"
 OVERLORD_ACTIONS: "$concept_overlord_actions$"
 BLOC_MEMBER_ACTIONS: "$concept_bloc_member_actions$"
 BLOC_LEADER_ACTIONS: "$concept_bloc_leader_actions$"
 DIPLOMATIC_ACTIONS_TEXT: "$concept_diplomatic_actions$"
 DIPLOMATIC_DEMANDS_TEXT: "$concept_diplomatic_demands$"
 DIPLOMATIC_DEMANDS_TARGETING_STATES_TEXT: "$concept_diplomatic_demands$ targeting $concept_states$"
 DIPLOMATIC_DEMANDS_IN_STATE_TEXT: "$concept_diplomatic_demands$ targeting [State.GetName]"

 NO_DIPLO_DEMANDS: "No possible [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 NO_STATES_IN_COUNTRY: "No [Concept('concept_state', '$concept_states$')] in [Country.GetName]"

 YOUR_LIBERTY_DESIRE: "Your [concept_liberty_desire] as a [GetPlayer.GetSubjectTypeName]"
 YOUR_OVERLORD: "Your [concept_overlord]"
 COUNTRY_OVERLORD: "[Country.GetName]'s [concept_overlord]"
 COUNTRY_DIPLOMACY_TAB_LIBERTY_DESIRE: "[Country.GetName]'s [concept_liberty_desire] as a [Country.GetSubjectTypeName]"

 DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 DIPLOMATIC_DEMANDS_CONCEPT: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_ACTIONS_TOOLTIP: "Show potential [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] in [Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_DEMANDS_TOOLTIP: "Show potential [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] in [Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_STATE_DIPLOMATIC_DEMANDS_TOOLTIP: "Show [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] in [State.GetName]"

 DECREES_CONCEPT: "[Concept('concept_decree','$concept_decrees$')]"
 DECREES_IN_STATE: "Show [Concept('concept_decree','$concept_decrees$')] in [State.GetName]"

 BUILD_URBAN_BUILDINGS:0 "Build Urban Buildings"
 ADD_CONSUMPTION_TAX:0 "Add Consumption Tax"
 ADD_CONSUMPTION_TAX_ENTRY:4 "[Goods.GetNameNoFormatting]"
 ADD_CONSUMPTION_TAX_ENTRY_COST:0 "[GetPlayer.GetCustom('currency_symbol')]#v [Goods.CalcPotentialConsumptionTaxAmount(GetPlayer)|+=D]#! ( @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+])"
 BUDGET_CONSUMPTION_TAX_TOOLTIP:1 "#header [concept_consumption_tax] on [Goods.GetName]#!\nCurrent cost: @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+]\nCurrent Revenue: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
 GOODS_ADD_REMOVE_CONSUMPTION_TAX_TOOLTIP:0 "#header [SelectLocalization(GreaterThan_CFixedPoint(Goods.CalcConsumptionTaxAmount(GetPlayer), '(CFixedPoint)0'), 'Remove', 'Add')] [concept_consumption_tax] on [Goods.GetName]#!\n$TOOLTIP_DELIMITER$\nCurrent Revenue: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"

 COUNTRY_RIGHT_CLICK_MENU_OBSERVE:1 "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING:0 "Observe [Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING:0 "Stop observing [Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_OBSERVE_TOOLTIP:1 "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP:0 "Start observing this country"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP:0 "Stop observing this country"
 OBSERVER_NO_COUNTRY_SELECTED:0 "\n$TOOLTIP_DELIMITER$\n@red_cross! No country selected"
 OBSERVER_NO_COUNTRY_SELECTED_TOOLTIP:0 "#header You are in observer mode!#!\n$TOOLTIP_DELIMITER$\n@red_cross! No country selected to be observed"

 OVERLORD_TYPE: "Overlord Type"
 OVERLORD_TYPE_VALUE: "[SelectLocalization(SubjectType.AcceptsAnyOverlordType, 'OVERLORD_TYPE_ANY', 'RECOGNIZED_OR_UNRECOGNIZED')]"
 OVERLORD_TYPE_ANY: "Any"
 RECOGNIZED_OR_UNRECOGNIZED: "[SelectLocalization(SubjectType.AcceptsOnlyRecognizedOverlordType, 'RECOGNIZED_CONCEPT', 'UNRECOGNIZED_CONCEPT')]"
 RECOGNIZED_CONCEPT: "[Concept('concept_recognized_power', '$concept_recognized_power_short$')]"
 UNRECOGNIZED_CONCEPT: "[Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')]"

 SUBJECT_TYPE_AUTONOMOUS_HEADER_TOOLTIP: "#header Autonomous#!\nIf the [concept_subject_type] is autonomous, that [concept_subject] may join or start [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] on their own"
 SUBJECT_TYPE_DECREASED_AUTONOMY_HEADER_TOOLTIP: "#header Decreased Autonomy#!\nWhich [concept_subject_type] the [concept_subject] would become if the [concept_autonomy] of this $concept_subject_type$ is #b decreased#!. If already on the lowest autonomy, the $concept_subject$ would get annexed."
 SUBJECT_TYPE_INCREASED_AUTONOMY_HEADER_TOOLTIP: "#header Increased Autonomy#!\nWhich [concept_subject_type] the [concept_subject] would become if the [concept_autonomy] of this $concept_subject_type$ is #b increased#!. If already on the highest autonomy, the $concept_subject$ would gain independence."
 SUBJECT_TYPE_UNIFICATION_HEADER_TOOLTIP: "#header $concept_unification$#!\nIf the [concept_subject_type] will support their [concept_overlord] in a [concept_nation_formation] or [concept_unification] process"
 SUBJECT_TYPE_INCOME_TRANSFER_HEADER_TOOLTIP: "#header Income Transfer to [concept_overlord]#!\nMost [Concept('concept_subject_type', '$concept_subject_types$')] pay a portion of their [concept_taxes], [concept_budget_minting], and other [concept_government] income to their $concept_overlord$, but #b not#! from [concept_tariffs], [concept_investment_pool] transfers, or [concept_diplomatic_pact] income.."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_HEADER_TOOLTIP: "#header @convoys! [Concept('concept_convoys', '$concept_convoy$')] Contribution to [concept_overlord]#!\n[Concept('concept_subject', '$concept_subjects$')] give a percentage of their @convoys! $concept_convoys$ to their $concept_overlord$ since they are their [concept_market] leader."
 SUBJECT_TYPE_OVERLORD_TYPE_HEADER_TOOLTIP: "#header [concept_overlord] Type#!\nSome [Concept('concept_subject_type', '$concept_subject_types$')] are only possible for [Concept('concept_recognized_power','$concept_recognized_power_short$')] $concept_overlords$, while others are only possible for [Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')] $concept_overlords$. Although, some may be possible for both $concept_recognized_power_short$ and $concept_unrecognized_power_short$ $concept_overlords$."

 SUBJECT_TYPE_AUTONOMOUS_TOOLTIP: "@green_checkmark! #header Autonomous#!\nA [SubjectType.GetName] can start and join [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] on their own"
 SUBJECT_TYPE_AUTONOMOUS_NOT_TOOLTIP: "@red_cross! #header Not Autonomous#!\nA [SubjectType.GetName] can #b not#! start and join [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] on their own"
 SUBJECT_TYPE_ANNEX_TOOLTIP: "#header Annexation#!\nDecreasing the [concept_autonomy] of a [SubjectType.GetName] would lead to #b Annexation#!"
 SUBJECT_TYPE_INDEPENDENCE_TOOLTIP: "#header Independence#!\nIncreasing the [concept_autonomy] of a [SubjectType.GetName] would lead to #b Independence#!"
 SUBJECT_TYPE_DECREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]#!\nDecreasing the [concept_autonomy] of a [SubjectType.GetName] would make that [concept_country] a [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName] instead"
 SUBJECT_TYPE_INCREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName]#!\nIncreasing the [concept_autonomy] of a [SubjectType.GetName] would make that [concept_country] a [SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName] instead"
 SUBJECT_TYPE_UNIFIES_TOOLTIP: "@green_checkmark! A [SubjectType.GetName] will support their [concept_overlord] during a [concept_nation_formation] or [concept_unification]. At the conclusion, this [concept_subject] would get annexed."
 SUBJECT_TYPE_UNIFIES_NOT_TOOLTIP: "@red_cross! A [SubjectType.GetName] will #b not#! support their [concept_overlord] during a [concept_nation_formation] or [concept_unification]. At the conclusion, this [concept_subject] would #b not#! get annexed."
 SUBJECT_TYPE_INCOME_TRANSFER_TOOLTIP: "#header Income Transfer to [concept_overlord]#!\n[GetPlayer.GetCustom('currency_symbol')][SubjectType.GetIncomeTransfer|v%0] of a [SubjectType.GetName]'s income\n$TOOLTIP_DELIMITER$\nA [SubjectType.GetName] pays [GetPlayer.GetCustom('currency_symbol')][SubjectType.GetIncomeTransfer|v%0] of their [concept_taxes], [concept_budget_minting], and other [concept_government] income to their $concept_overlord$, but #b not#! from [concept_tariffs], [concept_investment_pool] transfers, or [concept_diplomatic_pact] income."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_TOOLTIP: "#header [Concept('concept_convoys', '$concept_convoy$')] Contribution to [concept_overlord]#!\n@convoys![Nbsp][SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] of a [SubjectType.GetName]'s $concept_convoys$\n$TOOLTIP_DELIMITER$\nA [SubjectType.GetName] provides @convoys![Nbsp][SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] of their $concept_convoys$ to their $concept_overlord$ as their [concept_market_owner]."

 SUBJECT_OR_OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[SelectLocalization(Country.IsSubjectOf(GetPlayer.Self), 'OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE', 'SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE')]"
 SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_subject_action', '$concept_subject_actions$')] with [Country.GetName]"
 OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_overlord_action', '$concept_overlord_actions$')] with [Country.GetName]"
 BLOC_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] with [Country.GetName]"
 BLOC_LEADER_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] with [Country.GetName]"

 NO_AVAILABLE_ACTIONS: "No Available Actions"
 NO_AVAILABLE_STATES: "No Available [Concept('concept_state', '$concept_states$')]"

 PLAYER_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header Decrease [concept_autonomy] to [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]#!\n@red_cross! Can only be done by the [concept_overlord]"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header Decrease [concept_autonomy] to [SubjectType.GetLowerAutonomySubjectType(Country.Self).GetName]#!\n@red_cross! Can only be done by the [concept_overlord]"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_ANNEX_TOOLTIP: "#header Decrease [concept_autonomy] to Annexation#!\n@red_cross! Can only be done by the [concept_overlord]"
 OTHER_COUNTRY_CAN_NOT_INCREASE_AUTONOMY_SUBJECT_TO_INDEPENDENCE_TOOLTIP: "#header Increase [concept_autonomy] to Independence#!\n@red_cross! Can only be done by the [concept_overlord] or the [concept_subject]"
 OTHER_COUNTRY_CAN_NOT_INCREASE_SUBJECT_AUTONOMY_TOOLTIP: "#header Increase [concept_autonomy] to [SubjectType.GetHigherAutonomySubjectType(Country.Self).GetName]#!\n@red_cross! Can only be done by their [concept_overlord] or the [concept_subject]"

 OVERLORD: "$concept_overlord$"

 ACTIVE_PACTS: "[Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')]"

 GOODS_RIGHT_CLICK_MENU_TITLE:1 "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_IN_MARKET_RIGHT_CLICK_MENU_TITLE:1 "[Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]"

 MAP_INTERACTION_SHOW_SUPPLY_AREAS_DESC:0 "Click on a state to show its supply area"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_PERFORMED:0 "Supply area is shown"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_HEADER:0 "This supply area consists of the following theaters for [COUNTRY.GetName]:"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_ITEM:0 "#variable [THEATER.GetName]#! (#variable [THEATER.GetOwner.GetName]#!)"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_NONE:0 "[COUNTRY.GetName] does not have a supply area here."

 MAP_LIST_PANEL_TITLE:3 "[GetSelectedMapModeName][SelectLocalization( MapListPanelManager.HasCurrentInteraction, '', ' Ledger')]"
 MAP_LIST_PANEL_BUTTON_SHOW_MAP_LIST_PANEL:0 "Show list of #v [GetSelectedMapModeName]#!\nHide #v Information Panel#!"
 MAP_LIST_PANEL_BUTTON_SHOW_INFORMATION_PANEL:0 "Show #v Information Panel#!\nHide list of #v [GetSelectedMapModeName]#!"

 MAP_MODE_ATTITUDE:1 "Show [concept_attitude] on the map"
 MAP_MODE_RELATIONS:2 "Show [concept_relations] on the map"
 MAP_MODE_INFAMY:0 "Show [concept_infamy] on map"
 MAP_MODE_POTENTIALS:1 "Show [Concept('concept_resource_potential','$concept_resource_potentials_short$')] on map"
 MAP_MODE_PRODUCTION:0 "Show [concept_good_production] on map"
 MAP_MODE_CONSUMPTION:0 "Show [concept_good_consumption] on map"
 MAP_MODE_LOCAL_PRICES: "Show [Concept('concept_local_price','$concept_local_prices$')] on map"

 MAP_MODE_LIST_BUDGET: "Budget"
 PANEL_MAP_MODES_TITLE: "[MapModeList.GetContextName] relevant Map Modes"

 SORT_BY_RANK:0 "Sort by [concept_rank]"
 SORT_BY_MARKET_GOODS:0 "Sort by [Concept('concept_good', '$concept_goods$')]"
 SORT_BY_BALANCE_TOOLTIP:0 "Sort by Balance. The number you get when you subtract [concept_buy_orders] from [concept_sell_orders]."
 SORT_BY_COUNTRY:0 "Sort by [concept_country] name"
 SORT_BY_MAREKT_PRICE:0 "Sort by [concept_market_price]"
 SORT_BY_AMOUNT_CONSUMED:0 "Sort by amount of [Concept('concept_good', '$concept_goods$')] [Concept('concept_good_consumption', '$concept_good_consumed$')]"
 SORT_BY_BUDGET_EXPENDITURE:0 "Sort by the percentage of the [Concept('concept_pop', '$concept_pop_possessive$')] budget spent on each [concept_good]"
 SORT_BY_BUILDING: "Sort by [concept_building]"
 SORT_BY_STATE: "Sort by [concept_state]"
 SORT_BY_STATE_TRAITS: "Sort by #b State Traits#!"
 SORT_BY_OWNERSHIP: "Sort by #b Ownership#!"
 SORT_BY_OWNED_LEVELS: "Sort by number of owned [Concept('concept_building_level', '$concept_building_levels_short$')]"
 SORT_BY_PRODUCTION_METHODS: "Sort by [Concept('concept_production_method', '$concept_production_methods$')]"
 SORT_BY_NUMBER_OF_EMPLOYED: "Sort by number of [Concept('concept_employment' ,'$concept_employed$')]"
 SORT_BY_NUMBER_OF_EMPLOYED_PERCENT: "Sort by [concept_employment] percentage"
 SORT_BY_CASH_RESERVES: "Sort by [concept_cash_reserves]"
 SORT_BY_CASH_RESERVES_PERCENT: "Sort by [concept_cash_reserves] percentage"
 SORT_BY_BUILDING_PRODUCTIVITY: "Sort by [concept_productivity]"
 SORT_BY_BUILDING_INTERACTIONS: "Sort by #b Available Interactions#!"
 SORT_BY_POPULATION: "Sort by number of [Concept('concept_pop','$concept_population$')]"
 SORT_BY_POP_TYPE: "Sort by [concept_profession]"
 SORT_BY_ACCEPTANCE: "Sort by [concept_acceptance_status]"
 SORT_BY_CULTURE: "Sort by [concept_culture]"
 SORT_BY_RELIGION: "Sort by [concept_religion]"
 SORT_BY_RADICALS: "Sort by [Concept('concept_radical','$concept_radicals$')]"
 SORT_BY_LOYALISTS: "Sort by [Concept('concept_loyalist','$concept_loyalists$')]"
 SORT_BY_SOL: "Sort by [concept_sol]"
 SORT_BY_POLITICAL_STRENGTH: "Sort by [concept_political_strength]"
 SORT_BY_INTEREST_GROUP: "Sort by [concept_interest_group]"
 SORT_BY_LITERACY: "Sort by [concept_literacy]"
 SORT_BY_JOB_SATISFACTION: "Sort by [concept_job_satisfaction]"
 SORT_BY_NEEDS: "Sort by [concept_pop_needs]"
 SORT_BY_NAME: "Sort by Name"
 SORT_BY_BUILDING_NAME: "Sort by [concept_building] name"
 SORT_BY_BUILDING_SIZE: "Sort by [concept_building] size ([Concept('concept_building_level','$concept_building_levels$')])"
 SORT_BY_BUILDING_TYPE: "Sort by Building #b Type#!"
 SORT_BY_INTENSITY: "Sort by [concept_harvest_condition_intensity]"
 SORT_BY_DURATION: "Sort by time remaining"
 SORT_BY_AFFECTED_STATES: "Sort by number of affected [Concept('concept_state','$concept_states$')]"
 SORT_BY_FAMINE: "Sort by [Concept('concept_starvation','$concept_starving$')] [Concept('concept_pop','$concept_population$')] in [Concept('concept_state','$concept_states$')] with an ongoing [concept_famine]"
 SORT_BY_MILD_STARVATION: "Sort by [Concept('concept_pop','$concept_population$')] in [Concept('concept_starvation','$concept_mild_starvation$')]"
 SORT_BY_SEVERE_STARVATION: "Sort by [Concept('concept_pop','$concept_population$')] in [Concept('concept_starvation','$concept_severe_starvation$')]"



 MAP_MODE_ATTITUDE_COUNTRY:0 "Show [concept_attitude] towards [Country.GetYouOrCountryName] on the map"
 MAP_MODE_RELATIONS_COUNTRY:0 "Show [concept_relations] with [Country.GetYouOrCountryName] on the map"

 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER:0 "Status"
 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:1 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this interaction on each entry.\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER:0 "Title"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER_TOOLTIP:0 "#header Title#!\n$TOOLTIP_DELIMITER$\n#concept The title of this option.#!"

 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER:0 "[Concept('concept_jobseeker', '$concept_jobseekers$')]"
 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER_TOOLTIP:0 "#header [Concept('concept_jobseeker', '$concept_jobseekers$')]#!\n$TOOLTIP_DELIMITER$\n$concept_jobseeker_desc$"

 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER:0 "Infra"
 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER_TOOLTIP:0 "#header Infrastructure Balance#!\n$TOOLTIP_DELIMITER$\nHow much [concept_infrastructure] is available in the State"

 BUILDING_MAP_LIST_PANEL_STATUS_HEADER:0 "Status"
 BUILDING_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:1 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of expanding this [concept_building] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER:0 "State"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP:1 "#header [concept_state]#!\n$TOOLTIP_DELIMITER$\n#concept The $concept_state$ where the [concept_building] will be built.#!"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER:0 "Eff."
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER_TOOLTIP:0 "#header @construction![Nbsp][concept_construction] Efficiency#!\n$TOOLTIP_DELIMITER$\n#concept The @construction! $concept_construction$ Efficiency where the [concept_building] will be built. A positive value reduces the amount of @construction![Nbsp][concept_construction] required per week and vice versa.#!"

 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER:0 "Peasants"
 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER_TOOLTIP:0 "#header Peasants#!"

 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER:0 "@construction!"
 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER_TOOLTIP:0 "#header @construction![Nbsp][concept_construction]#!\n$TOOLTIP_DELIMITER$\n#concept How much total @construction! $concept_construction$ the [concept_building] will require to complete.#!"
 BUILDING_MAP_LIST_PANEL_STATUS_BUILD:0 "Build"
 BUILDING_MAP_LIST_PANEL_STATUS_EXPAND:0 "Expand"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_TOOLTIP:1 "#header [concept_construction] Efficiency in $NAME$: $VAL|v%1$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 CONSTRUCTION_EFFICIENCY_MINIMUM_DESC:0 "@information! [concept_construction] Efficiency cannot be lower than [GetDefine('NEconomy', 'MIN_CONSTRUCTION_EFFICIENCY')|v%0]"

 COUNTRY_YOU: "you"
 COUNTRY_OTHER: "[Country.GetName]"
 COUNTRY_LABEL_YOU: "This is you"
 COUNTRY_LABEL_YOUR: "Your "
 COUNTRY_LABEL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')]"
 COUNTRY_LABEL_MUTUAL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')] (mutual)"
 COUNTRY_LABEL_RIVALING: "[Concept('concept_rivalry','$concept_rivaling$')] [Country.GetYouOrCountryName]"
 COUNTRY_LABEL_OVERLORD: "[concept_overlord] ([SubjectType.GetName])"
 COUNTRY_LABEL_SUBJECT: "[concept_subject] ([Country.GetSubjectTypeName])"
 COUNTRY_LABEL_SUBJECT_OF_SUBJECT: "Indirect [concept_subject] ([Country.GetSubjectTypeName] of [Country.GetOverlord.GetName])"
 COUNTRY_LABEL_DIPLO_PLAY_ALLY: "Ally in the [DiplomaticPlay.GetName]"
 COUNTRY_LABEL_DIPLO_PLAY_ENEMY: "Enemy in the [DiplomaticPlay.GetName]"
 COUNTRY_LABEL_WAR_ALLY: "Co-belligerent in [War.GetName]"
 COUNTRY_LABEL_WAR_ENEMY: "Enemy in [War.GetName]"
 COUNTRY_LABEL_TRUCE_WITH: "Has a [concept_truce] with [COUNTRY.GetYouOrCountryName] (until #v [COUNTRY.GetTruceDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_LABEL_OWES_OBLIGATION_TO: "Owes a [concept_obligation] to [COUNTRY.GetYouOrCountryName] (until #v [COUNTRY.GetObligationToExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_LABEL_IS_OWED_OBLIGATION: "Is owed an [concept_obligation] by [COUNTRY.GetYouOrCountryName] (until #v [COUNTRY.GetObligationFromExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_HAS_TRADE_AGREEMENT: "Has a [concept_trade_agreement] with [Country.GetYouOrCountryName]"
 COUNTRY_HAS_DEFENSIVE_PACT: "Has a [concept_defensive_pact] with [Country.GetYouOrCountryName]"
 COUNTRY_HAS_ALLIANCE: "Has an [concept_alliance] with [Country.GetYouOrCountryName]"
 COUNTRY_LABEL_NEIGHBOUR_LAND: "Neighbor"
 COUNTRY_LABEL_NEIGHBOUR_SEA: "Neighbor (via the sea)"
 COUNTRY_LABEL_POWER_BLOC_LEADER: "[concept_power_bloc_leader]"
 COUNTRY_LABEL_POWER_BLOC_JUNIOR: "[concept_power_bloc] Junior"
 COUNTRY_LABEL_POWER_BLOC_MEMBER: "[concept_power_bloc_member]"

 GOVERNMENT_IG_DESC_ITEM: "[InterestGroup.GetTextIcon]"

 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_HEADER:3 "[SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')]"
 BUILDING_UPKEEP_HEADER: "Upkeep"
 BUILDING_EARNINGS_HEADER: "Earnings"
 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_TOOLTIP:2 "#header Predicted [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] after expansion#!\n(Excluding [Concept('concept_building_wage','$concept_building_wages$')])\n$TOOLTIP_DELIMITER$\nA prediction of how much expanding this building would affect its weekly [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')]."

 COLONY_MAP_LIST_PANEL_STATUS_HEADER:0 "Status"
 COLONY_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:1 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of colonizing each [concept_state_region].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 COLONY_MAP_LIST_PANEL_REGION_HEADER:1 "Strategic Region"
 COLONY_MAP_LIST_PANEL_REGION_HEADER_TOOLTIP:2 "#header [concept_strategic_region]#!\n$TOOLTIP_DELIMITER$\n#concept Target $concept_strategic_region$.#!"
 COLONY_MAP_LIST_PANEL_STATE_HEADER:1 "State Region"
 COLONY_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP:2 "#header [concept_state_region]#!\n$TOOLTIP_DELIMITER$\n#concept Target $concept_state_region$.#!"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER: "State Traits"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER_TOOLTIP: "#header State Traits#!\n$TOOLTIP_DELIMITER$\n#concept Target State Traits.#!"

 STATE_TRAITS_TITLE: "State Traits:"

 DIPLO_ACTION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:0 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_diplomatic_action] in each [concept_country].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER:0 "Country"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER_TOOLTIP:1 "#header [concept_country]#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS: "Gains"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS_TOOLTIP: "Benefit of declaring Rivalry against other [concept_country]"
 DIPLO_ACTION_LIST_PANEL_STATUS_SEND:0 "Send"
 DIPLO_ACTION_LIST_PANEL_STATUS_NOT_POSSIBLE:0 "Unavailable"

 DECREE_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:0 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_decree] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 DECREE_LIST_PANEL_STATE_HEADER:0 "State"
 DECREE_LIST_PANEL_STATE_HEADER_TOOLTIP:0 "#header [concept_state]#!"
 DECREE_LIST_PANEL_COST_HEADER:0 "Cost"
 DECREE_LIST_PANEL_COST_HEADER_TOOLTIP:0 "#header Cost to keep maintaining this decree#!"

 MILITARY_FORMATION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of sending this [concept_military_formation] to each destination.\n\n@map_list_plus!: You can send this $concept_military_formation$ here.\n@map_list_checkmark!: The $concept_military_formation$ is already going here and you can cancel this.\n@map_list_lock!: The $concept_military_formation$ is already going here, but you #b cannot#! cancel this.\n@map_list_cross!: You #b cannot#! send this $concept_military_formation$ here.#!"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER: "Destination"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER_TOOLTIP: "#header Destination#!\n$TOOLTIP_DELIMITER$\nThis is where the [concept_military_formation] will go. If the $concept_military_formation$ is not already there, it will start traveling there."
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER: "Units"
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER_TOOLTIP: "The number of units present on the [concept_front]."
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER: "Advantage"
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER_TOOLTIP: "Advantage/Disadvantage of the [concept_front]"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER: "Travel time"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER_TOOLTIP: "#header Travel Time#!\n$TOOLTIP_DELIMITER$\nHow long (in days) the [concept_military_formation] will require to get to the specified destination given its current position."
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME: "[SelectLocalization( MapListOption.GetMilitaryFormationData.CanTravelTo, 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS', 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH' )]"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS: "[MapListOption.GetMilitaryFormationData.GetTravelDays|v] days"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH: "No path"

 MAP_LIST_MILITARY_FORMATION_UNITS: "@battalions! [Front.GetPlayerSideNumUnitsAtFront|0v] + [Front.GetPlayerSideNumUnitsTraveling|0v]"

 TRADE_ROUTE_LIST_PANEL_STATUS_HEADER_TOOLTIP:0 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_trade_route] to each [concept_market].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 TRADE_ROUTE_LIST_PANEL_MARKET_HEADER:0 "Market"
 TRADE_ROUTE_LIST_PANEL_MARKET_HEADER_TOOLTIP:2 "#header Sort [Concept('concept_market','$concept_markets$')] alphabetically#!"
 TRADE_ROUTE_LIST_PANEL_VALUE_HEADER:1 "Productivity"
 TRADE_ROUTE_LIST_PANEL_VALUE_HEADER_TOOLTIP:1 "#header Amount of [concept_trade_revenue]/employee annually#!"
 TRADE_ROUTE_LIST_PANEL_QUANTITY_HEADER:0 "Amount"
 TRADE_ROUTE_LIST_PANEL_QUANTITY_HEADER_TOOLTIP:0 "#header Units of [Concept('concept_good', '$concept_goods$')] Traded#!"
 TRADE_ROUTE_LIST_PANEL_LEVEL_HEADER:0 "Level"
 TRADE_ROUTE_LIST_PANEL_LEVEL_HEADER_TOOLTIP:0 "#header Level of [concept_trade_route]#!"
 TRADE_ROUTE_LIST_PANEL_CONVOYS_HEADER:0 "@convoys"
 TRADE_ROUTE_LIST_PANEL_CONVOYS_HEADER_TOOLTIP:0 "#header Number of @convoys![concept_convoys] required#!"

 TRADE_ROUTE_PLAYER:0 "Your Owned Routes ([MarketGoods.GetNumPlayerOwnedTradeRoutes]):"

 TRADED_GOODS_IMPORTED_AND_NUMBER_OF_IMPORT_ROUTES:0 "[MarketGoods.GetImportAmount|Dv] ([MarketGoods.GetNumImportTradeRoutes])"
 TRADED_GOODS_EXPORTED_AND_NUMBER_OF_EXPORT_ROUTES:0 "[MarketGoods.GetExportAmount|Dv] ([MarketGoods.GetNumExportTradeRoutes])"
 TRADED_GOODS_IMPORTED_TOOLTIP:0 "[MarketGoods.GetMarket.GetOwner.GetName] is importing [MarketGoods.GetImportAmount|Dv] [MarketGoods.GetGoods.GetTextIcon] [MarketGoods.GetGoods.GetName] with [MarketGoods.GetNumImportTradeRoutes] import [Concept('concept_trade_route', '$concept_trade_routes$')]"
 TRADED_GOODS_EXPORTED_TOOLTIP:0 "[MarketGoods.GetMarket.GetOwner.GetName] is exporting [MarketGoods.GetExportAmount|Dv] [MarketGoods.GetGoods.GetTextIcon] [MarketGoods.GetGoods.GetName] with [MarketGoods.GetNumExportTradeRoutes|v] export [Concept('concept_trade_route', '$concept_trade_routes$')]"

 COUNTRY_IMPORTED_AND_NUMBER_OF_IMPORT_ROUTES:0 "[Country.GetImportAmountOnMarket(Market.Self)|Dv] ([Country.GetNumImportTradeRoutesOnMarket(Market.Self)])"
 COUNTRY_EXPORTED_AND_NUMBER_OF_EXPORT_ROUTES:0 "[Country.GetExportAmountOnMarket(Market.Self)|Dv] ([Country.GetNumExportTradeRoutesOnMarket(Market.Self)])"
 COUNTRY_IMPORTED_TOOLTIP:0 "[Country.GetName] is importing [Country.GetImportAmountOnMarket(Market.Self)|Dv] units of Goods with [Country.GetNumImportTradeRoutesOnMarket(Market.Self)|v] import [Concept('concept_trade_route', '$concept_trade_routes$')]"
 COUNTRY_EXPORTED_TOOLTIP:0 "[Country.GetName] is exporting [Country.GetExportAmountOnMarket(Market.Self)|Dv] units of Goods with [Country.GetNumExportTradeRoutesOnMarket(Market.Self)|v] export [Concept('concept_trade_route', '$concept_trade_routes$')]"

 COUNTRY_NAME_WITH_TRADE_ROUTES:0 "#header [Country.GetNameNoFormatting]#! ([Country.GetNumTradeRoutesOnMarket(Market.Self)|v] [SelectLocalization(EqualTo_int32(Country.GetNumTradeRoutesOnMarket(Market.Self), '(int32)1'), 'route', 'routes')])"

 GOODS_NAME_WITH_TRADE_ROUTES:1 "#header [Goods.GetNameNoFormatting]#! $GOODS_NAME_WITH_TRADE_ROUTES_OWNED$"
 GOODS_NAME_WITH_TRADE_ROUTES_OWNED:0 "[SelectLocalization(EqualTo_int32(MarketGoods.GetNumPlayerOwnedTradeRoutes, '(int32)0'), '', 'GOODS_NAME_WITH_TRADE_ROUTES_NUMBER')]"
 GOODS_NAME_WITH_TRADE_ROUTES_NUMBER:0 "([MarketGoods.GetNumPlayerOwnedTradeRoutes|v] [GetPlayer.GetAdjectiveNoFormatting] [SelectLocalization(EqualTo_int32(MarketGoods.GetNumPlayerOwnedTradeRoutes, '(int32)1'), 'route', 'routes')])"
 GOODS_NUMBER_WITH_TRADE_LEVEL:0 "[TradeRoute.GetTradeQuantity|Dv]  (Level [TradeRoute.GetLevel|v])"

 NOT_PLAYER_MARKET_CONSUMPTION_TAXES:1 "@red_cross! Can #b not#! set [Concept('concept_consumption_tax','$concept_consumption_taxes$')] on [Goods.GetName] in the [Goods.GetMarket.GetName] since you are not part of this [concept_market]"
 NOT_PLAYER_MARKET_PRIORITY:1 "@red_cross! Can #b not#! set priority on [Goods.GetName] in the [Goods.GetMarket.GetName] since you are not part of this [concept_market]"

 CURRENT_TRADE_FILTERS_DESC:0 "[SelectLocalization(Market.GetOnlyShowPlayerTradeRoutes, 'YOUR', 'ALL')] Routes[AddTextIf( GetVariableSystem.HasValue( 'trade_route_grouping', 'goods' ), '$GROUPED_BY_GOODS$' )][AddTextIf( GetVariableSystem.HasValue( 'trade_route_grouping', 'country' ), '$GROUPED_BY_COUNTRY$' )]"
 CURRENT_GOODS_FILTERS:0 "[SelectLocalization(And(MarketPanel.IsSelected('staple'), MarketPanel.IsSelected('military')), 'ALL_GOODS', 'SELECTED_FILTER')]"
 SELECTED_FILTER:0 "[AddTextIf(MarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"

 ACCEPTED_CULTURALLY: "Accepted Culture"
 DISCRIMINATED_CULTURALLY: "Discriminated Culture"
 ACCEPTED_RELIGIOUSLY: "Accepted Religion"
 DISCRIMINATED_RELIGIOUSLY: "Discriminated Religion"
 IS_EMPLOYED: "Only Employed"
 IS_UNEMPLOYED: "Only Unemployed"
 LIVES_IN_INCORPORATED_STATE: "Lives in an Incorporated State"
 DOES_NOT_LIVE_IN_INCORPORATED_STATE: "Lives in an Unincorporated State"
 BUTTON_POP_BROWSER: "#header $POP_BROWSER$#!"
 POP_BROWSER: "Census Data"
 LOYALTY: "Loyalty"
 HAS_LOYALISTS: "Has Loyalists"
 HAS_RADICALS: "Has Radicals"
 POP_GROWTH: "Pop Growth"
 IS_GROWING: "Is Growing"
 IS_SHRINKING: "Is Shrinking"
 CHARTS: "Charts"
 LITERACY: "[concept_literacy]"
 NEEDS: "Needs"

 RELIGION_PIECHART_HEADER: "[concept_religion]"
 CULTURE_PIECHART_HEADER: "[concept_culture]"
 POP_TYPE: "$concept_profession$"
 DISCRIMINATION_CULTURAL: "Discrimination (Cultural)"
 DISCRIMINATION_RELIGIOUS: "Discrimination (Religious)"
 EMPLOYMENT: "Employment"

 FILTERED_BUILDINGS: "Filtered $concept_buildings$"

 INCORPORATION: "Incorporation"
 STATE_PIECHART_HEADER: "[concept_state]"
 FILTERED_COUNTRY_OWNERSHIP_PIECHART: "#header #todo PRCAL-32931 ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(you)')#!#!\n#todo BuildingBrowserPanel.GetFilteredOwnershipByShareholder(Shareholder.Self)|%v#! of the [Concept('concept_ownership_share','$concept_ownership_shares$')] is owned by #todo ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(you)')#!.\n\nMatches the current filters."
 FILTERED_OWNERSHIP_DISTRIBUTION_PIECHART: "#header #todo PRCAL-32931 Country.GetName AddTextIf(Country.IsLocalPlayer, '(you)')#!#!\n#todo BuildingBrowserPanel.GetFilteredDistributionPercentageInCountry(Country.Self)|%v#! of [GetPlayer.GetAdjective] owned [Concept('concept_building','$concept_buildings$')] [Concept('concept_ownership_share','$concept_ownership_shares$')] is in #todo Country.GetName#!.\n\nMatches the current filters."
 FILTERED_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForPopType(PopType.Self)|Dv] [PopType.GetName] [Concept('concept_pop', '$concept_pops$')] matches the current filters"
 FILTERED_RELIGION_PIECHART: "#header [Religion.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForReligion(Religion.Self)|Dv] [Religion.GetName] [Concept('concept_pop', '$concept_pops$')] matches the current filters"
 FILTERED_CULTURE_PIECHART: "#header [Culture.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForCulture(Culture.Self)|Dv] [Culture.GetName] [Concept('concept_pop', '$concept_pops$')] matches the current filters"
 FILTERED_STATE_PIECHART: "#header [State.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForState(State.Self)|Dv] [Concept('concept_pop', '$concept_pops$')] in [State.GetName] matches the current filters"
 POP_TYPE_POL_STR_PIECHART: "#header [PopType.GetName]#!\nThe [PopType.GetName] matching the current filters have a total of [PopBrowserPanel.GetFilteredPolStrForPopType(PopType.Self)|Dv] [concept_political_strength]"
 NO_STATES: "No States"
 NO_POPS_MATCHES_THE_CURRENT_FILTER: "No [Concept('concept_pop', '$concept_pops$')] matches the current filters"
 POP_BROWSER_POP_SOL: "[Pop.GetFormattedStandardOfLivingLabel|v] ([Pop.GetFormattedStandardOfLiving|v]) $WEALTH_GROWING_OR_SHRINKING$"
 WEALTH_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_down!')]"
 POP_BROWSER_LITERACY: "[Pop.GetLiteracyRate|%1v] $LITERACY_GROWING_OR_SHRINKING$"
 LITERACY_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_down!')]"
 POP_BROWSER_JOB_SATISFACTION: "[Pop.GetCurrentJobSatisfaction|0+=] $JOB_SATISFACTION_GROWING_OR_SHRINKING$"
 JOB_SATISFACTION_GROWING_OR_SHRINKING: "[AddTextIf(LessThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_up!')][AddTextIf(GreaterThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_down!')]"
 WEALTH_PROGRESSION: "Wealth"
 SOL_IS_GROWING: "Is Increasing"
 SOL_IS_SHRINKING: "Is Decreasing"
 STANDARD_OF_LIVING: "Standard of Living"
 IS_ABOVE_EXPECTED_SOL: "Above Expected Standard of Living"
 IS_BELOW_EXPECTED_SOL: "Below Expected Standard of Living"
 IS_BELOW_EXPECTED_SOL_MIDDLE: "Below Expected Standard of Living for [concept_middle_strata]"
 POP_SIZE: "Size"
 IS_TEN_OR_LARGER: "At least #b 10#! [Concept('concept_individual','$concept_individuals$')]"
 IS_A_HUNDRED_OR_LARGER: "At least #b 100#! [Concept('concept_individual','$concept_individuals$')]"
 IS_A_THOUSAND_OR_LARGER: "At least #b 1000#! [Concept('concept_individual','$concept_individuals$')]"
 JOB_SATISFACTION: "Job Satisfaction"
 IS_JOBSEEKER: "Is Jobseeker"
 IS_NOT_JOBSEEKER: "Is Satisfied"

 ALL_GOODS:0 "All Goods"
 STAPLE_FILTER_NAME:0 "Staple Goods"
 INDUSTRIAL_FILTER_NAME:0 "Industrial Goods"
 MILITARY_FILTER_NAME:0 "Military Goods"
 LUXURY_FILTER_NAME:0 "Luxury Goods"

 ALL:0 "All"
 YOUR:0 "Your"
 GROUPED_BY_GOODS:0 ", grouped by Goods"
 GROUPED_BY_COUNTRY:0 ", grouped by Country"
 FILTER_GOODS:0 "Filter Goods"
 GROUP:0 "Group"
 FILTER_BY_OWNER:0 "Filter by Owner"
 BY_GOODS:0 "By Goods"
 BY_COUNTRY:0 "By Country"
 ONLY_YOURS:0 "Only Yours"
 TRADE_ROUTES_SORT_GOODS:0 "Goods"
 TRADE_ROUTES_SORT_AMOUNT:0 "Units"
 TRADE_ROUTES_SORT_DIRECTION:0 "Dir."
 TRADE_ROUTES_SORT_COUNTRY:1 "Country"
 TRADE_ROUTES_SORT_COST:0 "Cost"
 TRADE_ROUTES_SORT_PRODUCTIVITY:0 "Prod."
 TRADE_ROUTES_SORT_REVENUE:0 "Revenue"
 TRADE_ROUTES_SORT_OWNER:0 "Owner"
 TRADE_ROUTE_OWNER: "Sort by if owned by [GetPlayer.GetName]"
 EMBARGO:0 "Embargo"
 TRADE_AGREEMENT:0 "Trade Agreement"

 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP:0 "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of activating the [concept_conscription_center] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.#!"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER:0 "State"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP:0 "#header State#!\n$TOOLTIP_DELIMITER$\nThe [concept_state] where [concept_conscription_center] will be activated."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_SIZE_TOOLTIP:0 "#header Size#!\n$TOOLTIP_DELIMITER$\nThe size of the [concept_conscription_center]."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS:0 "Units"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS_TOOLTIP:0 "#header Units#!\n$TOOLTIP_DELIMITER$\nThe number of units that will be drafted by the [concept_conscription_center]."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER: "$concept_state$ Limit"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER_TOOLTIP: "#header [concept_conscription_limit]#!\n$TOOLTIP_DELIMITER$\nThe max number of [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] this [concept_state] can currently recruit."

 COUNTRY_MOBILIZATION_SWAY_PANEL: "[Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')]: #v [Country.GetFullyMobilizedBattalionsPercentageRaw|0%]#!"

 FRONT_MAP_LIST_PANEL_UNITS:0 "Units"
 FRONT_MAP_LIST_PANEL_UNITS_TOOLTIP:1 "The number of units present on the [concept_front]."
 FRONT_MAP_LIST_PANEL_ADVANTAGE:0 "Advantage"
 FRONT_MAP_LIST_PANEL_ADVANTAGE_TOOLTIP:0 "Advantage/Disadvantage of the [concept_front]"

 RECRUIT_COMMANDERS_CHARACTERS_POPUP:0 "Will Command $DESC$"

 COLONY_MAP_MARKER_DAYS_LEFT:1 "[SelectLocalization( GreaterThan_int32(GetPlayer.GetTensionWith( State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), '@warning! ', '')]#bold [State.GetColonyProgressAsDays]#! Days"
 BUILDING_MAP_MARKER_WEEKS_LEFT:0 "#bold [Building.GetConstructionRemainingWeeksDesc]#!"

 MARKET_ACCESS_WITH_WARNING: "[SelectLocalization( LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'), '@warning!', '')] #v [State.GetMarketAccess|%0]#!"

 CLOUT_GRAPH_TITLE:0 "#title [concept_clout]#!"
 VOTES_GRAPH_TITLE:0 "#title [Concept('concept_votes', 'Current Polls')]#!"

 INTEREST_GROUPS_IN_GOVERNMENT: "[concept_in_government]\n[AccessPlayer.GetGovernmentInterestGroupsDesc]"
 INTEREST_GROUPS_IN_OPPOSITION: "[concept_in_opposition]\n[AccessPlayer.GetOppositionInterestGroupsDesc]"
 MARGINALIZED_INTEREST_GROUPS: "[concept_marginalized]\n[AccessPlayer.GetMarginalInterestGroupsDesc]"
 INTEREST_GROUP_NAME_WITH_CLOUT: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"

 CHARACTER_NAME_WITH_POPULARITY: "[Character.GetFullName] #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)] (#v [Character.GetPopularity|0]#!#!#!)"
 IG_AGITATORS: "[Concept( 'concept_agitator', '$concept_agitators$' )]"
 AGITATOR: "[concept_agitator]"
 NO_AGITATORS: "No $concept_agitators$"
 NO_AGITATOR_IN_MOVEMENT: "No supporting [Concept( 'concept_agitator', '$concept_agitators$' )]"
 IG_LOBBIES: "[Concept('concept_political_lobby','$concept_political_lobbies$')]"
 AVAILABLE_AGITATOR_SLOTS: "Potential for #tooltippable #tooltip:[GetRawTextTooltipTag(Country.GetModifier.GetTooltipFor('country_agitator_slots_add'))] [Country.GetEmptyAgitatorSlots|v]#!#! [SelectLocalization(EqualTo_int32(Country.GetEmptyAgitatorSlots, '(int32)1'), 'AGITATOR', 'IG_AGITATORS')]"
 NO_AVAILABLE_AGITATOR_SLOTS: "All [concept_agitator] slots filled"
 CANNOT_SUPPORT_AGITATORS: "Cannot support any [Concept( 'concept_agitator', '$concept_agitators$' )]"
 CANNOT_SUPPORT_AGITATORS_TOOLTIP: "#r Cannot support any [Concept( 'concept_agitator', '$concept_agitators$' )]#!\n@red_cross! [Concept('concept_revolution', '$concept_revolutionary$')] countries can not have $concept_agitators$"
 EXILED_AGITATORS: "Exiled Agitators"
 LOYALISTS_AND_RADICALS: "Loyalists and Radicals"
 LOYALISTS_AND_RADICALS_IN_COUNTRY: "[Concept('concept_loyalist', '$concept_loyalists$')] and [Concept('concept_radical', '$concept_radicals$')] in [Country.GetName]"
 LOYALISTS_AND_RADICALS_IN_INTEREST_GROUP: "[Concept('concept_loyalist', '$concept_loyalists$')] and [Concept('concept_radical', '$concept_radicals$')] in [InterestGroup.GetName]"
 AGITATORS: "Agitators"
 INVITE: "Invite"
 AGITATOR_START_POLITICAL_MOVEMENT: "Will start a #v [PoliticalMovementType.GetName]#!"
 AGITATOR_JOIN_POLITICAL_MOVEMENT: "Will join [PoliticalMovement.GetNameNoIcon]"
 AGITATOR_NO_POLITICAL_MOVEMENT: "Will not start or join a [concept_political_movement]"
 ELECTION_PANEL_ACTIVE_CAMPAIGN_TITLE:0 "[Election.GetNextElectionYearRaw] Campaign"
 ELECTION_PANEL_ELECTION_RESULT_TITLE:0 "[Election.GetLastElectionYearRaw] Election results"
 ELECTION_PANEL_HEADER_LINE_ONE:2 "[Election.GetTitle]"
 ELECTION_PANEL_HEADER_LINE_TWO:1 "[concept_election] in [Election.GetCountryName]"
 IG_VOTERS_TITLE:0 "Voters:"
 TOTAL_VOTERS:0 "Total Voters"
 DATE_OF_ELECTION:0 "Date of [concept_election]"
 ELECTION_DATE:1 "$DATE$ (in $NUM_DAYS$ days)"
 ELECTION_DATE_ONE_DAY:0 "$DATE$ (in one day)"
 ELECTION_DATE_LESS_THAN_ONE_DAY:0 "$DATE$ (less than one day)"
 PARTIES:0 "[Concept('concept_party', '$concept_parties$')]"
 LAST_ELECTION_RESULTS:1 "Last [concept_election] Results: [Election.GetLastElectionDateDesc]"
 PARTY_AFFILIATION:0 "Party Affiliation"
 WILL_JOIN_PARTY: "#v [InterestGroup.GetWillJoinPartyDesc]#!"
 PROJECTED_VOTES_TITLE:0 "Projected Votes:"
 PROJECTED_VOTES:0 "$SHARE|%0v$"
 PROJECTED_VOTES_TOOLTIP: "#header Projected Votes#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n$PARTY_POL_STR_FROM_VOTES$"
 PARTY_POL_STR_FROM_VOTES: "Last Election they got [Party.GetCurrentVotingPowerShare|%0v] of the [concept_votes]\nThis [SelectLocalization(Party.GetCountry.IsInElectionCampaignPeriod, 'CURRENTLY', '')]provides their Members with [Party.GetCurrentVotingPower|Kv] [concept_political_strength]"
 PROJECTED_PARTY_POL_STR_FROM_VOTES: "[Party.GetName] is projected to get [Party.GetProjectedVotesDesc] of the [concept_votes]\nThis would give them [Party.GetCurrentPollVotingPower|Kv] [concept_political_strength] from Votes, which is #v [Party.GetCurrentPollVotingPowerDifference|K+=]#! compared to the result of the last Election"
 CURRENTLY: "currently "
 PARTY_TOOLTIP_PROJECTED_PARTY_POL_STR_FROM_VOTES: "#title Current Election#!\n[concept_momentum]: #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_TOOLTIP [Party.GetMomentum|v%0]#!#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n#title Last Election#!\n"

 MOMENTUM_TOOLTIP: "[Party.GetMomentumDesc]"

 PARTY_AFFILIATION_TOOLTIP:1 "#header [InterestGroup.GetName] Affiliation with [Party.GetName] [Party.GetMembersSummary]: #v $SCORE|=+0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 PRICE_DIFFERENCE: "Price Difference"
 STATE_TO_MARKET_PRICE_DIFF_TOOLTIP: "#header Price Difference#!\n[Goods.GetTextIcon] [Goods.GetName] costs [Goods.GetStateToMarketPriceDiff|%0=-] in [Goods.GetState.GetName] compared to the [Goods.GetMarket.GetName]"

 CULTURE_IN_STATE_ITEM:1 "[STATE.GetPopulationForCulture( CULTURE.Self )|vD] [CULTURE.GetName] ([STATE.GetPolStrForCulture( CULTURE.Self )|vD] [concept_political_strength])"
 CULTURE_IN_STATE_FORMAT:0 "#header Cultures in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 RELIGION_IN_STATE_ITEM: "[STATE.GetPopulationForReligion( RELIGION.Self )|vD] [RELIGION.GetName] ([STATE.GetPolStrForReligion( RELIGION.Self )|vD] [concept_political_strength])"
 RELIGION_IN_STATE_FORMAT: "#header Religions in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"

 IG_IN_STATE_ITEM:0 "$VAL|vD$ - [INTEREST_GROUP.GetName]"
 IGS_IN_STATE_FORMAT:1 "#header [concept_political_strength] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"


 TECHNOLOGY:0 "Technology"
 TOOLTIP_REQUIREMENTS_ANY:0 "#title Requires one of the following:#!"
 TOOLTIP_REQUIREMENTS_ALL:0 "#title Requires all of the following:#!"
 TECHNOLOGY_RESEARCHED:0 "#i Already Researched#!"
 TOOLTIP_UNLOCKS:0 "#title Unlocks#!"
 TOOLTIP_UNLOCK_PRODUCTION_METHOD:0 "Unlocks $PRODUCTION_METHOD$ for $BUILDING_TYPE$ ([concept_production_method])"
 TOOLTIP_DISALLOW_PRODUCTION_METHOD:0 "Disallows $PRODUCTION_METHOD$ for $BUILDING_TYPE$ ([concept_production_method])"
 TOOLTIP_UNLOCK_BUILDING_TYPE:0 "Unlocks $BUILDING_TYPE$ ([concept_building])"
 TOOLTIP_UNLOCK_COMBAT_UNIT_TYPE: "Unlocks $COMBAT_UNIT_TYPE$ ([concept_unit])"
 TOOLTIP_UNLOCK_MOBILIZATION_OPTION: "Unlocks $MOBILIZATION_OPTION$ ([concept_mobilization_option])"
 TOOLTIP_UNLOCK_COMPANY_TYPE: "Unlocks [CompanyType.GetName] ([concept_company])"
 TOOLTIP_UNLOCK_STATE_TRAIT_COLONIZATION:0 "Allows establishment of [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')] with [STATE_TRAIT.GetName]"
 TOOLTIP_DISABLE_STATE_TRAIT:0 "Removes all effects from [STATE_TRAIT.GetName] in your owned [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')]"
 TOOLTIP_UNLOCK_LAW_TYPE:0 "Unlocks $LAW$"
 TOOLTIP_UNLOCK_PARTY:0 "Unlocks $PARTY$"
 TOOLTIP_UNLOCK_DECREE:0 "Unlocks [DECREE_TYPE.GetName] ([concept_decree])"
 TOOLTIP_UNLOCK_DIPLOMATIC_ACTION:0 "Unlocks [DIPLOMATIC_ACTION_TYPE.GetName] ([concept_diplomatic_action])"
 TOOLTIP_UNLOCK_TECH_TYPE:0 "Leads to $TECH_TYPE$ ([concept_technology])"
 TOOLTIP_DISALLOW_LAW_TYPE:0 "Disallows $LAW$"
 TOOLTIP_UNLOCKED_BY_LAW_TYPE:0 "Unlocked by $LAW$"
 TOOLTIP_DISALLOWED_BY_LAW_TYPE:0 "Disallowed by $LAW$"
 TOOLTIP_UNLOCKED_BY_TECHNOLOGY:0 "$TECHNOLOGY$"
 TOOLTIP_UNLOCKED_BY_PRINCIPLE: "$PRINCIPLE$"
 TOOLTIP_UNLOCKED_BY_IDENTITY: "[POWER_BLOC_IDENTITY.GetName]"

 TOOLTIP_UNLOCKS_NO_BREAKDOWN:0 "$UNLOCKED_DESC$"
 TOOLTIP_UNLOCKS_WITH_BREAKDOWN:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ Unlocks $UNLOCKED_CATEGORIES_LIST$#!#!"
 TOOLTIP_UNLOCK_LAW_SINGLE:0 "a new [concept_law]"
 TOOLTIP_UNLOCK_LAW_MANY:0 "multiple new [Concept('concept_law', '$concept_laws$')]"
 TOOLTIP_UNLOCK_PM_SINGLE:0 "a new [concept_production_method]"
 TOOLTIP_UNLOCK_PM_MANY:0 "multiple new [Concept('concept_production_method', '$concept_production_methods$')]"
 TOOLTIP_UNLOCK_DECREE_SINGLE:0 "a new [concept_decree]"
 TOOLTIP_UNLOCK_DECREE_MANY:1 "multiple new [Concept('concept_decree', '$concept_decrees$')]"

 TOOLTIP_DISALLOWS_NO_BREAKDOWN:0 "$DISALLOWED_DESC$"
 TOOLTIP_DISALLOWS_WITH_BREAKDOWN:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ Disallows $DISALLOWED_CATEGORIES_LIST$#!#!"
 TOOLTIP_DISALLOW_PM_SINGLE:0 "a [concept_production_method]"
 TOOLTIP_DISALLOW_PM_MANY:0 "multiple [Concept('concept_production_method', '$concept_production_methods$')]"

 STANDARD_PM_LIST_ITEM:0 "\n$PRODUCTION_METHOD$"
 STANDARD_PMS_DESC:0 "#header Reset to Standard [Concept('concept_production_method', '$concept_production_methods$')]#!$LIST$"

 CURRENTLY_ACTIVE_LAW:0 "#b Active Law#!"
 CURRENTLY_ACTIVE_LAW_IN_LAWGROUP:0 "Currently Active [Law.GetGroup.GetName] Law"
 LAW_CURRENTLY_BEING_ENACTED:0 "#b Trying to enact this#!"
 CURRENT_LAW_BEING_ENACTED:0 "#b Enacting Law#!"
 NO_LAW_IN_THIS_LAWGROUP_IS_BEING_ENACTED:0 "No [LawGroup.GetName] [concept_law] enacting"
 ACTIVE_LAW:0 "@green_checkmark! Part of our [Concept('concept_law', '$concept_laws$')]"
 BEING_ENACTED_LAW:1 "#v Being enacted#!"
 INACTIVE_LAW:0 "@red_cross! Not part of our [Concept('concept_law', '$concept_laws$')]"
 LAW_FULL_NAME:0 "$LAW_TYPE$ ($LAW_TYPE_TYPE$) in $LAW_GROUP$"
 LAW_TYPE_TYPE_DESC_LAW:0 "[concept_law]"
 LAW_TYPE_TYPE_DESC_INSTITUTION:0 "Institution"

 LAW_LIMITED_TO_FRONTIER_COLONIZATION: "Colonization is limited by [concept_law] to [Concept('concept_state', '$concept_states$')] connected to the [concept_capital_state] by land or a very limited sea path"

 MESSAGE_SETTINGS:0 "Message Settings"
 MESSAGE_SETTINGS_NOTIFICATION_TYPES:0 "Notification Types"
 MESSAGE_SETTINGS_DIPLOMATICALLY_INTERESTING:0 "Interesting Countries"
 MESSAGE_SETTINGS_NOTIFICATIONS_LOG:0 "Notification Log"
 MESSAGE_SETTINGS_SORT_NOTIFICATION_TYPE:0 "Notification Type"
 MESSAGE_SETTINGS_SORT_APPEARANCE:0 "Appearance"
 MESSAGE_SETTINGS_SORT_PAUSE:0 "Pause?"
 MESSAGE_SETTINGS_ALERTS_BUTTON_LABEL: "Current Situation Button Number"
 MESSAGE_SETTINGS_ALERTS: "Important Actions & Alerts"
 MESSAGE_SETTINGS_SORT_ALERT_NAME: "Alert Name"

 ALERT_SETTINGS_NAME_ALERT: "Alert"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION: "Important Action"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION: "Angry Important Action"

 ALERT_SETTINGS_NAME_ALERT_WITH_CONCEPT: "[concept_alert_settings_alert]"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_important_action]"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_angry_important_action]"
 ALERT_SETTINGS_NAME_NONE_WITH_CONCEPT: "[concept_alert_settings_none]"

 MESSAGE_SETTINGS_INTERESTING_ALWAYS: "Always Show"
 MESSAGE_SETTINGS_INTERESTING_ALWAYS_TOOLTIP: "#header Always Show#!\nThis will show all notifications from [InterestingCountryItem.GetCountry.GetName] at all times."
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC: "When Diplomatically Relevant"
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC_TOOLTIP: "#header When Diplomatically Relevant#!\nThis will only show notifications from [InterestingCountryItem.GetCountry.GetName] that are deemed relevant for you"
 MESSAGE_SETTINGS_INTERESTING_NEVER: "Never Show"
 MESSAGE_SETTINGS_INTERESTING_NEVER_TOOLTIP: "#header Never Show#!\nThis will never show any notifications from [InterestingCountryItem.GetCountry.GetName]"

 CURRENT_SITUATION_LABEL_TOTAL: "Total"
 CURRENT_SITUATION_LABEL_UNREAD: "Unread"

 CURRENT_SITUATION_TOTAL_TOOLTIP: "[SelectLocalization(Not(MessageSettingsWindow.IsCurrentSituationLabelTotal), 'CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP')]\nThis is the #b Default#!\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_TOTAL_DESC$"
 CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP: "#header Select Total#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP: "#header Select Total#! #i (Currently Selected)#!"
 CURRENT_SITUATION_TOTAL_DESC: "Always shows the total number of [Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')] inside the Current Situation menu."

 CURRENT_SITUATION_UNREAD_TOOLTIP: "[SelectLocalization(MessageSettingsWindow.IsCurrentSituationLabelTotal, 'CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP')]\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_UNREAD_DESC$"
 CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP: "#header Select Unread#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP: "#header Select Unread#! #i (Currently Selected)#!"
 CURRENT_SITUATION_UNREAD_DESC: "Shows the unread number of [Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')] inside the Current Situation menu."

 THEME: "Theme"
 THEME_SELECTOR: "Theme Selector"
 ASSETS: "Assets"
 DAY_AND_NIGHT_SETTINGS: "Day & Night Cycle"
 GO_TO_STORE: "Go to the store page of #header [Dlc.GetName]#!"
 RELEVANT_DLC_HEADER: "Relevant DLC"
 RELEVANT_DLC_TOOLTIP: "#header [Dlc.GetName]#!\n[SelectLocalization(Dlc.IsVerified, SelectLocalization(Dlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED')]\n$TOOLTIP_DELIMITER$\n[Dlc.GetThemeBreakdown]"
 THEME_CATEGORY_TOOLTIP: "#header [ThemeCategory.GetName]#!\n[ThemeCategory.GetDesc]"
 ASSET_CATEGORY_TOOLTIP: "$THEME_CATEGORY_TOOLTIP$"
 ASSET_TOOLTIP: "#header [Theme.GetName]#! [SelectLocalization(Theme.IsSelected, 'ASSET_ENABLED', 'ASSET_DISABLED')]\n[Theme.GetDesc]\n\nPart of the [Theme.GetRequiredDlc.GetName] DLC\n[ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]"
 THEME_TOOLTIP:1 "#header [Theme.GetName]#! [AddLocalizationIf(Theme.IsSelected, SelectLocalization(Theme.CanBeSelected, 'CURRENT_THEME', 'CURRENT_THEME_DISABLED'))]\n[Theme.GetDesc]\n\n[SelectLocalization(Theme.HasDlcRequirement, 'THEME_IN_DLC_TOOLTIP', 'THEME_NOT_IN_DLC_TOOLTIP')]"
 THEME_IN_DLC_TOOLTIP: "Part of the #v [Theme.GetRequiredDlc.GetName]#! DLC[ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]."
 THEME_NOT_IN_DLC_TOOLTIP: "Part of the base game."
 NEW_THEMES_AVAILABLE: "#header New themes available#!"
 THEME_ISSUES: "#header Some themes have issues#!\nThese will fallback to the default theme"
 CURRENT_THEME: "#instruction Currently Active#!"
 CURRENT_THEME_DISABLED: "#instruction #strikethrough Currently Active#!#!"
 ASSET_ENABLED: "#g Enabled#!"
 ASSET_DISABLED: "#r Disabled#!"

 peace_agreement_notification_group:0 "Peace Agreement"
 acquired_technology_notification_group:0 "Acquired Technology"
 diplomatic_proposal_declined_notification_group:0 "Diplomatic Proposal Declined"
 peace_agreement_signed_non_participant_notification_group:0 "Peace Agreement Signed Non Participant"
 capitulated_notification_group:0 "Capitulated"
 diplo_play_war_start_notification_group:0 "Diplomatic Play War Start"
 law_changed_notification_group:0 "Law Changed"
 law_notification_group:0 "Law Progression"
 resource_discovery_notification_group:0 "Resource Discovery"
 diplomatic_demand_notification_group: "Diplomatic Demands"
 claims_notification_group: "Claims"
 institution_investment_notification_group:0 "Institution Investment"
 country_rank_changed_notification_group:0 "Country Rank Changed"
 diplomatic_action_notification_group:0 "Diplomatic Action"
 diplomatic_proposal_accepted_notification_group:0 "Diplomatic Proposal Accepted"
 migration_target_created_notification_group:0 "Migration Target Created"
 migration_target_created_other_notification_group:0 "Migration Target Created (Other)"
 diplo_play_start_notification_group:0 "Diplomatic Play Start"
 diplo_play_back_down_notification_group:0 "Diplomatic Play Back Down"
 diplo_play_back_down_involved_notification_group:0 "Diplomatic Play Back Down (Involved)"
 diplo_play_join_side_notification_group:0 "Diplomatic Play Join Side"
 diplo_play_abandon_side_notification_group:0 "Diplomatic Play Abandon Side"
 colony_notification_group:0 "Colony"
 parties_activated_notification_group:0 "Parties Activated"
 country_revolution_notification_group:0 "Country Revolution"
 country_secession_notification_group:0 "Country Secession"
 election_results_notification_group:0 "Election Results"
 enactment_failed_group: "Law Enactment Failed"
 harvest_condition_important_notification_group: "Harvest Conditions (Important)"
 harvest_condition_notification_group: "Harvest Conditions"
 journal_entry_completed_notification_group:0 "Journal Entry Completed"
 native_uprising_notification_group:0 "Native Uprising"
 spreading_technology_notification_group:0 "Spreading Technology"
 heir_born_notification_group:0 "Heir Born"
 new_ruler_notification_group: "New Ruler"
 character_died_notification_group:0 "Character Died"
 character_new_formation_notification_group: "New $concept_military_formation$ for Commander"
 character_exiled_notification_group: "Character Exiled"
 agitator_spawned_notification_group: "Agitator Appeared"
 diplomatic_action_break_notification_group:0 "Diplomatic Action Break"
 diplomatic_proposal_break_notification_group:0 "Diplomatic Proposal Break"
 diplomatic_proposal_third_party_notification_group:0 "Diplomatic Proposal (Third Party)"
 diplomatic_pact_notification_group:0 "Diplomatic Pact"
 diplomatic_pact_third_party_notification_group:0 "Diplomatic Pact (Third Party)"
 diplo_play_start_third_party_notification_group:0 "Diplomatic Play Start (Third Party)"
 diplo_play_declare_neutrality_notification_group:0 "Diplomatic Play Declare Neutrality"
 diplo_play_war_start_third_party_notification_group:0 "Diplomatic Play War Start (Third Party)"
 diplo_play_subject_notification_group:0 "Diplomatic Play Subject"
 country_swayed_notification_group:0 "Country Swayed"
 sway_offer_notification_group:0 "Sway Offer"
 interest_notification_group:0 "Interest"
 interest_third_party_notification_group:0 "Interest (Third Party)"
 colony_third_party_notification_group:0 "Colony (Third Party)"
 ig_trait_notification_group:0 "Interest Group Trait"
 ig_influence_level_notification_group:0 "Interest Group Influence Level"
 ig_movement_left_notification_group:0 "Interest Group Movement Left"
 ig_resigned_government_notification_group:0 "Interest Group Resigned Government"
 new_culture_obsession_notification_group:0 "New Culture Obsession"
 commander_order_invalidated_notification_group:0 "Commander Order Invalidated"
 commander_moved_to_other_front_notification_group:0 "Commander Moved To Other Front"
 country_mobilization_notification_group:0 "Country Mobilization"
 country_conscription_notification_group:0 "Country Conscription"
 wargoal_notification_group:0 "Wargoal"
 trade_route_notification_group:0 "Trade Route"
 significant_trade_route_notification_group:0 "Significant Trade Route"
 commander_move_notification_group:0 "Commander Move"
 naval_invasion_against_us_notification_group:0 "Naval Invasion Against Us"
 naval_invasion_notification_group:0 "Naval Invasion"
 convoy_raiders_intercepted_notification_group:0 "Convoy Raiders Intercepted"
 journal_entry_activation_notification_group:0 "Journal Entry Activation"
 political_movement_notification_group:0 "Political Movement"
 country_owes_obligation_notification_group:0 "Country Owes Obligation"
 country_owed_obligation_notification_group:0 "Country Owed Obligation"
 obligation_expired_notification_group:0 "Obligation Expired"
 unification_candidate_notification_group:0 "Unification Candidate"
 unification_support_notification_group:0 "Unification Support"
 shipping_lane_trade_route_invalidated_notification_group:0 "Trade Route Invalidated"
 shipping_lane_formation_destination_invalidated_notification_group: "Formation Destination Invalidated"
 ig_leader_memento_mori_notification_group:0 "Interest Group Leader Dies"
 convoys_raided_notification_group:0 "Convoys Raided"
 price_report_notification_group:0 "Price Report"
 building_built_notification_group:0 "Building Built"
 building_expanded_notification_group:0 "Building Expanded"
 political_lobby_created_notification_group: "Political Lobby Created"
 political_lobby_disbanded_notification_group: "Political Lobby Disbanded"
 foreign_political_lobby_created_notification_group: "Foreign Political Lobby Created"
 foreign_political_lobby_disbanded_notification_group: "Foreign Political Lobby Disbanded"
 interest_group_joins_lobby_group: "Interest Group Joins Lobby"
 interest_group_leaves_lobby_group: "Interest Group Leaves Lobby"
 war_participant_in_default_notification_group: "War Participant in Default"
 formation_travel_to_front_cancelled_notification_group: "Formation Travel to Front Cancelled"
 formation_travel_station_in_hq_cancelled_notification_group: "Formation Station in HQ Cancelled"
 formation_travel_deploy_to_sea_node_cancelled_notification_group: "Formation Deploy to Sea Node Cancelled"
 formation_travel_track_formation_cancelled_notification_group: "Formation Tracking Cancelled"
 formation_could_not_find_other_formation_to_automatically_merge_into_notification_group: "No Formation to merge into"
 fleet_notification_group: "Fleet"
 country_nationalized_building_group: "Country Nationalized Building"
 on_impose_law_notification_group: "Law Imposed"
 power_bloc_principles_notification_group: "$concept_power_bloc_principles$"

 POP_TYPE_SUPPORT_TITLE:1 "#b [PopType.GetName] [concept_interest_group] support in [Country.GetName]:#!"
 POP_TYPE_SUPPORT_SINGLE:0 "[INTEREST_GROUP.GetName]: $SUPPORT_PERCENTAGE|%1v$"
 POP_TYPE_SUPPORT_SINGLE_FORMAT:0 "$TAB$$POP_TYPE_SUPPORT_SINGLE$"
 POP_TYPE_SUPPORT_FORMAT:0 "$POP_TYPE_SUPPORT_TITLE$\n$BODY$"
 POP_TYPE_SUPPORT_NONE:1 "[PopType.GetName] in [Country.GetName] do not support any $concept_interest_group$"
 POP_TYPE_SUPPORTED_BY_OTHER_HEADER:1 "#header Other supported [Concept('concept_interest_group', '$concept_interest_groups$')]#!\n$TOOLTIP_DELIMITER$"
 POP_TYPE_SUPPORTED_BY_OTHER:1 "$TAB$Other $concept_interest_groups$: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $OTHER_PERCENTAGE|%1v$#!#!"

 POP_TYPE_IN_PLAYER_COUNTRY:1 "#b [PopType.GetName] in [GetPlayer.GetName]#!:\nPopulation: [PopType.GetPopulation(GetPlayer.Self)|kv]\n[concept_political_strength]: [PopType.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]\n\n[PopType.GetInterestGroupSupportDesc( GetPlayer.Self )]"
 POP_TYPE_IN_BUILDING:0 "#b [PopType.GetName] in [Building.GetState.GetCountry.GetName]#!:\n$TAB$$TAB$[concept_pop]: [PopType.GetPopulation(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(Building.GetState.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(Building.GetState.GetCountry)][SelectLocalization(Building.GetState.GetCountry.IsPlayer, 'POP_TYPE_IN_BUILDING_SUPPORT', '')]"
 POP_TYPE_IN_BUILDING_SUPPORT:0 "\n\n[PopType.GetInterestGroupSupportDesc( Building.GetState.GetCountry )]"
 POP_TYPE_IN_BUILDING_HEADER:0 "[PopListItem.GetWorkingAdultsPopSize|vD] [PopType.GetNameNoIcon] in [Building.GetName]"
 POP_TYPE_IN_STATE:0 "#b [PopType.GetName] in [State.GetCountry.GetName]#!:\n$TAB$$TAB$Population: [PopType.GetPopulation(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(State.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(State.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(State.GetCountry)][SelectLocalization(State.GetCountry.IsPlayer, 'POP_TYPE_IN_STATE_SUPPORT', '')]"
 POP_TYPE_IN_STATE_SUPPORT:0 "\n\n[PopType.GetInterestGroupSupportDesc( State.GetCountry )]"
 POP_TYPE_IN_STATE_HEADER:0 "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] in [State.GetName]"
 POP_TYPE_IN_CULTURE:0 "[SelectLocalization(GreaterThan_int64(Culture.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_CULTURE_PLAYER_POPULATION', 'POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION:0 "There are no [Culture.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]"
 POP_TYPE_IN_CULTURE_PLAYER_POPULATION:0 "#b [Culture.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]:#!\n$TAB$$TAB$Population: [Culture.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Culture.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_CULTURE_HEADER:0 "[PopListItem.GetTotalPopSize|vD] [Culture.GetName] [PopType.GetNameNoIcon]"
 POP_TYPE_IN_RELIGION:0 "[SelectLocalization(GreaterThan_int64(Religion.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_RELIGION_PLAYER_POPULATION', 'POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION:0 "There are no [Religion.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]"
 POP_TYPE_IN_RELIGION_PLAYER_POPULATION:0 "#b [Religion.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]:#!\n$TAB$$TAB$Population: [Religion.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Religion.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_RELIGION_HEADER:0 "[PopListItem.GetTotalPopSize|vD] [Religion.GetName] [PopType.GetNameNoIcon]"
 POP_TYPE_IN_IG:0 "#b [PopType.GetName] in [InterestGroup.GetCountry.GetName]#!:\n$TAB$$TAB$Population: [PopType.GetPopulation(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(InterestGroup.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(InterestGroup.GetCountry)][SelectLocalization(InterestGroup.GetCountry.IsPlayer, 'POP_TYPE_IN_IG_SUPPORT', '')]"
 POP_TYPE_IN_IG_SUPPORT:0 "\n\n[PopType.GetInterestGroupSupportDesc( InterestGroup.GetCountry )]"
 POP_TYPE_IN_IG_HEADER:0 "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] support the [InterestGroup.GetNameNoIcon]"



 POP_TYPE_TOOLTIP_SLAVES_AS_LABOR:0 "\n\n#italic Certain [Concept('concept_building', '$concept_buildings$')] employ [PopType.GetNameNoIcon] in order to replace another [concept_profession].#!"

 YOU_HAVE_RESEARCHED_THIS:0 "#italic You have researched this technology#!"
 CURRENTLY_BEING_RESEARCHED:0 "Currently being researched: $TECHNOLOGY_PROGRESS_WITH_GAIN$"
 LENS_ACTION_NUMBER:1 "[LensOption.GetText|v]\n[GetDescriptiveText(LensOption.GetMapInteraction)]\nThis action has #v [LensOption.GetNumberOfSelections|+]#! valid targets"
 BUILDING_ACTION_NUMBER:1 "[BuildingType.GetName|v]\nSelect in which [concept_state] to build [BuildingType.GetName|v]\nCan currently be built in #v [BuildingType.GetNumAvailableStatesForBuilding|+]#! different [Concept('concept_state', '$concept_states$')]"

 IS_ACTIVE:0 "$TEXT$ (#P Active#!)"
 IS_INACTIVE:0 "$TEXT$ (Inactive)"

 PRODUCTION_METHOD_OPTIONS:0 "You have #bold #P [ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf)]#!#! options for [ProductionMethodGroup.GetName]"
 PRODUCTION_METHOD_OPTIONS_BULK:0 "You have #bold #P [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingProductionMethodsEntry.GetBuildingType)]#!#! options for [ProductionMethodGroup.GetName]"

 FRONT_DESC_LAND_FORMAT:0 "[FRONT.GetName]"
 PEACE_ACCEPTANCE_YES:0 "#bold #P +1000#!#!"
 PEACE_ACCEPTANCE_SCORE:0 "$VAL|=+$"
 WAR_SUPPORT:0 "[concept_war_support]"
 ACCEPTANCE:0 "Acceptance"

 INSTITUTION_NAME_AND_LEVEL:0 "[Institution.GetName] (Level [Institution.GetInvestmentLevel])"
 EXPAND_BUILDING_TYPE:0 "Expand #BOLD [BuildingType.GetNameNoFormatting]#!"
 YEARLY_AVERAGE_EARNINGS_PER_EMPLOYEE:0 "Yearly Avg. Earnings / Employee"

 SOCIETY:0 "Society"
 OTHER:0 "Other"
 OTHER_TITLE_COLON:0 "#title Other:#!"

 TAB_1:0 "#header Tab 1#!"
 TAB_2:0 "#header Tab 2#!"
 TAB_3:0 "#header Tab 3#!"
 TAB_4:0 "#header Tab 4#!"
 TAB_5:0 "#header Tab 5#!"
 GO_TO_DETAILS:0 "#header Go to details#!"

 CONSTRUCTION_POINTS:2 "@construction! $POINTS|0v$ [concept_construction]"
 CONSTRUCTION_DURATION:0 "$WEEKS$ weeks"
 CONSTRUCTION_DURATION_UNKNOWN:1 "Unknown"
 CONSTRUCTION_DURATION_PAUSED:0 "Paused"
 CONSTRUCTION_CAMP:0 "Construction Camp"
 MOVE_UP:2 "#header Move Up in [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveUp ), '\n\n' )]#I Click to move up in queue#!\n#I Alt-click to move to top#!"
 MOVE_DOWN:2 "#header Move Down in [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveDown ), '\n\n' )]#I Click to move down in queue#!\n#I Alt-click to move to bottom#!"
 CANCEL_CONSTRUCTION:0 "Cancel Construction"
 CONSTRUCTION_QUEUE_FOREIGN_GOVERNMENT_CONSTRUCTION_TT: "[ConstructionQueueElement.GetInvestorCountry.GetAdjective] [concept_government_construction]"

 PLAYED_BY_PLAYER_DESC:0 "Played by #v $PLAYER$#!"
 PLAYED_BY_AI_DESC:0 "Played by AI"
 OBSERVED_BY_PLAYER_DESC:0 "Observed by #v $PLAYER$#!"
 PLAYERS:0 "Players"

 NO_COLONY_GROWTH: "Country generates no [concept_colonial_growth]"
 COLONY_GROWTH_DESC: "[concept_colonial_growth] per [concept_colony] generated by [COUNTRY.GetName]: #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COLONY_GROWTH_DETAIL_TIT $VALUE|%v$#!#!\n"
 MAX_COLONY_GROWTH_CLAMPED:0 "Max growth per day: #variable $MAX|%$#!"
 COLONY_GROWTH_DETAIL_TIT:0 "[Country.GetColonialGrowthDetails]"
 COLONY_GROWTH_DETAIL_DESC: "#header [concept_colonial_growth] in [COUNTRY.GetName]#!\n$VALUE|%v$ per day per [concept_colony]\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Due to:\n$TOTAL_INCORPORATED_POPULATION|Dv$ [Concept('concept_incorporated_state','$concept_incorporated$')] [Concept('concept_pop','$concept_population$')|l]\n[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetName]\n[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetName] level [COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetInvestmentLevel|v]#!\n\nGrowth is split between #variable $NUM_COLONIES$#! colonies."
 COLONY_GROWTH_COLONIZATION_RIGHTS: "[concept_colonial_growth] multiplied by x$MULT|1v$ due to [concept_colonization_rights]"
 COLONY_GROWTH_REGION_SIZE: "[concept_colonial_growth] multiplied by x$MULT|1v$ due to $NUM_PROVINCES|v$ [Concept('concept_province','$concept_provinces$')] in [StateRegion.GetName]"
 COLONY_GROWTH_POPULATION_SIZE: "[concept_colonial_growth] multiplied by x$MULT|1v$ due to $POPULATION|Dv$ [Concept('concept_pop','$concept_population$')] in relevant [Concept('concept_state','$concept_states$')] in [StateRegion.GetName]"

 MOBILIZED_BATTALIONS_WITH_GENERAL_FULL_COUNT:0 "With [Concept('concept_general', '$concept_generals$')]: @battalions!$TOTAL|v$"
 MOBILIZED_BATTALIONS_WITH_GENERAL_NOT_FULL_COUNT:0 "With [Concept('concept_general', '$concept_generals$')]: @battalions!$FULLY_MOBILIZED|v$/$TOTAL|v$"

 TOTAL_FLOTILLAS:0 "Total flotillas"

 MILITARY_FORMATIONS_ARMY_HEADER: "[Concept('concept_army', '$concept_armies$')] ([GetDataModelSize( Country.GetMilitaryFormationsArmy )|v0])"
 MILITARY_FORMATIONS_FLEET_HEADER: "[Concept('concept_fleet', '$concept_fleets$')] ([GetDataModelSize( Country.GetMilitaryFormationsFleet )|v0])"

 CANAL_WRONG_STATE_REGION:0 "#N Can only be built in [STATE_REGION.GetName]#!"

 MOBILIZE_ARMY: "Mobilize"
 MOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( MilitaryFormation.Mobilize ), '\n\n' )]$concept_mobilize_army_desc$[ConcatIfNeitherEmpty('\n\nEstimated Cost / Week:\n', MilitaryFormation.GetEstimatedMobilizationCostDesc)]"
 CANNOT_MOBILIZE_ARMY_DEMOBILIZING: "[MilitaryFormation.GetDemobilizationStatus]"
 ARMY_IS_DEMOBILIZING: "[SelectLocalization(MilitaryFormation.IsTraveling,'ARMY_IS_DEMOBILIZING_IN_TRANSIT','ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT')] demobilizing for $DAYS_LEFT|v0$ additional days."
 ARMY_IS_DEMOBILIZING_IN_TRANSIT: "[MilitaryFormation.GetName] is returning home. Once it has arrived it will be"
 ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT: "[MilitaryFormation.GetName] is still"

 DEMOBILIZE_ARMY: "Demobilize"
 DEMOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army_demobilize$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( MilitaryFormation.Demobilize ), '\n\n' )]$concept_mobilize_army_desc$"

 MOBILIZE_ARMY_COST: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [GetPlayer.GetCustom('currency_symbol')]$COST|K-=$#!#!"
 MOBILIZE_ARMY_GOODS_COST_ENTRY: "$GOODS$: [GetPlayer.GetCustom('currency_symbol')] #v $COST|-D$#!"

 GENERAL_BUSY_NAVAL_INVASION: "[Character.GetFirstName] is busy taking part in a #v Naval Invasion#!"
 COMMANDER_BUSY_BATTLE: "[Character.GetFirstName] is busy in a [concept_battle]"

 CANNOT_MOBILIZE_ARMIES_NO_DIPLO_PLAY: "[concept_country] must be part of a [concept_diplomatic_play]"
 CANNOT_MOBILIZE_ARMY_NOT_AN_ARMY: "Only [Concept('concept_army', '$concept_armies$')] can be [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 CANNOT_MOBILIZE_ARMY_ALREADY_MOBILIZED: "[MilitaryFormation.GetName] is already [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 CANNOT_MOBILIZE_ARMY_OCCUPIED: "[HQ.GetName] is not under our control"
 CANNOT_MOBILIZE_ARMY_NO_BATTALIONS: "[MilitaryFormation.GetName] has no @battalions![Nbsp][Concept('concept_battalion','$concept_battalions$')] to [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')]"
 CANNOT_MOBILIZE_ARMY_NO_ARMY: "No [concept_army] in [concept_country] to [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')]"
 CANNOT_MOBILIZE_ARMY_ALL_COMMANDERS_BUSY: "All commanders in this army are [concept_busy]"
 CANNOT_MOBILIZE_ARMIES_ALREADY_MOBILIZED: "All [Concept('concept_army', '$concept_armies$')] already [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 CANNOT_MOBILIZE_ALL_ARMIES_DEMOBILIZING: "All [Concept('concept_army', '$concept_armies$')] are still demobilizing"
 CANNOT_DEMOBILIZE_ARMIES_ALREADY_DEMOBILIZED: "All [Concept('concept_army', '$concept_armies$')] already [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')]"

 CANNOT_DEMOBILIZE_ARMY_INVOLVED_IN_NAVAL_INVASION: "Cannot [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] [MilitaryFormation.GetName]: it is involved in a [concept_naval_invasion]"
 CANNOT_DEMOBILIZE_ARMY_NO_ARMY: "No [concept_army] in [concept_country] to [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')]"

 BUILDING_MOBILIZED_BATTALIONS_TOOLTIP:0 "#header #v [Building.GetNumberOfFullyMobilizedBattalions]#! / [Building.GetNumberOfCombatUnits] [concept_fully_mobilized_battalions] from [Building.GetState.GetName]#!\n$TOOLTIP_DELIMITER$\n#v [Building.GetNumberOfFullyMobilizedBattalions]#! [Concept('concept_battalion','$concept_battalions$')] are [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')] out of a total of #v [Building.GetNumberOfCombatUnits]#! from the [Building.GetName] in [Building.GetState.GetName]"

 GENERAL_TRAVELING:0 "Traveling"
 GENERAL_TRAVEL_DAY:0 "day"
 GENERAL_TRAVEL_DAYS:0 "days"

 TRAVEL_TIME_LABEL: "#v $DAYS$d#!"
 FORMATION_TRAVELING: "Traveling"
 FORMATION_TRAVELING_FRONT_PANEL: "$FORMATION_TRAVELING$ (#v [MilitaryFormation.GetTravelDaysLeft] days#!)"
 FORMATION_TRAVELING_TOOLTIP_LESS_THAN_ONE_DAY: "[MilitaryFormation.GetName|v] will arrive in [Front.GetName] in less than #v 1 day#!."

 ACTIVATE_CONSCRIPTION_CENTER:0 "Activate Conscription Center"
 ACTIVATE_CONSCRIPTION_CENTER_TOOLTIP:0 "#header Activate [concept_conscription_center]#!\n$TOOLTIP_DELIMITER$\nSize: [Building.GetExpansionLevel|v]\nUnit Capacity: [Building.GetCombatUnitCapacityDesc]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_LAW:0 "[concept_country] must have a conscription law"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_DIPLO_PLAY:0 "[concept_country] must be part of a [concept_diplomatic_play]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_NO_CONSCRIPTION_CENTER:1 "Insufficient civilian population in [State.GetName] to raise any [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_OCCUPIED:0 "[State.GetName] is occupied by the enemy"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_ALREADY_ACTIVE:1 "[State.GetName] is already [Concept('concept_conscription_center','$concept_conscripted$')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_CONSCRIPTION_CENTER:2 "You do not have any available [Concept('concept_conscription_center','$concept_conscription_center$')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_ALREADY_ACTIVE:1 "All [Concept('concept_conscription_center', '$concept_conscription_centers$')] already active"
 CONSCRIPTION_COST_WITH_BREAKDOWN:0 "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [GetPlayer.GetCustom('currency_symbol')]$COST|K+=$#!#!"
 CONSCRIPTION_COST_NO_BREAKDOWN:0 "[GetPlayer.GetCustom('currency_symbol')]$COST|K+=$"
 CONSCRIPTION_COST_ITEM:0 "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [GetPlayer.GetCustom('currency_symbol')]$COST|K+=$#!#!"

 CANNOT_ACTIVATE_CONSCRIPTION_MAX_NUM: "[State.GetName] has a [concept_conscription_limit] of @conscripts!$MAX_CONSCRIPTS|v$"

 RAISE_CONSCRIPTS_ALREADY_RAISED: "Have already raised [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 RAISE_CONSCRIPTS_NOT_MOBILIZED: "Only [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')] [Concept('concept_military_formation','$concept_military_formations$')] can raise [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"

 DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_ADD:0 "Designate as a [concept_strategic_objective]"
 DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_REMOVE:0 "Remove from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
 DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_ADD_TOOLTIP:1 "Designate [State.GetName] as the [concept_strategic_objective] in the [State.GetTheater(State.GetController).GetName|v]"
 DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_REMOVE_TOOLTIP:0 "Remove [State.GetName] from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
 DESIGNATE_STRATEGIC_OBJECTIVE_TOOLTIP_ADD:0 "Designate $STATE$ as a [concept_strategic_objective]"
 DESIGNATE_STRATEGIC_OBJECTIVE_TOOLTIP_REMOVE:0 "Remove $STATE$ from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"

 PLAN_NAVAL_INVASION_RIGHT_CLICK_TOOLTIP: "#title #v Plan [concept_naval_invasion] in [State.GetName]#!#!\n$TOOLTIP_DELIMITER$\n$plan_naval_invasion_lens_option_tooltip$[ConcatIfNeitherEmpty('\n\n', '$ERRORS$')]"

 activate_conscription_centers_lens_option:0 "Recruit Conscripts"
 activate_conscription_centers_lens_option_tooltip:1 "#header Recruit Conscripts#!\n$TOOLTIP_DELIMITER$\nSelect [Concept('concept_state', '$concept_states$')] where you would like to activate [Concept('concept_conscription_center', '$concept_conscription_centers$')]"

 designate_strategic_objective_lens_option:0 "Designate Strategic Objective"
 designate_strategic_objective_lens_option_tooltip:0 "#header Designate [concept_strategic_objective]#!\n$TOOLTIP_DELIMITER$\nSelect [Concept('concept_state', '$concept_states$')] that you would like to designate as a [concept_strategic_objective]"

 recruit_generals_lens_option:0 "Recruit Generals"
 recruit_generals_lens_option_tooltip:0 "Recruit Generals for a [concept_hq]."
 recruit_admirals_lens_option:0 "Recruit Admirals"
 recruit_admirals_lens_option_tooltip:0 "Recruit Admirals for a [concept_hq]."

 plan_naval_invasion_lens_option: "Plan Naval Invasion"
 plan_naval_invasion_lens_option_tooltip: "Start planning a Naval Invasion"

 EVENT_HIGHLIGHTED_OPTION:0 "This option is available because:"
 EVENT_HIGHLIGHTED_OPTION_NOT:0 "This option is unavailable because:"

 notification_country_mobilization_name:0 "[SCOPE.sCountry('actor').GetName] begins [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')]"
 notification_country_mobilization_desc:1 "Our [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer, SCOPE.sCountry('actor') ), 'ally', 'enemy' )] [SCOPE.sCountry('actor').GetName] begins [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilizing$')] their [Concept('concept_general', '$concept_generals$')]."
 notification_country_mobilization_tooltip:0 "#header $notification_country_mobilization_name$#!\n$notification_country_mobilization_desc$"
 notification_country_conscription_name:0 "[SCOPE.sCountry('actor').GetName] begins [Concept('concept_conscription_center', '$concept_conscription_center_conscription$')]"
 notification_country_conscription_desc:0 "Our [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer , SCOPE.sCountry('actor') ), 'ally', 'enemy' )] [SCOPE.sCountry('actor').GetName] begins activating their [Concept('concept_conscription_center', '$concept_conscription_centers$')]."
 notification_country_conscription_tooltip:0 "#header $notification_country_conscription_name$#!\n$notification_country_conscription_desc$"

 notification_country_revolution_name:0 "[concept_revolution]!"
 notification_country_revolution_desc:0 "[concept_revolution] is upon us!"
 notification_country_revolution_tooltip:0 "#header $notification_country_revolution_name$#!\n$notification_country_revolution_desc$"

 notification_country_secession_name:0 "[concept_secession]!"
 notification_country_secession_desc:0 "[SCOPE.GetRootScope.GetCivilWar.GetUprisingCountry.GetName] has seceded!"
 notification_country_secession_tooltip:0 "#header $notification_country_secession_name$#!\n$notification_country_secession_desc$"

 notification_wargoal_added_name:0 "[concept_war_goal] Added!"
 notification_wargoal_added_desc:0 "A [concept_war_goal] has been added for [SCOPE.sCountry('actor').GetName]."
 notification_wargoal_added_tooltip:0 "#header $notification_wargoal_added_name$#!\n$notification_wargoal_added_desc$"

 notification_wargoal_removed_name:0 "[concept_war_goal] Removed!"
 notification_wargoal_removed_desc:0 "A [concept_war_goal] for [SCOPE.sCountry('actor').GetName] has been removed."
 notification_wargoal_removed_tooltip:0 "#header $notification_wargoal_removed_name$#!\n$notification_wargoal_removed_desc$"

 notification_election_results_name:0 "[concept_election]!"
 notification_election_results_desc:0 "[concept_election] results in [SCOPE.GetRootScope.GetCountry.GetName] are in!\n[SCOPE.GetRootScope.GetCountry.GetLastElectionResultsTooltip]"
 notification_election_results_tooltip:0 "#header $notification_election_results_name$#!\n$notification_election_results_desc$"

 notification_new_trade_route_name:0 "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName]"
 notification_new_trade_route_desc:1 "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetName] started an [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] from the [SCOPE.GetRootScope.GetTradeRoute.GetExportingMarket.GetName] to the [SCOPE.GetRootScope.GetTradeRoute.GetImportingMarket.GetName]. [SCOPE.GetRootScope.GetTradeRoute.GetPredictedFinalLevelShortDesc]"
 notification_new_trade_route_tooltip:0 "#header $notification_new_trade_route_name$#!\n$notification_new_trade_route_desc$"

 notification_canceled_trade_route_name:0 "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] Route Canceled"
 notification_canceled_trade_route_desc:0 "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetName] cancelled their [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] from the [SCOPE.GetRootScope.GetTradeRoute.GetExportingMarket.GetName] to the [SCOPE.GetRootScope.GetTradeRoute.GetImportingMarket.GetName]"
 notification_canceled_trade_route_tooltip:0 "#header $notification_canceled_trade_route_name$#!\n$notification_canceled_trade_route_desc$"

 notification_new_significant_trade_route_name:0 "Significant $notification_new_trade_route_name$"
 notification_new_significant_trade_route_desc:0 "$notification_new_trade_route_desc$"
 notification_new_significant_trade_route_tooltip:0 "$notification_new_trade_route_tooltip$"
 notification_canceled_significant_trade_route_name:0 "Significant $notification_canceled_trade_route_name$"
 notification_canceled_significant_trade_route_desc:0 "$notification_canceled_trade_route_desc$"
 notification_canceled_significant_trade_route_tooltip:0 "$notification_canceled_trade_route_tooltip$"

 notification_naval_invasion_failed_name:0 "Failed Naval Invasion"
 notification_naval_invasion_failed_desc: "Naval Invasion of [SCOPE.sState( 'state' ).GetName] has failed. [Concept('concept_military_formation','$concept_military_formations$')] involved are moving to their closest [Concept('concept_hq', '$concept_hqs$')]."
 notification_naval_invasion_failed_tooltip:0 "#header $notification_naval_invasion_failed_name$#!\n$notification_naval_invasion_failed_desc$"

 notification_naval_invasion_succeeded_name:0 "Successful Naval Invasion"
 notification_naval_invasion_succeeded_desc:0 "Naval Invasion of [SCOPE.sState( 'state' ).GetName] was successful and we have seized a beachhead."
 notification_naval_invasion_succeeded_tooltip:0 "#header $notification_naval_invasion_succeeded_name$#!\n$notification_naval_invasion_succeeded_desc$"

 notification_naval_invasion_against_us_name:0 "[SCOPE.sCountry( 'actor' ).GetAdjective] Naval Invasion"
 notification_naval_invasion_against_us_desc:0 "[SCOPE.sCountry( 'actor' ).GetName] has launched a Naval Invasion against [SCOPE.sState( 'state' ).GetName]."
 notification_naval_invasion_against_us_tooltip:0 "#header $notification_naval_invasion_against_us_name$#!\n$notification_naval_invasion_against_us_desc$"

 notification_our_convoy_raiders_intercepted_name:0 "Our Convoy Raiders Intercepted"
 notification_our_convoy_raiders_intercepted_desc:0 "[SCOPE.sCharacter( 'defender_commander' ).GetFullName] was intercepted by hostile [concept_admiral] [SCOPE.sCharacter( 'attacker_commander' ).GetFullName] while [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] in [SCOPE.sStrategicRegion( 'region' ).GetName]."
 notification_our_convoy_raiders_intercepted_tooltip:0 "#header $notification_our_convoy_raiders_intercepted_name$#!\n$notification_our_convoy_raiders_intercepted_desc$"

 notification_enemy_convoy_raiders_intercepted_name:0 "Enemy Convoy Raiders Intercepted"
 notification_enemy_convoy_raiders_intercepted_desc:0 "[SCOPE.sCharacter( 'attacker_commander' ).GetFullName] intercepted hostile [concept_admiral] [SCOPE.sCharacter( 'defender_commander' ).GetFullName] that is [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] in [SCOPE.sStrategicRegion( 'region' ).GetName]."
 notification_enemy_convoy_raiders_intercepted_tooltip:0 "#header $notification_enemy_convoy_raiders_intercepted_name$#!\n$notification_enemy_convoy_raiders_intercepted_desc$"

 notification_journal_entry_activated_name:0 "New [concept_journal_entry]: [SCOPE.GetRootScope.GetJournalEntry.GetName]"
 notification_journal_entry_activated_desc:0 "[SCOPE.GetRootScope.GetJournalEntry.GetName] added to the Journal"
 notification_journal_entry_activated_tooltip:1 "#header $notification_journal_entry_activated_name$#!\n$notification_journal_entry_activated_desc$"

 notification_journal_entry_deactivated_name:0 "[SCOPE.GetRootScope.GetJournalEntry.GetName] Closed"
 notification_journal_entry_deactivated_desc:0 "[SCOPE.GetRootScope.GetJournalEntry.GetName] removed from the Journal"
 notification_journal_entry_deactivated_tooltip:1 "#header $notification_journal_entry_deactivated_name$#!\n$notification_journal_entry_deactivated_desc$"

 notification_journal_entry_completed_name:0 "[SCOPE.GetRootScope.GetJournalEntry.GetName] Completed"
 notification_journal_entry_completed_desc:0 "[SCOPE.GetRootScope.GetJournalEntry.GetName] was successfully completed"
 notification_journal_entry_completed_tooltip:0 "#header $notification_journal_entry_completed_name$#!\n$notification_journal_entry_completed_desc$"

 notification_enactment_failed_name: "Law Enactment Failed"
 notification_enactment_failed_desc: "Your legislature has failed to enact [SCOPE.GetRootScope.GetCountry.GetLawBeingEnacted.GetName]."
 notification_enactment_failed_tooltip: "#header $notification_enactment_failed_name$#!\n$notification_enactment_failed_desc$"

 notification_harvest_condition_started_in_country_name: "[concept_harvest_condition] Started in [SCOPE.GetRootScope.GetCountry.GetName]"
 notification_harvest_condition_started_in_country_desc: "[SCOPE.sHCA('area').GetRemainingDurationLabel] [SCOPE.sHCA('area').GetType.GetName] started in [SCOPE.sS('state').GetCountry.GetFlagTextIcon] [SCOPE.sS('state').GetName] affecting [SCOPE.GetValue('num_states')|0v] of your [Concept('concept_state', '$concept_states$')] with an [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')] of [SCOPE.GetValue('intensity')|1v]."
 notification_harvest_condition_started_in_country_tooltip: "#header $notification_harvest_condition_started_in_country_name$#!\n$notification_harvest_condition_started_in_country_desc$"

 notification_harvest_condition_started_in_country_important_name: "$notification_harvest_condition_started_in_country_name$"
 notification_harvest_condition_started_in_country_important_desc: "$notification_harvest_condition_started_in_country_desc$"
 notification_harvest_condition_started_in_country_important_tooltip: "$notification_harvest_condition_started_in_country_tooltip$"

 notification_harvest_condition_started_in_market_name: "[concept_harvest_condition] Started in [SCOPE.GetRootScope.GetMarket.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetMarket.GetName]"
 notification_harvest_condition_started_in_market_desc: "[SCOPE.sHCA('area').GetRemainingDurationLabel] [SCOPE.sHCA('area').GetType.GetName] started in [SCOPE.sS('state').GetCountry.GetFlagTextIcon] [SCOPE.sS('state').GetName] affecting [SCOPE.GetValue('num_states')|0v] [Concept('concept_state', '$concept_states$')] in the market with an [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')] of [SCOPE.GetValue('intensity')|1v]."
 notification_harvest_condition_started_in_market_tooltip: "#header $notification_harvest_condition_started_in_market_name$#!\n$notification_harvest_condition_started_in_market_desc$"

 notification_new_ruler_name: "[SCOPE.GetRootScope.GetCharacter.GetFirstName|v] is our new [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle]"
 notification_new_ruler_desc: "The time of [SCOPE.sCharacter( 'previous' ).GetFullName] as a [concept_ruler] has ended. [SCOPE.GetRootScope.GetCharacter.GetFullName] is the new [Concept('concept_ruler', SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle)] of [SCOPE.GetRootScope.GetCharacter.GetCountry.GetName]"
 notification_new_ruler_tooltip: "#header $notification_ruler_changed_name$#!\n$notification_ruler_changed_desc$"

 notification_native_uprising_notification_name:0 "[SCOPE.sCountry('actor').GetName] Uprising"
 notification_native_uprising_notification_desc:0 "[SCOPE.sCountry('actor').GetName] have launched a [concept_native_uprising] against us!"
 notification_native_uprising_notification_tooltip:0 "#header $notification_native_uprising_notification_name$#!\n$notification_native_uprising_notification_desc$"

 notification_political_movement_formed_name:0 "[SCOPE.GetRootScope.GetPoliticalMovement.GetName] [concept_political_movement]"
 notification_political_movement_formed_desc:1 "A new [SCOPE.GetRootScope.GetPoliticalMovement.GetName] [concept_political_movement] has formed. Their [Concept('concept_political_movement_support', '$concept_political_movement_support_short$')] is [SCOPE.GetRootScope.GetPoliticalMovement.GetSupport|v%0] and their [Concept('concept_activism', '$concept_activism_short$')] is [SCOPE.GetRootScope.GetPoliticalMovement.GetRadicalism|v%0]."
 notification_political_movement_formed_tooltip:0 "#header $notification_political_movement_formed_name$#!\n$notification_political_movement_formed_desc$"

 notification_political_movement_disbanded_name:0 "[concept_political_movement] Disbanded"
 notification_political_movement_disbanded_desc:0 "The [SCOPE.GetRootScope.GetPoliticalMovement.GetName] [concept_political_movement] has disbanded"
 notification_political_movement_disbanded_tooltip:0 "#header $notification_political_movement_disbanded_name$#!\n$notification_political_movement_disbanded_desc$"

 notification_obligation_owed_to_us_expired_name:0 "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting] [concept_obligation] Expired"
 notification_obligation_owed_to_us_expired_desc:0 "The [concept_obligation] owed to us by [SCOPE.sCountry('target_country').GetName] has expired"
 notification_obligation_owed_to_us_expired_tooltip:0 "#header $notification_obligation_owed_to_us_expired_name$#!\n$notification_obligation_owed_to_us_expired_desc$"

 notification_obligation_owed_by_us_expired_name:0 "Our [concept_obligation] Expired"
 notification_obligation_owed_by_us_expired_desc:0 "The [concept_obligation] we owed to [SCOPE.sCountry('target_country').GetName] has expired"
 notification_obligation_owed_by_us_expired_tooltip:0 "#header $notification_obligation_owed_by_us_expired_name$#!\n$notification_obligation_owed_by_us_expired_desc$"

 notification_country_owes_obligation_tooltip:0 "#header $notification_country_owes_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_desc$"
 notification_country_owes_obligation_name:0 "[concept_obligation] to [SCOPE.sCountry('actor').GetName]"
 notification_country_owes_obligation_desc:0 "We now owe an [concept_obligation] to [SCOPE.sCountry('actor').GetName]"

 notification_country_owed_obligation_tooltip:0 "#header $notification_country_owed_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_desc$"
 notification_country_owed_obligation_name:0 "[concept_obligation] from [SCOPE.sCountry('recipient').GetName]"
 notification_country_owed_obligation_desc:0 "[SCOPE.sCountry('recipient').GetName] now owes us an [concept_obligation]"

 notification_country_owes_obligation_removed_tooltip:0 "#header $notification_country_owes_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_removed_desc$"
 notification_country_owes_obligation_removed_name:0 "[concept_obligation] to [SCOPE.sCountry('actor').GetName] Removed"
 notification_country_owes_obligation_removed_desc:0 "We no longer owe an [concept_obligation] to [SCOPE.sCountry('actor').GetName]"

 notification_country_owed_obligation_removed_tooltip:0 "#header $notification_country_owed_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_removed_desc$"
 notification_country_owed_obligation_removed_name:0 "[concept_obligation] from [SCOPE.sCountry('recipient').GetName] Removed"
 notification_country_owed_obligation_removed_desc:0 "[SCOPE.sCountry('recipient').GetName] no longer owes us an [concept_obligation]"

 notification_unification_candidate_added_name:0 "[SCOPE.sCountry('actor').GetName] becomes a [concept_unification_candidate]"
 notification_unification_candidate_added_desc:1 "[SCOPE.sCountry('actor').GetName] is now a [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName] and may receive support from lesser [SCOPE.sCountryFormation('country_formation').GetAdjective] [Concept('concept_country', '$concept_countries$')]"
 notification_unification_candidate_added_tooltip:0 "#header $notification_unification_candidate_added_name$#!\n$notification_unification_candidate_added_desc$"

 notification_unification_candidate_removed_name:0 "[SCOPE.sCountry('actor').GetName] no longer a [concept_unification_candidate]"
 notification_unification_candidate_removed_desc:0 "[SCOPE.sCountry('actor').GetName] is no longer [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_unification_candidate_removed_tooltip:0 "#header $notification_unification_candidate_removed_name$#!\n$notification_unification_candidate_removed_desc$"

 notification_start_supporting_unification_name:0 "[SCOPE.sCountry('actor').GetName] supports [SCOPE.sCountry('recipient').GetName]"
 notification_start_supporting_unification_desc:0 "[SCOPE.sCountry('actor').GetName] is now supporting [SCOPE.sCountry('recipient').GetName] as [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_start_supporting_unification_tooltip:0 "#header $notification_start_supporting_unification_name$#!\n$notification_start_supporting_unification_desc$"

 notification_stop_supporting_unification_name:0 "[SCOPE.sCountry('actor').GetName] ends support for [SCOPE.sCountry('recipient').GetName]"
 notification_stop_supporting_unification_desc:0 "[SCOPE.sCountry('actor').GetName] is no longer supporting [SCOPE.sCountry('recipient').GetName] as [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_stop_supporting_unification_tooltip:0 "#header $notification_stop_supporting_unification_name$#!\n$notification_stop_supporting_unification_desc$"

 notification_shipping_lane_trade_route_invalidated_name:0 "Trade Route Removed"
 notification_shipping_lane_trade_route_invalidated_desc:0 "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] [concept_trade_route] to [SCOPE.GetRootScope.GetTradeRoute.GetRemoteMarket.GetName] removed due to no reachable Ports in [SCOPE.GetRootScope.GetTradeRoute.GetRemoteMarket.GetOwner.GetName]"
 notification_shipping_lane_trade_route_invalidated_tooltip:0 "#header $notification_shipping_lane_trade_route_invalidated_name$#!\n$notification_shipping_lane_trade_route_invalidated_desc$"

 notification_shipping_lane_formation_destination_invalidated_name: "New Formation Destination"
 notification_shipping_lane_formation_destination_invalidated_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] is now restationing in [AccessScopeReference(SCOPE.GetRootScope).AccessMilitaryFormation.GetHomeHQ.GetName] due to previous destination being unreachable"
 notification_shipping_lane_formation_destination_invalidated_tooltip: "#header $notification_shipping_lane_formation_destination_invalidated_name$#!\n$notification_shipping_lane_formation_destination_invalidated_desc$"

 notification_enemy_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! Enemy [concept_convoys] sunk"
 notification_enemy_convoys_raided_desc: "Our convoy raiders have destroyed #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! #tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingTargetCountriesByAttackerDesc(SCOPE.GetRootScope.GetCountry.Self))] enemy#!#! [concept_convoys] in [SCOPE.sStrategicRegion('region').GetName].\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageEnemyReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_enemy_convoys_raided_tooltip: "#header $notification_enemy_convoys_raided_name$#!\n$notification_enemy_convoys_raided_desc$"

 notification_our_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! of our [concept_convoys] sunk"
 notification_our_convoys_raided_desc: "#tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingCountriesToTargetDesc(SCOPE.GetRootScope.GetCountry.Self))] Enemy#!#! convoy raiders have destroyed #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! of our [concept_convoys] in [SCOPE.sStrategicRegion('region').GetName].\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_our_convoys_raided_tooltip: "#header $notification_our_convoys_raided_name$#!\n$notification_our_convoys_raided_desc$"

 notification_formation_travel_to_front_cancelled_name: "[concept_military_formation] cannot reach [concept_front]"
 notification_formation_travel_to_front_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could not reach [SCOPE.sFront('front').GetName]."
 notification_formation_travel_to_front_cancelled_tooltip: "#header $notification_formation_travel_to_front_cancelled_name$#!\n$notification_formation_travel_to_front_cancelled_desc$"

 notification_formation_travel_station_in_hq_cancelled_name: "[concept_military_formation] cannot reach [concept_hq]"
 notification_formation_travel_station_in_hq_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could not reach [SCOPE.sHQ('hq').GetName]."
 notification_formation_travel_station_in_hq_cancelled_tooltip: "#header $notification_formation_travel_station_in_hq_cancelled_name$#!\n$notification_formation_travel_station_in_hq_cancelled_desc$"

 notification_formation_travel_deploy_to_sea_node_cancelled_name: "[concept_military_formation] cannot reach [concept_sea_node]"
 notification_formation_travel_deploy_to_sea_node_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could not reach [SCOPE.sProvince('province').GetName]."
 notification_formation_travel_deploy_to_sea_node_cancelled_tooltip: "#header $notification_formation_travel_deploy_to_sea_node_cancelled_name$#!\n$notification_formation_travel_deploy_to_sea_node_cancelled_desc$"

 notification_formation_travel_track_formation_cancelled_name: "[concept_military_formation] can no longer track other [concept_military_formation]"
 notification_formation_travel_track_formation_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] could no longer track reach [SCOPE.sMilitaryFormation('formation').GetName]."
 notification_formation_travel_track_formation_cancelled_tooltip: "#header $notification_formation_travel_track_formation_cancelled_name$#!\n$notification_formation_travel_track_formation_cancelled_desc$"

 notification_political_lobby_created_from_catalyst_name: "[concept_political_lobby] formed"
 notification_political_lobby_created_from_catalyst_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] has formed as the result of [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]\n\nThe new [Concept('concept_political_lobby','$concept_political_lobby_short$')] is comprised of the [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_from_catalyst_tooltip: "#header $notification_political_lobby_created_from_catalyst_name$#!\n$notification_political_lobby_created_from_catalyst_desc$"

 notification_political_lobby_created_name: "[concept_political_lobby] formed"
 notification_political_lobby_created_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] [concept_political_lobby] has formed\n\nThe new [Concept('concept_political_lobby','$concept_political_lobby_short$')] is comprised of the [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_tooltip: "#header $notification_political_lobby_created_name$#!\n$notification_political_lobby_created_desc$"

 notification_political_lobby_disbanded_name: "[concept_political_lobby] disbanded"
 notification_political_lobby_disbanded_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] has disbanded"
 notification_political_lobby_disbanded_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"

 notification_political_lobby_disbanded_with_reason_name: "[concept_political_lobby] disbanded"
 notification_political_lobby_disbanded_with_reason_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] has disbanded because the following conditions are no longer true:\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc]"
 notification_political_lobby_disbanded_with_reason_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"

 notification_foreign_political_lobby_created_from_catalyst_name: "Foreign [concept_political_lobby] formed"
 notification_foreign_political_lobby_created_from_catalyst_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] has formed in [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] as the result of [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]\n\nThe new [Concept('concept_political_lobby','$concept_political_lobby_short$')] is comprised of the [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_from_catalyst_tooltip: "#header $notification_foreign_political_lobby_created_from_catalyst_name$#!\n$notification_foreign_political_lobby_created_from_catalyst_desc$"

 notification_foreign_political_lobby_created_name: "Foreign [concept_political_lobby] formed"
 notification_foreign_political_lobby_created_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] has formed in [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName]\n\nThe new [Concept('concept_political_lobby','$concept_political_lobby_short$')] is comprised of the [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_tooltip: "#header $notification_foreign_political_lobby_created_name$#!\n$notification_foreign_political_lobby_created_desc$"

 notification_foreign_political_lobby_disbanded_name: "Foreign [concept_political_lobby] disbanded"
 notification_foreign_political_lobby_disbanded_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] in [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] has disbanded"
 notification_foreign_political_lobby_disbanded_tooltip: "#header $notification_foreign_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_desc$"

 notification_foreign_political_lobby_disbanded_with_reason_name: "Foreign [concept_political_lobby] disbanded"
 notification_foreign_political_lobby_disbanded_with_reason_desc: "The [SCOPE.sPoliticalLobby('political_lobby').GetName|v] in [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] has disbanded because the following conditions are no longer true:\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc]"
 notification_foreign_political_lobby_disbanded_with_reason_tooltip: "#header $notification_foreign_political_lobby_disbanded_with_reason_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_with_reason_desc$"

 notification_interest_group_joins_lobby_name: "[concept_interest_group] joins [concept_political_lobby]"
 notification_interest_group_joins_lobby_desc: "The [SCOPE.gsInterestGroup('interest_group').GetName|v] have joined the [SCOPE.sPoliticalLobby('political_lobby').GetName|v]"
 notification_interest_group_joins_lobby_tooltip: "#header $notification_interest_group_joins_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_joins_lobby_desc$"

 notification_interest_group_leaves_lobby_name: "[concept_interest_group] leaves [concept_political_lobby]"
 notification_interest_group_leaves_lobby_desc: "The [SCOPE.gsInterestGroup('interest_group').GetName|v] have left the [SCOPE.sPoliticalLobby('political_lobby').GetName|v]"
 notification_interest_group_leaves_lobby_tooltip: "#header $notification_interest_group_leaves_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_leaves_lobby_desc$"

 notification_country_attitude_improved_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] $concept_attitude$ Improved"
 notification_country_attitude_improved_desc: "The [concept_attitude] of [SCOPE.GetRootScope.GetCountry.GetName] towards us has #p improved#! and is now [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (Previously [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nThis happened as a result of [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_improved_tooltip: "#header $notification_country_attitude_improved_name$#!\n$notification_country_attitude_improved_desc$"

 country_attitude_changed_group: "$concept_country$ $concept_attitude$ Changed"
 notification_country_attitude_changed_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] $concept_attitude$ Changed"
 notification_country_attitude_changed_desc: "The [concept_attitude] of [SCOPE.GetRootScope.GetCountry.GetName] towards us has changed and is now [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (Previously  [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nThis happened as a result of [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_changed_tooltip: "#header $notification_country_attitude_changed_name$#!\n$notification_country_attitude_changed_desc$"

 notification_country_attitude_worsened_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] $concept_attitude$ Worsened"
 notification_country_attitude_worsened_desc: "The [concept_attitude] of [SCOPE.GetRootScope.GetCountry.GetName] towards us has #n worsened#! and is now [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (Previously [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nThis happened as a result of [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_worsened_tooltip: "#header $notification_country_attitude_worsened_name$#!\n$notification_country_attitude_worsened_desc$"

 CONVOY_DAMAGE_REDUCTION_NONE: "There were no escorting navies that could reduce the loss of [concept_convoys]."
 CONVOY_DAMAGE_REDUCTION_DESC: "Escorting fleets were able to avoid the loss of $AMOUNT|v$ additional [concept_convoys]. In total, enemy convoy raiding ships could have destroyed $MAX|v$ of our convoys in the sea node."

 CONVOY_RAID_ATTACKER_COUNTRY_LIST: "Raiding countries:\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_COUNTRY_LIST: "Raided countries:\n$BREAKDOWN$"

 CONVOY_RAID_VALUE_FROM_UNITS: "$TAB$$TAB$$VALUE|v$ from combat units"
 CONVOY_RAID_VALUE_FROM_CHARACTER_TRAIT: "$TAB$$TAB$$VALUE|%0=v$ from the character trait [CharacterTrait.GetName]"
 CONVOY_RAID_VALUE_FROM_ADMIRAL_ORDER: "$TAB$$TAB$$VALUE|%0=v$ from the commander order [CommanderOrderType.GetName]$SEA_PRESENCE_DESC$"
 CONVOY_RAID_SEA_PRESENCE_DESC: " considering the fleet's current sea presence of $VALUE|%0v$"
 CONVOY_RAID_ADMIRAL_VALUE: "$TAB$$VALUE|v$ from [Character.GetFullName] due to:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ENTRY: "$TAB$[Country.GetName]"
 CONVOY_RAID_ATTACK_DESC: "#bold Convoy Attack Power#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ATTACK_ENTRY: "[Country.GetName] has the current Convoy Attack Power of $VALUE|0v$ due to:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_ATTACK_ENTRY: "[Country.GetName] has the current Convoy Attack Power of $VALUE|0v$ in the current war which is $PERC|%0v$ of total $TOTAL|v$:\n$BREAKDOWN$"
 CONVOY_RAID_DEFENSE_DESC: "#bold Convoy Defense#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_DEFENSE_ENTRY: "[Country.GetName] has the current Convoy Defense $VALUE|0v$ due to:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_DEFENSE_ENTRY: "[Country.GetName] has the current Convoy Defense $VALUE|0v$ in the current war which is $PERC|%0v$ of total $TOTAL|v$:\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_ENTRY: "[Country.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! Convoy attack power targetting $NUM|v$ Convoys"
 CONVOY_RAID_DEFENSE_ENTRY: "[Country.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! Convoy defense protecting $PERC|%0v$ of their Convoys"
 CONVOY_RAID_DAMAGE_ENTRY: "[Country.GetName]: $MIN|v$ - $MAX|v$ convoys destroyed"
 CONVOY_RAIDS_DESC: "#bold Convoy Raiding#!\nRaid targets:\n$TARGETS_BREAKDOWN$[ConcatIfNeitherEmpty('\n\nRaid defense:\n','$DEFENSE_BREAKDOWN$')]\n\nAs it stands, the next Convoy Raid would result in the following losses:\n$DAMAGE_BREAKDOWN$\n\nThe next Convoy Raid in this sea node will happen in #v $DAYS$#! days"

 HOUR_NIGHT: "Night"
 HOUR_MORNING: "Morning"
 HOUR_AFTERNOON: "Afternoon"
 HOUR_EVENING: "Evening"

 DAY_MONDAY:0 "Monday"
 DAY_TUESDAY:0 "Tuesday"
 DAY_WEDNESDAY:0 "Wednesday"
 DAY_THURSDAY:0 "Thursday"
 DAY_FRIDAY:0 "Friday"
 DAY_SATURDAY:0 "Saturday"
 DAY_SUNDAY:0 "Sunday"

 TOOLTIP_TYPE_CONSTITUTION_LAW:0 "[concept_law]"
 TOOLTIP_TYPE_LAW_GROUP:0 "Law Group"
 TOOLTIP_TYPE_LAW_TYPE:0 "Law Type"
 TOOLTIP_TYPE_MARKET:0 "[concept_market]"
 TOOLTIP_TYPE_DECREE_TYPE:0 "[concept_decree]"
 TOOLTIP_TYPE_SUBJECT_TYPE: "[concept_subject_type]"
 TOOLTIP_TYPE_INSTITUTION:0 "[concept_institution]"
 TOOLTIP_TYPE_INSTITUTION_TYPE:0 "Institution Type"
 TOOLTIP_TYPE_INTEREST_GROUP:0 "[concept_interest_group]"
 TOOLTIP_TYPE_PARTY:0 "[concept_party]"
 TOOLTIP_TYPE_IDEOLOGY:0 "[concept_ideology]"
 TOOLTIP_TYPE_GAME_CONCEPT_TYPE:0 "Game Concept"
 TOOLTIP_TYPE_GOODS:1 "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD',SelectLocalization(Goods.IsTradeable, 'GOODS', 'NON_TRADEABLE_GOODS'))]"
 TOOLTIP_TYPE_PROFESSION:0 "[concept_profession]"
 TOOLTIP_TYPE_POP:0 "[concept_pop]"
 TOOLTIP_TYPE_COUNTRY:0 "[concept_country]"
 TOOLTIP_TYPE_CULTURE:0 "[concept_culture]"
 TOOLTIP_TYPE_CULTURAL_COMMUNITY: "[concept_cultural_community]"
 TOOLTIP_TYPE_RELIGION:0 "[concept_religion]"
 TOOLTIP_TYPE_CULTURAL_TRAIT:0 "[concept_cultural_trait]"
 TOOLTIP_TYPE_STATE: "[SelectLocalization(State.IsSplitState, 'TOOLTIP_TYPE_STATE_SPLIT', 'TOOLTIP_TYPE_STATE_REGULAR' )]"
 TOOLTIP_TYPE_STATE_REGULAR: "[concept_state]"
 TOOLTIP_TYPE_STATE_SPLIT: "[concept_split_state] in [State.GetStateRegion.GetName]"
 TOOLTIP_TYPE_STATE_REGION:0 "[concept_state_region]"
 TOOLTIP_TYPE_BUILDING:0 "[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]"
 TOOLTIP_TYPE_BUILDING_TYPE:0 "[BuildingType.GetBuildingKindDesc(GetPlayer.Self)]"
 TOOLTIP_TYPE_CHARACTER:0 "[concept_character]"
 TOOLTIP_TYPE_CHARACTER_TRAIT:0 "Trait"
 TOOLTIP_TYPE_COMMANDER_RANK:0 "Commander Rank"
 TOOLTIP_TYPE_PRODUCTION_METHOD:0 "[concept_production_method]"
 TOOLTIP_TYPE_TECHNOLOGY:0 "Technology"
 TOOLTIP_TYPE_INTEREST_GROUP_TRAIT:0 "IG Trait"
 TOOLTIP_TYPE_STRATEGIC_REGION:0 "[concept_strategic_region]"
 TOOLTIP_TYPE_WAR:0 "[concept_war]"
 TOOLTIP_TYPE_CANAL_TYPE:0 "Canal Type"
 TOOLTIP_TYPE_OBJECTIVE_TYPE:0 "Objective Type"
 TOOLTIP_TYPE_OBJECTIVE:0 "Objective"
 TOOLTIP_TYPE_LEGITIMACY_LEVEL: "[concept_legitimacy] Level"
 TOOLTIP_TYPE_ACCEPTANCE_STATUS: "[concept_acceptance_status]"
 TOOLTIP_TYPE_FRONT:0 "[concept_front]"
 TOOLTIP_TYPE_POLITICAL_MOVEMENT: "[concept_political_movement]"

 NON_TRADEABLE_GOODS:0 "[Concept('concept_good','$NON_TRADEABLE_GOODS_FULL$')]"
 GOODS:0 "[concept_good]"
 NON_TRADEABLE_GOODS_FULL:0 "Non-Tradeable Goods"

 GOOD_CAN_BE_PRODUCED_BY:0 "#title Can be produced by#!"
 GOOD_CAN_BE_USED_BY:0 "#title Can be used by#!"

 DECISIONS:0 "Decisions"
 JOURNAL:0 "Journal"

 TOOLTIP_SLAVE_STATE:0 "#header Slave State#!\nBuildings in [State.GetName] either utilize [GetPopType('slaves').GetName] or have the potential to utilize them."
 SLAVE_STATE:0 "Slave State"
 SLAVE_IMPORT:0 "Importing Slaves"
 SLAVE_EXPORT:0 "Exporting Slaves"
 SLAVE_IMPORT_MARKER_DESC:0 "This state is currently importing slaves from [STATE.GetName]."
 SLAVE_EXPORT_MARKER_DESC:0 "This state is currently exporting slaves to the following states: "
 SLAVE_EXPORT_MARKER_DESC_ITEM:0 "[STATE.GetName]"
 TOOLTIP_STATE_SLAVE_IMPORT_STATES:0 "[STATE.GetName] imported a total of #variable $AMOUNT|K+$#! slaves from $STATES_LIST$ last week"
 TOOLTIP_STATE_SLAVE_EXPORT_STATES:0 "[STATE.GetName] exported a total of #variable $AMOUNT|K+$#! slaves to $STATES_LIST$ last week"

 NICOLAS_TEST:0 "TESTING"
 NO_UNPRESSED_WAR_GOALS:0 "No Unpressed [Concept('concept_war_goal', '$concept_war_goals$')]"
 NO_PRESSED_WAR_GOALS:0 "No Pressed [Concept('concept_war_goal', '$concept_war_goals$')]"
 GAME_CHECKSUM_CHANGED_FROM_SAVE_FILE:0 "@warning_icon!#X Invalid Checksum for Achievements#!\nThis save was valid for Achievements on a different checksum, loading it will disable Achievements in the save."

 MODIFIER_CONSCRIPTION_RATE_ADD_ADDITIONAL_INFO:2 "@battalions!$NUM_BATTALIONS|v$ [Concept('concept_battalion', '$concept_battalions$')] can be [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')]"

 DEFAULT_HQ_NAME:0 "[HQ.GetCountry.GetFlagTextIcon] [HQ.GetStrategicRegion.GetNameNoFormatting] [Concept('concept_hq', 'HQ')]"
 DEFAULT_HQ_NAME_NO_FLAG:0 "[HQ.GetStrategicRegion.GetNameNoFormatting] [Concept('concept_hq', 'HQ')]"
 DEFAULT_HQ_NAME_NO_FLAG_NO_CONCEPT:0 "[HQ.GetStrategicRegion.GetNameNoFormatting]"


 NO_GENERALS:1 "No [Concept('concept_general', '$concept_generals$')]"
 NO_ADMIRALS:1 "No [Concept('concept_admiral', '$concept_admirals$')]"

 RESET_TECH_TREE_VIEW:0 "Reset"

 BUILDING_KIND_GOVERNMENT:0 "[concept_government_building]"
 BUILDING_KIND_MILITARY:0 "[concept_military_building]"
 BUILDING_KIND_SUBSISTENCE:0 "[concept_subsistence_building]"
 BUILDING_KIND_URBAN_CENTER:1 "[GetBuildingType('building_urban_center').GetName]"
 BUILDING_KIND_USES_GOVERNMENT_SLAVES:0 "Uses [concept_budget_government_slaves][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_USES_MILITARY_SLAVES:0 "Uses [concept_budget_military_slaves][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_USES_SLAVES:0 "Uses [POP_TYPE.GetName] as [TARGET_POP_TYPE.GetName][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_NON_GOVERNMENT:0 "[concept_building]"
 IN_COUNTRY:0 " in [Country.GetName]"

 BUILDING_STATUS_ESTABLISHED:0 "This building was established on [BUILDING.GetEstablishmentDate]"
 BUILDING_STATUS_UNDER_CONSTRUCTION:0 "This building is currently under construction"
 BUILDING_STATUS_EXPANDING:0 "This building is being expanded"
 BUILDING_STATUS_QUEUED_UNDER_CONSTRUCTION:0 "This building is queued for construction"
 BUILDING_STATUS_QUEUED_EXPANDING:0 "This building is queued for expansion"
 BUILDING_STATUS_NOT_ACTIVE:0 "This building is currently inactive"

 BUILDING_IS_DRAFTING_IMPL:0 "[Concept('concept_conscript_battalion', '$concept_conscript_battalion_drafting$')] ([Building.GetEmploymentPercentage|%0v])"
 CONSCRIPTION_CENTER_IS_DRAFTING:0 "This [concept_conscription_center] is $BUILDING_IS_DRAFTING_IMPL$."

 MORE_ITEMS:0 " ... and $COUNT$ more items"
 MORE_ITEMS_TOOLTIPPABLE:0 "#tooltippable #tooltip:$TAG$ ... and $COUNT$ more items#!#!"

 ### DIPLOMATIC PLAY / WAR POPUP
 DEMANDS:0 "Demands"
 WARGOALS:1 "[Concept('concept_war_goal','$concept_war_goals$')]"
 OBLIGATIONS:1 "[Concept('concept_obligation','$concept_obligations$')]"
 NO_WARGOAL:0 "No [concept_war_goal]"
 CAN_REVERSE_SWAY_INITIATOR_TOOLTIP: "@approves! [GetPlayer.GetName] has at least one [Concept('concept_offer_support','$concept_offer_of_support$')] that [DiplomaticPlay.GetInitiator.GetName] would accept"
 CANNOT_REVERSE_SWAY_INITIATOR_TOOLTIP: "@disapproves! [GetPlayer.GetName] has no [Concept('concept_offer_support','$concept_offer_of_support$')] that [DiplomaticPlay.GetInitiator.GetName] would accept"
 CAN_REVERSE_SWAY_TARGET_TOOLTIP: "@approves! [GetPlayer.GetName] has at least one [Concept('concept_offer_support','$concept_offer_of_support$')] that [DiplomaticPlay.GetTarget.GetName] would accept"
 CANNOT_REVERSE_SWAY_TARGET_TOOLTIP: "@disapproves! [GetPlayer.GetName] has no [Concept('concept_offer_support','$concept_offer_of_support$')] that [DiplomaticPlay.GetTarget.GetName] would accept"
 SWAY_COUNTRY_TOOLTIP: "[DiplomaticPlay.GetCanSwayCountryDesc(GetPlayer.Self, Country.Self)]\n\n@battalions! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [Country.GetBattalions|0]#!#!#! [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetFullyMobilizedBattalionsPercentageRaw|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])\n@flotillas! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [Country.GetWarships]#!#!#! [Concept('concept_flotilla', '$concept_flotillas$')]"
 CAN_SWAY_COUNTRY_TOOLTIP:1 "@approves! [GetPlayer.GetName] has at least one [concept_sway] that [Country.GetName] would accept"
 CANNOT_SWAY_COUNTRY_TOOLTIP:1 "@disapproves! [GetPlayer.GetName] has no [concept_sway] that [Country.GetName] would accept"
 SWAY_PANEL_CAN_SWAY_TOOLTIP: "@approves! [GetPlayer.GetName] has at least one [concept_sway] that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetName] has no [concept_sway] that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP: "@approves! [GetPlayer.GetName] has at least one [Concept('concept_offer_support','$concept_offer_of_support$')] for #b [SwayOfferType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetName] has no [Concept('concept_offer_support','$concept_offer_of_support$')] for #b [SwayOfferType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetName] has at least one [concept_sway] for #b [WarGoalType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetName] has no [concept_sway] for #b [WarGoalType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetName] has at least one [Concept('concept_offer_support','$concept_offer_of_support$')] for #b [WarGoalType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetName] has no [Concept('concept_offer_support','$concept_offer_of_support$')] for #b [WarGoalType.GetName]#! that [SwayCountryPanel.GetCountry.GetName] would accept"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CAN_SWAY_TOOLTIP')]"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CANNOT_SWAY_TOOLTIP')]"
 HAS_NO_COUNTRIES_YOU_CAN_SWAY_TOOLTIP:0 "You can sway no countries"
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP:1 "You can [concept_sway] [DiplomaticPlay.GetNumberOfPossibleSwayCountriesFormatted( GetPlayer.Self )] countries."
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP_NUMBER_BREAKDOWN:0 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 DIPLO_PLAY_NO_SUPPORTS:0 "No supporting countries"
 DIPLO_PLAY_OVERVIEW:0 "Overview"
 DIPLO_PLAY_INVOLVED_COUNTRIES:3 "[SelectLocalization(DiplomaticPlay.IsTargetOrInitiator(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_SWAY_COUNTRIES', 'DIPLO_PLAY_ALLEGIANCES')]"
 DIPLO_PLAY_SWAY_COUNTRIES:0 "$concept_sway$ Countries"
 DIPLO_PLAY_ALLEGIANCES:0 "Allegiances"
 DIPLO_PLAY_POTENTIAL_FRONTS:0 "Potential Fronts"
 POTENTIAL_FRONTS:0 "Potential [Concept('concept_front', '$concept_fronts$')]"
 NO_POTENTIAL_FRONTS:0 "Currently no potential [Concept('concept_front', '$concept_fronts$')]"
 DIPLO_PLAY_ON_THE_FENCE:0 "On the Fence"
 DIPLO_PLAY_ON_THE_FENCE_TOOLTIP:0 "#header On the Fence#!"
 DIPLO_PLAY_SUPPORTS:1 "Supporting"
 DIPLO_PLAY_SUPPORTS_TARGET_TOOLTIP:0 "#header Supporting [DiplomaticPlay.GetTarget.GetName]#!"
 DIPLO_PLAY_SUPPORTS_INITIATOR_TOOLTIP:0 "#header Supporting [DiplomaticPlay.GetInitiator.GetName]#!"
 DIPLO_PLAY_LEANING_TARGET_TOOLTIP:0 "#header Leaning towards [DiplomaticPlay.GetTarget.GetName]#!"
 DIPLO_PLAY_LEANING_INITIATOR_TOOLTIP:0 "#header Leaning towards [DiplomaticPlay.GetInitiator.GetName]#!"
 DIPLO_PLAY_LEANING_TARGET_BUTTON_TOOLTIP:0 "#header Lean towards [DiplomaticPlay.GetTarget.GetName] in this [concept_diplomatic_play]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsTargetLeaning( GetPlayer.Self ), 'IS_ALREADY_LEANING_TARGET'), '\n\n')]This signals to [DiplomaticPlay.GetTarget.GetName] that you are open to be [Concept('concept_sway','$concept_swayed$')] to their side."
 DIPLO_PLAY_LEANING_INITIATOR_BUTTON_TOOLTIP:0 "#header Lean towards [DiplomaticPlay.GetInitiator.GetName] in this [concept_diplomatic_play]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsInitiatorLeaning( GetPlayer.Self ), 'IS_ALREADY_LEANING_INITIATOR'), '\n\n')]This signals to [DiplomaticPlay.GetInitiator.GetName] that you are open to be [Concept('concept_sway','$concept_swayed$')] to their side."
 IS_ALREADY_LEANING_TARGET: "@red_cross! You are already leaning towards [DiplomaticPlay.GetTarget.GetName]"
 IS_ALREADY_LEANING_INITIATOR: "@red_cross! You are already leaning towards [DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_LEANING_TARGET:0 "Leaning [DiplomaticPlay.GetTarget.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_INITIATOR:0 "Leaning [DiplomaticPlay.GetInitiator.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_TARGET_COUNTRY_TOOLTIP: "#header [Country.GetName] is leaning towards [DiplomaticPlay.GetTarget.GetName]#!\nThis means they are open to be [Concept('concept_sway','$concept_swayed$')] by [DiplomaticPlay.GetTarget.GetName] or might simply join their side if this [concept_diplomatic_play] is escalated further"
 DIPLO_PLAY_LEANING_INITIATOR_COUNTRY_TOOLTIP: "#header [Country.GetName] is leaning towards [DiplomaticPlay.GetInitiator.GetName]#!\nThis means they are open to be [Concept('concept_sway','$concept_swayed$')] by [DiplomaticPlay.GetInitiator.GetName] or might simply join their side if this [concept_diplomatic_play] is escalated further."
 DIPLO_PLAY_INITIATOR:1 "[concept_initiator]"
 DIPLO_PLAY_TARGET:1 "[concept_target]"
 DIPLO_PLAY_YOU:0 "(You)"
 DIPLO_PLAY_TOTAL_MOBILIZED:0 "Total Mobilized"
 DIPLO_PLAY_CLICK_TO_SWAY:1 "#instruction Click the @approves!/@disapproves! to see [concept_sway] options for each [concept_country]#!"
 DIPLO_PLAY_CANNOT_SWAY:0 "You can only [concept_sway] during the Diplomatic Maneuvers phase"
 DIPLO_PLAY_CLICK_TO_SET_STANCE:1 "[SelectLocalization(DiplomaticPlay.IsInvolved(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_CLICK_STANCES', 'DIPLO_PLAY_STANCES')]"
 DIPLO_PLAY_CLICK_STANCES:0 "#instruction Click to set your stance#!"
 DIPLO_PLAY_STANCES:0 "#bold Current Stances#!"
 BELLIGERENTS:0 "Belligerents"
 TO_ARMS:0 "To Arms!"
 DIPLO_PLAY_MANEUVERS_TARGET:0 "[DiplomaticPlay.GetNumTargetManeuversRemaining|v]"
 DIPLO_PLAY_MANEUVERS_INITIATOR:0 "[DiplomaticPlay.GetNumInitiatorManeuversRemaining|v]"
 SUPPORT_WITHOUT_CONDITION: "Support Unconditionally"

 DIPLO_PLAY_TOTAL_FLOTILLAS_BREAKDOWN:1 "#header [Concept('concept_flotilla', '$concept_flotillas$')] for the [Country.GetAdjective] side#!\n@flotillas! [DiplomaticPlay.GetTotalNumWarshipsForSide( Country.Self )|v] in total\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumWarshipsForSideBreakdown( Country.Self )]"
 DIPLO_PLAY_TOTAL_MOBILIZED_BATTALIONS_BREAKDOWN:0 "#header [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')] [Concept('concept_battalion', '$concept_battalions$')] for the [Country.GetAdjective] side#!\n@battalions!#v [DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide( Country.Self )]#! in total\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumMobilizedBattalionsForSideBreakdown( Country.Self )]"
 DIPLO_PLAY_COUNTRY_BATTALIONS_BREAKDOWN:1 "[Country.GetName] has @battalions!#v [Country.GetBattalions]#! [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetFullyMobilizedBattalionsPercentageRaw|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])"
 DIPLO_PLAY_COUNTRY_FLOTILLAS_BREAKDOWN:2 "[Country.GetName] has @flotillas! [Country.GetWarships|v] [Concept('concept_flotilla', '$concept_flotillas$')]"

 GOODS_INPUT_REQUIRED_FOR_NO_PENALTY:1 "At least [GetDefine('NEconomy', 'GOODS_SHORTAGE_PENALTY_THRESHOLD')|v%0] of [concept_buy_orders] for [Goods.GetTextIcon][Nbsp][Goods.GetName] must be satisfied to avoid an output penalty."
 GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY:0 "Current penalty is [Building.GetInputShortagePenalty|%v0], and will change over time towards the target penalty of [Building.CalcInputGoodsShortageTargetPenalty|%v0]."
 GOODS_INPUT_SHORTAGE_MAX_TOOLTIP:1 "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in [Building.GetName]#!\nThere are no [concept_sell_orders] available for [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Building.GetState.GetStateRegion.GetName], resulting in an penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$"
 GOODS_INPUT_SHORTAGE_TOOLTIP:2 "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in [Building.GetName]#!\nThere is only enough [concept_sell_orders] for [Goods.GetTextIcon][Nbsp][Goods.GetName] available in [Building.GetState.GetName] to satisfy [Building.GetState.CalcSupplyToDemandRatio(Goods.Self)|%v] of the [concept_buy_orders], resulting in an penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_OUTPUT_PENALTY_TOOLTIP:1 "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in [Building.GetName]#!\nShortages of [Building.GetGoodsShortageListDesc] results in a penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$"
 GOODS_OUTPUT_PENALTY_LINGERING_TOOLTIP:0 "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in [Building.GetName]#!\nPrevious shortages of input [Concept('concept_good', '$concept_goods$')] has resulted in a lingering penalty on all outputs for this [concept_building].\n\nCurrent penalty is [Building.GetInputShortagePenalty|%v0], but this penalty will disappear over time."
 GOODS_SHORTAGE_STATE_DESC_INTERNAL:0 "@warning! [Goods.GetState.GetName] has a [concept_shortage] of [Goods.GetName]"
 GOODS_SHORTAGE_STATE_DESC:1 "[SelectLocalization( Goods.GetState.IsValid, 'GOODS_SHORTAGE_STATE_DESC_INTERNAL', '' )]"
 GOODS_SHORTAGE_MARKET_DESC:0 "@warning! [Goods.GetMarket.GetName] has a [concept_shortage] of [Goods.GetName]"
 GOODS_SHORTAGE_TOOLTIP:0 "[Goods.GetGoodsShortageDesc]\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_SHORTAGE_SHORT_CONCEPT: "[concept_shortage]"

 SINGLE_GOODS_OR_EMPLOYMENT_MORE:0 "more"
 SINGLE_GOODS_OR_EMPLOYMENT_LESS:0 "less"
 UNSCALED_MODIFIERS_COLON:0 "#title Unscaled Modifiers:#!"
 PER_LEVEL_MODIFIERS_COLON:0 "#title Per Level Modifiers:#!"
 TOTAL_MODIFIERS_COLON:0 "#title Total Modifiers:#!"
 INCREASED_EMPLOYMENT_COLON:0 "#title Increased Employment:#!"
 DECREASED_EMPLOYMENT_COLON:0 "#title Decreased Employment:#!"
 PM_TIMED_MODIFIERS:0 "#title Timed Modifiers:#!\n$BREAKDOWN$"
 PM_TIMED_MODIFIER_FORMAT: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 SINGLE_GOODS_AMOUNT_PRODUCTION_TOTAL:0 "#v $TOTAL_AMOUNT|D=+$#! Total"
 SINGLE_GOODS_AMOUNT_PRODUCTION_PER_LEVEL:0 "#v $PER_LEVEL_AMOUNT|=+D$#! per Level"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_TOTAL:0 "#v $TOTAL_AMOUNT|D=-$#! Total"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_PER_LEVEL:0 "#v $PER_LEVEL_AMOUNT|=-D$#! per Level"
 SINGLE_GOODS_DELTA_PRODUCTION_TOTAL:0 "#v $TOTAL_DELTA|=+D$#! $MORE_OR_LESS$ in Total"
 SINGLE_GOODS_DELTA_PRODUCTION_PER_LEVEL:0 "#v $PER_LEVEL_DELTA|=+D$#! $MORE_OR_LESS$ per Level"
 SINGLE_GOODS_DELTA_CONSUMPTION_TOTAL:0 "#v $TOTAL_DELTA|=-D$#! $MORE_OR_LESS$ in Total"
 SINGLE_GOODS_DELTA_CONSUMPTION_PER_LEVEL:0 "#v $PER_LEVEL_DELTA|=-D$#! $MORE_OR_LESS$ per Level"
 SINGLE_GOODS_MARKET_PRICE:0 "[GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$ $PRICE_ICON$ in the [Market.GetName]"
 SINGLE_GOODS_STATE_PRICE:0 "[GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$ $PRICE_ICON$ in [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE:0 "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$#!#! $PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE:1 "[GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$ $MAX_PRICE_ICON$ in $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE:0 "[GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$ $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE:0 "#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 GOODS_PRICE_DELTA_SUBSTITUTION_DISCLAIMER:0 "@information! Some predicted price changes may not fully take effect until after [concept_goods_substitution] has occurred"
 SINGLE_GOODS_MARKET_PRICE_WITH_DELTA:0 "[GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$ $PRICE_ICON$ @arrow_right! [GetPlayer.GetCustom('currency_symbol')]$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ in [Market.GetName]"
 SINGLE_GOODS_STATE_PRICE_WITH_DELTA:0 "[GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$ $PRICE_ICON$ @arrow_right! [GetPlayer.GetCustom('currency_symbol')]$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ in [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE_WITH_DELTA:0 "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$PRICE|1v$#!#! $PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$AFTER_PRICE|1v$#!#! $AFTER_PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE_WITH_DELTA:0 "([GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! ([GetPlayer.GetCustom('currency_symbol')]$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) in $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_WITH_DELTA:0 "([GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! ([GetPlayer.GetCustom('currency_symbol')]$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ - [GetPlayer.GetCustom('currency_symbol')]$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE_WITH_DELTA:0 "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MIN_AFTER_PRICE|1v$#!#! $MIN_AFTER_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ [GetPlayer.GetCustom('currency_symbol')]$MAX_AFTER_PRICE|1v$#!#! $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FORMAT:0 "[PopType.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_SLAVES_ROLE:0 "[POP_TYPE.GetName] or [TARGET_POP_TYPE.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_TOTAL:0 "$TOTAL_CHANGE|=+D$ Total"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_PER_LEVEL:0 "$PER_LEVEL_CHANGE|=+D$ per Level"
 SINGLE_POP_EMPLOYMENT_DELTA_TOTAL:0 "$TOTAL_DELTA|=+D$ $MORE_OR_LESS$ in Total"
 SINGLE_POP_EMPLOYMENT_DELTA_PER_LEVEL:0 "$PER_LEVEL_DELTA|=+D$ $MORE_OR_LESS$ per Level"
 SINGLE_GOODS_FORMAT:2 "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$"
 SINGLE_GOODS_FORMAT_WITH_SHORTAGE:2 "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$ - @goods_shortage! [Concept('concept_shortage','$concept_input_goods_shortage$')]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIP:0 "#header Price of [Goods.GetName]#!\n$GOODS_STATE_PRICE$[ConcatIfNeitherEmpty('\n', '$GOODS_MARKET_PRICE$')]"
 STATE_HAS_INPUT_SHORTAGES: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')]#!\n[State.GetName] has [State.GetNumBuildingsAffectedByGoodsShortage|v] [Concept('concept_building', '$concept_buildings$')] that are suffering from an $concept_input_goods_shortage$"

 SELECT_OBJECTIVE_MAIN_TITLE:0 "Select a Game Objective"
 SELECT_OBJECTIVE_TITLE:0 "Objectives"
 SELECT_OBJECTIVE_TAG_TITLE:0 "Recommended Countries"
 START_GAME_NO_OBJECTIVE_NO_TAG:1 "Play without an Objective and go to Country Selection"
 START_GAME_CHOSEN_OBJECTIVE_NO_TAG:0 "Start Game\n#instruction Select any Country#!"
 START_GAME_CHOSEN_OBJECTIVE_CHOSEN_TAG:0 "Start Game"
 NO_OBJECTIVE:0 "You do not have an objective"

 OBJECTIVE_UNAVAILABLE_LACK_OF_DLC: "This objective is unavailable due to not owning any of the following DLCs:\n$DLCS_WITH_FEATURE$"

 SANDBOX:0 "Sandbox"
 SELECT_ANY_COUNTRY:0 "Select any Country"
 START_GAME:0 "Start Game"

 HAS_SELECTED_COUNTRY_TOOLTIP:0 "A [concept_country] has already been selected"
 NO_SELECTED_COUNTRY_TOOLTIP:0 "No [concept_country] has been selected yet"

 START_ANY_COUNTRY_TOOLTIP: "Start a new game and pick any [concept_country] on the map[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(GameSetup.GetSelectedObjective.IsAvailableForAllCountries), 'CANNOT_START_AS_ANY_COUNTRY'))]"
 CANNOT_START_AS_ANY_COUNTRY: "@red_cross! [GameSetup.GetSelectedObjective.GetName] can only be played with the recommended [Concept('concept_country', '$concept_countries$')]"

 START_GAME_TOOLTIP:0 "Start a new game as #variable [CountryDefinition.GetName]#!"

 SELECTABLE_COUNTRY_TOOLTIP:0 "#header [Country.GetName]#!\n$DATA_COUNTRY_NAME_TOOLTIP$\n\n#instruction Click to select [Country.GetName] as your Country#!"
 RIGHT_CLICK_TO_OPEN_CONTEXT_MENU:0 "@rightclick! #instruction #bold Right-click#! to open Context Menu#!"

 NULL_OBJ:1 "#todo NULL_OBJ#!"
 NULL_OBJ_ADJ:1 "#todo NULL_OBJ_ADJ#!"
 NULL_OBJ_DESC:1 "#todo NULL_OBJ_DESC#!"
 NULL_OBJ_TOOLTIP:1 "#todo NULL_OBJ_TOOLTIP#!"

 color_blind_mode_deuteranopia:0 "Deuteranopia"
 color_blind_mode_protanopia:0 "Protanopia"
 color_blind_mode_tritanopia:0 "Tritanopia"

 CANNOT_START_MULTIPLE_TUTORIALS:0 "You must close your current lesson before starting a new one"

 EMPTY_STATE:0 "Nothing to do here!"

 AUTO_EXPAND:0 "Auto-Expand"
 CANCEL_AUTO_EXPAND:0 "Cancel Auto-Expand"
 AUTOEXPANDING_YES_HEADER:0 "#header Cancel Automatic Expansion#!\n$TOOLTIP_DELIMITER$\n#title This [concept_building] currently auto-expands whenever these conditions are true:#!"
 AUTOEXPANDING_YES_INSTRUCTION:0 "#instruction Click to cancel auto-expansion#!"
 AUTOEXPANDING_NO_HEADER:0 "#header Automatically Expand#!\n$TOOLTIP_DELIMITER$\n#title This [concept_building] would auto-expand whenever these conditions are true:#!"
 AUTOEXPANDING_NO_INSTRUCTION:0 "#instruction Click to automatically schedule expansion#!"
 AUTOEXPAND_BUILDING_TOOLTIP:1 "[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_HEADER','AUTOEXPANDING_NO_HEADER')]\n$TRIGGER$\n\n[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_INSTRUCTION','AUTOEXPANDING_NO_INSTRUCTION')]"
 TOGGLE_AUTOEXPAND_INVALID_BUILDING_TYPE:0 "[BuildingType.GetName] is not auto-expandable"
 AUTOEXPAND_BUILDING_ICON_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'IS_AUTOEXPANDING','IS_NOT_AUTOEXPANDING')]\n$TOOLTIP_DELIMITER$\n[Building.GetAutoExpandTriggers]"
 AUTOEXPAND_BUILDING_TRIGGERS: "#title [Building.GetName] in [Building.GetState.GetName] auto-expands whenever these conditions are true:#! #indent_newline:3 \n$TRIGGER$"
 IS_AUTOEXPANDING: "#header Auto-Expanding#!"
 IS_NOT_AUTOEXPANDING: "#header Not Auto-Expanding#!"

 NO_URBAN_BUILDINGS:0 "There Are No Urban Buildings"
 NO_RURAL_BUILDINGS:0 "There Are No Rural Buildings"
 NO_DEVELOPMENT_BUILDINGS:0 "There Are No Development Buildings"

 NO_URBAN_BUILDINGS_HINT:0 "@information! Urban buildings can be built through the building lens or the state panel"
 NO_RURAL_BUILDINGS_HINT:0 "@information! Rural buildings can be built through the building lens or the state panel"
 NO_DEVELOPMENT_BUILDINGS_HINT:0 "@information! Development buildings can be built through the building lens or the state panel"

 STATE_BUILDING_TAB_LOCAL_GOODS_INFO: "[SelectLocalization(Goods.HasGoodsShortage, '@goods_shortage!', '')][Goods.GetTextIcon][GetPlayer.GetCustom('currency_symbol')][Goods.GetStatePrice|v0] [Goods.GetCompareIconAgainstBasePriceNoFormatting( Goods.GetStatePrice )] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#!)"

 AVAILABLE_BUILDINGS:0 "Available Buildings To Build"
 EXPANDABLE_BUILDINGS:0 "Available Buildings To Expand"

 AVAILABLE_URBAN_BUILDINGS:0 "Potential Urban Buildings"
 AVAILABLE_RURAL_BUILDINGS:0 "Potential Rural Buildings"
 AVAILABLE_DEVELOPMENT_BUILDINGS:0 "Potential Development Buildings"

 PREFERENCE_PREDICTION: "Prediction"
 PREFERENCE_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForInitiator(Country.Self), 'PREFERENCE_INITIATOR', '')][SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForTarget(Country.Self), 'PREFERENCE_TARGET', '')]"
 PREFERENCE_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 PREFERENCE_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinInitiator(Country.Self), 'CAN_SUPPORT_INITIATOR', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.PredictInitiatorPreferenceScoreFormatted(Country.Self)]"

 DIPLO_PLAY_SUPPORT_TARGET_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinTarget(Country.Self), 'CAN_SUPPORT_TARGET', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.PredictTargetPreferenceScoreFormatted(Country.Self)]"

 PREDICT_PREFERENCE_SCORE_POSITIVE: "#positive_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEGATIVE: "#negative_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEUTRAL: "#v $VALUE|=$#!"

 CANNOT_SUPPORT: "#title N/A#!"
 OUR_SIDE: "Our Side"
 ENEMY_SIDE: "Enemy Side"

 DIPLO_PLAY_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"

 URBAN_BUILDINGS_IN_COUNTRY:0 "Urban Buildings in [GetPlayer.GetName]"
 RURAL_BUILDINGS_IN_COUNTRY:0 "Rural Buildings in [GetPlayer.GetName]"
 DEVELOPMENT_BUILDINGS_IN_COUNTRY:0 "Development Buildings in [GetPlayer.GetName]"

 GRAPH_NOT_INITIALIZED:0 "No historical data"

  # GetPlayer can be used to access the dead player country as long as the game over screen is still available
 GAME_OVER_TITLE:0 "Game Over"
 GAME_OVER_TITLE_COUNTRY:1 "On [GameOverScreen.GetGameOverDateString] the days of [GetPlayer.GetName] has come to an end."
 GAME_OVER_TITLE_COUNTRY_END_OF_CAMPAIGN:0 "Congratulations! On [GameOverScreen.GetGameOverDateString] [GetPlayer.GetName] has successfully reached the end of the Campaign."
 GAME_OVER_ANNEXED:0 "You have been annexed!"
 GAME_OVER_SUMMARY:0 "You were playing as [GetPlayer.GetName].."
 GAME_OVER_CONTINUE_AS_OBSERVER:1 "Continue As [Concept('concept_observer_mode','$concept_observer$')]"
 GAME_OVER_GO_TO_LOBBY:1 "[SelectLocalization( GameHasMultiplePlayers, 'FRONTEND_GOTO_LOBBY', 'CONTINUE_PLAYING' )]"
 CONTINUE_PLAYING:0 "Continue Playing"

 MODIFIER_DESC_BOOL: "$NAME$ ($DESC$)"

 VALUE_CALCULATOR_BASE_ENTRY:1 "$VALUE|v$ from Base Value"
 VALUE_CALCULATOR_BASE_ENTRY_WITH_DESCRIPTION:1 "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! from Base Value"
 VALUE_CALCULATOR_ADD_ENTRY:2 "$VALUE|v=$ from $TITLE$"
 VALUE_CALCULATOR_ADD_ENTRY_WITH_DESCRIPTION:1 "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v=$#!#! from $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY:1 "$VALUE|v%=$ from $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY_WITH_DESCRIPTION:1 "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v%=$#!#! from $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY:1 "Multiplied by x$VALUE|v$ from $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY_WITH_DESCRIPTION:1 "Multiplied by x#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! from $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY:1 "Limited to a #b minimum#! of $VALUE|v$ from $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY_WITH_DESCRIPTION:1 "Limited to a #b minimum#! of #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! from $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY:1 "Limited to a #b maximum#! of $VALUE|v$ from $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_WITH_DESCRIPTION:1 "Limited to a #b maximum#! of #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! from $TITLE$"
 VALUE_CALCULATOR_VALUE_WITH_BREAKDOWN:1 "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 VALUE_CALCULATOR_VALUE_FROM_STATIC_MODIFIER: "$VALUE$ from $TITLE$"

 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_NO_TITLE: "Limited to a #b maximum#! of $VALUE|v0$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_PERCENT_NO_TITLE: "Limited to a #b maximum#! of $VALUE|%v0$"

 RECRUIT_GENERAL_BUTTON:0 "Recruit General"
 RECRUIT_ADMIRAL_BUTTON:0 "Recruit Admiral"

 LOAD_GAME_VERSION:1 "Version: [SaveGameItem.GetVersionName]"
 LOAD_GAME_DIFFERENT_VERSION:1 "@warning! #X Different version#!"
 LOAD_GAME_DIFFERENT_VERSION_TT:2 "This save was created with a different version of #y Victoria 3#! ($LOAD_GAME_VERSION$)."
 LOAD_MISSING_ITEMS_TT:1 "[SaveGameItem.GetIncompatibilityTooltip]"
 LOAD_GAME_DIFFERENT_VERSION_CONFIRM:1 "$LOAD_GAME_DIFFERENT_VERSION_TT$\n\nAre you sure you want to load this game?"
 LOAD_GAME_MISSING_MODS_CONFIRM:0 "$LOAD_MISSING_ITEMS_TT$\n\nLoading this save may lead to bugs or crashes.\n\nAre you sure you want to proceed?"
 LOAD_GAME_CONFIRM: "Are you sure you want to proceed?"
 LOAD_INGAME_BUTTON_DISABLED_NOSAVES:0 "You have no saved games"
 LOAD_INGAME_BUTTON_DISABLED:0 "Loading saved games disabled"

 OUTDATED_MOD_ENTRY: "• $MOD_NAME$ (supports $MOD_VERSION$)"
 OUTDATED_MODS_ALERT_EXIT_GAME: "$QUIT$"
 OUTDATED_MODS_ALERT_IGNORE: "@warning! Ignore"

 BUILDING_GENERAL_INFO_HEADER:0 "#title General Info#!:"
 BUILDING_TYPE_PORT_GENERAL_INFO:2 "Building a [GetBuildingType('building_port').GetName] may connect the [concept_state] it's built in to a [concept_market]"
 BUILDING_PORT_GENERAL_INFO_BUILT_AND_CONNECTS:3 "This or other [GetBuildingType('building_port').GetName] $concept_buildings$ in [STATE.GetName] connect it to the [MARKET.GetName]"
 BUILDING_PORT_GENERAL_INFO_NOT_BUILT_WILL_CONNECT:2 "Building a [GetBuildingType('building_port').GetName] in [STATE.GetName] will connect it to the [MARKET.GetName]"

 MONTHLY_PRICE_REPORT:0 "Monthly Price Report"


 STATE_GDP_STATUS_CONDENSED:0 "#variable [GetPlayer.GetCustom('currency_symbol')][State.GetGDPContribution|K]#! (#variable [State.GetGDPContributionPercentage|%0]#!)"
 STATE_POPULATION_STATUS_CONDENSED:0 "[State.GetPopulationSize|Kv] [GetArrowIcon_int64( State.GetPopTotalChange )]"
 SOL_CONDENSED:0 "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingAll,State.GetExpectedStandardOfLivingAll)|v] ([State.GetFormattedStandardOfLivingAll|v])"
 STATE_TURMOIL_CONDENSED:0 "#b [State.CalcTurmoil|%1-]#!"
 STATE_DEVASTATION_CONDENSED:0 "#b [State.GetStateRegion.GetDevastationLevel|%R1]#!"
 STATE_INFRASTRUCTURE_CONDENSED:0 "[SelectLocalization(GreaterThan_CFixedPoint(State.GetInfrastructureUsage,State.GetInfrastructure), 'WARNING', '')]Using #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_USAGE_TOOLTIP [State.GetInfrastructureUsage|0v]#!#! of #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_TOOLTIP [State.GetInfrastructure|0v]#!#!"
 STATE_TAX_CAPACITY_CONDENSED:0 "[AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage,State.CalcTaxCapacity), 'WARNING')]Using #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|0v]#!#! of #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|0v]#!#! [AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT')]"
 STATE_MARKET_CAPITAL_STATUS_CONDENSED:0 "[State.GetMarket.GetName]\n[State.GetMarketAccess|%v0]"

 CASUALTY_DEBUG_CASUALTIES_HEADER:0 "Casualties taken:"
 CASUALTY_DEBUG_CASUALTIES_NONE:0 "No casualties were taken"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_UNIT:0 "#variable $DATE$#!: dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (attrition)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_UNIT:0 "#variable $DATE$#!: dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (battle $BATTLE_NAME$)"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_BUILDING:0 "#variable $DATE$#!: $UNIT_NAME$ dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (attrition)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_BUILDING:0 "#variable $DATE$#!: $UNIT_NAME$ dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (battle $BATTLE_NAME$)"

 COMBAT_UNIT_DEFENSE_BREAKDOWN:0 "#header [concept_defense]#!\n$concept_defense$ of @unit_defense! #v [CombatUnit.GetDefenseRaw]#! is due to:\n[CombatUnit.GetDefenseBreakdown]"
 COMBAT_UNIT_OFFENSE_BREAKDOWN:0 "#header [concept_offense]#!\n$concept_offense$ of @unit_offense! #v [CombatUnit.GetOffenseRaw]#! is due to:\n[CombatUnit.GetOffenseBreakdown]"
 COMBAT_UNIT_MANPOWER_BREAKDOWN:0 "#header [concept_manpower]#!\n[CombatUnit.GetManpowerTooltip]"
 COMBAT_UNIT_MANPOWER:0 "@manpower! #v [CombatUnit.GetManpowerRaw]#!"
 COMBAT_UNIT_VETERANCY_EFFECT: "#bold Effect(s):#!"
 COMBAT_UNIT_VETERANCY_TOOLTIP:0 "#header [concept_veterancy_level]#!\nCurrent: #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#! / [CombatUnit.GetNeededExperienceForNextLevel] [concept_unit_experience]\n[CombatUnit.GetCurrentVeterancyLevelEffect]\n$TOOLTIP_DELIMITER$\nEvery week this Unit gains experience, it will gain:\n[CombatUnit.GetExperienceGainDescription]"
 #COMBAT_UNIT_VETERANCY_TOOLTIP:0 "#header [concept_veterancy_level]#!\nCurrent: #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n$TOOLTIP_DELIMITER$\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#!/[CombatUnit.GetNeededExperienceForNextLevel] [concept_unit_experience]\n[CombatUnit.GetExperienceGainDescription]"
 COMBAT_UNIT_AT_MAX_LEVEL:0 "Unit has reached their highest [concept_veterancy_level]"

 COMBAT_UNIT_TOOLTIP: "#header [CombatUnit.GetName]#!\nFrom [CombatUnit.GetBuilding.GetName] in [CombatUnit.GetBuilding.GetState.GetName][ConcatIfNeitherEmpty('\n', AddLocalizationIf(CombatUnit.IsArmyUnit, 'COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS'))]\n$TOOLTIP_DELIMITER$\n[CombatUnit.GetManpowerFormatted] [concept_manpower]\n[CombatUnit.GetMorale] [concept_morale]\n\n[CombatUnit.GetOffenseFormatted] [concept_offense]\n[CombatUnit.GetDefenseFormatted] [concept_defense]"

 COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS: "[SelectLocalization(Or(CombatUnit.IsMobilizing, CombatUnit.IsFullyMobilized), SelectLocalization(CombatUnit.IsFullyMobilized, 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED', 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING'), 'COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED')]"

 POP_SIZE_TITLE:0 "[Concept('concept_pop','$concept_population$')]"
 PIN_CHARACTER:0 "Pin [Character.GetFullName] to the Outliner"
 UNPIN_CHARACTER:0 "Unpin [Character.GetFullName] from the Outliner"
 PIN_DIPLOMATIC_PLAY:0 "Pin [DiplomaticPlay.GetName] to the Outliner"
 UNPIN_DIPLOMATIC_PLAY:0 "Unpin [DiplomaticPlay.GetName] from the Outliner"
 PIN_POLITICAL_MOVEMENT:0 "Pin [PoliticalMovement.GetName] to the Outliner"
 UNPIN_POLITICAL_MOVEMENT:0 "Unpin [PoliticalMovement.GetName] from the Outliner"
 PIN_POLITICAL_LOBBY: "Pin [PoliticalLobby.GetName] to the Outliner"
 UNPIN_POLITICAL_LOBBY: "Unpin [PoliticalLobby.GetName] from the Outliner"
 PIN_COUNTRY:0 "Pin [Country.GetName] to the Outliner"
 UNPIN_COUNTRY:0 "Unpin [Country.GetName] from the Outliner"
 PIN_IG:0 "Pin [InterestGroup.GetName] to the Outliner"
 UNPIN_IG:0 "Unpin [InterestGroup.GetName] from the Outliner"
 PIN_JOURNAL_ENTRY:0 "Pin [JournalEntry.GetName] to the Outliner"
 UNPIN_JOURNAL_ENTRY:0 "Unpin [JournalEntry.GetName] from the Outliner"
 PIN_MARKET:0 "Pin [Market.GetName] to the Outliner"
 UNPIN_MARKET:0 "Unpin [Market.GetName] from the Outliner"
 PIN_STATE:0 "Pin [State.GetName] to the Outliner"
 UNPIN_STATE:0 "Unpin [State.GetName] from the Outliner"
 PIN_BUILDING:0 "Pin this [BuildingDetailsPanel.AccessBuilding.GetName] to the Outliner"
 UNPIN_BUILDING:0 "Unpin this [BuildingDetailsPanel.AccessBuilding.GetName] from the Outliner"
 PIN_COMPANY: "Pin [Company.GetCompanyType.GetName] to the Outliner"
 UNPIN_COMPANY: "Unpin [Company.GetCompanyType.GetName] from the Outliner"
 GOTO_COMPANY_HQ: "Go to the Company Headquarters [concept_building]"
 RADICALISM_PASSIVE: "#b Passive#!"
 RADICALISM_AGITATING: "#b Agitating#!"
 RADICALISM_PROTESTING: "#N Protesting#!"
 RADICALISM_MILITANT: "#N Militant#!"
 SUPPORT_MARGINAL: "#b Marginal#!"
 SUPPORT_RELEVANT: "#b Relevant#!"
 SUPPORT_SIGNIFICANT: "#b Significant#!"
 SUPPORT_DOMINANT: "#N Dominant#!"
 SUPPORT_UNIVERSAL: "#N Universal#!"
 LABEL_VALUE_RANGE: "$LABEL$ ([Multiply_CFixedPoint('(CFixedPoint)$MIN$','(CFixedPoint)100')|0]-$MAX|0%$)"

 FEED:0 "Feed"
 TOAST:0 "Toast"
 POPUP:0 "Popup"

 MESSAGE_SETTINGS_FEED:0 "[concept_message_settings_feed]"
 MESSAGE_SETTINGS_TOAST:0 "[concept_message_settings_toast]"
 MESSAGE_SETTINGS_POPUP:0 "[concept_message_settings_popup]"
 MESSAGE_SETTINGS_NONE:0 "[concept_message_settings_none]"
 MESSAGE_SETTINGS_DEFAULT:0 "Default"

 JOURNAL_ENTRY_POSSIBLE_ACTIONS: "[JournalEntry.GetNumPossibleScriptedButtons|v] possible action[SelectLocalization(GreaterThan_int32(JournalEntry.GetNumPossibleScriptedButtons, '(int32)1'), 's', '')]"

 BEHAVIOR: "Behavior"

 RANKING_FORMAT:0 "#tooltippable #tooltip:$LEADERBOARD$ #v ##$RANKING$#!#!#!"
 GDP_LEADERBOARD_HEADER:0 "#header GDP#!"
 GDP_PER_CAPITA_LEADERBOARD_HEADER:0 "#header GDP per Capita#!"
 SOL_LEADERBOARD_HEADER:0 "#header Standard of Living#!"
 POPULATION_LEADERBOARD_HEADER:0 "#header Population#!"
 INCORPORATED_LITERACY_LEADERBOARD_HEADER:0 "#header Literacy in Incorporated States#!"
 TOTAL_LITERACY_LEADERBOARD_HEADER:0 "#header Literacy in all States#!"
 BATTALIONS_LEADERBOARD_HEADER:0 "#header Battalions#!"
 FLOTTILAS_LEADERBOARD_HEADER:0 "#header Flotillas#!"
 GDP_LEADERBOARD_ITEM:0 "\n$RANK$. [GetPlayer.GetCustom('currency_symbol')]$VAL|vD$ - $COUNTRY$"
 SOL_LEADERBOARD_ITEM:0 "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 POPULATION_LEADERBOARD_ITEM:0 "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 INCORPORATED_LITERACY_LEADERBOARD_ITEM:0 "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 TOTAL_LITERACY_LEADERBOARD_ITEM:0 "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 BATTALIONS_LEADERBOARD_ITEM:0 "\n$RANK$. @battalions! $VAL|vD$ - $COUNTRY$"
 FLOTILLAS_LEADERBOARD_ITEM:0 "\n$RANK$. @flotillas! $VAL|vD$ - $COUNTRY$"
 COMMANDER_RANK_LOC_KEY:0 "[Concept('concept_commander_rank','$concept_commander_rank_short$')] "

 EDIT: "Edit"
 CUSTOMIZE_NAME_AND_EMBLEM: "Customize name and emblem"
 CUSTOMIZE: "Customize"
 CUSTOMIZE_WITH_ICON: "@edit! Customize"
 CHANGE_NAME: "Change name"
 CUSTOMISE_MILITARY_FORMATION: "Customize Formation"
 UNIT_NAMES: "Unit Names"
 BASE_ON: "Base on"
 FORMATION_NAME: "Formation Name"
 CHOOSE_FORMATION_FLAG: "Flag Pattern"
 CHOOSE_FORMATION_FLAG_COLOUR: "Flag Colour"
 MILITARY_FORMATION_INVALID_NAME: "Invalid Name:\n$DESC$"
 MILITARY_FORMATION_INVALID: "Invalid formation"
 MILITARY_FORMATION_NOT_YOURS: "Player does not own this formation."
 COMPANY_INVALID_NAME: "Invalid Name:\n$DESC$"
 COMPANY_INVALID: "Invalid company"
 COMPANY_NOT_YOURS: "Player does not own this company."
 
 CUSTOMIZE_STATE_NAMES: "Customize the names of the state and its hubs"
 CUSTOMIZE_STATE: "Customize Names"
 STATE_NAME: "State"
 CITY_NAME: "State Capital"
 PORT_NAME: "Port Town"
 FARM_NAME: "Farming Town"
 MINE_NAME: "Mining Town"
 WOOD_NAME: "Logging Town"

 SUPPORT_INITIATOR: "Support [DiplomaticPlay.GetInitiator.GetName]"
 REVERSE_SWAY_INITIATOR: "Offer Support to [DiplomaticPlay.GetInitiator.GetName] ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway( GetPlayer.Self, DiplomaticPlay.GetInitiator ), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 SUPPORT_TARGET: "Support [DiplomaticPlay.GetTarget.GetName]"
 REVERSE_SWAY_TARGET: "Offer Support to [DiplomaticPlay.GetTarget.GetName] ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway( GetPlayer.Self, DiplomaticPlay.GetTarget ), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 CAN_SWAY_ICON: "@approves!"
 CAN_NOT_SWAY_ICON: "@disapproves!"

 SCRIPTED_ACTION_TOOLTIP:2 "#header [ScriptedButton.GetName]#! [AddLocalizationIf(ScriptedButton.IsSelected, 'SCRIPTED_ACTION_TOOLTIP_IS_SELECTED')][ConcatIfNeitherEmpty('\n', ScriptedButton.GetDesc)]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(ScriptedButton.GetPossibleDesc, '\n\n')]#title Effects:#!\n[ScriptedButton.GetEffectDesc]"
 SCRIPTED_ACTION_TOOLTIP_IS_SELECTED: "#i (Selected)#!"

 PROGRESS_BAR_BREAKDOWN: "#header $Name$ progress#!\n$TOTAL_VALUE|+=1$ average monthly progress currently[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$TOTAL_VALUE$','(CFixedPoint)0'), '\n$TOOLTIP_DELIMITER$\nThis is due to:' )][AddTextIf(Not(StringIsEmpty('$WEEKLY_DESC$')), '\n#title $WEEKLY_VALUE|+=1$ weekly change from:#! #indent_newline:3 \n $WEEKLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$MONTHLY_DESC$')), '\n#title $MONTHLY_VALUE|+=1$ monthly change from:#! #indent_newline:3 \n $MONTHLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$YEARLY_DESC$')), '\n#title $YEARLY_VALUE|+=1$ yearly change from:#! #indent_newline:3 \n $YEARLY_DESC$#!\n')]"

 PROGRESS_BAR_VALUE_FORMAT_WEEKLY: "$VALUE|+=1$ from $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_MONTHLY: "$VALUE|+=1$ from $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_YEARLY: "$VALUE|+=1$ from $KEY$"

 DIPLO_PLAY_COUNTRY_WARSHIPS_BREAKDOWN:2 "[Country.GetName] has @flotillas![Country.GetWarships|v] [Concept('concept_flotilla', '$concept_flotillas$')]"

 DEPLOY_MILITARY_FORMATION_TO_FRONT_TEXT: "Deploy to [concept_front]"
 DEPLOY_MILITARY_FORMATION_TO_FRONT_TOOLTIP: "#header Deploy to [concept_front]#!\n[SelectLocalization(MilitaryFormation.IsMobilized, 'MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED', 'MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED')]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanDeployToFront), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT'))]\n\n@information! This determines the position of [MilitaryFormation.GetName], while you can change specific [Concept('concept_order', '$concept_orders$')] on the assigned [Concept('concept_general', '$concept_generals$')]"
 MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED: "@green_checkmark_box! [MilitaryFormation.GetName] is [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED: "@simple_box! [MilitaryFormation.GetName] is [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_TOOLTIP: "#header Deploy to [concept_sea_node]#![ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE'))]\n\n@information! This determines the position of [MilitaryFormation.GetName], while you can change specific [Concept('concept_order', '$concept_orders$')] on the assigned [Concept('concept_admiral', '$concept_admirals$')]"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_LABEL: "Deploy to [concept_sea_node]"
 STATION_MILITARY_FORMATION_TOOLTIP: "#header Station in an [concept_hq]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_STATION'))]"
 MILITARY_FORMATION_GENERIC_ERRORS: "[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.HasNavalInvasion, 'HAS_NAVAL_INVASION_ERROR'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(EqualTo_int32(MilitaryFormation.GetNumCombatUnits, '(int32)0'), 'HAS_NO_UNITS_ERROR'))]"
 STATION_MILITARY_FORMATION_LABEL: "Station in an [concept_hq]"
 HAS_NAVAL_INVASION_ERROR: "@red_cross! [MilitaryFormation.GetName] is involved in the [MilitaryFormation.GetNavalInvasion.GetName]"
 HAS_NO_UNITS_ERROR: "@red_cross! [MilitaryFormation.GetName] has no [Concept('concept_unit','$concept_units_short$')]"
 SINGULAR_BATTLE: "[concept_battle]"
 MULTIPLE_BATTLES: "[Concept('concept_battle','$concept_battles$')]"

 NO_VALID_OPTIONS_FOR_STATION: "@red_cross! [MilitaryFormation.GetName] has no valid alternatives for #b 'Station in an HQ'#! action"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT: "@red_cross! [MilitaryFormation.GetName] has no valid alternatives for #b 'Deploy to Front'#! action"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE: "@red_cross! [MilitaryFormation.GetName] has no valid alternatives for #b 'Deploy to Sea Node'#! action"

 MILITARY_FORMATION_NAVAL_INVASION_LABEL: "Naval Invasion"
 MILITARY_FORMATION_NAVAL_INVASION_TOOLTIP: "#header Plan a Naval Invasion of an enemy [concept_state]#![ConcatIfNeitherEmpty('\n', MilitaryFormation.GetNavalInvasionTooltip )]"

 BATTLE_PANEL_ADVANCING_TOOLTIP: "#header [Battle.GetAttackerCommander.GetFirstName] is Advancing in this [concept_battle]#!\n\n@information! You can change [Battle.GetAttackerCommander.GetFirstNamePossessive] [concept_order] by either right-clicking [Battle.GetAttackerCommander.GetHerHim] or go to [Battle.GetAttackerCommander.GetHerHis] [concept_character] or [concept_military_formation] panel"
 BATTLE_PANEL_DEFENDING_TOOLTIP: "#header [Battle.GetDefenderCommander.GetFirstName] is Defending in this [concept_battle]#!\n\n@information! You can change [Battle.GetDefenderCommander.GetFirstNamePossessive] [concept_order] by either right-clicking [Battle.GetDefenderCommander.GetHerHim] or go to [Battle.GetDefenderCommander.GetHerHis] [concept_character] or [concept_military_formation] panel"

 REHOME_MILITARY_FORMATION_TOOLTIP: "Set the Home [concept_hq] of [MilitaryFormation.GetName] to another $concept_hq$"
 REHOME_MILITARY_FORMATION_LABEL: "Rehome in an [concept_hq]"

 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_DESC: "Deploy $FORMATION_NAME$ to a [concept_front]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_PERFORMED: "$FORMATION_NAME$ deployed to [concept_front]"

 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_DESC: "Deploy $FORMATION_NAME$ to a [concept_sea_node]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_PERFORMED: "$FORMATION_NAME$ deployed to [concept_sea_node]"

 MAP_INTERACTION_STATION_MILITARY_FORMATION_DESC: "Station $FORMATION_NAME$ in a [concept_hq]"
 MAP_INTERACTION_STATION_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ stationed"

 MAP_INTERACTION_REHOME_MILITARY_FORMATION_DESC: "Home $FORMATION_NAME$ in a [concept_hq]"
 MAP_INTERACTION_REHOME_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ rehomed"

 PRODUCTION_METHOD_CONFIRMATION_TITLE: "Switch to [ProductionMethod.GetName]"
 PRODUCTION_METHOD_CONFIRMATION_DESC: "Switching to [ProductionMethod.GetName] would result in the following [BuildingType.GetName] [Concept( 'concept_building', '$concept_buildings$' )] having very low [concept_productivity]:\n\n[ProductionMethodConfirmationPopup.GetLowProductivityBreakdown]"
 PRODUCTION_METHOD_CONFIRMATION_LOW_PRODUCTIVITY_ENTRY: "[BUILDING.GetState.GetName]: #N $VALUE$#!"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE: "$CONTINUE$"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE_TOOLTIP: "Switch all [ProductionMethodConfirmationPopup.GetTotalBuildingCount|v] [BuildingType.GetName] [Concept( 'concept_building', '$concept_buildings$' )] to [ProductionMethod.GetName]"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT: "Exempt"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT_TOOLTIP: "Only switch [Subtract_int32( ProductionMethodConfirmationPopup.GetTotalBuildingCount, ProductionMethodConfirmationPopup.GetExemptedBuildingCount )|v] [BuildingType.GetName] [Concept( 'concept_building', '$concept_buildings$' )] to [ProductionMethod.GetName]\n([ProductionMethodConfirmationPopup.GetExemptedBuildingCount|v] $concept_buildings$ listed above will remain unchanged)"
 PRODUCTION_METHOD_CONFIRMATION_CANCEL: "$CANCEL$"
