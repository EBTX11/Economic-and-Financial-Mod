building_construction_sector_lvl = {
	value = 0
	every_scope_building = {
		limit = {
			is_building_type = building_construction_sector
		}
		add = level
	}
}
building_ef_private_construction_lvl = {
	value = 0
	every_scope_building = {
		limit = {
			is_building_type = building_ef_private_construction
		}
		add = level
	}
}
building_ef_private_construction_lvl_to_build = {
	value = building_construction_sector_lvl
	subtract = building_ef_private_construction_lvl
	min = 0
}
bg_gold_mining_potential_lvl_to_build = {
	every_scope_state = {
		limit = {
			has_potential_resource = bg_gold_mining
		}
		add = 1
	}
}

state_infrastructure = {
	value = 0
	add = infrastructure
}

state_market_access = {
	value = 0
	add = market_access
}






########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

#diver

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

country_indice_reference_currency = {
	value = 1
	every_country = {
		limit = {
			has_modifier = global_financial_power
		}
		add = country_indice
	}
}

ratio_with_country_indice_reference_currency = {
	value = country_indice
	divide = country_indice_reference_currency
}
ratio_with_country_indice_reference_currency = {
	value = country_indice
	divide = country_indice_reference_currency
}

num_company = {
	value = 0.1
	every_company = {
		add = 1
	}
}
prosperity_company = {
	value = 0
	every_company = {
		add = prosperity
	}
}

prosperity_by_company = {
	value = prosperity_company
	divide = num_company
	divide = 8 #rapporter sur 25
}

investor_massive_capital_loss = {
	value = 0
	if = {
		limit  = {
			var:financial_crash = 1
			var:country_indice_value_dif_01 < 0
		}
		add = investment_pool
		multiply = var:country_indice_value_dif_01
	}
}

pop_capital_loss = {
	value = 0
	if = {
		limit  = {
			var:economic_crisis = 1
			var:country_indice_value_dif_01 < 0
		}
		add = pop_savings
		multiply = var:country_indice_value_dif_01
	}
}


prosperity_100 = {
	value = prosperity
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

#  ██████╗ ██████╗ ██╗   ██╗███╗   ██╗████████╗██████╗ ██╗   ██╗
# ██╔════╝██╔═══██╗██║   ██║████╗  ██║╚══██╔══╝██╔══██╗╚██╗ ██╔╝
# ██║     ██║   ██║██║   ██║██╔██╗ ██║   ██║   ██████╔╝ ╚████╔╝
# ██║     ██║   ██║██║   ██║██║╚██╗██║   ██║   ██╔══██╗  ╚██╔╝
# ╚██████╗╚██████╔╝╚██████╔╝██║ ╚████║   ██║   ██║  ██║   ██║
#  ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝
#
#  ██████╗██████╗ ███████╗██████╗ ██╗████████╗    ██████╗  █████╗ ████████╗██╗███╗   ██╗ ██████╗
# ██╔════╝██╔══██╗██╔════╝██╔══██╗██║╚══██╔══╝    ██╔══██╗██╔══██╗╚══██╔══╝██║████╗  ██║██╔════╝
# ██║     ██████╔╝█████╗  ██║  ██║██║   ██║       ██████╔╝███████║   ██║   ██║██╔██╗ ██║██║  ███╗
# ██║     ██╔══██╗██╔══╝  ██║  ██║██║   ██║       ██╔══██╗██╔══██║   ██║   ██║██║╚██╗██║██║   ██║
# ╚██████╗██║  ██║███████╗██████╔╝██║   ██║       ██║  ██║██║  ██║   ██║   ██║██║ ╚████║╚██████╔╝
#  ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝   ╚═╝       ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝╚═╝  ╚═══╝ ╚═════╝

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
#25 categorie de 10 point chacune

# country_credit_note = {
# 	value = country_credit_mean
# 	multiply = 20
# 	divide = 10

# 	# #is_at_war
# 	# if = {
# 	# 	limit  = {
# 	# 		is_at_war = yes
# 	# 	}
# 	# 	multiply = 0.5
# 	# }
# 	# #taking_loans
# 	# if = {
# 	# 	limit  = {
# 	# 		taking_loans = yes
# 	# 	}
# 	# 	multiply = 0.25
# 	# }
# }
country_credit_pondered_mean = {
	value = 0
	#<50 and no Bc
	if = {
		limit = {
			global_country_ranking = 1
			not = {
				is_player = yes
			}
		}
		add = 10
	}

	if = {
		limit = {
			has_modifier = has_central_bank
			#global_country_ranking > 1
			or  = {
				and  = {
					global_country_ranking > 1
					global_country_ranking < 50
				}
				is_player = yes
			}
		}

		value = country_credit_score
		divide = 31
		add = institution_economic_central_bank_lvl

		#is_at_war
		if = {
			limit  = {
				is_at_war = yes
			}
			multiply = 0.5
		}
		#taking_loans
		if = {
			limit  = {
				taking_loans = yes
			}
			multiply = 0.75
		}
	}

	#<50 and no Bc
	if = {
		limit = {
			global_country_ranking < 50
			not = {
				has_modifier = has_central_bank
			}
			# not = {
			# 	is_player = yes
			# }
		}
		add = 3
	}
	#>= 50
	if = {
		limit = {
			global_country_ranking >= 50
			global_country_ranking < 100
			not = {
				is_player = yes
			}
		}
		add = 3
	}
	#>= 100
	if = {
		limit = {
			global_country_ranking >= 100
			global_country_ranking < 150
			not = {
				is_player = yes
			}
		}
		add = 2
	}
	#>= 150
	if = {
		limit = {
			global_country_ranking >= 150
			not = {
				is_player = yes
			}
		}
		add = 1
	}
}
country_credit_score = {
	value = 0

	if = {
		limit = {
			has_modifier = has_central_bank
		}

		add = { #4 x 1 = 4
			add = country_credit_country_rank #40
			multiply = 4
		}

		add = { #2 x 8 = 16
			add = country_credit_rating_ratio_gdp_per_capital #20
			add = country_credit_rating_GDP_grow #20

			add = country_credit_rating_money_value #20
			add = country_credit_rating_inflation #20

			add = country_credit_rating_ratio_with_national_capacity_reference_currency #20
			add = country_credit_rating_ratio_with_country_indice_reference_currency #20
			add = country_credit_rating_national_debt_compared_gdp #20

			add = country_credit_rating_is_losing_power_rank #20

			multiply = 2
		}

		#autre 11
		add = country_credit_rating_sol #10
		add = country_credit_rating_literacy_rate  #10
		add = country_credit_rating_infamy #10
		add = country_credit_rating_government_legitimacy #10

		add = country_credit_rating_army_size #10
		add = country_credit_rating_navy_size #10

		add = country_credit_rating_government_wage_level_value #10
		add = country_credit_rating_military_wage_level_value #10
		add = country_credit_rating_tax_level_value #10

		add = country_credit_rating_radical_fraction #10
		add = country_credit_rating_loyalist_fraction #10
	}
	if = {
		limit = {
			not = {
				has_modifier = has_central_bank
			}
			not = {
				country_rank >= rank_value:decentralized_power
			}
		}
		add = 25
	}

	if = {
		limit = {
			country_rank = rank_value:decentralized_power
		}
		add = 1
	}
}
country_credit_country_rank = {
	value = 0
	min = 0

	if = {
		limit  = {
			global_country_ranking <= 5
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 10
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 15
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 20
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 25
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 30
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 35
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 40
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 45
		}
		add = 1
	}
	if = {
		limit  = {
			global_country_ranking <= 50
		}
		add = 1
	}
}
country_credit_rating_is_losing_power_rank = {
	value = 0
	min = 0

	if = {
		limit  = {
			is_losing_power_rank = no
		}
		add = 10
	}
	if = {
		limit  = {
			is_losing_power_rank = yes
		}
		add = 0
	}
}
country_credit_rating_ratio_gdp_per_capital = {
	value = 0
	min = 0

	if = {
		limit  = {
			gdp_per_capita_ranking <= 100
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 90
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 80
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 70
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 60
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 50
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 40
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 30
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 20
		}
		add = 1
	}
	if = {
		limit  = {
			gdp_per_capita_ranking <= 10
		}
		add = 1
	}
}
country_credit_rating_loyalist_fraction = {
	value = 0
	min = 0

	if = {
		limit  = {
			loyalist_fraction_pop >= 0.50
		}
		add = 2
	}
	if = {
		limit  = {
			loyalist_fraction_pop >= 0.40
		}
		add = 2
	}
	if = {
		limit  = {
			loyalist_fraction_pop >= 0.30
		}
		add = 2
	}
	if = {
		limit  = {
			loyalist_fraction_pop >= 0.20
		}
		add = 2
	}
	if = {
		limit  = {
			loyalist_fraction_pop >= 0.10
		}
		add = 2
	}
}
country_credit_rating_radical_fraction = {
	value = 0
	min = 0

	if = {
		limit  = {
			radical_fraction_pop < 0.50
		}
		add = 2
	}
	if = {
		limit  = {
			radical_fraction_pop <= 0.40
		}
		add = 2
	}
	if = {
		limit  = {
			radical_fraction_pop <= 0.30
		}
		add = 2
	}
	if = {
		limit  = {
			radical_fraction_pop <= 0.20
		}
		add = 2
	}
	if = {
		limit  = {
			radical_fraction_pop <= 0.10
		}
		add = 2
	}
}
country_credit_rating_ratio_with_highest_gdp = {
	value = 0
	min = 0

	if = {
		limit  = {
			ratio_with_highest_gdp >= 1
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.9
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.8
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.7
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.6
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.5
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.4
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.3
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.2
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_highest_gdp >= 0.1
		}
		add = 1
	}
}
country_credit_rating_ratio_with_national_capacity_reference_currency = {
	value = 0
	min = 0

	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 1
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.9
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.8
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.7
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.6
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.5
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.4
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.3
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.2
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_national_capacity_reference_currency >= 0.1
		}
		add = 1
	}
}
country_credit_rating_ratio_with_country_indice_reference_currency = {
	value = 0
	min = 0

	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 1
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.9
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.8
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.7
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.6
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.5
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.4
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.3
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.2
		}
		add = 1
	}
	if = {
		limit  = {
			ratio_with_country_indice_reference_currency >= 0.1
		}
		add = 1
	}
}
country_credit_rating_national_debt_compared_gdp = {
	value = 0
	min = 0

	if = {
		limit  = {
			national_debt_compared_gdp <= 1
		}
		add = 0
	}

	if = {
		limit  = {
			national_debt_compared_gdp <= 0.90
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.80
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.70
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.60
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.50
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.40
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.30
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.20
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0.10
		}
		add = 1
	}
	if = {
		limit  = {
			national_debt_compared_gdp <= 0
		}
		add = 1
	}
}
country_credit_rating_GDP_grow = {
	value = 0
	min = 0

	if = {
		limit  = {
			GDP_dif_10_final >= 1
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.9
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.8
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.7
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.6
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.5
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.4
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.3
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.2
		}
		add = 1
	}
	if = {
		limit  = {
			GDP_dif_10_final >= 0.1
		}
		add = 1
	}
}
country_credit_rating_money_value = {
	value = 0
	min = 0

	if = {
		limit  = {
			money_value_dif_10_final >= -1
		}
		add = 0
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.90
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.80
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.70
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.60
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.50
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.40
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.30
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.20
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= -0.10
		}
		add = 1
	}
	if = {
		limit  = {
			money_value_dif_10_final >= 0
		}
		add = 1
	}

}
country_credit_rating_inflation = {
	value = 0
	min = 0

	if = {
		limit  = {
			cumulative_inflation_10_year <= 1
		}
		add = 0
	}

	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.90
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.80
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.70
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.60
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.50
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.40
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.30
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.20
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0.10
		}
		add = 1
	}
	if = {
		limit  = {
			cumulative_inflation_10_year <= 0
		}
		add = 1
	}

}
country_credit_rating_sol = {
	value = 0
	min = 0

	if = {
		limit  = {
			average_sol > 14
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 13
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 12
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 11
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 10
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 9
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 8
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 7
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 6
		}
		add = 1
	}
	if = {
		limit  = {
			average_sol > 5
		}
		add = 1
	}
}
country_credit_rating_literacy_rate = {
	value = 0
	min = 0

	if = {
		limit  = {
			literacy_rate >= 0.05
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.10
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.15
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.20
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.25
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.30
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.35
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.40
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.45
		}
		add = 1
	}
	if = {
		limit  = {
			literacy_rate >= 0.50
		}
		add = 1
	}
}
country_credit_rating_infamy = {
	value = 0
	min = 0

	if = {
		limit  = {
			infamy <= 100
		}
		add = 0
	}

	if = {
		limit  = {
			infamy <= 90
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 80
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 70
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 60
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 50
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 40
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 30
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 20
		}
		add = 1
	}
	if = {
		limit  = {
			infamy <= 10
		}
		add = 1
	}
	if = {
		limit  = {
			infamy = 0
		}
		add = 1
	}

}
country_credit_rating_government_legitimacy = {
	value = 0
	min = 0

	if = {
		limit  = {
			government_legitimacy >= 10
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 20
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 30
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 40
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 50
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 60
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 70
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 80
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy >= 90
		}
		add = 1
	}
	if = {
		limit  = {
			government_legitimacy = 100
		}
		add = 1
	}
}
country_credit_rating_army_size = {
	value = 0
	min = 0

	if = {
		limit  = {
			army_size >= 10
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 20
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 30
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 40
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 50
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 60
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 70
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 80
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 90
		}
		add = 1
	}
	if = {
		limit  = {
			army_size >= 100
		}
		add = 1
	}
}
country_credit_rating_navy_size = {
	value = 0
	min = 0

	if = {
		limit  = {
			navy_size >= 10
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 20
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 30
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 40
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 50
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 60
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 70
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 80
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 90
		}
		add = 1
	}
	if = {
		limit  = {
			navy_size >= 100
		}
		add = 1
	}
}
country_credit_rating_government_wage_level_value = {
	value = 0
	min = 0

	if = {
		limit  = {
			government_wage_level_value >= 0
		}
		add = 2
	}
	if = {
		limit  = {
			government_wage_level_value >= 1
		}
		add = 2
	}
	if = {
		limit  = {
			government_wage_level_value >= 2
		}
		add = 2
	}
	if = {
		limit  = {
			government_wage_level_value >= 3
		}
		add = 2
	}
	if = {
		limit  = {
			government_wage_level_value >= 4
		}
		add = 2
	}
}
country_credit_rating_military_wage_level_value = {
	value = 0
	min = 0

	if = {
		limit  = {
			military_wage_level_value >= 0
		}
		add = 2
	}
	if = {
		limit  = {
			military_wage_level_value >= 1
		}
		add = 2
	}
	if = {
		limit  = {
			military_wage_level_value >= 2
		}
		add = 2
	}
	if = {
		limit  = {
			military_wage_level_value >= 3
		}
		add = 2
	}
	if = {
		limit  = {
			military_wage_level_value >= 4
		}
		add = 2
	}
}
country_credit_rating_tax_level_value = {
	value = 0
	min = 0

	if = {
		limit  = {
			tax_level_value <= 4
		}
		add = 2
	}
	if = {
		limit  = {
			tax_level_value <= 3
		}
		add = 2
	}
	if = {
		limit  = {
			tax_level_value <= 2
		}
		add = 2
	}
	if = {
		limit  = {
			tax_level_value <= 1
		}
		add = 2
	}
	if = {
		limit  = {
			tax_level_value <= 0
		}
		add = 2
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

# national_debt_allowed

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

national_debt_allowed_relative_gdp = {
	value = 0

	if = {
		limit  = {
			var:country_credit_note_fixe = 10
			var:country_credit_note_fixe >= 9
		}
		add = 1
	}
	if = {
		limit  = {
			var:country_credit_note_fixe < 9
			var:country_credit_note_fixe >= 8
		}
		add = 0.90

	}
	if = {
		limit  = {
			var:country_credit_note_fixe < 8
			var:country_credit_note_fixe >= 7
		}
		add = 0.80

	}
	if = {
		limit  = {
			var:country_credit_note_fixe < 7
			var:country_credit_note_fixe >= 6
		}
		add = 0.70

	}
	if = {
		limit  = {
			var:country_credit_note_fixe < 6
			var:country_credit_note_fixe >= 5
		}
		add = 0.60

	}
	if = {
		limit  = {
			var:country_credit_note_fixe < 5
			var:country_credit_note_fixe >= 4
		}
		add = 0.50
	}
}


########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

# ███████╗████████╗ ██████╗  ██████╗██╗  ██╗██████╗ ██╗██╗     ██╗███╗   ██╗ ██████╗
# ██╔════╝╚══██╔══╝██╔═══██╗██╔════╝██║ ██╔╝██╔══██╗██║██║     ██║████╗  ██║██╔════╝
# ███████╗   ██║   ██║   ██║██║     █████╔╝ ██████╔╝██║██║     ██║██╔██╗ ██║██║  ███╗
# ╚════██║   ██║   ██║   ██║██║     ██╔═██╗ ██╔═══╝ ██║██║     ██║██║╚██╗██║██║   ██║
# ███████║   ██║   ╚██████╔╝╚██████╗██║  ██╗██║     ██║███████╗██║██║ ╚████║╚██████╔╝
# ╚══════╝   ╚═╝    ╚═════╝  ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝
#
# ███████╗██╗███╗   ██╗ █████╗ ███╗   ██╗ ██████╗██╗ █████╗ ██╗         ██████╗ ██████╗
# ██╔════╝██║████╗  ██║██╔══██╗████╗  ██║██╔════╝██║██╔══██╗██║         ██╔══██╗██╔══██╗
# █████╗  ██║██╔██╗ ██║███████║██╔██╗ ██║██║     ██║███████║██║         ██████╔╝██║  ██║
# ██╔══╝  ██║██║╚██╗██║██╔══██║██║╚██╗██║██║     ██║██╔══██║██║         ██╔═══╝ ██║  ██║
# ██║     ██║██║ ╚████║██║  ██║██║ ╚████║╚██████╗██║██║  ██║███████╗    ██║     ██████╔╝
# ╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝╚═╝╚═╝  ╚═╝╚══════╝    ╚═╝     ╚═════╝

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

#bond

bond_market_goods_sell_orders = {
	value = {
		add = market.mg:bond.market_goods_sell_orders
	}
}
bond_market_goods_buy_orders = {
	value = {
		add = market.mg:bond.market_goods_buy_orders
	}
}
bond_market_goods_delta = {
	value = bond_market_goods_sell_orders
	subtract = bond_market_goods_buy_orders
}
stockpiling_bond_var_1 = {
	value = 0
}
releasing_bond_var_1 = {
	value = 0
}
stockpiling_bond_var_state = {
	value = 0
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
					is_incorporated = yes
				}
				add = var:stockpiling_bond_var_state_1
			}
		}
	}
}


########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

manufacture_stock_market_goods_sell_orders = {
	value = {
		add = market.mg:manufacture_stock.market_goods_sell_orders
	}
}
manufacture_stock_market_goods_buy_orders = {
	value = {
		add = market.mg:manufacture_stock.market_goods_buy_orders
	}
}
manufacture_stock_market_goods_delta = {
	value = manufacture_stock_market_goods_sell_orders
	subtract = manufacture_stock_market_goods_buy_orders
}
stockpiling_manufacture_stock_var_state = {
	value = 0
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
					is_incorporated = yes
				}
				add = var:stockpiling_manufacture_stock_var_state_1
			}
		}
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

agricultural_stock_market_goods_sell_orders = {
	value = {
		add = market.mg:agricultural_stock.market_goods_sell_orders
	}
}
agricultural_stock_market_goods_buy_orders = {
	value = {
		add = market.mg:agricultural_stock.market_goods_buy_orders
	}
}
agricultural_stock_market_goods_delta = {
	value = agricultural_stock_market_goods_sell_orders
	subtract = agricultural_stock_market_goods_buy_orders
}
stockpiling_agricultural_stock_var_state = {
	value = 0
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
					is_incorporated = yes
				}
				add = var:stockpiling_agricultural_stock_var_state_1
			}
		}
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

railroad_stock_market_goods_sell_orders = {
	value = {
		add = market.mg:railroad_stock.market_goods_sell_orders
	}
}
railroad_stock_market_goods_buy_orders = {
	value = {
		add = market.mg:railroad_stock.market_goods_buy_orders
	}
}
railroad_stock_market_goods_delta = {
	value = railroad_stock_market_goods_sell_orders
	subtract = railroad_stock_market_goods_buy_orders
}
stockpiling_railroad_stock_var_state = {
	value = 0
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
					is_incorporated = yes
				}
				add = var:stockpiling_railroad_stock_var_state_1
			}
		}
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

mining_stock_market_goods_sell_orders = {
	value = {
		add = market.mg:mining_stock.market_goods_sell_orders
	}
}
mining_stock_market_goods_buy_orders = {
	value = {
		add = market.mg:mining_stock.market_goods_buy_orders
	}
}
mining_stock_market_goods_delta = {
	value = mining_stock_market_goods_sell_orders
	subtract = mining_stock_market_goods_buy_orders
}
stockpiling_mining_stock_var_state = {
	value = 0
	add  = {
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
					is_incorporated = yes
				}
				add = var:stockpiling_mining_stock_var_state_1
			}
		}
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

#  ██████╗ ███████╗███╗   ██╗███████╗██████╗  █████╗ ██╗
# ██╔════╝ ██╔════╝████╗  ██║██╔════╝██╔══██╗██╔══██╗██║
# ██║  ███╗█████╗  ██╔██╗ ██║█████╗  ██████╔╝███████║██║
# ██║   ██║██╔══╝  ██║╚██╗██║██╔══╝  ██╔══██╗██╔══██║██║
# ╚██████╔╝███████╗██║ ╚████║███████╗██║  ██║██║  ██║███████╗
#  ╚═════╝ ╚══════╝╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
#
# ██╗███╗   ██╗██████╗ ██╗ ██████╗███████╗
# ██║████╗  ██║██╔══██╗██║██╔════╝██╔════╝
# ██║██╔██╗ ██║██║  ██║██║██║     █████╗
# ██║██║╚██╗██║██║  ██║██║██║     ██╔══╝
# ██║██║ ╚████║██████╔╝██║╚██████╗███████╗
# ╚═╝╚═╝  ╚═══╝╚═════╝ ╚═╝ ╚═════╝╚══════╝

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

# General indice

country_indice = {
	add = bond_market_index
	add = manufacture_stock_index
	add = agricultural_stock
	add = mining_stock_index
	add = railroad_stock_index
}
stock_market_index = {
	value = var:base_index_value

	max = 100000
}

# bond_indice
bond_price_0 = {
	value = 50
	subtract = {
		value = 50
		multiply = {
			value = 0
			subtract = {
				value = market.mg:bond.market_goods_pricier
				multiply = 50
			}
			divide = 50
		}
	}
	multiply = 0.33 #30%
}
bond_price_brut = {
	value = 50
	subtract = {
		value = 50
		multiply = {
			value = 0
			subtract = {
				value = market.mg:bond.market_goods_pricier
				multiply = 50
			}
			divide = 50
		}
	}
}
bond_price = {
	add = bond_price_0
	add = bond_demand_factor
	add = bond_money_value_factor
}

bond_by_price = {
	value = stockpiling_bond_var_state
	multiply = bond_price
}

bond_interest_rate_payable = {
	value = stockpiling_bond_var_state
	multiply = bond_price
	multiply = 1 #country_loan_interest_rate
}

bond_market_index = {
	value = bond_by_price
}

total_debt = {
	value = bond_market_index
	add = central_bank_debt
}

remaining_debt = {
	value = total_debt
	subtract = gold_loaned_to_central_bank
}

bond_demand_factor = {
	value = 33
	multiply = ratio_with_highest_prestige

	max = 33
}

highest_prestige = {
	every_country = {
		limit = {
			global_country_ranking = 1
		}
		add = prestige
	}
}

bond_money_value_factor = {
	value = 33
	multiply = money_value

	max = 33
}




# manufacture_stock_index

manufacture_stock_price = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:manufacture_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
	add = prosperity_by_company
}
manufacture_stock_price_brut = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = capita.market.mg:manufacture_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
}

manufacture_stock_index = {
	value = stockpiling_manufacture_stock_var_state
	multiply = manufacture_stock_price

	#multiply = money_value #money_value_exchange_rate_with_reference_currency
}

# agricultural_stock_index

agricultural_stock_price = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:agricultural_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
	add = prosperity_by_company
}
agricultural_stock_price_brut = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:agricultural_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
}

agricultural_stock_index = {
	value = stockpiling_agricultural_stock_var_state
	multiply = agricultural_stock_price

	#multiply = money_value #money_value_exchange_rate_with_reference_currency
}

# mining_stock_index

mining_stock_price = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:mining_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
	add = prosperity_by_company
}
mining_stock_price_brut = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:mining_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
}

mining_stock_index = {
	value = stockpiling_mining_stock_var_state
	multiply = mining_stock_price

	#multiply = money_value #money_value_exchange_rate_with_reference_currency
}

# railroad_stock_index

railroad_stock_price = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:railroad_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
	add = prosperity_by_company
}
railroad_stock_price_brut = {
	value = 25
	subtract = {
		value = 25
		multiply = {
			value = 0
			subtract = {
				value = market.mg:railroad_stock.market_goods_pricier
				multiply = 25
			}
			divide = 25
		}
	}
}


railroad_stock_index = {
	value = stockpiling_railroad_stock_var_state
	multiply = railroad_stock_price

	#multiply = money_value #money_value_exchange_rate_with_reference_currency
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

#building - # supply demand for financial product

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################


bg_financial_centre_lvl_on_market = {
	value = 0
	every_country = {
		limit = {
		    market.owner = root
			has_modifier = has_financial_center
		}
		add = 1
	}
}


test_var_sc_1 = {
	value = capital.gdp
}
test_var_sc_2 = { #production
	value = gdp_var
}
test_var_sc_3 = { #demand -> doit etre 25% superieur à production
	value = market.mg:manufacture_stock.market_goods_imports
}

#pdt de 1/FP/N

# manufacture_stock
# agricultural_stock
# mining_stock
# railroad_stock
bg_financial_centre_occupancy = {
	value = 0
	every_scope_building = {
		limit = {
			is_building_group = bg_financial_centre
		}
		add = occupancy
	}
}
bg_financial_centre_occupancy_reverse = {
	value = 1
	if = {
		limit = {
			bg_financial_centre_occupancy < 0.9
			bg_financial_centre_occupancy > 0.1  #à  voire
		}
		add  = {
			add = bg_financial_centre_occupancy
			subtract = 1
			multiply = -1
		}
	}	
}

bg_financial_centre_modifier = {
	value = 0
	every_scope_building = {
		limit = {
			is_building_group = bg_financial_centre
		}
		add = country_company_throughput_bonus
	}
}
#################
#mutual_fund
############
bond_price_by_demand_fc = {
	value = 0
	add = target_demand_bond_ajusted
	multiply = bond_price_brut
}
manufacture_stock_price_by_demand_fc = {
	value = 0
	add = target_demand_manufacture_stock_ajusted
	multiply = manufacture_stock_price_brut
}
agricultural_stock_price_by_demand_fc = {
	value = 0
	add = target_demand_agricultural_stock_ajusted
	multiply = agricultural_stock_price_brut
}
mining_stock_price_by_demand_fc = {
	value = 0
	add = target_demand_mining_stock_ajusted
	multiply = mining_stock_price_brut
}
railroad_stock_price_by_demand_fc = {
	value = 0
	add = target_demand_railroad_stock_ajusted
	multiply = railroad_stock_price_brut
}
total_cost_fcc = {
	value = 0
	add = bond_price_by_demand_fc
	add = manufacture_stock_price_by_demand_fc
	add = agricultural_stock_price_by_demand_fc
	add = mining_stock_price_by_demand_fc
	add = railroad_stock_price_by_demand_fc
}
base_supply_mutual_fund = {
    value = bg_financial_centre_lvl
    multiply = 1
}
collateral_quantity_mutual_fund = {
    value = total_cost_fcc
    divide = 250
}
target_supply_mutual_fund = {
    value = collateral_quantity_mutual_fund #quantité à avoir pour assurer le cout des bien
    multiply = 1.5 ##ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_supply_mutual_fund_for_modifier = {
    value = target_supply_mutual_fund
    subtract = base_supply_mutual_fund
    divide = base_supply_mutual_fund
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}
		}
		multiply = 0.1
	}
}
#################
#bond
############
base_demande_bond = {
    value = bg_financial_centre_lvl
    multiply = 1
}
target_demand_bond = {
    value = bond_market_goods_sell_orders
    multiply = 1 #ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_demand_bond_ajusted = {
    value = target_demand_bond
    subtract = market.mg:bond.market_goods_exports   
	min = 0
}
target_demand_bond_for_modifier = {
    value = target_demand_bond_ajusted
    subtract = base_demande_bond
    divide = base_demande_bond
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}
		}
		multiply = 0.1
	}
}
bond_market_goods_sell_orders_ratio = {
    value = bond_market_goods_sell_orders
	multiply = financial_product_by_trade_route
}
#################
#manufacture_stock
############
base_demande_manufacture_stock = {
    value = bg_financial_centre_lvl
    multiply = 1
}
target_demand_manufacture_stock = {
    value = manufacture_stock_market_goods_sell_orders
    multiply = 1 #ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_demand_manufacture_stock_ajusted = {
    value = target_demand_manufacture_stock
    subtract = market.mg:manufacture_stock.market_goods_exports   
	min = 0
}
target_demand_manufacture_stock_for_modifier = {
    value = target_demand_manufacture_stock_ajusted
    subtract = base_demande_manufacture_stock
    divide = base_demande_manufacture_stock
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}
		}
		multiply = 0.1
	}
}
manufacture_stock_market_goods_sell_orders_ratio = {
    value = manufacture_stock_market_goods_sell_orders
	multiply = financial_product_by_trade_route
}
#################
#agricultural_stock
############
base_demande_agricultural_stock = {
    value = bg_financial_centre_lvl
    multiply = 1
}
target_demand_agricultural_stock = {
    value = agricultural_stock_market_goods_sell_orders
    multiply = 1 #ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_demand_agricultural_stock_ajusted = {
    value = target_demand_agricultural_stock
    subtract = market.mg:agricultural_stock.market_goods_exports   
	min = 0
}
target_demand_agricultural_stock_for_modifier = {
    value = target_demand_agricultural_stock_ajusted
    subtract = base_demande_agricultural_stock
    divide = base_demande_agricultural_stock
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}		
		}
		multiply = 0.1
	}
}
agricultural_stock_market_goods_sell_orders_ratio = {
    value = agricultural_stock_market_goods_sell_orders
	multiply = financial_product_by_trade_route
}
#################
#mining_stock
############
base_demande_mining_stock = {
    value = bg_financial_centre_lvl
    multiply = 1
}
target_demand_mining_stock = {
    value = mining_stock_market_goods_sell_orders
    multiply = 1 #ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_demand_mining_stock_ajusted = {
    value = target_demand_mining_stock
    subtract = market.mg:mining_stock.market_goods_exports   
	min = 0
}
target_demand_mining_stock_for_modifier = {
    value = target_demand_mining_stock_ajusted
    subtract = base_demande_mining_stock
    divide = base_demande_mining_stock
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}	
		}
		multiply = 0.1
	}
}
mining_stock_market_goods_sell_orders_ratio = {
    value = mining_stock_market_goods_sell_orders
	multiply = financial_product_by_trade_route
}
#################
#railroad_stock
############
base_demande_railroad_stock = {
    value = bg_financial_centre_lvl
    multiply = 1
}
target_demand_railroad_stock = {
    value = railroad_stock_market_goods_sell_orders
    multiply = 1 #ajuster cette vvaleur pour augmenter prix du bien au dessus de neutralité
}
target_demand_railroad_stock_ajusted = {
    value = target_demand_railroad_stock
    subtract = market.mg:railroad_stock.market_goods_exports   
	min = 0
}
target_demand_railroad_stock_for_modifier = {
    value = target_demand_railroad_stock_ajusted
    subtract = base_demande_railroad_stock
    divide = base_demande_railroad_stock
    multiply = 100
	multiply = bg_financial_centre_occupancy_reverse #compensation pour faible occupency
	if = {
		limit = {
			or = {
				is_subject = yes 	
				not = {
					market.owner = root
				}
			}	
		}
		multiply = 0.1
	}
}
railroad_stock_market_goods_sell_orders_ratio = {
    value = railroad_stock_market_goods_sell_orders
	multiply = financial_product_by_trade_route
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

# ██████╗ ██╗   ██╗██╗██╗     ██████╗ ██╗███╗   ██╗ ██████╗
# ██╔══██╗██║   ██║██║██║     ██╔══██╗██║████╗  ██║██╔════╝
# ██████╔╝██║   ██║██║██║     ██║  ██║██║██╔██╗ ██║██║  ███╗
# ██╔══██╗██║   ██║██║██║     ██║  ██║██║██║╚██╗██║██║   ██║
# ██████╔╝╚██████╔╝██║███████╗██████╔╝██║██║ ╚████║╚██████╔╝
# ╚═════╝  ╚═════╝ ╚═╝╚══════╝╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝
#
# ████████╗██████╗  █████╗ ██████╗ ███████╗
# ╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝
#    ██║   ██████╔╝███████║██║  ██║█████╗
#    ██║   ██╔══██╗██╔══██║██║  ██║██╔══╝
#    ██║   ██║  ██║██║  ██║██████╔╝███████╗
#    ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝
#
#  ██████╗███████╗███╗   ██╗████████╗███████╗██████╗     ██╗    ██╗   ██╗██╗
# ██╔════╝██╔════╝████╗  ██║╚══██╔══╝██╔════╝██╔══██╗    ██║    ██║   ██║██║
# ██║     █████╗  ██╔██╗ ██║   ██║   █████╗  ██████╔╝    ██║    ██║   ██║██║
# ██║     ██╔══╝  ██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗    ██║    ╚██╗ ██╔╝██║
# ╚██████╗███████╗██║ ╚████║   ██║   ███████╗██║  ██║    ███████╗╚████╔╝ ███████╗
#  ╚═════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝    ╚══════╝ ╚═══╝  ╚══════╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

building_trade_center_lvl = {
    value = 0
    any_scope_building = {
        limit = {
            is_building_type = building_financial_district
			#has_building = building_railway

        }
		add = level

    }
}

# any_scope_building = {
# 	filter = {
# 		is_building_type = building_financial_district
# 	}
# 	percent >= 0.5
# 	has_active_production_method = pm_financial_district_publicly_traded
# 	cash_reserves_ratio >= 0.5
# 	weekly_profit > 0
# 	occupancy >= 0.75
# }

# building_railway_lvl_2 = { #mee donnee si unn bbanntimeent lamhbda eest détennue à une part
#     value = 0
# 	if = {
# 		limit = {
# 			every_scope_building = {
# 				is_building_type = building_railway
# 				level > 0
# 				private_ownership_fraction > 0
# 			}
# 		}
# 		add = 1
# 	}
# }

# country_ownership_fraction
# private_ownership_fraction
# building_trade_center_lvl = {
#     value = 0
#     every_scope_building = {
#         limit = {
#             is_building_type = building_trade_center
#         }
#         add = levels_owned_by_country
#     }
# }

building_financial_district_lvl = {
    value = 0
    every_scope_building = {
        limit = {
            is_building_type = building_financial_district
        }
        add = level
    }
}

building_railway_lvl_X = { #mee donnee si unn bbanntimeent lamhbda eest détennue à une part
    value = 0
	if = {
		limit = {
			any_scope_building = {
				level > 0
				private_ownership_fraction > 0
				is_building_type = building_railway
			}
		}
		add = 1
	}
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################


# ███████╗███████╗██╗     ██╗         ██╗     ██╗███╗   ███╗██╗████████╗    ██╗   ██╗ █████╗ ██████╗
# ██╔════╝██╔════╝██║     ██║         ██║     ██║████╗ ████║██║╚══██╔══╝    ██║   ██║██╔══██╗██╔══██╗
# ███████╗█████╗  ██║     ██║         ██║     ██║██╔████╔██║██║   ██║       ██║   ██║███████║██████╔╝
# ╚════██║██╔══╝  ██║     ██║         ██║     ██║██║╚██╔╝██║██║   ██║       ╚██╗ ██╔╝██╔══██║██╔══██╗
# ███████║███████╗███████╗███████╗    ███████╗██║██║ ╚═╝ ██║██║   ██║        ╚████╔╝ ██║  ██║██║  ██║
# ╚══════╝╚══════╝╚══════╝╚══════╝    ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝         ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################


sell_limit_var_0 = {
	value = 1000000
	if = {
		limit = {
			country_rank = rank_value:great_power
		}
		value = 10000000
	}
	if = {
		limit = {
			country_rank = rank_value:major_power
		}
		value = 5000000
	}
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

#  ██████╗  ██████╗  ██████╗ ██████╗     ██████╗ ██████╗ ██╗ ██████╗███████╗
# ██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗    ██╔══██╗██╔══██╗██║██╔════╝██╔════╝
# ██║  ███╗██║   ██║██║   ██║██║  ██║    ██████╔╝██████╔╝██║██║     █████╗
# ██║   ██║██║   ██║██║   ██║██║  ██║    ██╔═══╝ ██╔══██╗██║██║     ██╔══╝
# ╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝    ██║     ██║  ██║██║╚██████╗███████╗
#  ╚═════╝  ╚═════╝  ╚═════╝ ╚═════╝     ╚═╝     ╚═╝  ╚═╝╚═╝ ╚═════╝╚══════╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

###########################################################################################################################################################################################

#grain

grain_price = {
	value = 20
	subtract = {
		value = 20
		multiply = {
			value = 0
			subtract = {
				value = market.mg:grain.market_goods_pricier
				multiply = 20
			}
			divide = 20
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#wood

wood_price = {
	value = 20
	subtract = {
		value = 20
		multiply = {
			value = 0
			subtract = {
				value = market.mg:wood.market_goods_pricier
				multiply = 20
			}
			divide = 20
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#coal

coal_price = {
	value = 30
	subtract = {
		value = 30
		multiply = {
			value = 0
			subtract = {
				value = market.mg:coal.market_goods_pricier
				multiply = 30
			}
			divide = 30
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#iron

iron_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:iron.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#sulfur

sulfur_price = {
	value = 50
	subtract = {
		value = 50
		multiply = {
			value = 0
			subtract = {
				value = market.mg:sulfur.market_goods_pricier
				multiply = 50
			}
			divide = 50
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#lead

lead_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:lead.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#oil

oil_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:oil.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#dye

dye_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:dye.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#silk

silk_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:silk.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#rubber

rubber_price = {
	value = 40
	subtract = {
		value = 40
		multiply = {
			value = 0
			subtract = {
				value = market.mg:rubber.market_goods_pricier
				multiply = 40
			}
			divide = 40
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#ammunition

ammunition_price = {
	value = 50
	subtract = {
		value = 50
		multiply = {
			value = 0
			subtract = {
				value = market.mg:ammunition.market_goods_pricier
				multiply = 50
			}
			divide = 50
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#small_arms

small_arms_price = {
	value = 60
	subtract = {
		value = 60
		multiply = {
			value = 0
			subtract = {
				value = market.mg:small_arms.market_goods_pricier
				multiply = 60
			}
			divide = 60
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#artillery

artillery_price = {
	value = 70
	subtract = {
		value = 70
		multiply = {
			value = 0
			subtract = {
				value = market.mg:artillery.market_goods_pricier
				multiply = 70
			}
			divide = 70
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#tanks

tanks_price = {
	value = 80
	subtract = {
		value = 80
		multiply = {
			value = 0
			subtract = {
				value = market.mg:tanks.market_goods_pricier
				multiply = 80
			}
			divide = 80
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#aeroplanes

aeroplanes_price = {
	value = 80
	subtract = {
		value = 80
		multiply = {
			value = 0
			subtract = {
				value = market.mg:aeroplanes.market_goods_pricier
				multiply = 80
			}
			divide = 80
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#manowars

manowars_price = {
	value = 70
	subtract = {
		value = 70
		multiply = {
			value = 0
			subtract = {
				value = market.mg:manowars.market_goods_pricier
				multiply = 70
			}
			divide = 70
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#ironclads

ironclads_price = {
	value = 80
	subtract = {
		value = 80
		multiply = {
			value = 0
			subtract = {
				value = market.mg:ironclads.market_goods_pricier
				multiply = 80
			}
			divide = 80
		}
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

# ██╗███╗   ██╗████████╗███████╗██████╗ ███╗   ██╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗ █████╗
# ██║████╗  ██║╚══██╔══╝██╔════╝██╔══██╗████╗  ██║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║██╔══██╗
# ██║██╔██╗ ██║   ██║   █████╗  ██████╔╝██╔██╗ ██║███████║   ██║   ██║██║   ██║██╔██╗ ██║███████║
# ██║██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗██║╚██╗██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║██╔══██║
# ██║██║ ╚████║   ██║   ███████╗██║  ██║██║ ╚████║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║██║  ██║
# ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═╝
#
# ██╗         ██████╗ ██╗   ██╗██╗   ██╗
# ██║         ██╔══██╗██║   ██║╚██╗ ██╔╝
# ██║         ██████╔╝██║   ██║ ╚████╔╝
# ██║         ██╔══██╗██║   ██║  ╚██╔╝
# ███████╗    ██████╔╝╚██████╔╝   ██║
# ╚══════╝    ╚═════╝  ╚═════╝    ╚═╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

###########################################################################################################################################################################################

#grain

international_buy_grain_budget_panel = {
	value = var:grain_market_panel_quantity
	multiply = grain_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#wood

international_buy_wood_budget_panel = {
	value = var:wood_market_panel_quantity
	multiply = wood_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#coal

international_buy_coal_budget_panel = {
	value = var:coal_market_panel_quantity
	multiply = coal_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#iron

international_buy_iron_budget_panel = {
	value = var:iron_market_panel_quantity
	multiply = iron_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#sulfur

international_buy_sulfur_budget_panel = {
	value = var:sulfur_market_panel_quantity
	multiply = sulfur_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#lead

international_buy_lead_budget_panel = {
	value = var:lead_market_panel_quantity
	multiply = lead_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#oil

international_buy_oil_budget_panel = {
	value = var:oil_market_panel_quantity
	multiply = oil_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#dye

international_buy_dye_budget_panel = {
	value = var:dye_market_panel_quantity
	multiply = dye_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#silk

international_buy_silk_budget_panel = {
	value = var:silk_market_panel_quantity
	multiply = silk_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#rubber

international_buy_rubber_budget_panel = {
	value = var:rubber_market_panel_quantity
	multiply = rubber_global_market_goods_price
	multiply = {
		value = global_monetary_reference
		divide = money_value_rapported_inflation
	}
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

# ██████╗ ██╗   ██╗██╗   ██╗    ███╗   ███╗ █████╗ ██████╗ ██╗  ██╗███████╗████████╗
# ██╔══██╗██║   ██║╚██╗ ██╔╝    ████╗ ████║██╔══██╗██╔══██╗██║ ██╔╝██╔════╝╚══██╔══╝
# ██████╔╝██║   ██║ ╚████╔╝     ██╔████╔██║███████║██████╔╝█████╔╝ █████╗     ██║
# ██╔══██╗██║   ██║  ╚██╔╝      ██║╚██╔╝██║██╔══██║██╔══██╗██╔═██╗ ██╔══╝     ██║
# ██████╔╝╚██████╔╝   ██║       ██║ ╚═╝ ██║██║  ██║██║  ██║██║  ██╗███████╗   ██║
# ╚═════╝  ╚═════╝    ╚═╝       ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝   ╚═╝
#
# ██████╗  █████╗ ███╗   ██╗███████╗██╗
# ██╔══██╗██╔══██╗████╗  ██║██╔════╝██║
# ██████╔╝███████║██╔██╗ ██║█████╗  ██║
# ██╔═══╝ ██╔══██║██║╚██╗██║██╔══╝  ██║
# ██║     ██║  ██║██║ ╚████║███████╗███████╗
# ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚══════╝
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

###########################################################################################################################################################################################

#grain

buy_grain_market_panel = {
	value = player.var:grain_market_panel_quantity
	multiply = owner.grain_price
}

sell_grain_market_panel = {
	value = player.var:grain_market_panel_quantity
	multiply = player.grain_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#wood

buy_wood_market_panel = {
	value = player.var:wood_market_panel_quantity
	multiply = wood_price
}

sell_wood_market_panel = {
	value = player.var:wood_market_panel_quantity
	multiply = player.wood_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#coal

buy_coal_market_panel = {
	value = player.var:coal_market_panel_quantity
	multiply = coal_price
}

sell_coal_market_panel = {
	value = player.var:coal_market_panel_quantity
	multiply = player.coal_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#iron

buy_iron_market_panel = {
	value = player.var:iron_market_panel_quantity
	multiply = iron_price
}

sell_iron_market_panel = {
	value = player.var:iron_market_panel_quantity
	multiply = player.iron_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#sulfur

buy_sulfur_market_panel = {
	value = player.var:sulfur_market_panel_quantity
	multiply = sulfur_price
}

sell_sulfur_market_panel = {
	value = player.var:sulfur_market_panel_quantity
	multiply = player.sulfur_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#lead

buy_lead_market_panel = {
	value = player.var:lead_market_panel_quantity
	multiply = lead_price
}

sell_lead_market_panel = {
	value = player.var:lead_market_panel_quantity
	multiply = player.lead_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#oil

buy_oil_market_panel = {
	value = player.var:oil_market_panel_quantity
	multiply = oil_price
}

sell_oil_market_panel = {
	value = player.var:oil_market_panel_quantity
	multiply = player.oil_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#dye

buy_dye_market_panel = {
	value = player.var:dye_market_panel_quantity
	multiply = dye_price
}

sell_dye_market_panel = {
	value = player.var:dye_market_panel_quantity
	multiply = player.dye_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#silk

buy_silk_market_panel = {
	value = player.var:silk_market_panel_quantity
	multiply = silk_price
}

sell_silk_market_panel = {
	value = player.var:silk_market_panel_quantity
	multiply = player.silk_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#rubber

buy_rubber_market_panel = {
	value = player.var:rubber_market_panel_quantity
	multiply = rubber_price
}

sell_rubber_market_panel = {
	value = player.var:rubber_market_panel_quantity
	multiply = player.rubber_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#ammunition

buy_ammunition_market_panel = {
	value = player.var:ammunition_market_panel_quantity
	multiply = ammunition_price
}

sell_ammunition_market_panel = {
	value = player.var:ammunition_market_panel_quantity
	multiply = player.ammunition_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#small_arms

buy_small_arms_market_panel = {
	value = player.var:small_arms_market_panel_quantity
	multiply = small_arms_price
}

sell_small_arms_market_panel = {
	value = player.var:small_arms_market_panel_quantity
	multiply = player.small_arms_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#artillery

buy_artillery_market_panel = {
	value = player.var:artillery_market_panel_quantity
	multiply = artillery_price
}

sell_artillery_market_panel = {
	value = player.var:artillery_market_panel_quantity
	multiply = player.artillery_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#tanks

buy_tanks_market_panel = {
	value = player.var:tanks_market_panel_quantity
	multiply = tanks_price
}

sell_tanks_market_panel = {
	value = player.var:tanks_market_panel_quantity
	multiply = player.tanks_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#aeroplanes

buy_aeroplanes_market_panel = {
	value = player.var:aeroplanes_market_panel_quantity
	multiply = aeroplanes_price
}

sell_aeroplanes_market_panel = {
	value = player.var:aeroplanes_market_panel_quantity
	multiply = player.aeroplanes_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#manowars

buy_manowars_market_panel = {
	value = player.var:manowars_market_panel_quantity
	multiply = manowars_price
}

sell_manowars_market_panel = {
	value = player.var:manowars_market_panel_quantity
	multiply = player.manowars_price
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################

#ironclads

buy_ironclads_market_panel = {
	value = player.var:ironclads_market_panel_quantity
	multiply = ironclads_price
}

sell_ironclads_market_panel = {
	value = player.var:ironclads_market_panel_quantity
	multiply = player.ironclads_price
}

###########################################################################################################################################################################################


###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

# ██████╗ ██╗   ██╗██╗   ██╗    ███╗   ███╗ █████╗ ██████╗ ██╗  ██╗███████╗████████╗    ██████╗  █████╗ ███╗   ██╗███████╗██╗         ██╗███╗   ██╗     ██████╗  ██████╗ ██╗     ██████╗
# ██╔══██╗██║   ██║╚██╗ ██╔╝    ████╗ ████║██╔══██╗██╔══██╗██║ ██╔╝██╔════╝╚══██╔══╝    ██╔══██╗██╔══██╗████╗  ██║██╔════╝██║         ██║████╗  ██║    ██╔════╝ ██╔═══██╗██║     ██╔══██╗
# ██████╔╝██║   ██║ ╚████╔╝     ██╔████╔██║███████║██████╔╝█████╔╝ █████╗     ██║       ██████╔╝███████║██╔██╗ ██║█████╗  ██║         ██║██╔██╗ ██║    ██║  ███╗██║   ██║██║     ██║  ██║
# ██╔══██╗██║   ██║  ╚██╔╝      ██║╚██╔╝██║██╔══██║██╔══██╗██╔═██╗ ██╔══╝     ██║       ██╔═══╝ ██╔══██║██║╚██╗██║██╔══╝  ██║         ██║██║╚██╗██║    ██║   ██║██║   ██║██║     ██║  ██║
# ██████╔╝╚██████╔╝   ██║       ██║ ╚═╝ ██║██║  ██║██║  ██║██║  ██╗███████╗   ██║       ██║     ██║  ██║██║ ╚████║███████╗███████╗    ██║██║ ╚████║    ╚██████╔╝╚██████╔╝███████╗██████╔╝
# ╚═════╝  ╚═════╝    ╚═╝       ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝   ╚═╝       ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚══════╝    ╚═╝╚═╝  ╚═══╝     ╚═════╝  ╚═════╝ ╚══════╝╚═════╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

###########################################################################################################################################################################################

#grain

buy_grain_in_gold_market_panel = {
	value = player.var:grain_market_panel_quantity
	multiply = owner.grain_price
	multiply = owner.money_value_rapported_inflation
}

sell_grain_in_gold_market_panel = {
	value = player.var:grain_market_panel_quantity
	multiply = player.grain_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#wood

buy_wood_in_gold_market_panel = {
	value = player.var:wood_market_panel_quantity
	multiply = owner.wood_price
	multiply = owner.money_value_rapported_inflation
}

sell_wood_in_gold_market_panel = {
	value = player.var:wood_market_panel_quantity
	multiply = player.wood_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#coal

buy_coal_in_gold_market_panel = {
	value = player.var:coal_market_panel_quantity
	multiply = owner.coal_price
	multiply = owner.money_value_rapported_inflation
}

sell_coal_in_gold_market_panel = {
	value = player.var:coal_market_panel_quantity
	multiply = player.coal_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#iron

buy_iron_in_gold_market_panel = {
	value = player.var:iron_market_panel_quantity
	multiply = owner.iron_price
	multiply = owner.money_value_rapported_inflation
}

sell_iron_in_gold_market_panel = {
	value = player.var:iron_market_panel_quantity
	multiply = player.iron_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#sulfur

buy_sulfur_in_gold_market_panel = {
	value = player.var:sulfur_market_panel_quantity
	multiply = owner.sulfur_price
	multiply = owner.money_value_rapported_inflation
}

sell_sulfur_in_gold_market_panel = {
	value = player.var:sulfur_market_panel_quantity
	multiply = player.sulfur_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#lead

buy_lead_in_gold_market_panel = {
	value = player.var:lead_market_panel_quantity
	multiply = owner.lead_price
	multiply = owner.money_value_rapported_inflation
}

sell_lead_in_gold_market_panel = {
	value = player.var:lead_market_panel_quantity
	multiply = player.lead_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#oil

buy_oil_in_gold_market_panel = {
	value = player.var:oil_market_panel_quantity
	multiply = owner.oil_price
	multiply = owner.money_value_rapported_inflation
}

sell_oil_in_gold_market_panel = {
	value = player.var:oil_market_panel_quantity
	multiply = player.oil_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#dye

buy_dye_in_gold_market_panel = {
	value = player.var:dye_market_panel_quantity
	multiply = owner.dye_price
	multiply = owner.money_value_rapported_inflation
}

sell_dye_in_gold_market_panel = {
	value = player.var:dye_market_panel_quantity
	multiply = player.dye_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#silk

buy_silk_in_gold_market_panel = {
	value = player.var:silk_market_panel_quantity
	multiply = owner.silk_price
	multiply = owner.money_value_rapported_inflation
}

sell_silk_in_gold_market_panel = {
	value = player.var:silk_market_panel_quantity
	multiply = player.silk_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#rubber

buy_rubber_in_gold_market_panel = {
	value = player.var:rubber_market_panel_quantity
	multiply = owner.rubber_price
	multiply = owner.money_value_rapported_inflation
}

sell_rubber_in_gold_market_panel = {
	value = player.var:rubber_market_panel_quantity
	multiply = player.rubber_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#ammunition

buy_ammunition_in_gold_market_panel = {
	value = player.var:ammunition_market_panel_quantity
	multiply = owner.ammunition_price
	multiply = owner.money_value_rapported_inflation
}

sell_ammunition_in_gold_market_panel = {
	value = player.var:ammunition_market_panel_quantity
	multiply = player.ammunition_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#small_arms

buy_small_arms_in_gold_market_panel = {
	value = player.var:small_arms_market_panel_quantity
	multiply = owner.small_arms_price
	multiply = owner.money_value_rapported_inflation
}

sell_small_arms_in_gold_market_panel = {
	value = player.var:small_arms_market_panel_quantity
	multiply = player.small_arms_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#artillery

buy_artillery_in_gold_market_panel = {
	value = player.var:artillery_market_panel_quantity
	multiply = owner.artillery_price
	multiply = owner.money_value_rapported_inflation
}

sell_artillery_in_gold_market_panel = {
	value = player.var:artillery_market_panel_quantity
	multiply = player.artillery_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#tanks

buy_tanks_in_gold_market_panel = {
	value = player.var:tanks_market_panel_quantity
	multiply = owner.tanks_price
	multiply = owner.money_value_rapported_inflation
}

sell_tanks_in_gold_market_panel = {
	value = player.var:tanks_market_panel_quantity
	multiply = player.tanks_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#aeroplanes

buy_aeroplanes_in_gold_market_panel = {
	value = player.var:aeroplanes_market_panel_quantity
	multiply = owner.aeroplanes_price
	multiply = owner.money_value_rapported_inflation
}

sell_aeroplanes_in_gold_market_panel = {
	value = player.var:aeroplanes_market_panel_quantity
	multiply = player.aeroplanes_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#manowars

buy_manowars_in_gold_market_panel = {
	value = player.var:manowars_market_panel_quantity
	multiply = owner.manowars_price
	multiply = owner.money_value_rapported_inflation
}

sell_manowars_in_gold_market_panel = {
	value = player.var:manowars_market_panel_quantity
	multiply = player.manowars_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################
###########################################################################################################################################################################################

#ironclads

buy_ironclads_in_gold_market_panel = {
	value = player.var:ironclads_market_panel_quantity
	multiply = owner.ironclads_price
	multiply = owner.money_value_rapported_inflation
}

sell_ironclads_in_gold_market_panel = {
	value = player.var:ironclads_market_panel_quantity
	multiply = player.ironclads_price
	multiply = player.money_value_rapported_inflation
}

###########################################################################################################################################################################################

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

# ██████╗  ██████╗ ███╗   ██╗██████╗      █████╗     ███████╗██╗   ██╗██████╗ ██████╗ ██████╗ ██╗███╗   ███╗███████╗██████╗
# ██╔══██╗██╔═══██╗████╗  ██║██╔══██╗    ██╔══██╗    ██╔════╝██║   ██║██╔══██╗██╔══██╗██╔══██╗██║████╗ ████║██╔════╝██╔══██╗
# ██████╔╝██║   ██║██╔██╗ ██║██║  ██║    ███████║    ███████╗██║   ██║██████╔╝██████╔╝██████╔╝██║██╔████╔██║█████╗  ██████╔╝
# ██╔══██╗██║   ██║██║╚██╗██║██║  ██║    ██╔══██║    ╚════██║██║   ██║██╔═══╝ ██╔═══╝ ██╔══██╗██║██║╚██╔╝██║██╔══╝  ██╔══██╗
# ██████╔╝╚██████╔╝██║ ╚████║██████╔╝    ██║  ██║    ███████║╚██████╔╝██║     ██║     ██║  ██║██║██║ ╚═╝ ██║███████╗██║  ██║
# ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝     ╚═╝  ╚═╝    ╚══════╝ ╚═════╝ ╚═╝     ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚═╝

###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################
###########################################################################################################################################################################################

price_bond = {
	value = player.var:bond_quantity
	multiply = bond_price
}
price_bond_in_currency = {
	value = player.var:bond_quantity
	multiply = bond_price

	if = {
		limit = {
			player.var:bond_in_on = 1
		}
		divide = money_value
	}
}

price_bond_in_currency_for_gui = {
	value = scope:buyer.var:bond_quantity
	multiply = bond_price

	if = {
		limit = {
			scope:buyer.var:bond_in_on = 1
		}
		divide = money_value
	}
}

enough_foreign_currrency = {
 	value = 0
	market.owner = {
		#dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_state_1
						add = var:stockpiling_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_algerian_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_algerian_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_algerian_dinar_state_1
						add = var:stockpiling_dinar_algerian_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_iraqi_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_iraqi_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_iraqi_dinar_state_1
						add = var:stockpiling_dinar_iraqi_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_libyan_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_libyan_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_libyan_dinar_state_1
						add = var:stockpiling_dinar_libyan_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_moroccan_dirham
		if = {
			limit = {
				has_law = law_type:law_dinar_moroccan_dirham_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_moroccan_dirham_state_1
						add = var:stockpiling_dinar_moroccan_dirham_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_omanian_rial
		if = {
			limit = {
				has_law = law_type:law_dinar_omanian_rial_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_omanian_rial_state_1
						add = var:stockpiling_dinar_omanian_rial_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_qiran
		if = {
			limit = {
				has_law = law_type:law_dinar_qiran_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_qiran_state_1
						add = var:stockpiling_dinar_qiran_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_saudi_riyal
		if = {
			limit = {
				has_law = law_type:law_dinar_saudi_riyal_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_saudi_riyal_state_1
						add = var:stockpiling_dinar_saudi_riyal_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_serbian_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_serbian_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_serbian_dinar_state_1
						add = var:stockpiling_dinar_serbian_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_tunisian_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_tunisian_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_tunisian_dinar_state_1
						add = var:stockpiling_dinar_tunisian_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dinar_yugoslav_dinar
		if = {
			limit = {
				has_law = law_type:law_dinar_yugoslav_dinar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dinar_yugoslav_dinar_state_1
						add = var:stockpiling_dinar_yugoslav_dinar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_australian_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_australian_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_australian_dollar_state_1
						add = var:stockpiling_dollar_australian_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_canadian_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_canadian_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_canadian_dollar_state_1
						add = var:stockpiling_dollar_canadian_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_caribbean_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_caribbean_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_caribbean_dollar_state_1
						add = var:stockpiling_dollar_caribbean_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_confederate_states_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_confederate_states_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_confederate_states_dollar_state_1
						add = var:stockpiling_dollar_confederate_states_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_liberian_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_liberian_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_liberian_dollar_state_1
						add = var:stockpiling_dollar_liberian_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_new_zealand_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_new_zealand_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_new_zealand_dollar_state_1
						add = var:stockpiling_dollar_new_zealand_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_sierra_leonean_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_sierra_leonean_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_sierra_leonean_dollar_state_1
						add = var:stockpiling_dollar_sierra_leonean_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#dollar_united_states_dollar
		if = {
			limit = {
				has_law = law_type:law_dollar_united_states_dollar_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_dollar_united_states_dollar_state_1
						add = var:stockpiling_dollar_united_states_dollar_reserve_currency_state_1
					}
				}
			}
		}
		#eco_ariary
		if = {
			limit = {
				has_law = law_type:law_eco_ariary_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_ariary_state_1
						add = var:stockpiling_eco_ariary_reserve_currency_state_1
					}
				}
			}
		}
		#eco_central_african_eco
		if = {
			limit = {
				has_law = law_type:law_eco_central_african_eco_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_central_african_eco_state_1
						add = var:stockpiling_eco_central_african_eco_reserve_currency_state_1
					}
				}
			}
		}
		#eco_east_african_eco
		if = {
			limit = {
				has_law = law_type:law_eco_east_african_eco_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_east_african_eco_state_1
						add = var:stockpiling_eco_east_african_eco_reserve_currency_state_1
					}
				}
			}
		}
		#eco_ethiopian_birr
		if = {
			limit = {
				has_law = law_type:law_eco_ethiopian_birr_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_ethiopian_birr_state_1
						add = var:stockpiling_eco_ethiopian_birr_reserve_currency_state_1
					}
				}
			}
		}
		#eco_ghanaian_pound
		if = {
			limit = {
				has_law = law_type:law_eco_ghanaian_pound_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_ghanaian_pound_state_1
						add = var:stockpiling_eco_ghanaian_pound_reserve_currency_state_1
					}
				}
			}
		}
		#eco_nigerian_naira
		if = {
			limit = {
				has_law = law_type:law_eco_nigerian_naira_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_nigerian_naira_state_1
						add = var:stockpiling_eco_nigerian_naira_reserve_currency_state_1
					}
				}
			}
		}
		#eco_south_african_rand
		if = {
			limit = {
				has_law = law_type:law_eco_south_african_rand_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_south_african_rand_state_1
						add = var:stockpiling_eco_south_african_rand_reserve_currency_state_1
					}
				}
			}
		}
		#eco_tuareg_ouguiya
		if = {
			limit = {
				has_law = law_type:law_eco_tuareg_ouguiya_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_tuareg_ouguiya_state_1
						add = var:stockpiling_eco_tuareg_ouguiya_reserve_currency_state_1
					}
				}
			}
		}
		#eco_west_african_eco
		if = {
			limit = {
				has_law = law_type:law_eco_west_african_eco_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_eco_west_african_eco_state_1
						add = var:stockpiling_eco_west_african_eco_reserve_currency_state_1
					}
				}
			}
		}
		#franc_belgian_franc
		if = {
			limit = {
				has_law = law_type:law_franc_belgian_franc_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_franc_belgian_franc_state_1
						add = var:stockpiling_franc_belgian_franc_reserve_currency_state_1
					}
				}
			}
		}
		#franc_french_franc
		if = {
			limit = {
				has_law = law_type:law_franc_french_franc_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_franc_french_franc_state_1
						add = var:stockpiling_franc_french_franc_reserve_currency_state_1
					}
				}
			}
		}
		#franc_luxembourgish_franc
		if = {
			limit = {
				has_law = law_type:law_franc_luxembourgish_franc_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_franc_luxembourgish_franc_state_1
						add = var:stockpiling_franc_luxembourgish_franc_reserve_currency_state_1
					}
				}
			}
		}
		#franc_swiss_franc
		if = {
			limit = {
				has_law = law_type:law_franc_swiss_franc_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_franc_swiss_franc_state_1
						add = var:stockpiling_franc_swiss_franc_reserve_currency_state_1
					}
				}
			}
		}
		#gulden
		if = {
			limit = {
				has_law = law_type:law_gulden_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_state_1
						add = var:stockpiling_gulden_reserve_currency_state_1
					}
				}
			}
		}
		#gulden_bavarian_gulden
		if = {
			limit = {
				has_law = law_type:law_gulden_bavarian_gulden_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_bavarian_gulden_state_1
						add = var:stockpiling_gulden_bavarian_gulden_reserve_currency_state_1
					}
				}
			}
		}
		#gulden_florin
		if = {
			limit = {
				has_law = law_type:law_gulden_florin_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_florin_state_1
						add = var:stockpiling_gulden_florin_reserve_currency_state_1
					}
				}
			}
		}
		#gulden_hungarian_forint
		if = {
			limit = {
				has_law = law_type:law_gulden_hungarian_forint_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_hungarian_forint_state_1
						add = var:stockpiling_gulden_hungarian_forint_reserve_currency_state_1
					}
				}
			}
		}
		#gulden_indies_guilder
		if = {
			limit = {
				has_law = law_type:law_gulden_indies_guilder_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_indies_guilder_state_1
						add = var:stockpiling_gulden_indies_guilder_reserve_currency_state_1
					}
				}
			}
		}
		#gulden_south_german_gulden
		if = {
			limit = {
				has_law = law_type:law_gulden_south_german_gulden_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_gulden_south_german_gulden_state_1
						add = var:stockpiling_gulden_south_german_gulden_reserve_currency_state_1
					}
				}
			}
		}
		#krone_czech_koruna
		if = {
			limit = {
				has_law = law_type:law_krone_czech_koruna_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_czech_koruna_state_1
						add = var:stockpiling_krone_czech_koruna_reserve_currency_state_1
					}
				}
			}
		}
		#krone_danish_krone
		if = {
			limit = {
				has_law = law_type:law_krone_danish_krone_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_danish_krone_state_1
						add = var:stockpiling_krone_danish_krone_reserve_currency_state_1
					}
				}
			}
		}
		#krone_estonian_kroon
		if = {
			limit = {
				has_law = law_type:law_krone_estonian_kroon_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_estonian_kroon_state_1
						add = var:stockpiling_krone_estonian_kroon_reserve_currency_state_1
					}
				}
			}
		}
		#krone_icelandic_krona
		if = {
			limit = {
				has_law = law_type:law_krone_icelandic_krona_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_icelandic_krona_state_1
						add = var:stockpiling_krone_icelandic_krona_reserve_currency_state_1
					}
				}
			}
		}
		#krone_norwegian_krone
		if = {
			limit = {
				has_law = law_type:law_krone_norwegian_krone_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_norwegian_krone_state_1
						add = var:stockpiling_krone_norwegian_krone_reserve_currency_state_1
					}
				}
			}
		}
		#krone_slovak_koruna
		if = {
			limit = {
				has_law = law_type:law_krone_slovak_koruna_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_slovak_koruna_state_1
						add = var:stockpiling_krone_slovak_koruna_reserve_currency_state_1
					}
				}
			}
		}
		#krone_swedish_krona
		if = {
			limit = {
				has_law = law_type:law_krone_swedish_krona_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_krone_swedish_krona_state_1
						add = var:stockpiling_krone_swedish_krona_reserve_currency_state_1
					}
				}
			}
		}
		#leon_leu
		if = {
			limit = {
				has_law = law_type:law_leon_leu_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_leon_leu_state_1
						add = var:stockpiling_leon_leu_reserve_currency_state_1
					}
				}
			}
		}
		#leon_lev
		if = {
			limit = {
				has_law = law_type:law_leon_lev_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_leon_lev_state_1
						add = var:stockpiling_leon_lev_reserve_currency_state_1
					}
				}
			}
		}
		#lira
		if = {
			limit = {
				has_law = law_type:law_lira_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_state_1
						add = var:stockpiling_lira_reserve_currency_state_1
					}
				}
			}
		}
		#lira_ducato
		if = {
			limit = {
				has_law = law_type:law_lira_ducato_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_ducato_state_1
						add = var:stockpiling_lira_ducato_reserve_currency_state_1
					}
				}
			}
		}
		#lira_ottoman_lira
		if = {
			limit = {
				has_law = law_type:law_lira_ottoman_lira_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_ottoman_lira_state_1
						add = var:stockpiling_lira_ottoman_lira_reserve_currency_state_1
					}
				}
			}
		}
		#lira_scudo_pontificio
		if = {
			limit = {
				has_law = law_type:law_lira_scudo_pontificio_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_scudo_pontificio_state_1
						add = var:stockpiling_lira_scudo_pontificio_reserve_currency_state_1
					}
				}
			}
		}
		#lira_scudo_sardo
		if = {
			limit = {
				has_law = law_type:law_lira_scudo_sardo_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_scudo_sardo_state_1
						add = var:stockpiling_lira_scudo_sardo_reserve_currency_state_1
					}
				}
			}
		}
		#lira_toscane_lira
		if = {
			limit = {
				has_law = law_type:law_lira_toscane_lira_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_lira_toscane_lira_state_1
						add = var:stockpiling_lira_toscane_lira_reserve_currency_state_1
					}
				}
			}
		}
		#mark
		if = {
			limit = {
				has_law = law_type:law_mark_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_mark_state_1
						add = var:stockpiling_mark_reserve_currency_state_1
					}
				}
			}
		}
		#mark_finnish_markka
		if = {
			limit = {
				has_law = law_type:law_mark_finnish_markka_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_mark_finnish_markka_state_1
						add = var:stockpiling_mark_finnish_markka_reserve_currency_state_1
					}
				}
			}
		}
		#peso
		if = {
			limit = {
				has_law = law_type:law_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_state_1
						add = var:stockpiling_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_argentine_peso
		if = {
			limit = {
				has_law = law_type:law_peso_argentine_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_argentine_peso_state_1
						add = var:stockpiling_peso_argentine_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_bolivien_peso
		if = {
			limit = {
				has_law = law_type:law_peso_bolivien_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_bolivien_peso_state_1
						add = var:stockpiling_peso_bolivien_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_chilean_peso
		if = {
			limit = {
				has_law = law_type:law_peso_chilean_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_chilean_peso_state_1
						add = var:stockpiling_peso_chilean_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_colombian_peso
		if = {
			limit = {
				has_law = law_type:law_peso_colombian_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_colombian_peso_state_1
						add = var:stockpiling_peso_colombian_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_costa_rican_colon
		if = {
			limit = {
				has_law = law_type:law_peso_costa_rican_colon_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_costa_rican_colon_state_1
						add = var:stockpiling_peso_costa_rican_colon_reserve_currency_state_1
					}
				}
			}
		}
		#peso_cuban_peso
		if = {
			limit = {
				has_law = law_type:law_peso_cuban_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_cuban_peso_state_1
						add = var:stockpiling_peso_cuban_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_ecuadorian_peso
		if = {
			limit = {
				has_law = law_type:law_peso_ecuadorian_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_ecuadorian_peso_state_1
						add = var:stockpiling_peso_ecuadorian_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_el_salvador_colon
		if = {
			limit = {
				has_law = law_type:law_peso_el_salvador_colon_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_el_salvador_colon_state_1
						add = var:stockpiling_peso_el_salvador_colon_reserve_currency_state_1
					}
				}
			}
		}
		#peso_guatemalan_quetzal
		if = {
			limit = {
				has_law = law_type:law_peso_guatemalan_quetzal_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_guatemalan_quetzal_state_1
						add = var:stockpiling_peso_guatemalan_quetzal_reserve_currency_state_1
					}
				}
			}
		}
		#peso_honduran_lempira
		if = {
			limit = {
				has_law = law_type:law_peso_honduran_lempira_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_honduran_lempira_state_1
						add = var:stockpiling_peso_honduran_lempira_reserve_currency_state_1
					}
				}
			}
		}
		#peso_mexican_peso
		if = {
			limit = {
				has_law = law_type:law_peso_mexican_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_mexican_peso_state_1
						add = var:stockpiling_peso_mexican_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_nicaraguan_cordoba
		if = {
			limit = {
				has_law = law_type:law_peso_nicaraguan_cordoba_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_nicaraguan_cordoba_state_1
						add = var:stockpiling_peso_nicaraguan_cordoba_reserve_currency_state_1
					}
				}
			}
		}
		#peso_paraguayan_peso
		if = {
			limit = {
				has_law = law_type:law_peso_paraguayan_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_paraguayan_peso_state_1
						add = var:stockpiling_peso_paraguayan_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_philippine_peso
		if = {
			limit = {
				has_law = law_type:law_peso_philippine_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_philippine_peso_state_1
						add = var:stockpiling_peso_philippine_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_sol_de_oro
		if = {
			limit = {
				has_law = law_type:law_peso_sol_de_oro_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_sol_de_oro_state_1
						add = var:stockpiling_peso_sol_de_oro_reserve_currency_state_1
					}
				}
			}
		}
		#peso_uruguayan_peso
		if = {
			limit = {
				has_law = law_type:law_peso_uruguayan_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_uruguayan_peso_state_1
						add = var:stockpiling_peso_uruguayan_peso_reserve_currency_state_1
					}
				}
			}
		}
		#peso_venezuelan_peso
		if = {
			limit = {
				has_law = law_type:law_peso_venezuelan_peso_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_peso_venezuelan_peso_state_1
						add = var:stockpiling_peso_venezuelan_peso_reserve_currency_state_1
					}
				}
			}
		}
		#pound_egyptian_pound
		if = {
			limit = {
				has_law = law_type:law_pound_egyptian_pound_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_pound_egyptian_pound_state_1
						add = var:stockpiling_pound_egyptian_pound_reserve_currency_state_1
					}
				}
			}
		}
		#pound_irish_pound
		if = {
			limit = {
				has_law = law_type:law_pound_irish_pound_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_pound_irish_pound_state_1
						add = var:stockpiling_pound_irish_pound_reserve_currency_state_1
					}
				}
			}
		}
		#pound_sterling
		if = {
			limit = {
				has_law = law_type:law_pound_sterling_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_pound_sterling_state_1
						add = var:stockpiling_pound_sterling_reserve_currency_state_1
					}
				}
			}
		}
		#real
		if = {
			limit = {
				has_law = law_type:law_real_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_real_state_1
						add = var:stockpiling_real_reserve_currency_state_1
					}
				}
			}
		}
		#real_brazilian_real
		if = {
			limit = {
				has_law = law_type:law_real_brazilian_real_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_real_brazilian_real_state_1
						add = var:stockpiling_real_brazilian_real_reserve_currency_state_1
					}
				}
			}
		}
		#rupee_indian_rupee
		if = {
			limit = {
				has_law = law_type:law_rupee_indian_rupee_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_rupee_indian_rupee_state_1
						add = var:stockpiling_rupee_indian_rupee_reserve_currency_state_1
					}
				}
			}
		}
		#rupee_indonesian_rupiah
		if = {
			limit = {
				has_law = law_type:law_rupee_indonesian_rupiah_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_rupee_indonesian_rupiah_state_1
						add = var:stockpiling_rupee_indonesian_rupiah_reserve_currency_state_1
					}
				}
			}
		}
		#spe_baht
		if = {
			limit = {
				has_law = law_type:law_spe_baht_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_baht_state_1
						add = var:stockpiling_spe_baht_reserve_currency_state_1
					}
				}
			}
		}
		#spe_dong
		if = {
			limit = {
				has_law = law_type:law_spe_dong_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_dong_state_1
						add = var:stockpiling_spe_dong_reserve_currency_state_1
					}
				}
			}
		}
		#spe_drachma
		if = {
			limit = {
				has_law = law_type:law_spe_drachma_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_drachma_state_1
						add = var:stockpiling_spe_drachma_reserve_currency_state_1
					}
				}
			}
		}
		#spe_korean_won
		if = {
			limit = {
				has_law = law_type:law_spe_korean_won_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_korean_won_state_1
						add = var:stockpiling_spe_korean_won_reserve_currency_state_1
					}
				}
			}
		}
		#spe_latvian_lats
		if = {
			limit = {
				has_law = law_type:law_spe_latvian_lats_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_latvian_lats_state_1
						add = var:stockpiling_spe_latvian_lats_reserve_currency_state_1
					}
				}
			}
		}
		#spe_lithuanian_litas
		if = {
			limit = {
				has_law = law_type:law_spe_lithuanian_litas_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_lithuanian_litas_state_1
						add = var:stockpiling_spe_lithuanian_litas_reserve_currency_state_1
					}
				}
			}
		}
		#spe_peseta
		if = {
			limit = {
				has_law = law_type:law_spe_peseta_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_peseta_state_1
						add = var:stockpiling_spe_peseta_reserve_currency_state_1
					}
				}
			}
		}
		#spe_ruble
		if = {
			limit = {
				has_law = law_type:law_spe_ruble_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_ruble_state_1
						add = var:stockpiling_spe_ruble_reserve_currency_state_1
					}
				}
			}
		}
		#spe_uni
		if = {
			limit = {
				has_law = law_type:law_spe_uni_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_uni_state_1
						add = var:stockpiling_spe_uni_reserve_currency_state_1
					}
				}
			}
		}
		#spe_yen
		if = {
			limit = {
				has_law = law_type:law_spe_yen_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_yen_state_1
						add = var:stockpiling_spe_yen_reserve_currency_state_1
					}
				}
			}
		}
		#spe_yuan
		if = {
			limit = {
				has_law = law_type:law_spe_yuan_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_yuan_state_1
						add = var:stockpiling_spe_yuan_reserve_currency_state_1
					}
				}
			}
		}
		#spe_zloti
		if = {
			limit = {
				has_law = law_type:law_spe_zloti_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_spe_zloti_state_1
						add = var:stockpiling_spe_zloti_reserve_currency_state_1
					}
				}
			}
		}
		#thaler_hannoveraner_thaler
		if = {
			limit = {
				has_law = law_type:law_thaler_hannoveraner_thaler_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_thaler_hannoveraner_thaler_state_1
						add = var:stockpiling_thaler_hannoveraner_thaler_reserve_currency_state_1
					}
				}
			}
		}
		#thaler_prussian_thaler
		if = {
			limit = {
				has_law = law_type:law_thaler_prussian_thaler_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_thaler_prussian_thaler_state_1
						add = var:stockpiling_thaler_prussian_thaler_reserve_currency_state_1
					}
				}
			}
		}
		#thaler_saxon_thaler
		if = {
			limit = {
				has_law = law_type:law_thaler_saxon_thaler_currency
			}
			player = {
				every_scope_state = {
					if = {
						limit = {
							has_modifier = central_bank_historic_place
						}
						add = var:stockpiling_thaler_saxon_thaler_state_1
						add = var:stockpiling_thaler_saxon_thaler_reserve_currency_state_1
					}
				}
			}
		}
	}
}

bond_final_interest_5Y = {
	value = price_bond
	multiply = interest_value_5Y
	multiply = 5
}

bond_monthly_interest_5Y = {
	value = bond_final_interest_5Y
	divide = 60
}

bond_weekly_interest_5Y = {
	value = bond_monthly_interest_5Y
	divide = 4
}

total_at_term_5Y = {
	value = bond_final_interest_5Y
	add = price_bond
}

bond_final_interest_10Y = {
	value = price_bond
	multiply = interest_value_10Y
	multiply = 10
}

bond_monthly_interest_10Y = {
	value = bond_final_interest_10Y
	divide = 120
}

bond_weekly_interest_10Y = {
	value = bond_monthly_interest_10Y
	divide = 4
}

total_at_term_10Y = {
	value = bond_final_interest_10Y
	add = price_bond
}

###########################################################################################################################################################################################

selle_bond_maturity_yers_1_reverse = {
	value = var:maturity_time_1
	subtract = var:selle_bond_maturity_yers_time_1
}
selle_bond_maturity_yers_2_reverse = {
	value = var:maturity_time_2
	subtract = var:selle_bond_maturity_yers_time_2
}
selle_bond_maturity_yers_3_reverse = {
	value = var:maturity_time_3
	subtract = var:selle_bond_maturity_yers_time_3
}
selle_bond_maturity_yers_4_reverse = {
	value = var:maturity_time_4
	subtract = var:selle_bond_maturity_yers_time_4
}
selle_bond_maturity_yers_5_reverse = {
	value = var:maturity_time_5
	subtract = var:selle_bond_maturity_yers_time_5
}
selle_bond_maturity_yers_6_reverse = {
	value = var:maturity_time_6
	subtract = var:selle_bond_maturity_yers_time_6
}
selle_bond_maturity_yers_7_reverse = {
	value = var:maturity_time_7
	subtract = var:selle_bond_maturity_yers_time_7
}
selle_bond_maturity_yers_8_reverse = {
	value = var:maturity_time_8
	subtract = var:selle_bond_maturity_yers_time_8
}
selle_bond_maturity_yers_9_reverse = {
	value = var:maturity_time_9
	subtract = var:selle_bond_maturity_yers_time_9
}
selle_bond_maturity_yers_10_reverse = {
	value = var:maturity_time_10
	subtract = var:selle_bond_maturity_yers_time_10
}

###########################################################################################################################################################################################

ai_selle_bond_maturity_yers_1_reverse = {
	value = var:ai_maturity_time_1
	subtract = var:ai_selle_bond_maturity_yers_time_1
}
ai_selle_bond_maturity_yers_2_reverse = {
	value = var:ai_maturity_time_2
	subtract = var:ai_selle_bond_maturity_yers_time_2
}
ai_selle_bond_maturity_yers_3_reverse = {
	value = var:ai_maturity_time_3
	subtract = var:ai_selle_bond_maturity_yers_time_3
}
ai_selle_bond_maturity_yers_4_reverse = {
	value = var:ai_maturity_time_4
	subtract = var:ai_selle_bond_maturity_yers_time_4
}
ai_selle_bond_maturity_yers_5_reverse = {
	value = var:ai_maturity_time_5
	subtract = var:ai_selle_bond_maturity_yers_time_5
}
ai_selle_bond_maturity_yers_6_reverse = {
	value = var:ai_maturity_time_6
	subtract = var:ai_selle_bond_maturity_yers_time_6
}
ai_selle_bond_maturity_yers_7_reverse = {
	value = var:ai_maturity_time_7
	subtract = var:ai_selle_bond_maturity_yers_time_7
}
ai_selle_bond_maturity_yers_8_reverse = {
	value = var:ai_maturity_time_8
	subtract = var:ai_selle_bond_maturity_yers_time_8
}
ai_selle_bond_maturity_yers_9_reverse = {
	value = var:ai_maturity_time_9
	subtract = var:ai_selle_bond_maturity_yers_time_9
}
ai_selle_bond_maturity_yers_10_reverse = {
	value = var:ai_maturity_time_10
	subtract = var:ai_selle_bond_maturity_yers_time_10
}

###########################################################################################################################################################################################

no_longer_exists_1 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_2 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_3 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_4 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_5 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_6 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_7 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_8 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_9 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
no_longer_exists_10 = {
	value = 0
	if = {
		every_in_list = {
			variable = seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}

###########################################################################################################################################################################################
ai_no_longer_exists_1 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_1
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_2 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_2
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_3 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_3
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_4 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_4
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_5 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_5
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_6 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_6
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_7 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_7
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_8 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_8
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_9 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_9
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}
ai_no_longer_exists_10 = {
	value = 0
	if = {
		every_in_list = {
			variable = ai_seller_country_general_10
			exists = prev
			add = 1
			add = economic_instability_var_sc
		}
	}
}

interconnected_crises = {
	value = 0
	if = {
		limit  = {
			var:currency_crisis = 1
		}
		add = 1
	}
	if = {
		limit  = {
			var:economic_crisis = 1
		}
		add = 1
	}
	if = {
		limit  = {
			var:financial_crash = 1
		}
		add = 1
	}
	if = {
		limit  = {
			var:country_bankruptcy = 1
		}
		add = 1
	}
}

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

#  ██████╗  ██████╗ ██╗     ██████╗     ██╗     ███████╗███╗   ██╗████████╗
# ██╔════╝ ██╔═══██╗██║     ██╔══██╗    ██║     ██╔════╝████╗  ██║╚══██╔══╝
# ██║  ███╗██║   ██║██║     ██║  ██║    ██║     █████╗  ██╔██╗ ██║   ██║
# ██║   ██║██║   ██║██║     ██║  ██║    ██║     ██╔══╝  ██║╚██╗██║   ██║
# ╚██████╔╝╚██████╔╝███████╗██████╔╝    ███████╗███████╗██║ ╚████║   ██║
#  ╚═════╝  ╚═════╝ ╚══════╝╚═════╝     ╚══════╝╚══════╝╚═╝  ╚═══╝   ╚═╝

############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################
############################################################################################################################################################

gold_lent_to_other = { #buy
	value = 0

	if  = {
		limit  = {
			is_set = var:total_bond_value_1
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_1
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_2
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_2
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_3
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_3
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_4
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_4
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_5
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_5
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_6
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_6
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_7
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_7
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_8
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_8
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_9
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_9
	}
	if  = {
		limit  = {
			is_set = var:total_bond_value_10
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:total_bond_value_10
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_1
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_1
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_2
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_2
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_3
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_3
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_4
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_4
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_5
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_5
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_6
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_6
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_7
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_7
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_8
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_8
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_9
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_9
	}
	if  = {
		limit  = {
			is_set = var:ai_total_bond_value_10
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_total_bond_value_10
	}
}
total_interest_calculated = {
	value = 0

	if  = {
		limit  = {
			is_set = var:interest_calculated_1
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_1
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_2
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_2
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_3
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_3
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_4
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_4
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_5
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_5
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_6
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_6
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_7
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_7
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_8
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_8
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_9
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_9
	}
	if  = {
		limit  = {
			is_set = var:interest_calculated_10
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:interest_calculated_10
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_1
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_1
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_2
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_2
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_3
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_3
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_4
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_4
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_5
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_5
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_6
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_6
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_7
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_7
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_8
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_8
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_9
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_9
	}
	if  = {
		limit  = {
			is_set = var:ai_interest_calculated_10
			has_modifier = interest_from_foreign_debt_investment
		}
		add = var:ai_interest_calculated_10
	}
}

gold_loaned_to_central_bank = {
	value = 0
	add = var:gold_loaned_to_central_bank_historic #historique de la variable avec tout les interet payé à changer pour gold_loaned_to_central_bank_historic

	add = ai_central_bank_gold_loaned_1
	add = ai_central_bank_gold_loaned_2
	add = ai_central_bank_gold_loaned_3
	add = ai_central_bank_gold_loaned_4
	add = ai_central_bank_gold_loaned_5
	add = ai_central_bank_gold_loaned_6
	add = ai_central_bank_gold_loaned_7
	add = ai_central_bank_gold_loaned_8
	add = ai_central_bank_gold_loaned_9
	add = ai_central_bank_gold_loaned_10
}

central_bank_interest_refund_per_year = {
	value = 0

	add = ai_central_bank_interest_refund_per_year_1
	add = ai_central_bank_interest_refund_per_year_2
	add = ai_central_bank_interest_refund_per_year_3
	add = ai_central_bank_interest_refund_per_year_4
	add = ai_central_bank_interest_refund_per_year_5
	add = ai_central_bank_interest_refund_per_year_6
	add = ai_central_bank_interest_refund_per_year_7
	add = ai_central_bank_interest_refund_per_year_8
	add = ai_central_bank_interest_refund_per_year_9
	add = ai_central_bank_interest_refund_per_year_10
}

gold_loaned_to_central_bank_no_interest = { #for gui only
	value = 0

	add = ai_central_bank_gold_loaned_1
	add = ai_central_bank_gold_loaned_2
	add = ai_central_bank_gold_loaned_3
	add = ai_central_bank_gold_loaned_4
	add = ai_central_bank_gold_loaned_5
	add = ai_central_bank_gold_loaned_6
	add = ai_central_bank_gold_loaned_7
	add = ai_central_bank_gold_loaned_8
	add = ai_central_bank_gold_loaned_9
	add = ai_central_bank_gold_loaned_10
}

#gold
ai_central_bank_gold_loaned_1 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_1
		add = var:ai_total_bond_value_1
		if  = {
			limit  = {
				var:total_bond_value_1 > 0
			}
			add = var:total_bond_value_1
		}
	}
}
ai_central_bank_gold_loaned_2 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_2
		add = var:ai_total_bond_value_2
		if  = {
			limit  = {
				var:total_bond_value_2 > 0
			}
			add = var:total_bond_value_2
		}
	}
}
ai_central_bank_gold_loaned_3 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_3
		add = var:ai_total_bond_value_3
		if  = {
			limit  = {
				var:total_bond_value_3 > 0
			}
			add = var:total_bond_value_3
		}
	}
}
ai_central_bank_gold_loaned_4 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_4
		add = var:ai_total_bond_value_4
		if  = {
			limit  = {
				var:total_bond_value_4 > 0
			}
			add = var:total_bond_value_4
		}
	}
}
ai_central_bank_gold_loaned_5 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_5
		add = var:ai_total_bond_value_5
		if  = {
			limit  = {
				var:total_bond_value_5 > 0
			}
			add = var:total_bond_value_5
		}
	}
}
ai_central_bank_gold_loaned_6 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_6
		add = var:ai_total_bond_value_6
		if  = {
			limit  = {
				var:total_bond_value_6 > 0
			}
			add = var:total_bond_value_6
		}
	}
}
ai_central_bank_gold_loaned_7 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_7
		add = var:ai_total_bond_value_7
		if  = {
			limit  = {
				var:total_bond_value_7 > 0
			}
			add = var:total_bond_value_7
		}
	}
}
ai_central_bank_gold_loaned_8 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_8
		add = var:ai_total_bond_value_8
		if  = {
			limit  = {
				var:total_bond_value_8 > 0
			}
			add = var:total_bond_value_8
		}
	}
}
ai_central_bank_gold_loaned_9 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_9
		add = var:ai_total_bond_value_9
		if  = {
			limit  = {
				var:total_bond_value_9 > 0
			}
			add = var:total_bond_value_9
		}
	}
}
ai_central_bank_gold_loaned_10 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_10
		add = var:ai_total_bond_value_10
		if  = {
			limit  = {
				var:total_bond_value_10 > 0
			}
			add = var:total_bond_value_10
		}
	}
}
#interest
ai_central_bank_interest_refund_per_year_1 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_1
		add = var:ai_interest_calculated_1
		if  = {
			limit  = {
				var:interest_calculated_1 > 0
			}
			add = var:interest_calculated_1
		}
	}
}
ai_central_bank_interest_refund_per_year_2 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_2
		add = var:ai_interest_calculated_2
		if  = {
			limit  = {
				var:interest_calculated_2 > 0
			}
			add = var:interest_calculated_2
		}
	}
}
ai_central_bank_interest_refund_per_year_3 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_3
		add = var:ai_interest_calculated_3
		if  = {
			limit  = {
				var:interest_calculated_3 > 0
			}
			add = var:interest_calculated_3
		}
	}
}
ai_central_bank_interest_refund_per_year_4 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_4
		add = var:ai_interest_calculated_4
		if  = {
			limit  = {
				var:interest_calculated_4 > 0
			}
			add = var:interest_calculated_4
		}
	}
}
ai_central_bank_interest_refund_per_year_5 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_5
		add = var:ai_interest_calculated_5
		if  = {
			limit  = {
				var:interest_calculated_5 > 0
			}
			add = var:interest_calculated_5
		}
	}
}
ai_central_bank_interest_refund_per_year_6 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_6
		add = var:ai_interest_calculated_6
		if  = {
			limit  = {
				var:interest_calculated_6 > 0
			}
			add = var:interest_calculated_6
		}
	}
}
ai_central_bank_interest_refund_per_year_7 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_7
		add = var:ai_interest_calculated_7
		if  = {
			limit  = {
				var:interest_calculated_7 > 0
			}
			add = var:interest_calculated_7
		}
	}
}
ai_central_bank_interest_refund_per_year_8 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_8
		add = var:ai_interest_calculated_8
		if  = {
			limit  = {
				var:interest_calculated_8 > 0
			}
			add = var:interest_calculated_8
		}
	}
}
ai_central_bank_interest_refund_per_year_9 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_9
		add = var:ai_interest_calculated_9
		if  = {
			limit  = {
				var:interest_calculated_9 > 0
			}
			add = var:interest_calculated_9
		}
	}
}
ai_central_bank_interest_refund_per_year_10 = {
	every_in_list = {
		variable = central_bank_debt_buyer_list_10
		add = var:ai_interest_calculated_10
		if  = {
			limit  = {
				var:interest_calculated_10 > 0
			}
			add = var:interest_calculated_10
		}
	}
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################



########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################


bond_quantity_scripted = {
	value = 0
	if  = {
		limit  = {
			gold_reserves > gold_reserves_10
			gold_reserves < gold_reserves_20
		}
		add = {
			value = 0
			add = gold_reserves_var_02
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_20
			gold_reserves < gold_reserves_30
		}
		add = {
			value = 0
			add = gold_reserves_var_03
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_30
			gold_reserves < gold_reserves_40
		}
		add = {
			value = 0
			add = gold_reserves_var_04
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_40
			gold_reserves < gold_reserves_50
		}
		add = {
			value = 0
			add = gold_reserves_var_05
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_50
			gold_reserves < gold_reserves_60
		}
		add = {
			value = 0
			add = gold_reserves_var_06
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_60
			gold_reserves < gold_reserves_70
		}
		add = {
			value = 0
			add = gold_reserves_var_07
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_70
			gold_reserves < gold_reserves_80
		}
		add = {
			value = 0
			add = gold_reserves_var_08
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_80
			gold_reserves < gold_reserves_90
		}
		add = {
			value = 0
			add = gold_reserves_var_09
			divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_90
		}
		add = {
			value = 0
			add = gold_reserves_var_10
			divide = scope:seller.bond_price
		}
	}
}

bond_quantity_scripted_all = {
	value = 0
	add = {
		value = 0
		add = scope:seller.central_bank_debt
		divide = scope:seller.bond_price
	}
}

gold_loan_preview  = {
	value = bond_quantity_scripted
	multiply = scope:seller.bond_price
}

bond_quantity_scripted_test = {
	value = 0
	if  = {
		limit  = {
			gold_reserves > gold_reserves_10
			gold_reserves < gold_reserves_20
		}
		add = {
			value = 0
			add = gold_reserves_var_02
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_20
			gold_reserves < gold_reserves_30
		}
		add = {
			value = 0
			add = gold_reserves_var_03
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_30
			gold_reserves < gold_reserves_40
		}
		add = {
			value = 0
			add = gold_reserves_var_04
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_40
			gold_reserves < gold_reserves_50
		}
		add = {
			value = 0
			add = gold_reserves_var_05
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_50
			gold_reserves < gold_reserves_60
		}
		add = {
			value = 0
			add = gold_reserves_var_06
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_60
			gold_reserves < gold_reserves_70
		}
		add = {
			value = 0
			add = gold_reserves_var_07
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_70
			gold_reserves < gold_reserves_80
		}
		add = {
			value = 0
			add = gold_reserves_var_08
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_80
			gold_reserves < gold_reserves_90
		}
		add = {
			value = 0
			add = gold_reserves_var_09
			#divide = scope:seller.bond_price
		}
	}
	if  = {
		limit  = {
			gold_reserves > gold_reserves_90
		}
		add = {
			value = 0
			add = gold_reserves_var_10
			#divide = scope:seller.bond_price
		}
	}
}

ai_interest_per_month = {
	value = 0
	add = var:ai_interest_per_month_calculated_1
	add = var:ai_interest_per_month_calculated_2
	add = var:ai_interest_per_month_calculated_3
	add = var:ai_interest_per_month_calculated_4
	add = var:ai_interest_per_month_calculated_5
	add = var:ai_interest_per_month_calculated_6
	add = var:ai_interest_per_month_calculated_7
	add = var:ai_interest_per_month_calculated_8
	add = var:ai_interest_per_month_calculated_9
	add = var:ai_interest_per_month_calculated_10

	multiply = 0.25
}


interest_per_month_from_foreign_debt_investment = {
	value = 0

	add = var:interest_per_month_calculated_1
	add = var:interest_per_month_calculated_2
	add = var:interest_per_month_calculated_3
	add = var:interest_per_month_calculated_4
	add = var:interest_per_month_calculated_5
	add = var:interest_per_month_calculated_6
	add = var:interest_per_month_calculated_7
	add = var:interest_per_month_calculated_8
	add = var:interest_per_month_calculated_9
	add = var:interest_per_month_calculated_10

	add = var:ai_interest_per_month_calculated_1
	add = var:ai_interest_per_month_calculated_2
	add = var:ai_interest_per_month_calculated_3
	add = var:ai_interest_per_month_calculated_4
	add = var:ai_interest_per_month_calculated_5
	add = var:ai_interest_per_month_calculated_6
	add = var:ai_interest_per_month_calculated_7
	add = var:ai_interest_per_month_calculated_8
	add = var:ai_interest_per_month_calculated_9
	add = var:ai_interest_per_month_calculated_10

	multiply = 0.25 #week
	#multiply = inflation
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

#buy_bond_order
buy_bond_order = {
	value = 0
	add = var:buy_bond_1_on
	add = var:buy_bond_2_on
	add = var:buy_bond_3_on
	add = var:buy_bond_4_on
	add = var:buy_bond_5_on
	add = var:buy_bond_6_on
	add = var:buy_bond_7_on
	add = var:buy_bond_8_on
	add = var:buy_bond_9_on
	add = var:buy_bond_10_on
}

buy_bond_order_valid_10Y = {
	value = 5
	subtract = var:buy_bond_1_on
	subtract = var:buy_bond_2_on
	subtract = var:buy_bond_3_on
	subtract = var:buy_bond_4_on
	subtract = var:buy_bond_5_on
}

buy_bond_order_valid_5Y = {
	value = 5

	subtract = var:buy_bond_6_on
	subtract = var:buy_bond_7_on
	subtract = var:buy_bond_8_on
	subtract = var:buy_bond_9_on
	subtract = var:buy_bond_10_on
}

########################################################################################################################################
########################################################################################################################################
########################################################################################################################################
########################################################################################################################################

# bond_price_in_gold = {
# 	value = bond_price
# 	multiply = gold_value_rapported_inflation
# }

# bond_final_interest_5Y_in_gold = {
# 	value = bond_final_interest_5Y
# 	multiply = money_value_rapported_inflation
# }

# bond_monthly_interest_5Y_in_gold = {
# 	value = bond_monthly_interest_5Y
# 	multiply = money_value_rapported_inflation
# }

# total_at_term_5Y_in_gold = {
# 	value = total_at_term_5Y
# 	multiply = money_value_rapported_inflation
# }

#text = "[GetPlayer.MakeScope.ScriptValue('bond_final_interest_5Y_in_gold')|D] @gold!"

#multiply = money_value_rapported_inflation

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#econimic_krach

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

economic_instability_var_sc = {
	value = 0
	#add = var:economic_instability_var

	if = {
		limit  = {
			has_modifier = economic_instability
		}
		add = -1
	}
}
