#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################

#  █████╗ ██╗    ██████╗ ███████╗██╗     ███████╗ █████╗ ███████╗███████╗
# ██╔══██╗██║    ██╔══██╗██╔════╝██║     ██╔════╝██╔══██╗██╔════╝██╔════╝
# ███████║██║    ██████╔╝█████╗  ██║     █████╗  ███████║███████╗█████╗  
# ██╔══██║██║    ██╔══██╗██╔══╝  ██║     ██╔══╝  ██╔══██║╚════██║██╔══╝  
# ██║  ██║██║    ██║  ██║███████╗███████╗███████╗██║  ██║███████║███████╗
# ╚═╝  ╚═╝╚═╝    ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝

#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################

#grain
ef_ai_grain_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:grain = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:grain_release_status = 0
		var:grain_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_grain_var_state > ai_grain_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = grain_release_quantity
			value = ai_grain_release_quantity_1Y
		}
		set_variable = {
			name = grain_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_grain_var_1
			value = grain_release_quantity_1_week #grain_release_quantity  
		}
		set_variable = {
			name = grain_release_status
			value = 1
		}
		set_variable = {
			name = grain_release_month_fixe
			value = var:grain_release_month
		}
		set_variable = {
			name = grain_release_quantity_1_year
			value = grain_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_grain_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_grain_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_grain_1
				remove_modifier = release_grain_1
				add_modifier = {
					name = release_grain_1
					multiplier = grain_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = grain_store_status
			value = 0
		}
		set_variable = {
			name = grain_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#wood
ef_ai_wood_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:wood = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:wood_release_status = 0
		var:wood_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_wood_var_state > ai_wood_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = wood_release_quantity
			value = ai_wood_release_quantity_1Y
		}
		set_variable = {
			name = wood_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_wood_var_1
			value = wood_release_quantity_1_week #wood_release_quantity  
		}
		set_variable = {
			name = wood_release_status
			value = 1
		}
		set_variable = {
			name = wood_release_month_fixe
			value = var:wood_release_month
		}
		set_variable = {
			name = wood_release_quantity_1_year
			value = wood_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_wood_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_wood_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_wood_1
				remove_modifier = release_wood_1
				add_modifier = {
					name = release_wood_1
					multiplier = wood_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = wood_store_status
			value = 0
		}
		set_variable = {
			name = wood_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#coal
ef_ai_coal_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:coal = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:coal_release_status = 0
		var:coal_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_coal_var_state > ai_coal_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = coal_release_quantity
			value = ai_coal_release_quantity_1Y
		}
		set_variable = {
			name = coal_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_coal_var_1
			value = coal_release_quantity_1_week #coal_release_quantity  
		}
		set_variable = {
			name = coal_release_status
			value = 1
		}
		set_variable = {
			name = coal_release_month_fixe
			value = var:coal_release_month
		}
		set_variable = {
			name = coal_release_quantity_1_year
			value = coal_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_coal_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_coal_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_coal_1
				remove_modifier = release_coal_1
				add_modifier = {
					name = release_coal_1
					multiplier = coal_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = coal_store_status
			value = 0
		}
		set_variable = {
			name = coal_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#iron
ef_ai_iron_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:iron = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:iron_release_status = 0
		var:iron_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_iron_var_state > ai_iron_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = iron_release_quantity
			value = ai_iron_release_quantity_1Y
		}
		set_variable = {
			name = iron_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_iron_var_1
			value = iron_release_quantity_1_week #iron_release_quantity  
		}
		set_variable = {
			name = iron_release_status
			value = 1
		}
		set_variable = {
			name = iron_release_month_fixe
			value = var:iron_release_month
		}
		set_variable = {
			name = iron_release_quantity_1_year
			value = iron_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_iron_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_iron_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_iron_1
				remove_modifier = release_iron_1
				add_modifier = {
					name = release_iron_1
					multiplier = iron_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = iron_store_status
			value = 0
		}
		set_variable = {
			name = iron_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#sulfur
ef_ai_sulfur_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:sulfur = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:sulfur_release_status = 0
		var:sulfur_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_sulfur_var_state > ai_sulfur_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = sulfur_release_quantity
			value = ai_sulfur_release_quantity_1Y
		}
		set_variable = {
			name = sulfur_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_sulfur_var_1
			value = sulfur_release_quantity_1_week #sulfur_release_quantity  
		}
		set_variable = {
			name = sulfur_release_status
			value = 1
		}
		set_variable = {
			name = sulfur_release_month_fixe
			value = var:sulfur_release_month
		}
		set_variable = {
			name = sulfur_release_quantity_1_year
			value = sulfur_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_sulfur_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_sulfur_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_sulfur_1
				remove_modifier = release_sulfur_1
				add_modifier = {
					name = release_sulfur_1
					multiplier = sulfur_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = sulfur_store_status
			value = 0
		}
		set_variable = {
			name = sulfur_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#lead
ef_ai_lead_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:lead = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:lead_release_status = 0
		var:lead_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_lead_var_state > ai_lead_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = lead_release_quantity
			value = ai_lead_release_quantity_1Y
		}
		set_variable = {
			name = lead_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_lead_var_1
			value = lead_release_quantity_1_week #lead_release_quantity  
		}
		set_variable = {
			name = lead_release_status
			value = 1
		}
		set_variable = {
			name = lead_release_month_fixe
			value = var:lead_release_month
		}
		set_variable = {
			name = lead_release_quantity_1_year
			value = lead_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_lead_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_lead_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_lead_1
				remove_modifier = release_lead_1
				add_modifier = {
					name = release_lead_1
					multiplier = lead_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = lead_store_status
			value = 0
		}
		set_variable = {
			name = lead_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#oil
ef_ai_oil_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:oil = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:oil_release_status = 0
		var:oil_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_oil_var_state > ai_oil_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = oil_release_quantity
			value = ai_oil_release_quantity_1Y
		}
		set_variable = {
			name = oil_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_oil_var_1
			value = oil_release_quantity_1_week #oil_release_quantity  
		}
		set_variable = {
			name = oil_release_status
			value = 1
		}
		set_variable = {
			name = oil_release_month_fixe
			value = var:oil_release_month
		}
		set_variable = {
			name = oil_release_quantity_1_year
			value = oil_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_oil_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_oil_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_oil_1
				remove_modifier = release_oil_1
				add_modifier = {
					name = release_oil_1
					multiplier = oil_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = oil_store_status
			value = 0
		}
		set_variable = {
			name = oil_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#dye
ef_ai_dye_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:dye = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:dye_release_status = 0
		var:dye_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_dye_var_state > ai_dye_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = dye_release_quantity
			value = ai_dye_release_quantity_1Y
		}
		set_variable = {
			name = dye_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_dye_var_1
			value = dye_release_quantity_1_week #dye_release_quantity  
		}
		set_variable = {
			name = dye_release_status
			value = 1
		}
		set_variable = {
			name = dye_release_month_fixe
			value = var:dye_release_month
		}
		set_variable = {
			name = dye_release_quantity_1_year
			value = dye_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_dye_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_dye_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_dye_1
				remove_modifier = release_dye_1
				add_modifier = {
					name = release_dye_1
					multiplier = dye_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = dye_store_status
			value = 0
		}
		set_variable = {
			name = dye_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#silk
ef_ai_silk_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:silk = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:silk_release_status = 0
		var:silk_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_silk_var_state > ai_silk_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = silk_release_quantity
			value = ai_silk_release_quantity_1Y
		}
		set_variable = {
			name = silk_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_silk_var_1
			value = silk_release_quantity_1_week #silk_release_quantity  
		}
		set_variable = {
			name = silk_release_status
			value = 1
		}
		set_variable = {
			name = silk_release_month_fixe
			value = var:silk_release_month
		}
		set_variable = {
			name = silk_release_quantity_1_year
			value = silk_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_silk_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_silk_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_silk_1
				remove_modifier = release_silk_1
				add_modifier = {
					name = release_silk_1
					multiplier = silk_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = silk_store_status
			value = 0
		}
		set_variable = {
			name = silk_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#rubber
ef_ai_rubber_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:rubber = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:rubber_release_status = 0
		var:rubber_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_rubber_var_state > ai_rubber_release_quantity_1Y
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = rubber_release_quantity
			value = ai_rubber_release_quantity_1Y
		}
		set_variable = {
			name = rubber_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_rubber_var_1
			value = rubber_release_quantity_1_week #rubber_release_quantity  
		}
		set_variable = {
			name = rubber_release_status
			value = 1
		}
		set_variable = {
			name = rubber_release_month_fixe
			value = var:rubber_release_month
		}
		set_variable = {
			name = rubber_release_quantity_1_year
			value = rubber_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_rubber_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_rubber_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_rubber_1
				remove_modifier = release_rubber_1
				add_modifier = {
					name = release_rubber_1
					multiplier = rubber_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = rubber_store_status
			value = 0
		}
		set_variable = {
			name = rubber_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#ammunition
ef_ai_ammunition_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:ammunition = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:ammunition_release_status = 0
		var:ammunition_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_ammunition_var_state > ai_ammunition_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = ammunition_release_quantity
			value = ai_ammunition_release_quantity_1Y
		}
		set_variable = {
			name = ammunition_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_ammunition_var_1
			value = ammunition_release_quantity_1_week #ammunition_release_quantity  
		}
		set_variable = {
			name = ammunition_release_status
			value = 1
		}
		set_variable = {
			name = ammunition_release_month_fixe
			value = var:ammunition_release_month
		}
		set_variable = {
			name = ammunition_release_quantity_1_year
			value = ammunition_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_ammunition_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_ammunition_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_ammunition_1
				remove_modifier = release_ammunition_1
				add_modifier = {
					name = release_ammunition_1
					multiplier = ammunition_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = ammunition_store_status
			value = 0
		}
		set_variable = {
			name = ammunition_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#small_arms
ef_ai_small_arms_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:small_arms = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:small_arms_release_status = 0
		var:small_arms_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_small_arms_var_state > ai_small_arms_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = small_arms_release_quantity
			value = ai_small_arms_release_quantity_1Y
		}
		set_variable = {
			name = small_arms_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_small_arms_var_1
			value = small_arms_release_quantity_1_week #small_arms_release_quantity  
		}
		set_variable = {
			name = small_arms_release_status
			value = 1
		}
		set_variable = {
			name = small_arms_release_month_fixe
			value = var:small_arms_release_month
		}
		set_variable = {
			name = small_arms_release_quantity_1_year
			value = small_arms_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_small_arms_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_small_arms_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_small_arms_1
				remove_modifier = release_small_arms_1
				add_modifier = {
					name = release_small_arms_1
					multiplier = small_arms_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = small_arms_store_status
			value = 0
		}
		set_variable = {
			name = small_arms_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#artillery
ef_ai_artillery_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:artillery = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:artillery_release_status = 0
		var:artillery_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_artillery_var_state > ai_artillery_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = artillery_release_quantity
			value = ai_artillery_release_quantity_1Y
		}
		set_variable = {
			name = artillery_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_artillery_var_1
			value = artillery_release_quantity_1_week #artillery_release_quantity  
		}
		set_variable = {
			name = artillery_release_status
			value = 1
		}
		set_variable = {
			name = artillery_release_month_fixe
			value = var:artillery_release_month
		}
		set_variable = {
			name = artillery_release_quantity_1_year
			value = artillery_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_artillery_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_artillery_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_artillery_1
				remove_modifier = release_artillery_1
				add_modifier = {
					name = release_artillery_1
					multiplier = artillery_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = artillery_store_status
			value = 0
		}
		set_variable = {
			name = artillery_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#tanks
ef_ai_tanks_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:tanks = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:tanks_release_status = 0
		var:tanks_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_tanks_var_state > ai_tanks_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = tanks_release_quantity
			value = ai_tanks_release_quantity_1Y
		}
		set_variable = {
			name = tanks_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_tanks_var_1
			value = tanks_release_quantity_1_week #tanks_release_quantity  
		}
		set_variable = {
			name = tanks_release_status
			value = 1
		}
		set_variable = {
			name = tanks_release_month_fixe
			value = var:tanks_release_month
		}
		set_variable = {
			name = tanks_release_quantity_1_year
			value = tanks_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_tanks_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_tanks_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_tanks_1
				remove_modifier = release_tanks_1
				add_modifier = {
					name = release_tanks_1
					multiplier = tanks_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = tanks_store_status
			value = 0
		}
		set_variable = {
			name = tanks_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#aeroplanes
ef_ai_aeroplanes_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:aeroplanes = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:aeroplanes_release_status = 0
		var:aeroplanes_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_aeroplanes_var_state > ai_aeroplanes_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = aeroplanes_release_quantity
			value = ai_aeroplanes_release_quantity_1Y
		}
		set_variable = {
			name = aeroplanes_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_aeroplanes_var_1
			value = aeroplanes_release_quantity_1_week #aeroplanes_release_quantity  
		}
		set_variable = {
			name = aeroplanes_release_status
			value = 1
		}
		set_variable = {
			name = aeroplanes_release_month_fixe
			value = var:aeroplanes_release_month
		}
		set_variable = {
			name = aeroplanes_release_quantity_1_year
			value = aeroplanes_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_aeroplanes_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_aeroplanes_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_aeroplanes_1
				remove_modifier = release_aeroplanes_1
				add_modifier = {
					name = release_aeroplanes_1
					multiplier = aeroplanes_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = aeroplanes_store_status
			value = 0
		}
		set_variable = {
			name = aeroplanes_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#manowars
ef_ai_manowars_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:manowars = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:manowars_release_status = 0
		var:manowars_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_manowars_var_state > ai_manowars_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = manowars_release_quantity
			value = ai_manowars_release_quantity_1Y
		}
		set_variable = {
			name = manowars_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_manowars_var_1
			value = manowars_release_quantity_1_week #manowars_release_quantity  
		}
		set_variable = {
			name = manowars_release_status
			value = 1
		}
		set_variable = {
			name = manowars_release_month_fixe
			value = var:manowars_release_month
		}
		set_variable = {
			name = manowars_release_quantity_1_year
			value = manowars_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_manowars_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_manowars_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_manowars_1
				remove_modifier = release_manowars_1
				add_modifier = {
					name = release_manowars_1
					multiplier = manowars_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = manowars_store_status
			value = 0
		}
		set_variable = {
			name = manowars_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#ironclads
ef_ai_ironclads_release_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		market = { 
			mg:ironclads = { 
				market_goods_has_goods_shortage = yes
			}
		}
		var:ironclads_release_status = 0
		var:ironclads_store_status = 0
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_ironclads_var_state > ai_ironclads_release_quantity_1Y
		is_at_war = yes
	}          

	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = ironclads_release_quantity
			value = ai_ironclads_release_quantity_1Y
		}
		set_variable = {
			name = ironclads_release_month
			value = 24
		}
		##################################

		set_variable = {
			name = release_ironclads_var_1
			value = ironclads_release_quantity_1_week #ironclads_release_quantity  
		}
		set_variable = {
			name = ironclads_release_status
			value = 1
		}
		set_variable = {
			name = ironclads_release_month_fixe
			value = var:ironclads_release_month
		}
		set_variable = {
			name = ironclads_release_quantity_1_year
			value = ironclads_release_predicted
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_ironclads_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_release_ironclads_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = store_ironclads_1
				remove_modifier = release_ironclads_1
				add_modifier = {
					name = release_ironclads_1
					multiplier = ironclads_release_for_modifier
				}
			}
		}

		#reset store
		set_variable = {
			name = ironclads_store_status
			value = 0
		}
		set_variable = {
			name = ironclads_store_quantity
			value = 1000
		}
	}

	ai_chance = {
		base = 100
	}
}

#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################

#  █████╗ ██╗    ███████╗████████╗ ██████╗ ██████╗ ███████╗
# ██╔══██╗██║    ██╔════╝╚══██╔══╝██╔═══██╗██╔══██╗██╔════╝
# ███████║██║    ███████╗   ██║   ██║   ██║██████╔╝█████╗  
# ██╔══██║██║    ╚════██║   ██║   ██║   ██║██╔══██╗██╔══╝  
# ██║  ██║██║    ███████║   ██║   ╚██████╔╝██║  ██║███████╗
# ╚═╝  ╚═╝╚═╝    ╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝

#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#grain
ef_ai_grain_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:grain_release_status = 0
		var:grain_store_status = 0

		market = { 
			mg:grain = { grain_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_grain_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = grain_store_quantity
			value = ai_grain_store_quantity_1Y
		}
		set_variable = {
			name = grain_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = grain_store_status
			value = 1
		}
		set_variable = {
			name = store_grain_var_1
			value = grain_store_quantity_1_week
		}
		set_variable = {
			name = grain_store_month_fixe
			value = var:grain_store_month
		}

		#reset release
		set_variable = {
			name = grain_release_status
			value = 0
		}
		set_variable = {
			name = grain_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_grain_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_grain_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_grain_1
				remove_modifier = store_grain_1
				add_modifier = {
					name = store_grain_1
					multiplier = grain_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#wood
ef_ai_wood_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:wood_release_status = 0
		var:wood_store_status = 0

		market = { 
			mg:wood = { wood_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_wood_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = wood_store_quantity
			value = ai_wood_store_quantity_1Y
		}
		set_variable = {
			name = wood_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = wood_store_status
			value = 1
		}
		set_variable = {
			name = store_wood_var_1
			value = wood_store_quantity_1_week
		}
		set_variable = {
			name = wood_store_month_fixe
			value = var:wood_store_month
		}

		#reset release
		set_variable = {
			name = wood_release_status
			value = 0
		}
		set_variable = {
			name = wood_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_wood_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_wood_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_wood_1
				remove_modifier = store_wood_1
				add_modifier = {
					name = store_wood_1
					multiplier = wood_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#coal
ef_ai_coal_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:coal_release_status = 0
		var:coal_store_status = 0

		market = { 
			mg:coal = { coal_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_coal_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = coal_store_quantity
			value = ai_coal_store_quantity_1Y
		}
		set_variable = {
			name = coal_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = coal_store_status
			value = 1
		}
		set_variable = {
			name = store_coal_var_1
			value = coal_store_quantity_1_week
		}
		set_variable = {
			name = coal_store_month_fixe
			value = var:coal_store_month
		}

		#reset release
		set_variable = {
			name = coal_release_status
			value = 0
		}
		set_variable = {
			name = coal_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_coal_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_coal_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_coal_1
				remove_modifier = store_coal_1
				add_modifier = {
					name = store_coal_1
					multiplier = coal_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#iron
ef_ai_iron_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:iron_release_status = 0
		var:iron_store_status = 0

		market = { 
			mg:iron = { iron_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_iron_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = iron_store_quantity
			value = ai_iron_store_quantity_1Y
		}
		set_variable = {
			name = iron_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = iron_store_status
			value = 1
		}
		set_variable = {
			name = store_iron_var_1
			value = iron_store_quantity_1_week
		}
		set_variable = {
			name = iron_store_month_fixe
			value = var:iron_store_month
		}

		#reset release
		set_variable = {
			name = iron_release_status
			value = 0
		}
		set_variable = {
			name = iron_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_iron_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_iron_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_iron_1
				remove_modifier = store_iron_1
				add_modifier = {
					name = store_iron_1
					multiplier = iron_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#sulfur
ef_ai_sulfur_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:sulfur_release_status = 0
		var:sulfur_store_status = 0

		market = { 
			mg:sulfur = { sulfur_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_sulfur_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = sulfur_store_quantity
			value = ai_sulfur_store_quantity_1Y
		}
		set_variable = {
			name = sulfur_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = sulfur_store_status
			value = 1
		}
		set_variable = {
			name = store_sulfur_var_1
			value = sulfur_store_quantity_1_week
		}
		set_variable = {
			name = sulfur_store_month_fixe
			value = var:sulfur_store_month
		}

		#reset release
		set_variable = {
			name = sulfur_release_status
			value = 0
		}
		set_variable = {
			name = sulfur_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_sulfur_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_sulfur_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_sulfur_1
				remove_modifier = store_sulfur_1
				add_modifier = {
					name = store_sulfur_1
					multiplier = sulfur_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#lead
ef_ai_lead_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:lead_release_status = 0
		var:lead_store_status = 0

		market = { 
			mg:lead = { lead_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_lead_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = lead_store_quantity
			value = ai_lead_store_quantity_1Y
		}
		set_variable = {
			name = lead_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = lead_store_status
			value = 1
		}
		set_variable = {
			name = store_lead_var_1
			value = lead_store_quantity_1_week
		}
		set_variable = {
			name = lead_store_month_fixe
			value = var:lead_store_month
		}

		#reset release
		set_variable = {
			name = lead_release_status
			value = 0
		}
		set_variable = {
			name = lead_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_lead_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_lead_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_lead_1
				remove_modifier = store_lead_1
				add_modifier = {
					name = store_lead_1
					multiplier = lead_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#oil -> Special
ef_ai_oil_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:oil_release_status = 0
		var:oil_store_status = 0
		market = { 
			#mg:oil = { oil_market_goods_delta_month >= 4000 } 
		}
		oil_market_goods_sell_orders > 1000
		has_building = building_national_stockpile
	}
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = oil_store_quantity
			value = ai_oil_store_quantity_1Y
		}
		set_variable = {
			name = oil_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = oil_store_status
			value = 1
		}
		set_variable = {
			name = store_oil_var_1
			value = oil_store_quantity_1_week
		}
		set_variable = {
			name = oil_store_month_fixe
			value = var:oil_store_month
		}

		#reset release
		set_variable = {
			name = oil_release_status
			value = 0
		}
		set_variable = {
			name = oil_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_oil_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_oil_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_oil_1
				remove_modifier = store_oil_1
				add_modifier = {
					name = store_oil_1
					multiplier = oil_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#dye
ef_ai_dye_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:dye_release_status = 0
		var:dye_store_status = 0

		market = { 
			mg:dye = { dye_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_dye_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = dye_store_quantity
			value = ai_dye_store_quantity_1Y
		}
		set_variable = {
			name = dye_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = dye_store_status
			value = 1
		}
		set_variable = {
			name = store_dye_var_1
			value = dye_store_quantity_1_week
		}
		set_variable = {
			name = dye_store_month_fixe
			value = var:dye_store_month
		}

		#reset release
		set_variable = {
			name = dye_release_status
			value = 0
		}
		set_variable = {
			name = dye_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_dye_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_dye_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_dye_1
				remove_modifier = store_dye_1
				add_modifier = {
					name = store_dye_1
					multiplier = dye_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#silk
ef_ai_silk_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:silk_release_status = 0
		var:silk_store_status = 0

		market = { 
			mg:silk = { silk_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_silk_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = silk_store_quantity
			value = ai_silk_store_quantity_1Y
		}
		set_variable = {
			name = silk_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = silk_store_status
			value = 1
		}
		set_variable = {
			name = store_silk_var_1
			value = silk_store_quantity_1_week
		}
		set_variable = {
			name = silk_store_month_fixe
			value = var:silk_store_month
		}

		#reset release
		set_variable = {
			name = silk_release_status
			value = 0
		}
		set_variable = {
			name = silk_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_silk_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_silk_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_silk_1
				remove_modifier = store_silk_1
				add_modifier = {
					name = store_silk_1
					multiplier = silk_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#rubber
ef_ai_rubber_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:rubber_release_status = 0
		var:rubber_store_status = 0

		market = { 
			mg:rubber = { rubber_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		stockpiling_rubber_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = rubber_store_quantity
			value = ai_rubber_store_quantity_1Y
		}
		set_variable = {
			name = rubber_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = rubber_store_status
			value = 1
		}
		set_variable = {
			name = store_rubber_var_1
			value = rubber_store_quantity_1_week
		}
		set_variable = {
			name = rubber_store_month_fixe
			value = var:rubber_store_month
		}

		#reset release
		set_variable = {
			name = rubber_release_status
			value = 0
		}
		set_variable = {
			name = rubber_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_rubber_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_rubber_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_rubber_1
				remove_modifier = store_rubber_1
				add_modifier = {
					name = store_rubber_1
					multiplier = rubber_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}

#ammunition
ef_ai_ammunition_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:ammunition_release_status = 0
		var:ammunition_store_status = 0

		market = { 
			mg:ammunition = { ammunition_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_ammunition_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = ammunition_store_quantity
			value = ai_ammunition_store_quantity_1Y
		}
		set_variable = {
			name = ammunition_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = ammunition_store_status
			value = 1
		}
		set_variable = {
			name = store_ammunition_var_1
			value = ammunition_store_quantity_1_week
		}
		set_variable = {
			name = ammunition_store_month_fixe
			value = var:ammunition_store_month
		}

		#reset release
		set_variable = {
			name = ammunition_release_status
			value = 0
		}
		set_variable = {
			name = ammunition_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_ammunition_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_ammunition_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_ammunition_1
				remove_modifier = store_ammunition_1
				add_modifier = {
					name = store_ammunition_1
					multiplier = ammunition_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#small_arms
ef_ai_small_arms_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:small_arms_release_status = 0
		var:small_arms_store_status = 0

		market = { 
			mg:small_arms = { small_arms_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_small_arms_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = small_arms_store_quantity
			value = ai_small_arms_store_quantity_1Y
		}
		set_variable = {
			name = small_arms_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = small_arms_store_status
			value = 1
		}
		set_variable = {
			name = store_small_arms_var_1
			value = small_arms_store_quantity_1_week
		}
		set_variable = {
			name = small_arms_store_month_fixe
			value = var:small_arms_store_month
		}

		#reset release
		set_variable = {
			name = small_arms_release_status
			value = 0
		}
		set_variable = {
			name = small_arms_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_small_arms_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_small_arms_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_small_arms_1
				remove_modifier = store_small_arms_1
				add_modifier = {
					name = store_small_arms_1
					multiplier = small_arms_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#artillery
ef_ai_artillery_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:artillery_release_status = 0
		var:artillery_store_status = 0

		market = { 
			mg:artillery = { artillery_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_artillery_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = artillery_store_quantity
			value = ai_artillery_store_quantity_1Y
		}
		set_variable = {
			name = artillery_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = artillery_store_status
			value = 1
		}
		set_variable = {
			name = store_artillery_var_1
			value = artillery_store_quantity_1_week
		}
		set_variable = {
			name = artillery_store_month_fixe
			value = var:artillery_store_month
		}

		#reset release
		set_variable = {
			name = artillery_release_status
			value = 0
		}
		set_variable = {
			name = artillery_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_artillery_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_artillery_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_artillery_1
				remove_modifier = store_artillery_1
				add_modifier = {
					name = store_artillery_1
					multiplier = artillery_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#tanks
ef_ai_tanks_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:tanks_release_status = 0
		var:tanks_store_status = 0

		market = { 
			mg:tanks = { tanks_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_tanks_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = tanks_store_quantity
			value = ai_tanks_store_quantity_1Y
		}
		set_variable = {
			name = tanks_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = tanks_store_status
			value = 1
		}
		set_variable = {
			name = store_tanks_var_1
			value = tanks_store_quantity_1_week
		}
		set_variable = {
			name = tanks_store_month_fixe
			value = var:tanks_store_month
		}

		#reset release
		set_variable = {
			name = tanks_release_status
			value = 0
		}
		set_variable = {
			name = tanks_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_tanks_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_tanks_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_tanks_1
				remove_modifier = store_tanks_1
				add_modifier = {
					name = store_tanks_1
					multiplier = tanks_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#aeroplanes
ef_ai_aeroplanes_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:aeroplanes_release_status = 0
		var:aeroplanes_store_status = 0

		market = { 
			mg:aeroplanes = { aeroplanes_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_aeroplanes_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = aeroplanes_store_quantity
			value = ai_aeroplanes_store_quantity_1Y
		}
		set_variable = {
			name = aeroplanes_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = aeroplanes_store_status
			value = 1
		}
		set_variable = {
			name = store_aeroplanes_var_1
			value = aeroplanes_store_quantity_1_week
		}
		set_variable = {
			name = aeroplanes_store_month_fixe
			value = var:aeroplanes_store_month
		}

		#reset release
		set_variable = {
			name = aeroplanes_release_status
			value = 0
		}
		set_variable = {
			name = aeroplanes_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_aeroplanes_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_aeroplanes_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_aeroplanes_1
				remove_modifier = store_aeroplanes_1
				add_modifier = {
					name = store_aeroplanes_1
					multiplier = aeroplanes_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#manowars
ef_ai_manowars_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:manowars_release_status = 0
		var:manowars_store_status = 0

		market = { 
			mg:manowars = { manowars_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_manowars_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = manowars_store_quantity
			value = ai_manowars_store_quantity_1Y
		}
		set_variable = {
			name = manowars_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = manowars_store_status
			value = 1
		}
		set_variable = {
			name = store_manowars_var_1
			value = manowars_store_quantity_1_week
		}
		set_variable = {
			name = manowars_store_month_fixe
			value = var:manowars_store_month
		}

		#reset release
		set_variable = {
			name = manowars_release_status
			value = 0
		}
		set_variable = {
			name = manowars_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_manowars_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_manowars_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_manowars_1
				remove_modifier = store_manowars_1
				add_modifier = {
					name = store_manowars_1
					multiplier = manowars_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}
#ironclads
ef_ai_ironclads_store_decisions_1 = {
	is_shown = {
		is_ai = yes
		has_building = building_national_stockpile
	}

	possible = {
		var:ironclads_release_status = 0
		var:ironclads_store_status = 0

		market = { 
			mg:ironclads = { ironclads_market_goods_delta_month >= 4000 } 
		}
		has_building = building_national_stockpile
		not  = {
			or = {
				is_subject = yes
				is_subject_type = subject_type_customs_union
			}
		}
		is_at_war = no
		stockpiling_ironclads_var_state < 10000000
	}          
         
	when_taken = {

		#Scripted GUI transformed
		set_variable = {
			name = ironclads_store_quantity
			value = ai_ironclads_store_quantity_1Y
		}
		set_variable = {
			name = ironclads_store_month
			value = 24
		}
		##################################

		set_variable = {
			name = ironclads_store_status
			value = 1
		}
		set_variable = {
			name = store_ironclads_var_1
			value = ironclads_store_quantity_1_week
		}
		set_variable = {
			name = ironclads_store_month_fixe
			value = var:ironclads_store_month
		}

		#reset release
		set_variable = {
			name = ironclads_release_status
			value = 0
		}
		set_variable = {
			name = ironclads_release_quantity
			value = 1000
		}
		every_scope_state = {
			limit = {
				has_building = building_national_stockpile
			}

			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_ironclads_0
			}
			activate_production_method = {
				building_type = building_national_stockpile
				production_method = pm_store_ironclads_1
			}
		}
		every_scope_building = {
			if  = {
				limit = {
					is_building_type = building_national_stockpile
				}
				remove_modifier = release_ironclads_1
				remove_modifier = store_ironclads_1
				add_modifier = {
					name = store_ironclads_1
					multiplier = ironclads_store_for_modifier
				}
			}
		}
	}

	ai_chance = {
		base = 100
	}
}