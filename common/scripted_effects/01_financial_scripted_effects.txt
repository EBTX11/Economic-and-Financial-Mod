sell_limit_var_0 = {
	set_variable = {
		name = sell_limit_var_1
		value = 0
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#  ██████╗ ██████╗ ██╗   ██╗███╗   ██╗████████╗██████╗ ██╗   ██╗     ██████╗██████╗ ███████╗██████╗ ██╗████████╗    ██████╗  █████╗ ████████╗██╗███╗   ██╗ ██████╗
# ██╔════╝██╔═══██╗██║   ██║████╗  ██║╚══██╔══╝██╔══██╗╚██╗ ██╔╝    ██╔════╝██╔══██╗██╔════╝██╔══██╗██║╚══██╔══╝    ██╔══██╗██╔══██╗╚══██╔══╝██║████╗  ██║██╔════╝
# ██║     ██║   ██║██║   ██║██╔██╗ ██║   ██║   ██████╔╝ ╚████╔╝     ██║     ██████╔╝█████╗  ██║  ██║██║   ██║       ██████╔╝███████║   ██║   ██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║╚██╗██║   ██║   ██╔══██╗  ╚██╔╝      ██║     ██╔══██╗██╔══╝  ██║  ██║██║   ██║       ██╔══██╗██╔══██║   ██║   ██║██║╚██╗██║██║   ██║
# ╚██████╗╚██████╔╝╚██████╔╝██║ ╚████║   ██║   ██║  ██║   ██║       ╚██████╗██║  ██║███████╗██████╔╝██║   ██║       ██║  ██║██║  ██║   ██║   ██║██║ ╚████║╚██████╔╝
#  ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝        ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝   ╚═╝       ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝╚═╝  ╚═══╝ ╚═════╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

country_credit_rating = {
	set_variable = {
		name = country_credit_note_fixe
		value = country_credit_pondered_mean
	}
	if = {
		limit  = {			
			var:country_credit_note_fixe = 10
			var:country_credit_note_fixe >= 9
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_AAA
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 9
			var:country_credit_note_fixe >= 8
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_AA
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 8
			var:country_credit_note_fixe >= 7
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_A
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 7
			var:country_credit_note_fixe >= 6
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_BBB
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 6
			var:country_credit_note_fixe >= 5
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_BB
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 5
			var:country_credit_note_fixe >= 4
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_B
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 4
			var:country_credit_note_fixe >= 3
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_CCC
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 3
			var:country_credit_note_fixe >= 2
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_CC
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 2
			var:country_credit_note_fixe >= 1
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_C
		}
	}
	else_if = {
		limit  = {
			var:country_credit_note_fixe < 1
			var:country_credit_note_fixe >= 0
			not  = {
				has_modifier = economic_instability
			}
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_D
		}
	}

	#economic_instability
	else_if = {
		limit  = {
			has_modifier = economic_instability
		}
		remove_modifier = country_credit_rating_AAA
		remove_modifier = country_credit_rating_AA
		remove_modifier = country_credit_rating_A
		remove_modifier = country_credit_rating_BBB
		remove_modifier = country_credit_rating_BB
		remove_modifier = country_credit_rating_B
		remove_modifier = country_credit_rating_CCC
		remove_modifier = country_credit_rating_CC
		remove_modifier = country_credit_rating_C
		remove_modifier = country_credit_rating_D
		add_modifier = {
			name = country_credit_rating_D
		}
	}
}

sovereign_bond_yields = {
	if = {
		limit = {
			has_modifier = country_credit_rating_AAA
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.04 0.05 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_AA
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.05 0.06 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_A
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.06 0.07 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_BBB
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.07 0.08 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_BB
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.08 0.09 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_B
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.09 0.1 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_CCC
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.10 0.11 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_CC
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.11 0.12 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_C
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.12 0.13 }
		}
	}
	else_if = {
		limit = {
			has_modifier = country_credit_rating_D
		}
		set_variable = {
			name = target_interest_rate
			value = { 0.13 0.15 }
		}
	}
	set_variable = {
		name = interest_value_5Y_variation
		value = { 0.1 0.9 }
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#  ██████╗██████╗ ███████╗██████╗ ██╗████████╗      █████╗ ████████╗      ██████╗███████╗███╗   ██╗████████╗██████╗  █████╗ ██╗             ██████╗  █████╗
# ██╔════╝██╔══██╗██╔════╝██╔══██╗██║╚══██╔══╝     ██╔══██╗╚══██╔══╝     ██╔════╝██╔════╝████╗  ██║╚══██╔══╝██╔══██╗██╔══██╗██║             ██╔══██╗██╔══██╗
# ██║     ██████╔╝█████╗  ██║  ██║██║   ██║        ███████║   ██║        ██║     █████╗  ██╔██╗ ██║   ██║   ██████╔╝███████║██║             ██████╔╝███████║
# ██║     ██╔══██╗██╔══╝  ██║  ██║██║   ██║        ██╔══██║   ██║        ██║     ██╔══╝  ██║╚██╗██║   ██║   ██╔══██╗██╔══██║██║             ██╔══██╗██╔══██║
# ╚██████╗██║  ██║███████╗██████╔╝██║   ██║███████╗██║  ██║   ██║███████╗╚██████╗███████╗██║ ╚████║   ██║   ██║  ██║██║  ██║███████╗███████╗██████╔╝██║  ██║
#  ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝   ╚═╝╚══════╝╚═╝  ╚═╝   ╚═╝╚══════╝ ╚═════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝╚═════╝ ╚═╝  ╚═╝
#
# ███╗   ██╗██╗  ██╗        ██╗███╗   ██╗████████╗███████╗██████╗ ███████╗███████╗████████╗
# ████╗  ██║██║ ██╔╝        ██║████╗  ██║╚══██╔══╝██╔════╝██╔══██╗██╔════╝██╔════╝╚══██╔══╝
# ██╔██╗ ██║█████╔╝         ██║██╔██╗ ██║   ██║   █████╗  ██████╔╝█████╗  ███████╗   ██║
# ██║╚██╗██║██╔═██╗         ██║██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗██╔══╝  ╚════██║   ██║
# ██║ ╚████║██║  ██╗███████╗██║██║ ╚████║   ██║   ███████╗██║  ██║███████╗███████║   ██║
# ╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝   ╚═╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

credit_at_central_bank_interest_per_week = {
	remove_modifier = interest_at_the_central_bank
	add_modifier = {
		name = interest_at_the_central_bank
		multiplier = credit_at_central_bank_interest_per_month_by_inflation
	}
}

credit_at_central_bank_interest_per_week_off = {
	remove_modifier = interest_at_the_central_bank
}

ai_credit_at_central_bank = {
	if  = {
		limit = { #pays avec tresorerie faible or de la guerre donc strategie d'endettement constant et roulement de la dette
			credit_at_central_bank_interest_per_week_by_inflation < part_budget_authorized_debt_interest
			national_debt_compared_gdp < national_debt_allowed_relative_gdp
			gold_reserve_compared_gold_reserves_limit < 0.1
			is_at_war = no
		}
		add_treasury = {
			add = national_debt_allowed_in_gold
		}
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
				}
				change_variable = {
					name = stockpiling_bond_var_state_1
					add = owner.bond_producted
				}
			}
		}
		change_variable = {
			name = government_loan
			add = national_debt_allowed_in_currency
		}
		change_variable = {
			name = credit_at_central_bank
			add = national_debt_allowed_in_gold
		}
		change_variable = {
			name = test_credit
			add = 1
		}
	}
	if  = {
		limit  = { #pays en guerre avec reserve inf à 25%, a bessoin d'un coup de mains equivalent la dif pour atteindre 25% + 25% -> pas de limite donc possibilité de faire des 100ain% de dette
			gold_reserve_compared_gold_reserves_limit < 0.15
			is_at_war = yes
		}
		add_treasury = {
			add = national_debt_allowed_in_gold_war
		}
		every_scope_state = {
			if = {
				limit = {
					has_modifier = financial_center_historic_place
				}
				change_variable = {
					name = stockpiling_bond_var_state_1
					add = owner.bond_producted_war
				}
			}
		}
		change_variable = {
			name = government_loan
			add = national_debt_allowed_in_currency_war
		}
		change_variable = {
			name = credit_at_central_bank
			add = national_debt_allowed_in_gold_war
		}
		set_variable = {
			name = test_credit
			value = 500
		}
	}
}

ai_refund_central_bank = {
	if  = {
		limit  = {
			gold_reserves_var > 0
			national_debt_unauthorized < gold_reserves_var
			var:credit_at_central_bank > national_debt_allowed_in_gold
			is_at_war = no
		}
		add_treasury = {
			subtract = national_debt_unauthorized
		}
		every_scope_state = {
			if = {
				limit = {
					has_modifier = central_bank_historic_place
				}
				change_variable = {
					name = central_bank_gold_reserves_state_1
					add = owner.national_debt_unauthorized
				}
			}
		}
		change_variable = {
			name = credit_at_central_bank
			subtract = national_debt_unauthorized
		}
	}
	if  = {
		limit  = {
			credit_at_central_bank_interest_per_week_by_inflation > part_budget_authorized_debt_interest
			national_debt_refund_more_25_at_refund > 0
			is_at_war = no
		}
		# add_treasury = {
		# 	subtract = national_debt_unauthorized
		# }
		every_scope_state = {
			if = {
				limit = {
					has_modifier = central_bank_historic_place
				}
				change_variable = {
					name = central_bank_gold_reserves_state_1
					add = owner.national_debt_refund_more_25_at_refund
				}
			}
		}
		change_variable = {
			name = credit_at_central_bank
			subtract = national_debt_refund_more_25_at_refund
		}
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#  ██████╗███████╗███╗   ██╗████████╗██████╗  █████╗ ██╗             ██████╗  █████╗ ███╗   ██╗██╗  ██╗        ██████╗ ██╗   ██╗██╗   ██╗      ██████╗ ██████╗
# ██╔════╝██╔════╝████╗  ██║╚══██╔══╝██╔══██╗██╔══██╗██║             ██╔══██╗██╔══██╗████╗  ██║██║ ██╔╝        ██╔══██╗██║   ██║╚██╗ ██╔╝     ██╔════╝██╔═══██╗
# ██║     █████╗  ██╔██╗ ██║   ██║   ██████╔╝███████║██║             ██████╔╝███████║██╔██╗ ██║█████╔╝         ██████╔╝██║   ██║ ╚████╔╝      ██║     ██║   ██║
# ██║     ██╔══╝  ██║╚██╗██║   ██║   ██╔══██╗██╔══██║██║             ██╔══██╗██╔══██║██║╚██╗██║██╔═██╗         ██╔══██╗██║   ██║  ╚██╔╝       ██║     ██║   ██║
# ╚██████╗███████╗██║ ╚████║   ██║   ██║  ██║██║  ██║███████╗███████╗██████╔╝██║  ██║██║ ╚████║██║  ██╗███████╗██████╔╝╚██████╔╝   ██║███████╗╚██████╗╚██████╔╝
#  ╚═════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝╚═════╝  ╚═════╝    ╚═╝╚══════╝ ╚═════╝ ╚═════╝
#
# ██╗   ██╗███╗   ██╗████████╗██████╗ ██╗   ██╗      ██████╗██████╗ ███████╗██████╗ ██╗████████╗
# ██║   ██║████╗  ██║╚══██╔══╝██╔══██╗╚██╗ ██╔╝     ██╔════╝██╔══██╗██╔════╝██╔══██╗██║╚══██╔══╝
# ██║   ██║██╔██╗ ██║   ██║   ██████╔╝ ╚████╔╝      ██║     ██████╔╝█████╗  ██║  ██║██║   ██║
# ██║   ██║██║╚██╗██║   ██║   ██╔══██╗  ╚██╔╝       ██║     ██╔══██╗██╔══╝  ██║  ██║██║   ██║
# ╚██████╔╝██║ ╚████║   ██║   ██║  ██║   ██║███████╗╚██████╗██║  ██║███████╗██████╔╝██║   ██║
#  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝   ╚═╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################


#-> bonne idée mais impossible cela crer des enorme trape à dette ingérable par contre on peut faire en sorte que le bank route soit suprimer de l'or de la bank centrale

# central_bank_buy_country_credit = {
# 	if  = {
# 		limit = {
# 			country_credit > country_credit_90
# 			not  = {
# 				var:has_already_served = 1
# 			}
# 		}
# 		change_variable = {
# 			name = credit_at_central_bank
# 			add = country_credit
# 		}
# 		every_scope_state = {
# 			if = {
# 				limit = {
# 					has_modifier = central_bank_historic_place
# 					is_capital = yes
# 				}
# 				change_variable = {
# 					name = central_bank_gold_reserves_state_1
# 					subtract = root.country_credit_in_gold
# 				}
# 			}
# 		}
# 		add_treasury = {
# 			add = country_credit
# 		}
# 		change_variable = {
# 			name = central_bank_bought_the_credit
# 			add = 1
# 		}
# 		switch = {
# 			trigger = var:central_bank_bought_the_credit
# 			1 = {
# 				take_loan_110_debt = yes
# 			}
# 			2 = {
# 				take_loan_120_debt = yes
# 			}
# 			3 = {
# 				take_loan_130_debt = yes
# 			}
# 			4 = {
# 				take_loan_140_debt = yes
# 			}
# 			5 = {
# 				take_loan_150_debt = yes
# 			}
# 			6 = {
# 				bankruptcy_one_third = yes
# 			}
# 			7 = {
# 				sell_goods_one_third = yes
# 			}
# 			8 =  {
# 				bankruptcy_two_third = yes
# 			}
# 			9 = {
# 				sell_two_third = yes
# 			}
# 			10 = {
# 				sell_two_third = yes
# 			}

# 			# 100 = {
# 			# 	apocalypse_now = yes
# 			# }
# 			# 101 = {
# 			# 	apocalypse_now = yes
# 			# }
# 		}
# 		if  = {
# 			limit = {
# 				var:central_bank_bought_the_credit > 10
# 			}
# 			reset_debt = yes
# 		}
# 	}
# }

# take_loan_110_debt = {
# 	add_treasury = {
# 		add = gold_reserves_10
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_10
# 	}
# }
# take_loan_120_debt = {
# 	add_treasury = {
# 		add = gold_reserves_20
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_20
# 	}
# }
# take_loan_130_debt = {
# 	add_treasury = {
# 		add = gold_reserves_30
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_30
# 	}
# }
# take_loan_140_debt = {
# 	add_treasury = {
# 		add = gold_reserves_40
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_40
# 	}
# }
# take_loan_150_debt = {
# 	add_treasury = {
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_50
# 	}
# }
# sell_goods_one_third = {
# 	add_treasury = {
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_50
# 	}
# 	###################
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = all_good_in_gold_03
# 	}
# 	if = {
# 		limit = {
# 			credit_at_central_bank < 0
# 		}
# 		change_variable = {
# 			name = credit_at_central_bank
# 			multiply = -1
# 		}
# 		every_scope_state = {
# 			if = {
# 				limit = {
# 					has_modifier = central_bank_historic_place
# 					is_capital = yes
# 				}
# 				change_variable = {
# 					name = central_bank_gold_reserves_state_1
# 					add = root.var:credit_at_central_bank
# 				}
# 			}
# 		}
# 		set_variable = {
# 			name = credit_at_central_bank
# 			value = 0
# 		}
# 	}
# 	every_scope_state = {
# 		if = {
# 			limit = {
# 				has_modifier = national_stockpile_place
# 				is_capital = yes
# 			}
# 			change_variable = {
# 				name = stockpiling_grain_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_wood_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_coal_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_iron_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_sulfur_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_lead_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_oil_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_dye_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_silk_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_rubber_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_ammunition_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_small_arms_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_artillery_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_tanks_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_aeroplanes_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_manowars_var_state_1
# 				multiply = 0.66
# 			}
# 			change_variable = {
# 				name = stockpiling_ironclads_var_state_1
# 				multiply = 0.66
# 			}
# 		}
# 	}
# }
# bankruptcy_one_third = {
# 	add_treasury = {
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = {
# 			value = var:credit_at_central_bank
# 			multiply = 0.3
# 		}
# 	}
# }
# sell_two_third = {
# 	add_treasury = {
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_50
# 	}
# 	###################
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = all_good_in_gold_06
# 	}
# 	if = {
# 		limit = {
# 			credit_at_central_bank < 0
# 		}
# 		change_variable = {
# 			name = credit_at_central_bank
# 			multiply = -1
# 		}
# 		every_scope_state = {
# 			if = {
# 				limit = {
# 					has_modifier = central_bank_historic_place
# 					is_capital = yes
# 				}
# 				change_variable = {
# 					name = central_bank_gold_reserves_state_1
# 					add = root.var:credit_at_central_bank
# 				}
# 			}
# 		}
# 		set_variable = {
# 			name = credit_at_central_bank
# 			value = 0
# 		}
# 	}
# 	every_scope_state = {
# 		if = {
# 			limit = {
# 				has_modifier = national_stockpile_place
# 				is_capital = yes
# 			}
# 			change_variable = {
# 				name = stockpiling_grain_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_wood_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_coal_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_iron_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_sulfur_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_lead_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_oil_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_dye_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_silk_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_rubber_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_ammunition_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_small_arms_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_artillery_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_tanks_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_aeroplanes_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_manowars_var_state_1
# 				multiply = 0.33
# 			}
# 			change_variable = {
# 				name = stockpiling_ironclads_var_state_1
# 				multiply = 0.33
# 			}
# 		}
# 	}
# }
# bankruptcy_two_third = {
# 	add_treasury = {
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		add = gold_reserves_50
# 	}
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = {
# 		 	value = var:credit_at_central_bank
# 		 	multiply = 0.6
# 		}
# 	}
# }
# apocalypse_now = {
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = var:credit_at_central_bank
# 	}
# 	every_scope_state = {
# 		if = {
# 			limit = {
# 				has_modifier = central_bank_historic_place
# 				is_capital = yes
# 			}
# 			set_variable = {
# 				name = central_bank_gold_reserves_state_1
# 				value = 0
# 			}
# 		}
# 	}



# 	every_scope_state = {
# 		limit = {
# 			has_building = building_government_administration
# 		}
# 		remove_building = building_government_administration
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_university
# 		}
# 		remove_building = building_university
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_skyscraper
# 		}
# 		remove_building = building_skyscraper
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_construction_sector
# 		}
# 		remove_building = building_construction_sector
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_port
# 		}
# 		remove_building = building_port
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_barracks
# 		}
# 		remove_building = building_barracks
# 	}
# 	every_scope_state = {
# 		limit = {
# 			has_building = building_naval_base
# 		}
# 		remove_building = building_naval_base
# 	}
# }
# reset_debt = {
# 	change_variable = {
# 		name = credit_at_central_bank
# 		subtract = var:credit_at_central_bank
# 	}
# 	# every_scope_state = {
# 	# 	if = {
# 	# 		limit = {
# 	# 			has_modifier = central_bank_historic_place
# 	# 			is_capital = yes
# 	# 		}
# 	# 		set_variable = {
# 	# 			name = central_bank_gold_reserves_state_1
# 	# 			value = 0
# 	# 		}
# 	# 	}
# 	# }
# 	set_variable = {
# 		name = credit_at_central_bank
# 		value = 0
# 	}
# 	set_variable = {
# 		name = central_bank_bought_the_credit
# 		value = 0
# 	}
# 	set_variable = {
# 		name = has_already_served
# 		value = 1
# 	}
# }

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

# ███████╗████████╗ ██████╗  ██████╗██╗  ██╗██████╗ ██╗██╗     ██╗███╗   ██╗ ██████╗     ███████╗██╗███╗   ██╗ █████╗ ███╗   ██╗ ██████╗██╗ █████╗ ██╗         ██████╗ ██████╗
# ██╔════╝╚══██╔══╝██╔═══██╗██╔════╝██║ ██╔╝██╔══██╗██║██║     ██║████╗  ██║██╔════╝     ██╔════╝██║████╗  ██║██╔══██╗████╗  ██║██╔════╝██║██╔══██╗██║         ██╔══██╗██╔══██╗
# ███████╗   ██║   ██║   ██║██║     █████╔╝ ██████╔╝██║██║     ██║██╔██╗ ██║██║  ███╗    █████╗  ██║██╔██╗ ██║███████║██╔██╗ ██║██║     ██║███████║██║         ██████╔╝██║  ██║
# ╚════██║   ██║   ██║   ██║██║     ██╔═██╗ ██╔═══╝ ██║██║     ██║██║╚██╗██║██║   ██║    ██╔══╝  ██║██║╚██╗██║██╔══██║██║╚██╗██║██║     ██║██╔══██║██║         ██╔═══╝ ██║  ██║
# ███████║   ██║   ╚██████╔╝╚██████╗██║  ██╗██║     ██║███████╗██║██║ ╚████║╚██████╔╝    ██║     ██║██║ ╚████║██║  ██║██║ ╚████║╚██████╗██║██║  ██║███████╗    ██║     ██████╔╝
# ╚══════╝   ╚═╝    ╚═════╝  ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝     ╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝╚═╝╚═╝  ╚═╝╚══════╝    ╚═╝     ╚═════╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

stockpiling_bond_1 = {
    set_variable = {
        name = stockpiling_bond_var_2
        value = 0
    }
    if = {
        limit = {
            bond_market_goods_buy_orders > 0
			stockpiling_bond_var_1 < 1000000
        }
        change_variable = {
            name = stockpiling_bond_var_2
			add = bond_market_goods_buy_orders
			#add = bond_market_goods_delta
        }
        change_variable = {
            name = stockpiling_bond_var_2
            multiply = 4
        }
		#stockpiling_bond_2 = yes
		stockpiling_bond_2_state = yes
    }
}
stockpiling_bond_2_state = {
    every_scope_state = {
        if = {
            limit = {
                has_modifier = financial_center_historic_place
            }
            save_scope_as = financial_center_historic_place
            scope:financial_center_historic_place = {
                change_variable = {
                    name = stockpiling_bond_var_state_1
                    add = root.var:stockpiling_bond_var_2
                }
            }
        }
    }
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

stockpiling_manufacture_stock_1 = {
    set_variable = {
        name = stockpiling_manufacture_stock_var_2
        value = 0
    }
    if = {
        limit = {
            manufacture_stock_market_goods_buy_orders > 0
			stockpiling_manufacture_stock_var_1 < 1000000
        }
        change_variable = {
            name = stockpiling_manufacture_stock_var_2
			add = manufacture_stock_market_goods_buy_orders
#            add = manufacture_stock_market_goods_delta
        }
        change_variable = {
            name = stockpiling_manufacture_stock_var_2
            multiply = 4
        }
		#stockpiling_manufacture_stock_2 = yes
		stockpiling_manufacture_stock_2_state = yes
    }
}
stockpiling_manufacture_stock_2_state = {
    every_scope_state = {
        if = {
            limit = {
                has_modifier = financial_center_historic_place
            }
            save_scope_as = financial_center_historic_place
            scope:financial_center_historic_place = {
                change_variable = {
                    name = stockpiling_manufacture_stock_var_state_1
                    add = root.var:stockpiling_manufacture_stock_var_2
                }
            }
        }
    }
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

stockpiling_agricultural_stock_1 = {
    set_variable = {
        name = stockpiling_agricultural_stock_var_2
        value = 0
    }
    if = {
        limit = {
            agricultural_stock_market_goods_buy_orders > 0
			stockpiling_agricultural_stock_var_1 < 1000000
        }
        change_variable = {
            name = stockpiling_agricultural_stock_var_2
			add = agricultural_stock_market_goods_buy_orders
#            add = agricultural_stock_market_goods_delta
        }
        change_variable = {
            name = stockpiling_agricultural_stock_var_2
            multiply = 4
        }
		#stockpiling_agricultural_stock_2 = yes
		stockpiling_agricultural_stock_2_state = yes
    }
}
stockpiling_agricultural_stock_2_state = {
    every_scope_state = {
        if = {
            limit = {
                has_modifier = financial_center_historic_place
            }
            save_scope_as = financial_center_historic_place
            scope:financial_center_historic_place = {
                change_variable = {
                    name = stockpiling_agricultural_stock_var_state_1
                    add = root.var:stockpiling_agricultural_stock_var_2
                }
            }
        }
    }
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

stockpiling_mining_stock_1 = {
    set_variable = {
        name = stockpiling_mining_stock_var_2
        value = 0
    }
    if = {
        limit = {
            mining_stock_market_goods_buy_orders > 0
			stockpiling_mining_stock_var_1 < 1000000
        }
        change_variable = {
            name = stockpiling_mining_stock_var_2
			add = mining_stock_market_goods_buy_orders
			#add = mining_stock_market_goods_delta
        }
        change_variable = {
            name = stockpiling_mining_stock_var_2
            multiply = 4
        }
		#stockpiling_mining_stock_2 = yes
		stockpiling_mining_stock_2_state = yes
    }
}
stockpiling_mining_stock_2_state = {
    every_scope_state = {
        if = {
            limit = {
                has_modifier = financial_center_historic_place
            }
            save_scope_as = financial_center_historic_place
            scope:financial_center_historic_place = {
                change_variable = {
                    name = stockpiling_mining_stock_var_state_1
                    add = root.var:stockpiling_mining_stock_var_2
                }
            }
        }
    }
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

stockpiling_railroad_stock_1 = {
    set_variable = {
        name = stockpiling_railroad_stock_var_2
        value = 0
    }
    if = {
        limit = {
            railroad_stock_market_goods_buy_orders > 0
			stockpiling_railroad_stock_var_1 < 1000000
        }
        change_variable = {
            name = stockpiling_railroad_stock_var_2
			add = railroad_stock_market_goods_buy_orders
		#add = railroad_stock_market_goods_delta
        }
        change_variable = {
            name = stockpiling_railroad_stock_var_2
            multiply = 4
        }
		#stockpiling_railroad_stock_2 = yes
		stockpiling_railroad_stock_2_state = yes
    }
}
stockpiling_railroad_stock_2_state = {
    every_scope_state = {
        if = {
            limit = {
                has_modifier = financial_center_historic_place
            }
            save_scope_as = financial_center_historic_place
            scope:financial_center_historic_place = {
                change_variable = {
                    name = stockpiling_railroad_stock_var_state_1
                    add = root.var:stockpiling_railroad_stock_var_2
                }
            }
        }
    }
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

# ██████╗ ██╗   ██╗██╗   ██╗     ██████╗  ██████╗ ███╗   ██╗██████╗
# ██╔══██╗██║   ██║╚██╗ ██╔╝     ██╔══██╗██╔═══██╗████╗  ██║██╔══██╗
# ██████╔╝██║   ██║ ╚████╔╝      ██████╔╝██║   ██║██╔██╗ ██║██║  ██║
# ██╔══██╗██║   ██║  ╚██╔╝       ██╔══██╗██║   ██║██║╚██╗██║██║  ██║
# ██████╔╝╚██████╔╝   ██║███████╗██████╔╝╚██████╔╝██║ ╚████║██████╔╝
# ╚═════╝  ╚═════╝    ╚═╝╚══════╝╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

ai_buy_bond_1 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_1 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_1
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_1
								target = scope:seller
							}

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_1
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_1
								value = var:ai_bond_quantity_1
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_1
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_1
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_1
								multiply = var:ai_bond_quantity_1 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_1
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_1
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = var:ai_bond_quantity_1 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_1
								value = var:ai_interest_calculated_1
							}
							change_variable = {
								name = ai_interest_at_term_calculated_1
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_1
								value = var:ai_interest_calculated_1
							}
							change_variable = {
								name = ai_interest_per_month_calculated_1
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_1
							}

							# add_modifier = {
							# 	name = ai_buy_bond_1
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_1
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_1
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_1_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_1
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_1
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_1
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_1
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_1
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_1
								value = var:ai_bond_quantity_1
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_1
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_1
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_1
								multiply = var:ai_bond_quantity_1 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_1
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_1
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = var:ai_bond_quantity_1 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_1
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_1
								value = var:ai_interest_calculated_1
							}
							change_variable = {
								name = ai_interest_at_term_calculated_1
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_1
								value = var:ai_interest_calculated_1
							}
							change_variable = {
								name = ai_interest_per_month_calculated_1
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_1
							}

							# add_modifier = {
							# 	name = ai_buy_bond_1
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_1
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_1
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_1_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_1
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_1
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_1 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_1_message
			# }
		}
	}
}
ai_buy_bond_2 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_2 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_2
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_2
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_2
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_2
								value = var:ai_bond_quantity_2
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_2
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_2
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_2
								multiply = var:ai_bond_quantity_2 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_2
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_2
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = var:ai_bond_quantity_2 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_2
								value = var:ai_interest_calculated_2
							}
							change_variable = {
								name = ai_interest_at_term_calculated_2
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_2
								value = var:ai_interest_calculated_2
							}
							change_variable = {
								name = ai_interest_per_month_calculated_2
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_2
							}

							# add_modifier = {
							# 	name = ai_buy_bond_2
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_2
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_2
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_2_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_2
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_2
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_2
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_2
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_2
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_2
								value = var:ai_bond_quantity_2
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_2
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_2
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_2
								multiply = var:ai_bond_quantity_2 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_2
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_2
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = var:ai_bond_quantity_2 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_2
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_2
								value = var:ai_interest_calculated_2
							}
							change_variable = {
								name = ai_interest_at_term_calculated_2
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_2
								value = var:ai_interest_calculated_2
							}
							change_variable = {
								name = ai_interest_per_month_calculated_2
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_2
							}

							# add_modifier = {
							# 	name = ai_buy_bond_2
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_2
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_2
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_2_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_2
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_2
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_2 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_2_message
			# }
		}
	}
}
ai_buy_bond_3 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_3 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_3
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_3
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_3
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_3
								value = var:ai_bond_quantity_3
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_3
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_3
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_3
								multiply = var:ai_bond_quantity_3 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_3
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_3
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = var:ai_bond_quantity_3 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_3
								value = var:ai_interest_calculated_3
							}
							change_variable = {
								name = ai_interest_at_term_calculated_3
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_3
								value = var:ai_interest_calculated_3
							}
							change_variable = {
								name = ai_interest_per_month_calculated_3
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_3
							}

							# add_modifier = {
							# 	name = ai_buy_bond_3
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_3
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_3
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_3_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_3
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_3
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_3
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_3
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_3
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_3
								value = var:ai_bond_quantity_3
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_3
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_3
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_3
								multiply = var:ai_bond_quantity_3 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_3
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_3
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = var:ai_bond_quantity_3 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_3
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_3
								value = var:ai_interest_calculated_3
							}
							change_variable = {
								name = ai_interest_at_term_calculated_3
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_3
								value = var:ai_interest_calculated_3
							}
							change_variable = {
								name = ai_interest_per_month_calculated_3
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_3
							}

							# add_modifier = {
							# 	name = ai_buy_bond_3
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_3
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_3
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_3_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_3
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_3
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_3 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_3_message
			# }
		}
	}
}
ai_buy_bond_4 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_4 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_4
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_4
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_4
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_4
								value = var:ai_bond_quantity_4
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_4
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_4
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_4
								multiply = var:ai_bond_quantity_4 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_4
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_4
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = var:ai_bond_quantity_4 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_4
								value = var:ai_interest_calculated_4
							}
							change_variable = {
								name = ai_interest_at_term_calculated_4
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_4
								value = var:ai_interest_calculated_4
							}
							change_variable = {
								name = ai_interest_per_month_calculated_4
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_4
							}

							# add_modifier = {
							# 	name = ai_buy_bond_4
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_4
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_4
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_4_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_4
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_4
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_4
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_4
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_4
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_4
								value = var:ai_bond_quantity_4
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_4
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_4
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_4
								multiply = var:ai_bond_quantity_4 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_4
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_4
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = var:ai_bond_quantity_4 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_4
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_4
								value = var:ai_interest_calculated_4
							}
							change_variable = {
								name = ai_interest_at_term_calculated_4
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_4
								value = var:ai_interest_calculated_4
							}
							change_variable = {
								name = ai_interest_per_month_calculated_4
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_4
							}

							# add_modifier = {
							# 	name = ai_buy_bond_4
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_4
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_4
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_4_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_4
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_4
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_4 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_4_message
			# }
		}
	}
}
ai_buy_bond_5 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_5 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_5
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_5
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_5
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_5
								value = var:ai_bond_quantity_5
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_5
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_5
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_5
								multiply = var:ai_bond_quantity_5 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_5
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_5
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = var:ai_bond_quantity_5 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_5
								value = var:ai_interest_calculated_5
							}
							change_variable = {
								name = ai_interest_at_term_calculated_5
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_5
								value = var:ai_interest_calculated_5
							}
							change_variable = {
								name = ai_interest_per_month_calculated_5
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_5
							}

							# add_modifier = {
							# 	name = ai_buy_bond_5
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_5
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_5
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_5_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_5
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_5
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_5
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_5
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_5
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_5
								value = var:ai_bond_quantity_5
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_5
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_5
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_5
								multiply = var:ai_bond_quantity_5 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_5
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_5
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = var:ai_bond_quantity_5 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_5
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_5
								value = var:ai_interest_calculated_5
							}
							change_variable = {
								name = ai_interest_at_term_calculated_5
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_5
								value = var:ai_interest_calculated_5
							}
							change_variable = {
								name = ai_interest_per_month_calculated_5
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_5
							}

							# add_modifier = {
							# 	name = ai_buy_bond_5
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_5
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_5
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_5_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_5
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_5
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_5 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_5_message
			# }
		}
	}
}
ai_buy_bond_6 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_6 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_6
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_6
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_6
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_6
								value = var:ai_bond_quantity_6
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_6
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_6
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_6
								multiply = var:ai_bond_quantity_6 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_6
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_6
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = var:ai_bond_quantity_6 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_6
								value = var:ai_interest_calculated_6
							}
							change_variable = {
								name = ai_interest_at_term_calculated_6
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_6
								value = var:ai_interest_calculated_6
							}
							change_variable = {
								name = ai_interest_per_month_calculated_6
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_6
							}

							# add_modifier = {
							# 	name = ai_buy_bond_6
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_6
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_6
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_6_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_6
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_6
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_6
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_6
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_6
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_6
								value = var:ai_bond_quantity_6
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_6
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_6
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_6
								multiply = var:ai_bond_quantity_6 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_6
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_6
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = var:ai_bond_quantity_6 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_6
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_6
								value = var:ai_interest_calculated_6
							}
							change_variable = {
								name = ai_interest_at_term_calculated_6
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_6
								value = var:ai_interest_calculated_6
							}
							change_variable = {
								name = ai_interest_per_month_calculated_6
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_6
							}

							# add_modifier = {
							# 	name = ai_buy_bond_6
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_6
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_6
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_6_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_6
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_6
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_6 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_6_message
			# }
		}
	}
}
ai_buy_bond_7 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_7 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_7
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_7
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_7
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_7
								value = var:ai_bond_quantity_7
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_7
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_7
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_7
								multiply = var:ai_bond_quantity_7 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_7
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_7
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = var:ai_bond_quantity_7 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_7
								value = var:ai_interest_calculated_7
							}
							change_variable = {
								name = ai_interest_at_term_calculated_7
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_7
								value = var:ai_interest_calculated_7
							}
							change_variable = {
								name = ai_interest_per_month_calculated_7
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_7
							}

							# add_modifier = {
							# 	name = ai_buy_bond_7
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_7
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_7
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_7_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_7
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_7
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_7
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_7
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_7
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_7
								value = var:ai_bond_quantity_7
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_7
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_7
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_7
								multiply = var:ai_bond_quantity_7 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_7
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_7
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = var:ai_bond_quantity_7 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_7
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_7
								value = var:ai_interest_calculated_7
							}
							change_variable = {
								name = ai_interest_at_term_calculated_7
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_7
								value = var:ai_interest_calculated_7
							}
							change_variable = {
								name = ai_interest_per_month_calculated_7
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_7
							}

							# add_modifier = {
							# 	name = ai_buy_bond_7
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_7
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_7
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_7_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_7
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_7
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_7 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_7_message
			# }
		}
	}
}
ai_buy_bond_8 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_8 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_8
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_8
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_8
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_8
								value = var:ai_bond_quantity_8
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_8
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_8
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_8
								multiply = var:ai_bond_quantity_8 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_8
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_8
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = var:ai_bond_quantity_8 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_8
								value = var:ai_interest_calculated_8
							}
							change_variable = {
								name = ai_interest_at_term_calculated_8
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_8
								value = var:ai_interest_calculated_8
							}
							change_variable = {
								name = ai_interest_per_month_calculated_8
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_8
							}

							# add_modifier = {
							# 	name = ai_buy_bond_8
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_8
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_8
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_8_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_8
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_8
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_8
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_8
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_8
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_8
								value = var:ai_bond_quantity_8
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_8
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_8
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_8
								multiply = var:ai_bond_quantity_8 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_8
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_8
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = var:ai_bond_quantity_8 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_8
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_8
								value = var:ai_interest_calculated_8
							}
							change_variable = {
								name = ai_interest_at_term_calculated_8
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_8
								value = var:ai_interest_calculated_8
							}
							change_variable = {
								name = ai_interest_per_month_calculated_8
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_8
							}

							# add_modifier = {
							# 	name = ai_buy_bond_8
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_8
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_8
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_8_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_8
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_8
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_8 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_8_message
			# }
		}
	}
}
ai_buy_bond_9 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_9 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_9
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_9
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_9
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_9
								value = var:ai_bond_quantity_9
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_9
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_9
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_9
								multiply = var:ai_bond_quantity_9 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_9
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_9
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = var:ai_bond_quantity_9 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_9
								value = var:ai_interest_calculated_9
							}
							change_variable = {
								name = ai_interest_at_term_calculated_9
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_9
								value = var:ai_interest_calculated_9
							}
							change_variable = {
								name = ai_interest_per_month_calculated_9
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_9
							}

							# add_modifier = {
							# 	name = ai_buy_bond_9
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_9
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_9
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_9_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_9
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_9
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_9
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_9
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_9
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_9
								value = var:ai_bond_quantity_9
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_9
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_9
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_9
								multiply = var:ai_bond_quantity_9 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_9
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_9
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = var:ai_bond_quantity_9 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_9
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_9
								value = var:ai_interest_calculated_9
							}
							change_variable = {
								name = ai_interest_at_term_calculated_9
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_9
								value = var:ai_interest_calculated_9
							}
							change_variable = {
								name = ai_interest_per_month_calculated_9
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_9
							}

							# add_modifier = {
							# 	name = ai_buy_bond_9
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_9
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_9
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_9_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_9
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_9
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_9 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_9_message
			# }
		}
	}
}
ai_buy_bond_10 = {
	# every_country = {
	# 	limit  = {
	# 		is_player = yes
	# 	}
	# 	save_scope_as = is_player_for_notification
	# }

	root = {
		save_scope_as = buyer
	}

	random_in_global_list = {
		variable = central_bank_debt_variable_list_ordered_1
		save_scope_as = seller
	}

	if = {
		root = {
			save_scope_as = buyer
		}

		random_in_global_list = {
			variable = central_bank_debt_variable_list_ordered_1
			save_scope_as = seller
		}

		if = {
			limit = {
				scope:buyer.ai_selle_bond_maturity_yers_time_10 = 0
				exists = scope:seller
				scope:seller = {
					# remaining_debt > 5000000
					# all_gold_owned < 1
					not = {
						this = root
					}
				}
				gold_reserves_var > gold_reserves_10
			}

			random_list = {
				1 = { #5Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_10
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_10
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_10
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_10
								value = var:ai_bond_quantity_10
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_10
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_10
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_10
								multiply = var:ai_bond_quantity_10 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_10
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_10
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = var:ai_bond_quantity_10 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = scope:seller.interest_value_5Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_10
								value = var:ai_interest_calculated_10
							}
							change_variable = {
								name = ai_interest_at_term_calculated_10
								multiply = 5
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_10
								value = var:ai_interest_calculated_10
							}
							change_variable = {
								name = ai_interest_per_month_calculated_10
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_10
							}

							# add_modifier = {
							# 	name = ai_buy_bond_10
							# 	months = 60
							# 	multiplier = var:ai_interest_per_month_calculated_10
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_10
								value = 5 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_10_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_10
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_10
						}
					}
				}
				1 = { #10Years
					scope:seller = {
						scope:buyer = {
							# Pour les liste du vendeur
							add_to_variable_list = {
								name = ai_buyer_country_10
								target = prev
							}
							add_to_variable_list = {
								name = ai_seller_country_general_10
								target = scope:seller #prev
							}

							#ai_selle_bond_maturity_yers_time_x
							# change_variable = {
							# 	name = ai_selle_bond_maturity_yers_time_x
							# 	add = 1
							# }

							######

							#quantité
							set_variable = {
								name = ai_bond_quantity_10
								value = bond_quantity_scripted
							}
							set_variable = {
								name = ai_quantity_purchasing_10
								value = var:ai_bond_quantity_10
							}

							#interret lors de l'achat
							set_variable = {
								name = ai_interest_purchasing_10
								value = scope:seller.interest_value_10Y
							}

							#valeur de la quantité
							set_variable = {
								name = ai_total_bond_value_10
								value = 1
							}
							change_variable = {
								name = ai_total_bond_value_10
								multiply = var:ai_bond_quantity_10 #bond quantité
							}
							change_variable = {
								name = ai_total_bond_value_10
								multiply = scope:seller.bond_price
							}

							#interet total
							set_variable = {
								name = ai_interest_calculated_10
								value = 1
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = var:ai_bond_quantity_10 #bond quantité
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = scope:seller.bond_price
							}
							change_variable = {
								name = ai_interest_calculated_10
								multiply = scope:seller.interest_value_10Y
							}

							#interet total à terme
							set_variable = {
								name = ai_interest_at_term_calculated_10
								value = var:ai_interest_calculated_10
							}
							change_variable = {
								name = ai_interest_at_term_calculated_10
								multiply = 10
							}

							#interet par mois
							set_variable = {
								name = ai_interest_per_month_calculated_10
								value = var:ai_interest_calculated_10
							}
							change_variable = {
								name = ai_interest_per_month_calculated_10
								divide = 12
							}

							add_treasury = {
								subtract = var:ai_total_bond_value_10
							}

							# add_modifier = {
							# 	name = ai_buy_bond_10
							# 	months = 120
							# 	multiplier = var:ai_interest_per_month_calculated_10
							# }
							interest_per_month_from_foreign_debt_investment = yes
							set_variable = {
								name = ai_maturity_time_10
								value = 10 #test
							}
							#demare le on_action
							set_variable = {
								name = ai_buy_bond_10_on
								value = 1
							}
						}

						#################
						#ajout à la liste des acheteur
						add_to_variable_list = {
							name = central_bank_debt_buyer_list
							target = scope:buyer
						}
						#ajout à la varriable qui synthétise tout les crédit en or et les interet en or
						change_variable = {
							name = gold_loaned_to_central_bank
							add = scope:buyer.var:ai_total_bond_value_10
						}
						#interet que la banque centrale pays à l'année
						change_variable = {
							name = central_bank_interest_refund_per_year
							add = scope:buyer.var:ai_interest_calculated_10
						}
					}
				}
			}

			# if = {
			# 	limit = {
			# 		var:ai_total_bond_value_10 < scope:seller.central_bank_debt
			# 	}
			# 	clear_toute_les_valeur
			# }
			# scope:is_player_for_notification = {
			# 	post_notification = ai_selle_bond_maturity_10_message
			# }
		}
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

# ██████╗  ██████╗ ███╗   ██╗██████╗     ███╗   ███╗ █████╗ ████████╗██╗   ██╗██████╗ ██╗████████╗██╗   ██╗
# ██╔══██╗██╔═══██╗████╗  ██║██╔══██╗    ████╗ ████║██╔══██╗╚══██╔══╝██║   ██║██╔══██╗██║╚══██╔══╝╚██╗ ██╔╝
# ██████╔╝██║   ██║██╔██╗ ██║██║  ██║    ██╔████╔██║███████║   ██║   ██║   ██║██████╔╝██║   ██║    ╚████╔╝
# ██╔══██╗██║   ██║██║╚██╗██║██║  ██║    ██║╚██╔╝██║██╔══██║   ██║   ██║   ██║██╔══██╗██║   ██║     ╚██╔╝
# ██████╔╝╚██████╔╝██║ ╚████║██████╔╝    ██║ ╚═╝ ██║██║  ██║   ██║   ╚██████╔╝██║  ██║██║   ██║      ██║
# ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝     ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝   ╚═╝      ╚═╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

bond_maturity_1 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_1
		add = 1
	}
	#no_longer_exists_1
	if = {
		every_in_list = {
			variable = seller_country_general_1
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_1
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_1
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_1 > var:maturity_time_1
				no_longer_exists_1 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_1
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_1
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_1
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_1 = 1
					}
					add_treasury = {
						add = var:total_bond_value_1
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_1 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_1_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_1_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_1
					value = 0
				}
				set_variable = {
					name = bond_quantity_1
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_1
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_1
					value = 0
				}
				set_variable = {
					name = interest_calculated_1
					value = 0
				}
				set_variable = {
					name = total_bond_value_1
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_1
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_1
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_1
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_1
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_1
				clear_variable_list = seller_country_1

				clear_variable_list = seller_country_general_1
				clear_variable_list = buyer_country_general_1
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_2 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_2
		add = 1
	}
	#no_longer_exists_2
	if = {
		every_in_list = {
			variable = seller_country_general_2
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_2
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_2
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_2 > var:maturity_time_2
				no_longer_exists_2 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_2
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_2
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_2
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_2 = 1
					}
					add_treasury = {
						add = var:total_bond_value_2
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_2 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_2_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_2_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_2
					value = 0
				}
				set_variable = {
					name = bond_quantity_2
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_2
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_2
					value = 0
				}
				set_variable = {
					name = interest_calculated_2
					value = 0
				}
				set_variable = {
					name = total_bond_value_2
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_2
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_2
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_2
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_2
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_2
				clear_variable_list = seller_country_2

				clear_variable_list = seller_country_general_2
				clear_variable_list = buyer_country_general_2
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_3 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_3
		add = 1
	}
	#no_longer_exists_3
	if = {
		every_in_list = {
			variable = seller_country_general_3
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_3
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_3
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_3 > var:maturity_time_3
				no_longer_exists_3 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_3
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_3
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_3
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_3 = 1
					}
					add_treasury = {
						add = var:total_bond_value_3
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_3 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_3_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_3_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_3
					value = 0
				}
				set_variable = {
					name = bond_quantity_3
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_3
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_3
					value = 0
				}
				set_variable = {
					name = interest_calculated_3
					value = 0
				}
				set_variable = {
					name = total_bond_value_3
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_3
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_3
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_3
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_3
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_3
				clear_variable_list = seller_country_3

				clear_variable_list = seller_country_general_3
				clear_variable_list = buyer_country_general_3
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_4 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_4
		add = 1
	}
	#no_longer_exists_4
	if = {
		every_in_list = {
			variable = seller_country_general_4
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_4
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_4
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_4 > var:maturity_time_4
				no_longer_exists_4 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_4
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_4
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_4
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_4 = 1
					}
					add_treasury = {
						add = var:total_bond_value_4
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_4 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_4_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_4_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_4
					value = 0
				}
				set_variable = {
					name = bond_quantity_4
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_4
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_4
					value = 0
				}
				set_variable = {
					name = interest_calculated_4
					value = 0
				}
				set_variable = {
					name = total_bond_value_4
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_4
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_4
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_4
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_4
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_4
				clear_variable_list = seller_country_4

				clear_variable_list = seller_country_general_4
				clear_variable_list = buyer_country_general_4
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_5 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_5
		add = 1
	}
	#no_longer_exists_5
	if = {
		every_in_list = {
			variable = seller_country_general_5
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_5
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_5
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_5 > var:maturity_time_5
				no_longer_exists_5 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_5
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_5
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_5
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_5 = 1
					}
					add_treasury = {
						add = var:total_bond_value_5
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_5 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_5_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_5_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_5
					value = 0
				}
				set_variable = {
					name = bond_quantity_5
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_5
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_5
					value = 0
				}
				set_variable = {
					name = interest_calculated_5
					value = 0
				}
				set_variable = {
					name = total_bond_value_5
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_5
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_5
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_5
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_5
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_5
				clear_variable_list = seller_country_5

				clear_variable_list = seller_country_general_5
				clear_variable_list = buyer_country_general_5
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_6 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_6
		add = 1
	}
	#no_longer_exists_6
	if = {
		every_in_list = {
			variable = seller_country_general_6
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_6
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_6
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_6 > var:maturity_time_6
				no_longer_exists_6 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_6
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_6
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_6
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_6 = 1
					}
					add_treasury = {
						add = var:total_bond_value_6
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_6 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_6_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_6_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_6
					value = 0
				}
				set_variable = {
					name = bond_quantity_6
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_6
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_6
					value = 0
				}
				set_variable = {
					name = interest_calculated_6
					value = 0
				}
				set_variable = {
					name = total_bond_value_6
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_6
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_6
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_6
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_6
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_6
				clear_variable_list = seller_country_6

				clear_variable_list = seller_country_general_6
				clear_variable_list = buyer_country_general_6
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_7 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_7
		add = 1
	}
	#no_longer_exists_7
	if = {
		every_in_list = {
			variable = seller_country_general_7
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_7
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_7
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_7 > var:maturity_time_7
				no_longer_exists_7 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_7
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_7
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_7
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_7 = 1
					}
					add_treasury = {
						add = var:total_bond_value_7
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_7 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_7_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_7_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_7
					value = 0
				}
				set_variable = {
					name = bond_quantity_7
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_7
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_7
					value = 0
				}
				set_variable = {
					name = interest_calculated_7
					value = 0
				}
				set_variable = {
					name = total_bond_value_7
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_7
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_7
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_7
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_7
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_7
				clear_variable_list = seller_country_7

				clear_variable_list = seller_country_general_7
				clear_variable_list = buyer_country_general_7
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_8 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_8
		add = 1
	}
	#no_longer_exists_8
	if = {
		every_in_list = {
			variable = seller_country_general_8
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_8
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_8
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_8 > var:maturity_time_8
				no_longer_exists_8 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_8
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_8
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_8
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_8 = 1
					}
					add_treasury = {
						add = var:total_bond_value_8
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_8 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_8_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_8_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_8
					value = 0
				}
				set_variable = {
					name = bond_quantity_8
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_8
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_8
					value = 0
				}
				set_variable = {
					name = interest_calculated_8
					value = 0
				}
				set_variable = {
					name = total_bond_value_8
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_8
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_8
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_8
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_8
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_8
				clear_variable_list = seller_country_8

				clear_variable_list = seller_country_general_8
				clear_variable_list = buyer_country_general_8
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_9 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_9
		add = 1
	}
	#no_longer_exists_9
	if = {
		every_in_list = {
			variable = seller_country_general_9
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_9
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_9
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_9 > var:maturity_time_9
				no_longer_exists_9 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_9
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_9
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_9
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_9 = 1
					}
					add_treasury = {
						add = var:total_bond_value_9
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_9 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_9_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_9_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_9
					value = 0
				}
				set_variable = {
					name = bond_quantity_9
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_9
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_9
					value = 0
				}
				set_variable = {
					name = interest_calculated_9
					value = 0
				}
				set_variable = {
					name = total_bond_value_9
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_9
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_9
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_9
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_9
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_9
				clear_variable_list = seller_country_9

				clear_variable_list = seller_country_general_9
				clear_variable_list = buyer_country_general_9
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
bond_maturity_10 = {
	#gui timer
	change_variable = {
		name = selle_bond_maturity_yers_time_10
		add = 1
	}
	#no_longer_exists_10
	if = {
		every_in_list = {
			variable = seller_country_general_10
			save_scope_as = seller
		}
		limit = {
			not = {
				scope:seller = {
					exists = prev
				}
			}
		}
		change_variable = {
			name = no_longer_exists_10
			add = 1
		}
	}
	#maturity
	change_variable = {
		name = selle_bond_maturity_yers_10
		add = -1
	}
	if = {
		limit = {
			or = {
				var:selle_bond_maturity_yers_10 > var:maturity_time_10
				no_longer_exists_10 = 0
			}
		}

		#seller
		every_in_list = {
			variable = seller_country_general_10
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = root #scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = root.var:total_bond_value_10
				}

				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = root.var:interest_calculated_10
				}
			}
			root = {
				
				if = {
					limit = {
						no_longer_exists_10 = 1
					}
					add_treasury = {
						add = var:total_bond_value_10
					}
				}
				# if = {
				# 	limit = {
				#		not = {
				#			no_longer_exists_10 = 1
				#		}
				#	}
				# 	post_notification = notification_seller_bond_no_longer_exists_10_message
				# }

				#Reset variable
				set_variable = {
					name = buy_bond_10_on
					value = 0
				}
				set_variable = {
					name = interest_purchasing_10
					value = 0
				}
				set_variable = {
					name = bond_quantity_10
					value = 0
				}
				set_variable = {
					name = quantity_purchasing_10
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_time_10
					value = 0
				}
				set_variable = {
					name = interest_calculated_10
					value = 0
				}
				set_variable = {
					name = total_bond_value_10
					value = 0
				}
				set_variable = {
					name = interest_at_term_calculated_10
					value = 0
				}
				set_variable = {
					name = interest_per_month_calculated_10
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_yers_10
					value = 0
				}
				set_variable = {
					name = selle_bond_maturity_on_action_10
					value = 0
				}
				
				#Reset list
				clear_variable_list = buyer_country_10
				clear_variable_list = seller_country_10

				clear_variable_list = seller_country_general_10
				clear_variable_list = buyer_country_general_10
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#ai_bond_maturity

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

ai_bond_maturity_1 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_1
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_1
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_1 = var:ai_maturity_time_1
				ai_no_longer_exists_1 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_1
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_1
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_1
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_1 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_1
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_1_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_1
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_1
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_1
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_1
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_1
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_1
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_1
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_1
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_1
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_1
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_1
				clear_variable_list = ai_seller_country_1

				clear_variable_list = ai_seller_country_general_1
				clear_variable_list = ai_buyer_country_general_1
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_2 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_2
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_2
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_2 = var:ai_maturity_time_2
				ai_no_longer_exists_2 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_2
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_2
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_2
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_2 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_2
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_2_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_2
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_2
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_2
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_2
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_2
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_2
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_2
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_2
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_2
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_2
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_2
				clear_variable_list = ai_seller_country_2

				clear_variable_list = ai_seller_country_general_2
				clear_variable_list = ai_buyer_country_general_2
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_3 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_3
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_3
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_3 = var:ai_maturity_time_3
				ai_no_longer_exists_3 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_3
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_3
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_3
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_3 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_3
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_3_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_3
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_3
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_3
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_3
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_3
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_3
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_3
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_3
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_3
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_3
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_3
				clear_variable_list = ai_seller_country_3

				clear_variable_list = ai_seller_country_general_3
				clear_variable_list = ai_buyer_country_general_3
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_4 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_4
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_4
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_4 = var:ai_maturity_time_4
				ai_no_longer_exists_4 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_4
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_4
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_4
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_4 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_4
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_4_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_4
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_4
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_4
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_4
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_4
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_4
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_4
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_4
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_4
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_4
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_4
				clear_variable_list = ai_seller_country_4

				clear_variable_list = ai_seller_country_general_4
				clear_variable_list = ai_buyer_country_general_4
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_5 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_5
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_5
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_5 = var:ai_maturity_time_5
				ai_no_longer_exists_5 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_5
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_5
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_5
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_5 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_5
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_5_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_5
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_5
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_5
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_5
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_5
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_5
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_5
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_5
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_5
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_5
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_5
				clear_variable_list = ai_seller_country_5

				clear_variable_list = ai_seller_country_general_5
				clear_variable_list = ai_buyer_country_general_5
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_6 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_6
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_6
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_6 = var:ai_maturity_time_6
				ai_no_longer_exists_6 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_6
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_6
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_6
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_6 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_6
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_6_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_6
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_6
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_6
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_6
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_6
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_6
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_6
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_6
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_6
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_6
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_6
				clear_variable_list = ai_seller_country_6

				clear_variable_list = ai_seller_country_general_6
				clear_variable_list = ai_buyer_country_general_6
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_7 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_7
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_7
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_7 = var:ai_maturity_time_7
				ai_no_longer_exists_7 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_7
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_7
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_7
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_7 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_7
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_7_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_7
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_7
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_7
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_7
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_7
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_7
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_7
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_7
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_7
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_7
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_7
				clear_variable_list = ai_seller_country_7

				clear_variable_list = ai_seller_country_general_7
				clear_variable_list = ai_buyer_country_general_7
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_8 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_8
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_8
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_8 = var:ai_maturity_time_8
				ai_no_longer_exists_8 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_8
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_8
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_8
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_8 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_8
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_8_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_8
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_8
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_8
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_8
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_8
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_8
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_8
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_8
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_8
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_8
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_8
				clear_variable_list = ai_seller_country_8

				clear_variable_list = ai_seller_country_general_8
				clear_variable_list = ai_buyer_country_general_8
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_9 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_9
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_9
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_9 = var:ai_maturity_time_9
				ai_no_longer_exists_9 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_9
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_9
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_9
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_9 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_9
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_9_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_9
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_9
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_9
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_9
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_9
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_9
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_9
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_9
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_9
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_9
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_9
				clear_variable_list = ai_seller_country_9

				clear_variable_list = ai_seller_country_general_9
				clear_variable_list = ai_buyer_country_general_9
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}
ai_bond_maturity_10 = {
	#gui timer
	change_variable = {
		name = ai_selle_bond_maturity_yers_time_10
		add = 1
	}
	#maturity
	change_variable = {
		name = ai_selle_bond_maturity_yers_10
		add = 1
	}
	if = {
		limit = {
			or = {
				var:ai_selle_bond_maturity_yers_10 = var:ai_maturity_time_10
				ai_no_longer_exists_10 = 0 #no_longer_exists 
			}
		}
		root = {
			save_scope_as = buyer
		}

		#seller
		every_in_list = {
			variable = ai_seller_country_general_10
			save_scope_as = seller

			scope:seller = {
				remove_from_list = {
					variable = central_bank_debt_buyer_list
					target = scope:buyer
				}
				national_debt_variable_list_clear = yes

				#### retour de l'investissement
				change_variable = {
					name = gold_loaned_to_central_bank
					subtract = scope:buyer.var:ai_total_bond_value_10
				}
				change_variable = {
					name = central_bank_interest_refund_per_year
					subtract = scope:buyer.var:ai_interest_calculated_10
				}
			}
			root = {
				if = {
					limit = {
						ai_no_longer_exists_10 = 1
					}
					add_treasury = {
						add = var:ai_total_bond_value_10
					}
				}

				#Reset variable
				set_variable = {
					name = ai_buy_bond_10_on
					value = 0
				}
				set_variable = {
					name = ai_interest_purchasing_10
					value = 0
				}
				set_variable = {
					name = ai_bond_quantity_10
					value = 0
				}
				set_variable = {
					name = ai_quantity_purchasing_10
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_time_10
					value = 0
				}
				set_variable = {
					name = ai_interest_calculated_10
					value = 0
				}
				set_variable = {
					name = ai_total_bond_value_10
					value = 0
				}
				set_variable = {
					name = ai_interest_at_term_calculated_10
					value = 0
				}
				set_variable = {
					name = ai_interest_per_month_calculated_10
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_yers_10
					value = 0
				}
				set_variable = {
					name = ai_selle_bond_maturity_on_action_10
					value = 0
				}

				#Reset list
				clear_variable_list = ai_buyer_country_10
				clear_variable_list = ai_seller_country_10

				clear_variable_list = ai_seller_country_general_10
				clear_variable_list = ai_buyer_country_general_10
				interest_per_month_from_foreign_debt_investment = yes
			}
		}
	}
}


#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#econimic_krach

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################


#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#central_bank_interest_refund_per_year_in_gold

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

central_bank_interest_refund_per_year_in_gold = {
	change_variable = {
		name = gold_loaned_to_central_bank
		subtract = central_bank_interest_refund_per_year
	}
	if = {
		limit  = {
			gold_loaned_to_central_bank < 0
		}
		set_variable = {
			name = gold_loaned_to_central_bank
			value = 0
		}
		set_variable = {
			name = central_bank_interest_refund_per_year
			value = 0
		}

		every_in_list = {
			variable = central_bank_debt_buyer_list
			save_scope_as = buyer

			scope:buyer = {
				add_to_variable_list = {
					name = countries_with_central_bank_in_default
					target = root
				}
			}
		}
		clear_variable_list = central_bank_debt_buyer_list
	}
}

interest_per_month_from_foreign_debt_investment = {
	remove_modifier = interest_from_foreign_debt_investment
	add_modifier = {
		name = interest_from_foreign_debt_investment
		multiplier = interest_per_month_from_foreign_debt_investment
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#  ██████╗  ██████╗  ██████╗ ██████╗      ██████╗ ██████╗ ███╗   ██╗████████╗██████╗  █████╗  ██████╗████████╗
# ██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗    ██╔════╝██╔═══██╗████╗  ██║╚══██╔══╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝
# ██║  ███╗██║   ██║██║   ██║██║  ██║    ██║     ██║   ██║██╔██╗ ██║   ██║   ██████╔╝███████║██║        ██║
# ██║   ██║██║   ██║██║   ██║██║  ██║    ██║     ██║   ██║██║╚██╗██║   ██║   ██╔══██╗██╔══██║██║        ██║
# ╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝    ╚██████╗╚██████╔╝██║ ╚████║   ██║   ██║  ██║██║  ██║╚██████╗   ██║
#  ╚═════╝  ╚═════╝  ╚═════╝ ╚═════╝      ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝   ╚═╝
#
#  ██╗    ██╗   ██╗███████╗ █████╗ ██████╗
# ███║    ╚██╗ ██╔╝██╔════╝██╔══██╗██╔══██╗
# ╚██║     ╚████╔╝ █████╗  ███████║██████╔╝
#  ██║      ╚██╔╝  ██╔══╝  ██╔══██║██╔══██╗
#  ██║       ██║   ███████╗██║  ██║██║  ██║
#  ╚═╝       ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

clear_grain_contract_1_year= {
	set_variable = {
		name = grain_contract_1_year
		value = 0
	}
}
clear_wood_contract_1_year= {
	set_variable = {
		name = wood_contract_1_year
		value = 0
	}
}
clear_coal_contract_1_year= {
	set_variable = {
		name = coal_contract_1_year
		value = 0
	}
}
clear_iron_contract_1_year= {
	set_variable = {
		name = iron_contract_1_year
		value = 0
	}
}
clear_sulfur_contract_1_year= {
	set_variable = {
		name = sulfur_contract_1_year
		value = 0
	}
}
clear_lead_contract_1_year= {
	set_variable = {
		name = lead_contract_1_year
		value = 0
	}
}
clear_oil_contract_1_year= {
	set_variable = {
		name = oil_contract_1_year
		value = 0
	}
}
clear_dye_contract_1_year= {
	set_variable = {
		name = dye_contract_1_year
		value = 0
	}
}
clear_silk_contract_1_year= {
	set_variable = {
		name = silk_contract_1_year
		value = 0
	}
}
clear_rubber_contract_1_year= {
	set_variable = {
		name = rubber_contract_1_year
		value = 0
	}
}
clear_ammunition_contract_1_year= {
	set_variable = {
		name = ammunition_contract_1_year
		value = 0
	}
}
clear_small_arms_contract_1_year= {
	set_variable = {
		name = small_arms_contract_1_year
		value = 0
	}
}
clear_artillery_contract_1_year= {
	set_variable = {
		name = artillery_contract_1_year
		value = 0
	}
}
clear_tanks_contract_1_year= {
	set_variable = {
		name = tanks_contract_1_year
		value = 0
	}
}
clear_aeroplanes_contract_1_year= {
	set_variable = {
		name = aeroplanes_contract_1_year
		value = 0
	}
}
clear_manowars_contract_1_year= {
	set_variable = {
		name = manowars_contract_1_year
		value = 0
	}
}
clear_ironclads_contract_1_year = {
	set_variable = {
		name = ironclads_contract_1_year
		value = 0
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

# financial_center_production_methods = { 
# 	every_scope_state = {

# 		#on bond
# 		if = {
# 			limit = {
# 				owner  = {
# 					national_debt_compared_gdp >= 0.05
# 				}
# 				or = {
# 					is_production_method_active = {
# 						building_type = building_financial_centre
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_fra
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_gbr
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_usa
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_net
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_ger
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_aus
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_ita
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_chi
# 						production_method = pm_no_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_jap
# 						production_method = pm_no_bond_exchange
# 					}
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_fra
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_fra
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_gbr
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_gbr
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_usa
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_usa
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_net
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_net
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_ger
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_ger
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_aus
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_aus
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_ita
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_ita
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_chi
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_chi
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_jap
# 					}
# 				}
# 				activate_production_method = {
# 					building_tfinancial_centre_jappe = building_financial_centre_jap
# 					production_method = pm_bond_exchange
# 				}
# 			}
# 		}

# 		#off bond
# 		if = {
# 			limit = {
# 				owner  = {
# 					national_debt_compared_gdp < 0.05
# 				}
# 				or = {
# 					is_production_method_active = {
# 						building_type = building_financial_centre
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_fra
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_gbr
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_usa
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_net
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_ger
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_aus
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_ita
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_chi
# 						production_method = pm_bond_exchange
# 					}
# 					is_production_method_active = {
# 						building_type = building_financial_centre_jap
# 						production_method = pm_bond_exchange
# 					}
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_fra
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_fra
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_gbr
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_gbr
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_usa
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_usa
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_net
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_net
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_ger
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_ger
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_aus
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_aus
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_ita
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_ita
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_chi
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_chi
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 			if = {
# 				limit = {
# 					owner  = {
# 						has_building = building_financial_centre_jap
# 					}
# 				}
# 				activate_production_method = {
# 					building_type = building_financial_centre_jap
# 					production_method = pm_no_bond_exchange
# 				}
# 			}
# 		}
# 	}
# }
private_ownership_production_stocks = {
	every_scope_state = {

		################
		#building_food_industry
		if = {
			limit = {
				has_building = building_food_industry
				b:building_food_industry  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_food_industry
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_food_industry
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_food_industry
				b:building_food_industry  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_food_industry
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_food_industry
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_textile_mills
		if = {
			limit = {
				has_building = building_textile_mills
				b:building_textile_mills  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_textile_mills
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_textile_mills
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_textile_mills
				b:building_textile_mills  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_textile_mills
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_textile_mills
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_furniture_manufacturies
		if = {
			limit = {
				has_building = building_furniture_manufacturies
				b:building_furniture_manufacturies  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_furniture_manufacturies
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_furniture_manufacturies
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_furniture_manufacturies
				b:building_furniture_manufacturies  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_furniture_manufacturies
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_furniture_manufacturies
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_glassworks
		if = {
			limit = {
				has_building = building_glassworks
				b:building_glassworks  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_glassworks
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_glassworks
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_glassworks
				b:building_glassworks  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_glassworks
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_glassworks
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_tooling_workshops
		if = {
			limit = {
				has_building = building_tooling_workshops
				b:building_tooling_workshops  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_tooling_workshops
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_tooling_workshops
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_tooling_workshops
				b:building_tooling_workshops  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_tooling_workshops
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_tooling_workshops
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_paper_mills
		if = {
			limit = {
				has_building = building_paper_mills
				b:building_paper_mills  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_paper_mills
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_paper_mills
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_paper_mills
				b:building_paper_mills  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_paper_mills
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_paper_mills
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_chemical_plants
		if = {
			limit = {
				has_building = building_chemical_plants
				b:building_chemical_plants  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_chemical_plants
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_chemical_plants
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_chemical_plants
				b:building_chemical_plants  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_chemical_plants
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_chemical_plants
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_explosives_factory
		if = {
			limit = {
				has_building = building_explosives_factory
				b:building_explosives_factory  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_explosives_factory
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_explosives_factory
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_explosives_factory
				b:building_explosives_factory  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_explosives_factory
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_explosives_factory
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_synthetics_plants
		if = {
			limit = {
				has_building = building_synthetics_plants
				b:building_synthetics_plants  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_synthetics_plants
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_synthetics_plants
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_synthetics_plants
				b:building_synthetics_plants  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_synthetics_plants
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_synthetics_plants
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_steel_mills
		if = {
			limit = {
				has_building = building_steel_mills
				b:building_steel_mills  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_steel_mills
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_steel_mills
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_steel_mills
				b:building_steel_mills  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_steel_mills
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_steel_mills
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_motor_industry
		if = {
			limit = {
				has_building = building_motor_industry
				b:building_motor_industry  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_motor_industry
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_motor_industry
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_motor_industry
				b:building_motor_industry  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_motor_industry
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_motor_industry
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_shipyards
		if = {
			limit = {
				has_building = building_shipyards
				b:building_shipyards  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_shipyards
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_shipyards
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_shipyards
				b:building_shipyards  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_shipyards
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_shipyards
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_military_shipyards
		if = {
			limit = {
				has_building = building_military_shipyards
				b:building_military_shipyards  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_military_shipyards
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_military_shipyards
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_military_shipyards
				b:building_military_shipyards  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_military_shipyards
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_military_shipyards
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_war_machine_industry
		if = {
			limit = {
				has_building = building_war_machine_industry
				b:building_war_machine_industry  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_war_machine_industry
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_war_machine_industry
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_war_machine_industry
				b:building_war_machine_industry  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_war_machine_industry
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_war_machine_industry
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_electrics_industry
		if = {
			limit = {
				has_building = building_electrics_industry
				b:building_electrics_industry  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_electrics_industry
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_electrics_industry
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_electrics_industry
				b:building_electrics_industry  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_electrics_industry
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_electrics_industry
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_arms_industry
		if = {
			limit = {
				has_building = building_arms_industry
				b:building_arms_industry  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_arms_industry
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_arms_industry
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_arms_industry
				b:building_arms_industry  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_arms_industry
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_arms_industry
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_artillery_foundries
		if = {
			limit = {
				has_building = building_artillery_foundries
				b:building_artillery_foundries  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_artillery_foundries
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_artillery_foundries
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_artillery_foundries
				b:building_artillery_foundries  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_artillery_foundries
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_artillery_foundries
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}
		#building_munition_plants
		if = {
			limit = {
				has_building = building_munition_plants
				b:building_munition_plants  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_munition_plants
					production_method = pm_no_private_ownership_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_munition_plants
				production_method = pm_private_ownership_majority_manufacture_stock
			}
		}
		if = {
			limit = {
				has_building = building_munition_plants
				b:building_munition_plants  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_munition_plants
					production_method = pm_private_ownership_majority_manufacture_stock
				}
			}
			activate_production_method = {
				building_type = building_munition_plants
				production_method = pm_no_private_ownership_manufacture_stock
			}
		}

		################
		#building_rye_farm
		if = {
			limit = {
				has_building = building_rye_farm
				b:building_rye_farm  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_rye_farm
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rye_farm
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_rye_farm
				b:building_rye_farm  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_rye_farm
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rye_farm
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_wheat_farm
		if = {
			limit = {
				has_building = building_wheat_farm
				b:building_wheat_farm  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_wheat_farm
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_wheat_farm
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_wheat_farm
				b:building_wheat_farm  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_wheat_farm
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_wheat_farm
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_rice_farm
		if = {
			limit = {
				has_building = building_rice_farm
				b:building_rice_farm  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_rice_farm
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rice_farm
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_rice_farm
				b:building_rice_farm  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_rice_farm
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rice_farm
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_maize_farm
		if = {
			limit = {
				has_building = building_maize_farm
				b:building_maize_farm  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_maize_farm
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_maize_farm
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_maize_farm
				b:building_maize_farm  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_maize_farm
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_maize_farm
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_millet_farm
		if = {
			limit = {
				has_building = building_millet_farm
				b:building_millet_farm  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_millet_farm
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_millet_farm
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_millet_farm
				b:building_millet_farm  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_millet_farm
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_millet_farm
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_livestock_ranch
		if = {
			limit = {
				has_building = building_livestock_ranch
				b:building_livestock_ranch  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_livestock_ranch
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_livestock_ranch
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_livestock_ranch
				b:building_livestock_ranch  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_livestock_ranch
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_livestock_ranch
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_vineyard_plantation
		if = {
			limit = {
				has_building = building_vineyard_plantation
				b:building_vineyard_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_vineyard_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_vineyard_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_vineyard_plantation
				b:building_vineyard_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_vineyard_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_vineyard_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_logging_camp
		if = {
			limit = {
				has_building = building_logging_camp
				b:building_logging_camp  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_logging_camp
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_logging_camp
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_logging_camp
				b:building_logging_camp  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_logging_camp
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_logging_camp
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_rubber_plantation
		if = {
			limit = {
				has_building = building_rubber_plantation
				b:building_rubber_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_rubber_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rubber_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_rubber_plantation
				b:building_rubber_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_rubber_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_rubber_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_fishing_wharf
		if = {
			limit = {
				has_building = building_fishing_wharf
				b:building_fishing_wharf  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_fishing_wharf
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_fishing_wharf
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_fishing_wharf
				b:building_fishing_wharf  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_fishing_wharf
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_fishing_wharf
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_whaling_station
		if = {
			limit = {
				has_building = building_whaling_station
				b:building_whaling_station  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_whaling_station
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_whaling_station
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_whaling_station
				b:building_whaling_station  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_whaling_station
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_whaling_station
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_coffee_plantation
		if = {
			limit = {
				has_building = building_coffee_plantation
				b:building_coffee_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_coffee_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_coffee_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_coffee_plantation
				b:building_coffee_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_coffee_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_coffee_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_cotton_plantation
		if = {
			limit = {
				has_building = building_cotton_plantation
				b:building_cotton_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_cotton_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_cotton_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_cotton_plantation
				b:building_cotton_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_cotton_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_cotton_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_dye_plantation
		if = {
			limit = {
				has_building = building_dye_plantation
				b:building_dye_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_dye_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_dye_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_dye_plantation
				b:building_dye_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_dye_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_dye_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_opium_plantation
		if = {
			limit = {
				has_building = building_opium_plantation
				b:building_opium_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_opium_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_opium_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_opium_plantation
				b:building_opium_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_opium_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_opium_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_tea_plantation
		if = {
			limit = {
				has_building = building_tea_plantation
				b:building_tea_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_tea_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_tea_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_tea_plantation
				b:building_tea_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_tea_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_tea_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_tobacco_plantation
		if = {
			limit = {
				has_building = building_tobacco_plantation
				b:building_tobacco_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_tobacco_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_tobacco_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_tobacco_plantation
				b:building_tobacco_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_tobacco_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_tobacco_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_sugar_plantation
		if = {
			limit = {
				has_building = building_sugar_plantation
				b:building_sugar_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_sugar_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_sugar_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_sugar_plantation
				b:building_sugar_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_sugar_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_sugar_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_banana_plantation
		if = {
			limit = {
				has_building = building_banana_plantation
				b:building_banana_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_banana_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_banana_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_banana_plantation
				b:building_banana_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_banana_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_banana_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_silk_plantation
		if = {
			limit = {
				has_building = building_silk_plantation
				b:building_silk_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_silk_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_silk_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_silk_plantation
				b:building_silk_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_silk_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_silk_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}
		#building_vineyard_plantation
		if = {
			limit = {
				has_building = building_vineyard_plantation
				b:building_vineyard_plantation  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_vineyard_plantation
					production_method = pm_no_private_ownership_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_vineyard_plantation
				production_method = pm_private_ownership_majority_agricultural_stock
			}
		}
		if = {
			limit = {
				has_building = building_vineyard_plantation
				b:building_vineyard_plantation  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_vineyard_plantation
					production_method = pm_private_ownership_majority_agricultural_stock
				}
			}
			activate_production_method = {
				building_type = building_vineyard_plantation
				production_method = pm_no_private_ownership_agricultural_stock
			}
		}

		################
		#building_coal_mine
		if = {
			limit = {
				has_building = building_coal_mine
				b:building_coal_mine  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_coal_mine
					production_method = pm_no_private_ownership_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_coal_mine
				production_method = pm_private_ownership_majority_mining_stock
			}
		}
		if = {
			limit = {
				has_building = building_coal_mine
				b:building_coal_mine  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_coal_mine
					production_method = pm_private_ownership_majority_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_coal_mine
				production_method = pm_no_private_ownership_mining_stock
			}
		}
		#building_iron_mine
		if = {
			limit = {
				has_building = building_iron_mine
				b:building_iron_mine  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_iron_mine
					production_method = pm_no_private_ownership_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_iron_mine
				production_method = pm_private_ownership_majority_mining_stock
			}
		}
		if = {
			limit = {
				has_building = building_iron_mine
				b:building_iron_mine  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_iron_mine
					production_method = pm_private_ownership_majority_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_iron_mine
				production_method = pm_no_private_ownership_mining_stock
			}
		}
		#building_lead_mine
		if = {
			limit = {
				has_building = building_lead_mine
				b:building_lead_mine  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_lead_mine
					production_method = pm_no_private_ownership_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_lead_mine
				production_method = pm_private_ownership_majority_mining_stock
			}
		}
		if = {
			limit = {
				has_building = building_lead_mine
				b:building_lead_mine  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_lead_mine
					production_method = pm_private_ownership_majority_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_lead_mine
				production_method = pm_no_private_ownership_mining_stock
			}
		}
		#building_sulfur_mine
		if = {
			limit = {
				has_building = building_sulfur_mine
				b:building_sulfur_mine  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_sulfur_mine
					production_method = pm_no_private_ownership_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_sulfur_mine
				production_method = pm_private_ownership_majority_mining_stock
			}
		}
		if = {
			limit = {
				has_building = building_sulfur_mine
				b:building_sulfur_mine  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_sulfur_mine
					production_method = pm_private_ownership_majority_mining_stock
				}
			}
			activate_production_method = {
				building_type = building_sulfur_mine
				production_method = pm_no_private_ownership_mining_stock
			}
		}

		################
		#building_railway
		if = {
			limit = {
				has_building = building_railway
				b:building_railway  = {
					private_ownership_fraction > 0.5
				}
				is_production_method_active = {
					building_type = building_railway
					production_method = pm_no_private_ownership_railroad_stock
				}
			}
			activate_production_method = {
				building_type = building_railway
				production_method = pm_private_ownership_majority_railroad_stock
			}
		}
		if = {
			limit = {
				has_building = building_railway
				b:building_railway  = {
					private_ownership_fraction <= 0.5
				}
				is_production_method_active = {
					building_type = building_railway
					production_method = pm_private_ownership_majority_railroad_stock
				}
			}
			activate_production_method = {
				building_type = building_railway
				production_method = pm_no_private_ownership_railroad_stock
			}
		}
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

fluctuations_country_indice_value_year = {
	change_variable = {
		name = index_value_count
		add = 1
	}

    if = {
        limit = {
            var:index_value_count = 1
        }
        set_variable = {
            name = country_indice_value_1
            value = country_indice
        }
    }
    if = {
        limit = {
            var:index_value_count = 2
        }
        set_variable = {
            name = country_indice_value_2
            value = country_indice
        }

        set_variable = {
            name = country_indice_value_dif_01
            value = 0
        }
        change_variable = {
            name = country_indice_value_dif_01
            add = var:country_indice_value_2
        }
        change_variable = {
            name = country_indice_value_dif_01
            subtract = var:country_indice_value_1
        }
        change_variable = {
            name = country_indice_value_dif_01
            divide = var:country_indice_value_1
        }

		#change base_index_value
		set_variable = {
			name = base_index_value_dif
			value = var:base_index_value
		}
		change_variable = {
			name = base_index_value_dif
			multiply = var:country_indice_value_dif_01
		}

		if = {
			limit = {
				or = {
					var:base_index_value < 1000000 #point
					base_index_value_dif < 0
				}
			}
			change_variable = {
				name = base_index_value
				add = var:base_index_value_dif
			}
		}

        set_variable = {
            name = index_value_count
            value = 0
        }

		if = {
			limit = {
				var:country_indice_value_dif_01 < -0.5
			}
			financial_crash = yes
		}
    }
}
fluctuations_country_indice_value_year_clear = {
	set_variable = {
		name = country_indice_value_dif_01
		value = 0
	}
	set_variable = {
		name = base_index_value_dif
		value = 0
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#buy_bond_in_currrency_var

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

buy_bond_in_currrency_var = {
	every_scope_state = {
		if = {
			limit = {
				has_modifier = central_bank_historic_place
				is_capital = yes
			}
			save_scope_as = central_bank_site
		}
	}

	scope:seller = {
		if = {
			limit = {
				has_law = law_type:law_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_algerian_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_algerian_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_iraqi_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_iraqi_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_libyan_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_libyan_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_moroccan_dirham_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_moroccan_dirham_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_omanian_rial_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_omanian_rial_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_qiran_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_qiran_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_saudi_riyal_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_saudi_riyal_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_serbian_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_serbian_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_tunisian_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_tunisian_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dinar_yugoslav_dinar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dinar_yugoslav_dinar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_australian_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_australian_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_canadian_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_canadian_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_caribbean_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_caribbean_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_confederate_states_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_confederate_states_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_liberian_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_liberian_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_new_zealand_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_new_zealand_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_sierra_leonean_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_sierra_leonean_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_dollar_united_states_dollar_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_dollar_united_states_dollar_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_ariary_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_ariary_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_central_african_eco_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_central_african_eco_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_east_african_eco_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_east_african_eco_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_ethiopian_birr_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_ethiopian_birr_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_ghanaian_pound_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_ghanaian_pound_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_nigerian_naira_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_nigerian_naira_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_south_african_rand_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_south_african_rand_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_tuareg_ouguiya_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_tuareg_ouguiya_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_eco_west_african_eco_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_eco_west_african_eco_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_franc_belgian_franc_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_franc_belgian_franc_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_franc_french_franc_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_franc_french_franc_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_franc_luxembourgish_franc_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_franc_luxembourgish_franc_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_franc_swiss_franc_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_franc_swiss_franc_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_bavarian_gulden_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_bavarian_gulden_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_florin_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_florin_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_hungarian_forint_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_hungarian_forint_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_indies_guilder_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_indies_guilder_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_gulden_south_german_gulden_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_gulden_south_german_gulden_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_czech_koruna_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_czech_koruna_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_danish_krone_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_danish_krone_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_estonian_kroon_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_estonian_kroon_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_icelandic_krona_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_icelandic_krona_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_norwegian_krone_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_norwegian_krone_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_slovak_koruna_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_slovak_koruna_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_krone_swedish_krona_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_krone_swedish_krona_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_leon_leu_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_leon_leu_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_leon_lev_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_leon_lev_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_ducato_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_ducato_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_ottoman_lira_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_ottoman_lira_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_scudo_pontificio_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_scudo_pontificio_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_scudo_sardo_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_scudo_sardo_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_lira_toscane_lira_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_lira_toscane_lira_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_mark_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_mark_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_mark_finnish_markka_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_mark_finnish_markka_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_argentine_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_argentine_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_bolivien_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_bolivien_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_chilean_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_chilean_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_colombian_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_colombian_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_costa_rican_colon_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_costa_rican_colon_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_cuban_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_cuban_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_ecuadorian_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_ecuadorian_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_el_salvador_colon_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_el_salvador_colon_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_guatemalan_quetzal_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_guatemalan_quetzal_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_honduran_lempira_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_honduran_lempira_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_mexican_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_mexican_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_nicaraguan_cordoba_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_nicaraguan_cordoba_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_paraguayan_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_paraguayan_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_philippine_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_philippine_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_sol_de_oro_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_sol_de_oro_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_uruguayan_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_uruguayan_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_peso_venezuelan_peso_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_peso_venezuelan_peso_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_pound_egyptian_pound_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_pound_egyptian_pound_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_pound_irish_pound_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_pound_irish_pound_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_pound_sterling_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_pound_sterling_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_real_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_real_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_real_brazilian_real_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_real_brazilian_real_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_rupee_indian_rupee_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_rupee_indian_rupee_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_rupee_indonesian_rupiah_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_rupee_indonesian_rupiah_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_baht_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_baht_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_dong_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_dong_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_drachma_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_drachma_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_korean_won_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_korean_won_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_latvian_lats_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_latvian_lats_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_lithuanian_litas_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_lithuanian_litas_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_peseta_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_peseta_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_ruble_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_ruble_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_uni_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_uni_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_yen_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_yen_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_yuan_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_yuan_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_spe_zloti_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_spe_zloti_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_thaler_hannoveraner_thaler_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_thaler_hannoveraner_thaler_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_thaler_prussian_thaler_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_thaler_prussian_thaler_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_thaler_saxon_thaler_currency
			}
			scope:buyer = {
				scope:central_bank_site = {
					change_variable = {
						name = stockpiling_thaler_saxon_thaler_state_1
						subtract = $PBIC_1$
					}
				}
			}
		}
	}
}

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################

#economic_instability

#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################
#########################################################################################################################################################################################


#is_subject_custom_trigger = no
#
# 				has_modifier = has_central_bank
# has_modifier = has_financial_center
# var:country_indice_value_dif_01 < -0.5


# has_modifier = economic_instability

# is_subject_custom_trigger = no
# has_modifier = has_financial_center
# not = {
# 	has_modifier = economic_instability
# }

# global_country_ranking < 50

#cumulative_inflation_5_year > 0.5 # à changer pour 1ans 

economic_instability = {
	#Country Bankrupt - ok

	#event: ? si déclanche grace au trigger 

	#Bank central Bankrupt = weak currency - ok 
	#Crise monetaire = currency crisis (diminution de la valeur de la devise de plus de 50%/) -> délock l'inflation -> création d'inflation dans le monetary policy -> crise inflationniste du a la dette à vopitr 
	#Crise économique =  Economic crisis (diminution de la valeur du PIB de plus de 50%)
	#Crash financier = Financial crash (diminution de la valeur de l'index des marché de plus de 50%)

	remove_modifier = country_credit_rating_AAA
	remove_modifier = country_credit_rating_AA
	remove_modifier = country_credit_rating_A
	remove_modifier = country_credit_rating_BBB
	remove_modifier = country_credit_rating_BB
	remove_modifier = country_credit_rating_B
	remove_modifier = country_credit_rating_CCC
	remove_modifier = country_credit_rating_CC
	remove_modifier = country_credit_rating_C
	remove_modifier = country_credit_rating_D
	add_modifier = {
		name = country_credit_rating_D
	}
	remove_modifier = foreign_exchange_controls
	add_modifier = {
		name = foreign_exchange_controls
		months = 24
	}
	remove_modifier = economic_instability
	add_modifier = {
		name = economic_instability
		months = 24
	}


	#perte de prestige 25% voir plus
	#malus diplomatique avec tout les pays uniquement si default sur dette 





	#vente massife de la devise si : weak currency/currency crisis 
	# set_variable = {
	# 	name = economic_instability_var
	# 	value = 0
	# }
}

########################################################################################
currency_crisis = {
	#objectif:
	# - la devise baisse de 50% -> les pays étranger perde la confiance -> revente massive de la devise -> inflation scripter qui calcule la différence excte de valeur etre les 2 extreme de valeur
	# - revente integrale de la devise possedé par les pays étranger 
	# - control des change pour ne pas etre acheter 
	# - 


	capital= {
		save_scope_as = capital_state
	}	
	save_scope_as = target_country


	set_variable = {
		name = currency_crisis
		value = 1
	}
	# set_variable = {
	# 	name = economic_instability_var
	# 	value = -1
	# }

	#event for player
	if = {
		limit  = {
			is_subject_custom_trigger = no
			has_modifier = has_central_bank
			not = {
				has_modifier = economic_instability
			}
		}
		every_country = {
			limit = {
				is_player = yes
			}
			trigger_event = {
				id = 00_ef_economic_instability_event.1
				days = 0
				popup = no
			}
		}
	}
	all_currency_resold = yes
	economic_instability = yes
}
economic_crisis = {
	#objectif:
	#idem currency_crisis

	capital= {
		save_scope_as = capital_state
	}	
	save_scope_as = target_country

	set_variable = {
		name = economic_crisis
		value = 1
	}

	#event for player
	if = {
		limit  = {
			#is_subject_custom_trigger = no
			global_country_ranking < 100  #all pays
			not = {
				has_modifier = economic_instability
			}
		}
		every_country = {
			limit = {
				is_player = yes
			}
			trigger_event = {
				id = 00_ef_economic_instability_event.2
				days = 0
				popup = no
			}
		}
	}
	if = {
		limit  = {
			has_modifier = has_central_bank
		}
		all_currency_resold = yes
	}
	economic_instability = yes
} #-> revante devise en mass + pas de rachat si foreign_exchange_controls
financial_crash = {
	capital= {
		save_scope_as = capital_state
	}	
	save_scope_as = target_country

	set_variable = {
		name = financial_crash
		value = 1
	}
	# set_variable = {
	# 	name = economic_instability_var
	# 	value = -1
	# }

	#event for player
	if = {
		limit  = {
			is_subject_custom_trigger = no
			has_modifier = has_financial_center
			not = {
				has_modifier = economic_instability
			}
		}
		every_country = {
			limit = {
				is_player = yes
			}
			trigger_event = {
				id = 00_ef_economic_instability_event.3
				days = 0
				popup = no
			}
		}
	}
	economic_instability = yes
}
central_bank_bankruptcy = {
	#objectif:
	#idem currency_crisis

	capital= {
		save_scope_as = capital_state
	}	
	save_scope_as = target_country

	set_variable = {
		name = central_bank_bankruptcy
		value = 1
	}
	# set_variable = {
	# 	name = economic_instability_var
	# 	value = -1
	# }

	#event for player
	if = {
		limit  = {
			is_subject_custom_trigger = no
			has_modifier = has_central_bank
			not = {
				has_modifier = economic_instability
			}
		}
		every_country = {
			limit = {
				is_player = yes
			}
			trigger_event = {
				id = 00_ef_economic_instability_event.4
				days = 0
				popup = no
			}
		}
	}
	all_currency_resold = yes
	economic_instability = yes
} #-> revante devise en mass + pas de rachat si foreign_exchange_controls
country_bankruptcy = {
	capital= {
		save_scope_as = capital_state
	}	
	save_scope_as = target_country

	set_variable = {
		name = country_bankruptcy
		value = 1
	}
	# set_variable = {
	# 	name = economic_instability_var
	# 	value = -1
	# }

	
	#event for player
	if = {
		limit  = {
			is_subject_custom_trigger = no
			global_country_ranking < 50 #all pays
			not = {
				has_modifier = economic_instability
			}
		}
		every_country = {
			limit = {
				is_player = yes
			}
			trigger_event = {
				id = 00_ef_economic_instability_event.5
				days = 0
				popup = no
			}
		}
	}
	economic_instability = yes
}
########################################################################################

