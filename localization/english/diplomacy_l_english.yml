l_english:
 PRESTIGE_FROM_COUNTRY_GDP:1 "#variable $VALUE|+=$#! from [concept_gdp]"
 PRESTIGE_FROM_ARMY_POWER_PROJECTION:1 "#variable $VALUE|+=$#! from Army [concept_power_projection]"
 PRESTIGE_FROM_NAVY_POWER_PROJECTION:1 "#variable $VALUE|+=$#! from Navy [concept_power_projection]"
 PRESTIGE_FROM_COUNTRY_TIER:1 "#variable $VALUE|+=$#! from [concept_country_tier] of $TIER|v$"
 PRESTIGE_FROM_SUBJECT_GDP:2 "#variable $VALUE|+=$#! from [concept_gdp] of [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_ARMY_POWER_PROJECTION:2 "#variable $VALUE|+=$#! from Army [concept_power_projection] of [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_NAVY_POWER_PROJECTION:2 "#variable $VALUE|+=$#! from Navy [concept_power_projection] of [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_GOODS_LEADERBOARDS:1 "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! from being leading goods producer"
 PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN:1 "[Country.GetGoodsLeaderboardDesc]"
 NO_PRESTIGE_RANKING:0 "This [concept_country] has no [concept_prestige] ranking due to #variable $COUNTRY_TYPE$#! status"
 ARMY_POWER_PROJECTION_DESC:0 "#header $ADJECTIVE$ Army [concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NAVY_POWER_PROJECTION_DESC:0 "#header $ADJECTIVE$ Navy [concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 great_power:1 "[concept_great_power]"
 great_power_desc:0 "[concept_great_power_desc]"
 major_power:1 "[concept_major_power]"
 major_power_desc:0 "[concept_major_power_desc]"
 minor_power:1 "[concept_minor_power]"
 minor_power_desc:0 "[concept_minor_power_desc]"
 insignificant_power:1 "[concept_insignificant_power]"
 insignificant_power_desc:0 "[concept_insignificant_power_desc]"
 decentralized_nation:1 "[concept_decentralized_nation]"
 decentralized_nation_desc:0 "[concept_decentralized_nation_desc]"
 unrecognized_power:1 "[concept_unrecognized_power]"
 unrecognized_power_desc:0 "[concept_unrecognized_power_desc]"
 unrecognized_regional_power:1 "[Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')]"
 unrecognized_regional_power_desc:0 "[concept_unrecognized_power_desc]"
 unrecognized_major_power:1 "[Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')]"
 unrecognized_major_power_desc:0 "[concept_unrecognized_power_desc]"
 
 country_humiliated:2 "Humiliated by Rival"
 forced_market_opening:0 "Forced [concept_open_market]"
 forced_slavery_ban:0 "Forced [concept_slavery] Ban"
 forced_regime_change:0 "Forced Regime Change"
 
 centralized:0 "Centralized Country"
 colonial:0 "Colonial Country"
 decentralized:0 "Decentralized Nation"
 unrecognized:0 "Unrecognized Country"
 
 country_tier_city_state:0 "City-State"
 country_tier_principality:0 "Principality"
 country_tier_grand_principality:0 "Grand Principality"
 country_tier_kingdom:0 "Kingdom"
 country_tier_empire:0 "Empire"
 country_tier_hegemony:0 "Hegemony"
 
 DIPLO_PLAY_GREAT_POWER_TRIGGER:0 "We must be a [concept_great_power] to launch this [concept_diplomatic_play]"
 DIPLO_PLAY_OUTRAGED_TRIGGER:0 "Their [concept_infamy] level must be at $infamy_pariah$"
 
 DIPLOMATIC_PACT_BREAK_DURATION_EXPIRED: "Duration of the enforced [concept_diplomatic_pact] has expired"
 DIPLOMATIC_PACT_BREAK_DECENTRALIZED: "One of the two [Concept('concept_country', '$concept_countries$')] is a [concept_decentralized_nation]"
 DIPLOMATIC_PACT_BREAK_NON_AUTONOMOUS_SUBJECT: "One of the two [Concept('concept_country', '$concept_countries$')] is a [concept_subject] without diplomatic autonomy"
 DIPLOMATIC_PACT_BREAK_NOT_VALID_RIVALS: "[concept_rank] difference of the two [Concept('concept_country', '$concept_countries$')] does not allow for a [concept_rivalry]"
 
 DIPLO_ACTION_RELATIONS:2 "[concept_relations] between [SCOPE.GetRootScope.GetCountry.GetName] and [SCOPE.sC('target_country').GetName]"
 DIPLO_ACTION_RELATIONS_CORDIAL:1 "$DIPLO_ACTION_RELATIONS$ are $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE:1 "$DIPLO_ACTION_RELATIONS$ are $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_amicable$"
 DIPLO_ACTION_RELATIONS_FRIENDLY:1 "$DIPLO_ACTION_RELATIONS$ are $relations_friendly$"
 DIPLO_ACTION_RELATIONS_FRIENDLY_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_friendly$"
 DIPLO_ACTION_RELATIONS_POOR:1 "$DIPLO_ACTION_RELATIONS$ are $relations_poor$"
 DIPLO_ACTION_RELATIONS_POOR_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD:1 "$DIPLO_ACTION_RELATIONS$ are $relations_cold$"
 DIPLO_ACTION_RELATIONS_COLD_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_cold$"
 DIPLO_ACTION_RELATIONS_HOSTILE:1 "$DIPLO_ACTION_RELATIONS$ are $relations_hostile$"
 DIPLO_ACTION_RELATIONS_HOSTILE_NOT:1 "$DIPLO_ACTION_RELATIONS$ are NOT $relations_hostile$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER:1 "$DIPLO_ACTION_RELATIONS$ are at least $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT:1 "$DIPLO_ACTION_RELATIONS$ are less than $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER:1 "$DIPLO_ACTION_RELATIONS$ are at least $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT:1 "$DIPLO_ACTION_RELATIONS$ are less than $relations_amicable$"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS:1 "$DIPLO_ACTION_RELATIONS$ at or below $relations_poor$"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT:1 "$DIPLO_ACTION_RELATIONS$ are above $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS:1 "$DIPLO_ACTION_RELATIONS$ at or below $relations_cold$"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT:1 "$DIPLO_ACTION_RELATIONS$ are above $relations_cold$"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED:0 "We must either have a land connection between our [Concept('concept_market_capital','$concept_market_capitals$')] or be able to form a [concept_port_connection] to the [SCOPE.sC('target_country').GetCapital.GetMarket.GetName]"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED_CHANGE:0 "We must either have a land connection between our [Concept('concept_market_capital','$concept_market_capitals$')] or be able to form a [concept_port_connection] to [SCOPE.sC('target_country').GetCapital.GetName]"
 
 DIPLO_ACTION_OVERLORD_RELATIONS:0 "[concept_relations] between [SCOPE.GetRootScope.GetCountry.GetName] and [SCOPE.sC('target_country').GetOverlord.GetName]"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_friendly$"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_friendly$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_cold$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_cold$"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are $relations_hostile$"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are NOT $relations_hostile$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are at least $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are less than $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are at least $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are less than $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ at or below $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are above $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ at or below $relations_cold$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS_NOT:0 "$DIPLO_ACTION_OVERLORD_RELATIONS$ are above $relations_cold$"
 
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS: "[concept_relations] between [SCOPE.GetRootScope.GetCountry.GetName] and [SCOPE.sC('target_country').GetTopOverlord.GetName]"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_friendly$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_friendly$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are $relations_hostile$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are NOT $relations_hostile$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are at least $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are less than $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are at least $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are less than $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ at or below $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are above $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ at or below $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ are above $relations_cold$"
 
 DIPLO_ACTION_TRADE_STATES_NOT_SAME_REGION: "Traded [Concept('concept_state','$concept_states$')] must be in different [Concept('concept_state_region', '$concept_state_regions$')]"
 DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION: "Both [Concept('concept_country', '$concept_countries$')] must have a land or sea connection to the selected [Concept('concept_state','$concept_states$')] after the trade" 

 relations_friendly:0 "#P Friendly#!"
 relations_amicable:0 "#P Amicable#!"
 relations_cordial:0 "#P Cordial#!"
 relations_neutral:0 "#V Neutral#!"
 relations_poor:0 "#N Poor#!"
 relations_cold:0 "#N Cold#!"
 relations_hostile:0 "#N Hostile#!"
 
 tension_calm:0 "#G Calm#!"
 tension_uneasy:0 "#V Uneasy#!"
 tension_tense:0 "#N Tense#!"
 tension_volatile:0 "#N Volatile#!"
 
 infamy_reputable:0 "#V Reputable#!"
 infamy_infamous:0 "#N Infamous#!"
 infamy_notorious:0 "#N Notorious#!"
 infamy_pariah:0 "#N Pariah#!"
 
 subject_type_protectorate:0 "[concept_protectorate]"
 subject_type_puppet:0 "[concept_puppet]"
 subject_type_tributary:0 "[concept_tributary]"
 subject_type_vassal:0 "[concept_vassal]"
 subject_type_dominion:0 "[concept_dominion]"
 subject_type_personal_union:0 "[concept_personal_union]"
 subject_type_customs_union:0 "[concept_customs_union]"
 
 SUBJECT_CANNOT_HAVE_SUBJECTS:1 " [COUNTRY.GetName] cannot have subjects of their own due to being a $SUBJECT_TYPE|v$-type [concept_subject]!"
 SUBJECT_MUST_BE_HIGHER_COUNTRY_RANK:1 " $COUNTRY_NAME$ must be of a higher [concept_rank] than $COUNTRY_OTHER_NAME$ to make them into a $SUBJECT_TYPE|v$-type [concept_subject]"
 SUBJECT_INVALID_OVERLORD_RANK:1 " $COUNTRY_NAME$ cannot have a $SUBJECT_TYPE|v$-type [concept_subject] due to their [concept_rank] being $RANK|v$"
 SUBJECT_INVALID_SUBJECT_RANK:1 " $COUNTRY_NAME$ cannot become a $SUBJECT_TYPE|v$-type [concept_subject] due to their [concept_rank] being $RANK|v$"
 SUBJECT_MUST_BE_SAME_COUNTRY_TYPE:1 " $COUNTRY_NAME$ cannot have $COUNTRY_OTHER_NAME$ as their $SUBJECT_TYPE|v$-type [concept_subject] due to being a $COUNTRY_TYPE|v$"
 SUBJECT_INVALID_OVERLORD_COUNTRY_TYPE:1 " $COUNTRY_NAME$ cannot have a $SUBJECT_TYPE|v$-type [concept_subject] due to being a $COUNTRY_TYPE|v$"
 SUBJECT_INVALID_SUBJECT_COUNTRY_TYPE:1 " $COUNTRY_NAME$ cannot become a $SUBJECT_TYPE|v$-type [concept_subject] due to being a $COUNTRY_TYPE|v$"
 SUBJECT_IS_ALREADY_SUBJECT:1 " [TARGET_COUNTRY.GetName] is already [concept_subject] to another country"
 SUBJECT_NOT_VALID_CHANGE:1 " Not possible to change a $SUBJECT_TYPE_FROM|v$-type [concept_subject] into a $SUBJECT_TYPE|v$-type [concept_subject]"
 SUBJECT_OVERLORD_IS_SUBJECT:1 " [COUNTRY.GetName] cannot make their suzerain [TARGET_COUNTRY.GetName] into a [concept_subject]"

 protector:0 "Protector"
 suzerain:0 "Suzerain"
 obligation:1 "[concept_obligation]"
 RELEASE:0 "Release"
 CONFIRM:0 "Confirm"
 CANCEL:0 "Cancel"
 USE_OBLIGATION:1 "Use [concept_obligation]"
 OWE_OBLIGATION:1 "Owe [concept_obligation]"
 CALLING_IN_OBLIGATION:1 "Calling in [concept_obligation]"
 OFFERING_OBLIGATION:1 "Offering [concept_obligation]"
 THEY_DO_NOT_OWE_OBLIGATION:1 "They do not owe us an [concept_obligation]."
 THEY_OWE_OBLIGATION:1 "They already owe us an [concept_obligation]."
 WE_OWE_OBLIGATION:1 "We already owe them an [concept_obligation]."
 EXISTING_PACT:0 "Value of existing [DIPLOMATIC_PACT.GetName]"
 NO_PACT_TO_TRANSFER:0 "There is no existing [concept_diplomatic_pact] of this type to transfer"
 NO_STATE_SELECTED_FOR_COUNTRY: "Must select a [concept_state] for [COUNTRY.GetName]"
 NO_STATE_SELECTED_FOR_ANY_COUNTRY: "Must select a [concept_state] for at least one of [COUNTRY.GetName] or [TARGET_COUNTRY.GetName]"
 STATE_NOT_SELECTABLE_FOR_COUNTRY: "Selected [concept_state] for [COUNTRY.GetName] is not valid due to:\n$DESC$"
 CONFIRM_DIPLOMATIC_ACTION: "#header Confirm#!\n$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n','$DESC$')]"
 DIPLOMATIC_ACTION_STATE_DESC: "[COUNTRY.GetNameNoFormatting]: [STATE.GetName]"
 
 AI_WILL_ACCEPT_GENERIC: "@green_checkmark! [Country.GetName] would accept"
 AI_WILL_NOT_ACCEPT_GENERIC: "@red_cross! [Country.GetName] would #bold #n NOT#!#! accept"

 AI_WILL_ACCEPT:1 "@green_checkmark! [DiplomaticAction.GetSecondCountry.GetName] would accept"
 AI_WILL_ACCEPT_WITH_OWE_OBLIGATION:1 "@green_checkmark! [DiplomaticAction.GetSecondCountry.GetName] would accept, if we owe them an [concept_obligation]"
 AI_WILL_ACCEPT_WITH_CALL_IN_OBLIGATION:1 "@green_checkmark! [DiplomaticAction.GetSecondCountry.GetName] would accept, if we call in the [concept_obligation] they owe us"
 AI_WILL_NOT_ACCEPT:1 "@red_cross! [DiplomaticAction.GetSecondCountry.GetName] would #bold #n NOT#!#! accept"
 AI_WILL_ACCEPT_BREAKDOWN:1 "Their acceptance score of #variable [DiplomaticAction.GetAcceptanceValue|+=]#! is due to:\n[DiplomaticAction.GetWillAIAcceptDesc]"
 AI_WILL_ACCEPT_BREAKDOWN_WITH_CALL_IN_OBLIGATION:2 "Their acceptance score of #variable [DiplomaticAction.GetAcceptanceValueWithCallInObligation|+=]#! is due to:\n[DiplomaticAction.GetWillAIAcceptDescWithCallInObligation]"
 AI_WILL_ACCEPT_BREAKDOWN_WITH_OWE_OBLIGATION:2 "Their acceptance score of #variable [DiplomaticAction.GetAcceptanceValueWithOweObligation|+=]#! is due to:\n[DiplomaticAction.GetWillAIAcceptDescWithOweObligation]"
 AI_WILL_ACCEPT_DESC:0 "$AI_WILL_ACCEPT$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN$"
 AI_WILL_ACCEPT_WITH_OWE_OBLIGATION_DESC:0 "$AI_WILL_ACCEPT_WITH_OWE_OBLIGATION$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN_WITH_OWE_OBLIGATION$"
 AI_WILL_ACCEPT_WITH_CALL_IN_OBLIGATION_DESC:0 "$AI_WILL_ACCEPT_WITH_CALL_IN_OBLIGATION$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN_WITH_CALL_IN_OBLIGATION$"
 AI_WILL_NOT_ACCEPT_DESC:0 "$AI_WILL_NOT_ACCEPT$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN$"
 PLAYER_MIGHT_ACCEPT:0 "They might accept"
 PLAYER_MIGHT_ACCEPT_DESC:0 "They are a player, and will decide for themselves if they accept or not"
 AI_WILL_ACCEPT_ENTRY_FORMAT:1 "$SCRIPT_VALUE_KEY_AFTER_FORMAT$"

 DIPLOMATIC_ACCEPTANCE_BASE:1 "Base Reluctance"
 DIPLOMATIC_ACCEPTANCE_SENIOR_PART:1 "[SCOPE.GetRootScope.GetCountry.GetNameNoFormatting] would be the senior partner in the [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [concept_attitude] towards [GetPlayer.GetName] is [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(SCOPE.sCountry('actor')).GetName]"
 DIPLOMATIC_ACCEPTANCE_INFAMY:1 "Our [concept_infamy] level is [SCOPE.sCountry('actor').GetInfamyLabel]"
 DIPLOMATIC_ACCEPTANCE_RELATIONS:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]-[SCOPE.sCountry('actor').GetAdjectiveNoFormatting] [concept_relations] are [SCOPE.GetRootScope.GetCountry.GetRelationsWithDesc(SCOPE.sCountry('actor'))]"
 DIPLOMATIC_ACCEPTANCE_RANK:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [concept_rank] of [SCOPE.GetRootScope.GetCountry.GetRank] compared to our [concept_rank] of [SCOPE.sCountry('actor').GetRank]"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] Army [concept_power_projection] compared to ours"
 DIPLOMATIC_ACCEPTANCE_NAVY_STRENGTH:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] Navy [concept_power_projection] compared to ours"
 DIPLOMATIC_ACCEPTANCE_GDP:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] $GDP_SHORT$ ([GetPlayer.GetCustom('currencytexture')][SCOPE.GetRootScope.GetCountry.GetGDP|Dv]) compared to our $GDP_SHORT$ ([GetPlayer.GetCustom('currencytexture')][SCOPE.sCountry('actor').GetGDP|Dv])"
 DIPLOMATIC_ACCEPTANCE_HIGH_GDP: "[SCOPE.GetRootScope.GetCountry.GetName] has $GDP_SHORT$ that is higher than #v [GetPlayer.GetCustom('currencytexture')]2.0M#!"
 DIPLOMATIC_ACCEPTANCE_NEIGHBORS:1 "We are [concept_neighbors] with [SCOPE.GetRootScope.GetCountry.GetName]"
 DIPLOMATIC_ACCEPTANCE_NOT_NEIGHBORS:1 "We are NOT [concept_neighbors] with [SCOPE.GetRootScope.GetCountry.GetName]"
 DIPLOMATIC_ACCEPTANCE_ADJACENT_MARKETS:0 "The [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [concept_market] is adjacent to ours"
 DIPLOMATIC_ACCEPTANCE_NOT_ADJACENT_MARKETS:0 "The [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [concept_market] is NOT adjacent to ours"
 DIPLOMATIC_ACCEPTANCE_ISOLATIONIST:1 "They are pursuing a [concept_ai_strategy] of #v $ai_strategy_armed_isolationism$#!"
 DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM:0 "They are pursuing a [concept_ai_strategy] of #v $ai_strategy_economic_imperialism$#!"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION:1 "Ideological Similarities of our [Concept('concept_government','$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE:0 "Ideological Differences of our [Concept('concept_government','$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS:1 "We have [Concept('concept_alliance','$concept_alliances$')] or [Concept('concept_defensive_pact','$concept_defensive_pacts$')] with [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [Concept('concept_rivalry','$concept_rivals$')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES:1 "We have [Concept('concept_alliance','$concept_alliances$')] or [Concept('concept_defensive_pact','$concept_defensive_pacts$')] with [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] allies"
 DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS: "We have shared [Concept('concept_rivalry','$concept_rivals$')]"
 DIPLOMATIC_ACCEPTANCE_NUM_ALLIES:1 "Number of [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [Concept('concept_alliance','$concept_alliances$')]"
 DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS:1 "Number of [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting] [Concept('concept_defensive_pact','$concept_defensive_pacts$')]"
 DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT:1 "We have a [concept_defensive_pact]"
 DIPLOMATIC_ACCEPTANCE_CUSTOMS_UNION:0 "We have a [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_NO_CUSTOMS_UNION:0 "We do #b not#! have a [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM:0 "They have powerful protectors"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_US:0 "We have powerful protectors"
 DIPLOMATIC_ACCEPTANCE_TRUCE:0 "We have a Truce"
 DIPLOMATIC_ACCEPTANCE_DEBT:0 "Size of [SCOPE.GetRootScope.GetCountry.GetAdjective] [concept_loans]"
 DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES: "Size of [SCOPE.GetRootScope.GetCountry.GetAdjective] [concept_gold_reserves]"
 DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS:0 "We have incompatible economic systems"
 DIPLOMATIC_ACCEPTANCE_INFLUENCE_PAYMENTS:0 "[SCOPE.sCountry('actor').GetAdjectiveNoFormatting] financial influence over this country"
 DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND: "Being gifted a [concept_state]"
 DIPLOMATIC_ACCEPTANCE_STATES_NOT_SET: "[Concept('concept_state','$concept_states$')] not set"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_FIRST_STATE: "Offered [SCOPE.sState('first_state').GetName]"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE: "Ceding [SCOPE.sState('second_state').GetName]"
 DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_FIRST_STATE: "Does not want [SCOPE.sState('first_state').GetName]"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SPLIT_STATE_EXCHANGE: "Unifying [Concept('concept_split_state','$concept_split_states$')] in [SCOPE.sState('first_state').GetStateRegion.GetName] and [SCOPE.sState('second_state').GetStateRegion.GetName]"
 DIPLOMATIC_ACCEPTANCE_IS_CHINA: "From Chinese Internal Politics"
 
 DIPLOMATIC_ACCEPTANCE_NO_MUTUAL_TRADE_ROUTES:0 "No [Concept('concept_trade_route', '$concept_trade_routes$')] between our [Concept('concept_market', '$concept_markets$')]"
 DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES:0 "From volume of [Concept('concept_trade_route', '$concept_trade_routes$')] between our [Concept('concept_market', '$concept_markets$')]"
 DIPLOMATIC_INCIDENT_WARGOAL_DESC:0 "Demanding this will result in a [concept_diplomatic_incident] in $STRATEGIC_REGION$, giving #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] to [COUNTRY.GetName] and reducing their $RELATIONS$ with #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ countries#!#!"
 DIPLOMATIC_INCIDENT_NON_WARGOAL_DESC:0 "Will result in a [concept_diplomatic_incident] in $STRATEGIC_REGION$, giving #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] to [COUNTRY.GetName] and reducing their $RELATIONS$ with #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ countries#!#!"
 DIPLOMATIC_INCIDENT_RELATIONS_IMPACT:2 "[COUNTRY.GetAdjectiveNoFormatting] [concept_relations] with [COUNTRY_THIRD_PARTY.GetName]: $AMOUNT|=+$"
 WARGOAL_BASE_TYPE_VALUE:0 "Base Value for $TYPE$: #BOLD $VAL|Dv$#!"
 WARGOAL_MULT_FROM_POPULATION:1 "Multiplied by #v x$MULT$#! due to total population of target"
 WARGOAL_PRIMARY_IS_FREE:1 "First [concept_war_goal] never has a [concept_maneuver] cost"
 INFAMY_EFFECT_FROM_RANK:0 "[COUNTRY.GetName] is a $RANK_NAME|v$: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_HOMELANDS:0 "Target is a [concept_homeland] for [COUNTRY.GetName]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATE:0 "Target is an [concept_unincorporated_state]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATES:0 "Target contains [Concept('concept_unincorporated_state','$concept_unincorporated_states$')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_OWN_SUBJECT:0 "Multiplied by #v x$EFFECT$#! because [TARGET_COUNTRY.GetName] is a [concept_subject] of [COUNTRY.GetName]"
 
 RELATIONS:2 "[concept_relations]"
 ATTITUDE:0 "[concept_attitude]"
 AI_STRATEGIES:0 "[Concept('concept_ai_strategy', '$concept_ai_strategies$')]"
 
 DIPLO_ACTION_IS_ACTIVE:0 "#b Currently Active#!"
 DIPLO_ACTION:0 "[DIPLOMATIC_ACTION.GetName]"
 DIPLO_ACTION_PROPOSE:0 "[DIPLOMATIC_ACTION.GetProposeName]"
 DIPLO_ACTION_BREAK:0 "[DIPLOMATIC_ACTION.GetBreakName]"
 DIPLO_ACTION_ASK_TO_BREAK:0 "[DIPLOMATIC_ACTION.GetAskToBreakName]"
 DIPLOMATIC_ACTION_TOO_SOON:0 "We must wait until #variable $DATE$#! to conduct diplomacy with #variable $COUNTRY$#! again."
 CANNOT_AFFORD_DIPLO_PACT:1 "Have at least @inf!#BOLD #V $COST|1=+$#!#! to maintain this [concept_diplomatic_action]"
 DIPLO_PACT_COST_DETAILS:0 "[DiplomaticAction.GetMaintenanceCostDetailsDesc]"
 DIPLO_PACT_COST:0 "Maintenance Cost: #tooltippable #tooltip:$TAG$,DIPLO_PACT_COST_DETAILS @inf![DIPLOMATIC_ACTION.GetMaintenanceCost]#!#!"
 DIPLO_ACTION_PENDING:0 "Our proposal is pending approval"
 DIPLO_ACTION_REVERSE_PENDING:0 "Their proposal is pending approval"
 DIPLO_PACT_RELATIONS_CHANGE_POS:2 "Ongoing efforts to #b Improve [concept_relations]#! are at $PROGRESS|2%v$ progress ($PROGRESS_DAILY|%=v2$/day) and will result in mutual [concept_relations] changing by #P #b +1#!#! on $DATE|v$"
 DIPLO_PACT_RELATIONS_CHANGE_NEG:2 "Ongoing efforts to #b Damage [concept_relations]#! are at $PROGRESS|2%v$ progress ($PROGRESS_DAILY|%=v2$/day) and will result in mutual [concept_relations] changing by #N #b -1#!#! on $DATE|v$"
 DIPLO_ACTION_FORCED_DURATION:0 "This pact cannot be broken by us until $DATE|v$"
 DIPLOMATIC_PACT_HEADER:0 "#header [DiplomaticPact.GetName]#!"
 DIPLOMATIC_PACT_DESC:0 "[DiplomaticPact.GetDesc]"
 DIPLOMATIC_PACT_TOOLTIP:0 "$DIPLOMATIC_PACT_HEADER$\n$TOOLTIP_DELIMITER$\n$DIPLOMATIC_PACT_DESC$"
 DIPLO_PACT_RELATIONS_CHANGE_MAX_CAP:3 " (to a maximum of $MAX_VALUE|=+$)"
 DIPLO_PACT_RELATIONS_CHANGE_MIN_CAP:3 " (to a minimum of $MIN_VALUE|=+$)"
 DIPLO_PACT_RELATIONS_CHANGE_POS_EFFECT:2 "[DiplomaticPact.GetName|b]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! progress from [DiplomaticPact.GetFirstCountry.GetName] each day towards increasing [concept_relations]$MAXDESC$"
 DIPLO_PACT_RELATIONS_CHANGE_NEG_EFFECT:2 "[DiplomaticPact.GetName|b]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! progress from [DiplomaticPact.GetFirstCountry.GetName] each day towards decreasing [concept_relations]$MINDESC$"
 
 # Unilateral actions
 increase_relations:0 "Improve Relations"
 increase_relations_action_name:2 "Improve [concept_relations]"
 increase_relations_action_propose_name:2 "Begin Improving [concept_relations]"
 increase_relations_action_break_name:2 "Stop Improving [concept_relations]"
 increase_relations_desc:2 "#header $increase_relations$#!\n$TOOLTIP_DELIMITER$\nAn [concept_ongoing_diplomatic_action] that increases the [concept_relations] between two [Concept('concept_country', '$concept_countries$')] over time ."
 increase_relations_action_notification_name:2 "[INITIATOR_COUNTRY.GetName] improving [concept_relations]"
 increase_relations_pact_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] are actively improving their [concept_relations] with [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName]."
 increase_relations_action_notification_desc:3 "[INITIATOR_COUNTRY.GetName] have started to improve our mutual [concept_relations], which are currently #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )|+]#!#! (#BOLD #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWith( GetPlayer )|+]#!#!#!). Their [concept_attitude] towards [GetPlayer.GetName] is #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 increase_relations_action_notification_break_name:2 "[INITIATOR_COUNTRY.GetName] stopped improving [concept_relations]"
 increase_relations_action_notification_break_desc:2 "[INITIATOR_COUNTRY.GetName] have stopped improving our mutual [concept_relations]."
 
 increase_relations_effect_desc_global:0 "Starts to increase [concept_relations]"
 increase_relations_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] starts to increase [concept_relations] with [TARGET_COUNTRY.GetName]"
 increase_relations_effect_desc_third:0 "[COUNTRY.GetName] starts to increase [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 increase_relations_trigger_desc_global:0 "Is increasing [concept_relations]"
 increase_relations_trigger_false_desc_global:0 "Is increasing [concept_relations]"
 increase_relations_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is #b not#! increasing [concept_relations] with [TARGET_COUNTRY.GetName]"
 increase_relations_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is increasing [concept_relations] with [TARGET_COUNTRY.GetName]"
 increase_relations_trigger_desc_third:0 "[COUNTRY.GetName] is #b not#! increasing [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 increase_relations_trigger_false_desc_third:0 "[COUNTRY.GetName] is #b not#! increasing [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 damage_relations:0 "Damage Relations"
 damage_relations_action_name:2 "Damage [concept_relations]"
 damage_relations_action_propose_name:2 "Begin Damaging [concept_relations]"
 damage_relations_action_break_name:2 "Stop Damaging [concept_relations]"
 damage_relations_desc:2 "#header $damage_relations$#!\n$TOOLTIP_DELIMITER$\nAn [concept_ongoing_diplomatic_action] that decreases the [concept_relations] between two [Concept('concept_country', '$concept_countries$')] over time ."
 damage_relations_action_notification_name:2 "[INITIATOR_COUNTRY.GetName] damaging [concept_relations]"
 damage_relations_pact_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] are actively damaging their [concept_relations] with [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName]."
 damage_relations_action_notification_desc:3 "[INITIATOR_COUNTRY.GetName] have started to damage our mutual [concept_relations], which are currently #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )|+]#!#! (#BOLD #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWith( GetPlayer )|+]#!#!#!). Their [concept_attitude] towards [GetPlayer.GetName] is #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 damage_relations_action_notification_break_name:2 "[INITIATOR_COUNTRY.GetName] stopped damaging [concept_relations]"
 damage_relations_action_notification_break_desc:2 "[INITIATOR_COUNTRY.GetName] have stopped damaging our mutual [concept_relations]."

 damage_relations_effect_desc_global:0 "Starts to damage [concept_relations]"
 damage_relations_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] starts to damage [concept_relations] with [TARGET_COUNTRY.GetName]"
 damage_relations_effect_desc_third:0 "[COUNTRY.GetName] starts to damage [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 damage_relations_trigger_desc_global:0 "Is damaging [concept_relations]"
 damage_relations_trigger_false_desc_global:0 "Is #b not#! damaging [concept_relations]"
 damage_relations_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is damaging [concept_relations] with [TARGET_COUNTRY.GetName]"
 damage_relations_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is #b not#! damaging [concept_relations] with [TARGET_COUNTRY.GetName]"
 damage_relations_trigger_desc_third:0 "[COUNTRY.GetName] is damaging [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 damage_relations_trigger_false_desc_third:0 "[COUNTRY.GetName] is #b not#! damaging [concept_relations] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 redeem_obligation:1 "Absolve Obligation"
 redeem_obligation_action_name:1 "Absolve [concept_obligation]"
 redeem_obligation_action_propose_name:0 "Absolve [concept_obligation]"
 redeem_obligation_desc:3 "#header $redeem_obligation$#!\n$TOOLTIP_DELIMITER$\nAn [concept_instant_diplomatic_action] that removes the [concept_obligation] a [concept_country] owes another in exchange for an instant increase of [concept_relations]."
 redeem_obligation_action_notification_name:1 "[concept_obligation] Absolved"
 redeem_obligation_action_notification_desc:2 "[INITIATOR_COUNTRY.GetName] have absolved us of the [concept_obligation] we owe them, increasing our mutual $concept_relations$."

 expel_diplomats:0 "Expel Diplomats"
 expel_diplomats_action_name:0 "Expel Diplomats"
 expel_diplomats_action_propose_name:0 "Expel Diplomats"
 expel_diplomats_desc:3 "#header $expel_diplomats$#!\n$TOOLTIP_DELIMITER$\nAn [concept_instant_diplomatic_action] that damages [concept_relations] with the target country and prevents all improvement of $concept_relations$ for #v 5 years#!, at the cost of gaining [concept_infamy]."
 expel_diplomats_action_notification_name:0 "Diplomats Expelled"
 expel_diplomats_action_notification_desc:2 "[INITIATOR_COUNTRY.GetName] has expelled our diplomats, damaging our mutual [concept_relations], resulting in a relation of #BOLD [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )]#! ([INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]). Their [concept_attitude] towards [GetPlayer.GetName] is #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 
 rivalry:0 "Rivalry"
 rivalry_action_name:0 "[concept_rivalry]"
 rivalry_action_propose_name:0 "Declare [concept_rivalry]"
 rivalry_action_break_name:0 "End [concept_rivalry]"
 rivalry_pact_desc:1 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] considers [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] to be their [Concept('concept_rivalry', '$concept_rival$')]."
 rivalry_desc:0 "#header $rivalry$#!\n$TOOLTIP_DELIMITER$\nAn [concept_ongoing_diplomatic_action] that creates a [concept_rivalry] with another [concept_country]."
 rivalry_action_notification_name:0 "[INITIATOR_COUNTRY.GetName] declared [concept_rivalry]"
 rivalry_action_notification_desc:4 "[INITIATOR_COUNTRY.GetName] have declared [GetPlayer.GetName] their [Concept('concept_rivalry','$concept_rival$')]. Their [concept_attitude] towards [GetPlayer.GetName] is #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry_action_notification_third_party_name:1 "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting] [concept_rivalry] Declared"
 rivalry_action_notification_third_party_desc:1 "[INITIATOR_COUNTRY.GetName] have declared [TARGET_COUNTRY.GetName] to be their [Concept('concept_rivalry', '$concept_rival$')]."
 rivalry_action_notification_break_name:0 "[INITIATOR_COUNTRY.GetName] ended [concept_rivalry]"
 rivalry_action_notification_break_desc:1 "[INITIATOR_COUNTRY.GetName] no longer view [GetPlayer.GetName] as a [Concept('concept_rivalry', '$concept_rival$')]."
 rivalry_action_notification_third_party_break_name:1 "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting] [concept_rivalry] Ended"
 rivalry_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended their [concept_rivalry] with [TARGET_COUNTRY.GetName]."
 
 rivalry_effect_desc_global:0 "Declares a [concept_rivalry]"
 rivalry_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] declares a [concept_rivalry] with [TARGET_COUNTRY.GetName]"
 rivalry_effect_desc_third:0 "[COUNTRY.GetName] declares a [concept_rivalry] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 rivalry_trigger_desc_global:0 "Has a [concept_rivalry]"
 rivalry_trigger_false_desc_global:0 "Does #b not#! have a [concept_rivalry]"
 rivalry_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] has a [concept_rivalry] with [TARGET_COUNTRY.GetName]"
 rivalry_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] does #b not#! have a [concept_rivalry] with [TARGET_COUNTRY.GetName]"
 rivalry_trigger_desc_third:0 "[COUNTRY.GetName] has a [concept_rivalry] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 rivalry_trigger_false_desc_third:0 "[COUNTRY.GetName] does #b not#! have a [concept_rivalry] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 embargo:0 "Embargo"
 embargo_action_name:0 "[concept_embargo]"
 embargo_action_propose_name:0 "[concept_embargo]"
 embargo_action_break_name:0 "End [concept_embargo]"
 embargo_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] is [Concept('concept_embargo', '$concept_embargoing$')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName]."
 embargo_desc:0 "#header $embargo$#!\n$TOOLTIP_DELIMITER$\nAn [concept_ongoing_diplomatic_action] that places an [concept_embargo] on another [concept_country]."
 embargo_action_notification_name:0 "[concept_embargo]"
 embargo_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] have begun [Concept('concept_embargo', '$concept_embargoing$')] [GetPlayer.GetName]. Any [Concept('concept_trade_route','$concept_trade_routes$')] we have established in their [concept_market] will no longer function."
 embargo_action_notification_third_party_name:0 "[concept_embargo]"
 embargo_action_notification_third_party_desc:0 "[INITIATOR_COUNTRY.GetName] began [Concept('concept_embargo', '$concept_embargoing$')] [TARGET_COUNTRY.GetName]."
 embargo_action_notification_break_name:0 "[concept_embargo] Ended"
 embargo_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] ceased [Concept('concept_embargo', '$concept_embargoing$')] [GetPlayer.GetName]."
 embargo_action_notification_third_party_break_name:0 "[concept_embargo] Ended"
 embargo_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended their [concept_embargo] with [TARGET_COUNTRY.GetName]."
 
 embargo_effect_desc_global:0 "Starts an [concept_embargo]"
 embargo_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] starts to [concept_embargo] [TARGET_COUNTRY.GetName]"
 embargo_effect_desc_third:0 "[COUNTRY.GetName] starts to [concept_embargo] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 embargo_trigger_desc_global:0 "Has an [concept_embargo]"
 embargo_trigger_false_desc_global:0 "Does #b not#! have an [concept_embargo]"
 embargo_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] has an [concept_embargo] against [TARGET_COUNTRY.GetName]"
 embargo_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] does #b not#! have an [concept_embargo] against [TARGET_COUNTRY.GetName]"
 embargo_trigger_desc_third:0 "[COUNTRY.GetName] has an [concept_embargo] against [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 embargo_trigger_false_desc_third:0 "[COUNTRY.GetName] does #b not#! have an [concept_embargo] against [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 war_reparations:0 "War Reparations"
 war_reparations_action_name:0 "[concept_war_reparations]"
 war_reparations_action_propose_name:0 "Demand [concept_war_reparations]"
 war_reparations_action_break_name:0 "End [concept_war_reparations]"
 war_reparations_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] are paying weekly [concept_war_reparations] to [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 war_reparations_desc:0 "#header $war_reparations$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] where one [concept_country] pays part of its income to another over a time-limited period."
 war_reparations_type_break_desc:0 "End the ongoing payment of [concept_war_reparations] from another country to us."
 war_reparations_action_notification_name:0 "[concept_war_reparations] from [TARGET_COUNTRY.GetName]"
 war_reparations_action_notification_desc:0 "[TARGET_COUNTRY.GetName] have started to pay us [concept_war_reparations]."
 war_reparations_action_notification_break_name:0 "[concept_war_reparations] Ended"
 war_reparations_action_notification_break_desc:0 "[TARGET_COUNTRY.GetName] ended our ongoing payments of [concept_war_reparations]."

 colonization_rights:0 "Colonization Rights"
 colonization_rights_action_name:0 "[concept_colonization_rights]"
 colonization_rights_action_propose_name:0 "Demand [concept_colonization_rights]"
 colonization_rights_action_break_name:0 "End [concept_colonization_rights]"
 colonization_rights_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] have granted [concept_colonization_rights] to [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 colonization_rights_desc:0 "#header $colonization_rights$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] where one [concept_country] is granted [concept_colonization_rights] over another."
 colonization_rights_type_break_desc:0 "End the ongoing [concept_colonization_rights] from another country to us."
 colonization_rights_action_notification_name:0 "[concept_colonization_rights] from [TARGET_COUNTRY.GetName]"
 colonization_rights_action_notification_desc:0 "[TARGET_COUNTRY.GetName] have started to pay us [concept_colonization_rights]."
 colonization_rights_action_notification_break_name:0 "[concept_colonization_rights] Ended"
 colonization_rights_action_notification_break_desc:0 "[TARGET_COUNTRY.GetName] ended our ongoing payments of [concept_colonization_rights]."
 
 humiliation:0 "Humiliation"
 humiliation_action_name:0 "[concept_humiliation]"
 humiliation_action_propose_name:0 "Demand [concept_humiliation]"
 humiliation_action_break_name:0 "End [concept_humiliation]"
 humiliation_pact_desc:1 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] have been [Concept('concept_humiliation', '$concept_humiliated$')] by [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 humiliation_desc:0 "#header $humiliation$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] where one [concept_country] is prevented from opposing the other in diplomatic plays."
 humiliation_type_break_desc:1 "End the [Concept('concept_humiliation', '$concept_humiliated$')] of another country."
 humiliation_action_notification_name:0 "Humiliation"
 humiliation_action_notification_desc:1 "We [Concept('concept_humiliation', '$concept_humiliated$')] [TARGET_COUNTRY.GetName]."
 humiliation_action_notification_break_name:0 "[concept_humiliation] Ended"
 humiliation_action_notification_break_desc:1 "[TARGET_COUNTRY.GetName] ended our ongoing [Concept('concept_humiliation', '$concept_humiliated$')]."
 
 bankroll:0 "Bankroll"
 bankroll_action_name:0 "$bankroll$"
 bankroll_action_propose_name:0 "Start Bankrolling"
 bankroll_action_break_name:0 "Stop Bankrolling"
 bankroll_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] are bankrolling [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName]."
 bankroll_desc:1 "#header $bankroll$#!\n$TOOLTIP_DELIMITER$\n[concept_bankroll_desc]"
 bankroll_action_notification_name:1 "[INITIATOR_COUNTRY.GetName] bankrolling us"
 bankroll_action_notification_desc:1 "[INITIATOR_COUNTRY.GetName] have started to bankroll our country for a sum equal to #v 10%#! of our tax income each week. Over time, this may cause us to owe them an [concept_obligation]."
 bankroll_action_notification_break_name:1 "[INITIATOR_COUNTRY.GetName] no longer bankrolling us"
 bankroll_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended their ongoing bankrolling of our country."
 bankroll_weekly_obligation_effect:0 "Has a #v 0.2%#! chance each week to generate or absolve an [concept_obligation] for the bankrolling country"

 bankroll_effect_desc_global:0 "Starts to [concept_bankroll]"
 bankroll_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] starts to [concept_bankroll] [TARGET_COUNTRY.GetName]"
 bankroll_effect_desc_third:0 "[COUNTRY.GetName] starts to [concept_bankroll] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 bankroll_trigger_desc_global:0 "Is [Concept('concept_bankroll','$concept_bankrolling$')]"
 bankroll_trigger_false_desc_global:0 "Is #b not#! [Concept('concept_bankroll','$concept_bankrolling$')]"
 bankroll_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is [Concept('concept_bankroll','$concept_bankrolling$')] [TARGET_COUNTRY.GetName]"
 bankroll_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] is #b not#! [Concept('concept_bankroll','$concept_bankrolling$')] [TARGET_COUNTRY.GetName]"
 bankroll_trigger_desc_third:0 "[COUNTRY.GetName] is [Concept('concept_bankroll','$concept_bankrolling$')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 bankroll_trigger_false_desc_third:0 "[COUNTRY.GetName] is #b not#! [Concept('concept_bankroll','$concept_bankrolling$')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 take_on_debt:1 "Take on Debt"
 take_on_debt_action_name:1 "Take On [Concept('concept_credit','$concept_credit_debt$')]"
 take_on_debt_action_propose_name:0 "Take On [Concept('concept_credit','$concept_credit_debt$')]"
 take_on_debt_desc:4 "#header $take_on_debt$#!\n$TOOLTIP_DELIMITER$\nAn [concept_instant_diplomatic_action] where one [concept_country] takes over another [Concept('concept_country','$concept_country_possessive$')] [concept_loans] in exchange for an [concept_obligation]."
 take_on_debt_proposal_notification_name:1 "$take_on_debt_action_name$ Proposed"
 take_on_debt_proposal_notification_desc:5 "[INITIATOR_COUNTRY.GetName] has proposed to take on our national [Concept('concept_credit','$concept_credit_debt$')], hopefully this is not done with a sinister motive."
 take_on_debt_proposal_notification_effects_desc:0 "$take_on_debt_desc$"
 take_on_debt_proposal_accepted_name:0 "$take_on_debt_action_name$ Accepted"
 take_on_debt_proposal_accepted_desc:1 "[TARGET_COUNTRY.GetName] accepted our proposal to take on their national [Concept('concept_credit','$concept_credit_debt$')]."
 take_on_debt_proposal_declined_name:0 "$take_on_debt_action_name$ Refused"
 take_on_debt_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our proposal to take on their national [Concept('concept_credit','$concept_credit_debt$')]."
 take_on_debt_proposal_third_party_accepted_name:1 "$take_on_debt_action_name$ Accepted"
 take_on_debt_proposal_third_party_accepted_desc:2 "[INITIATOR_COUNTRY.GetName] has taken on [TARGET_COUNTRY.GetName]'s national [Concept('concept_credit','$concept_credit_debt$')]. As a result, they are now owed an [concept_obligation]."
 take_on_debt_proposal_third_party_declined_name:0 "$take_on_debt_action_name$ Refused"
 take_on_debt_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] declined to have [INITIATOR_COUNTRY.GetName] take on their national [Concept('concept_credit','$concept_credit_debt$')]."
 
 trade_states: "Trade States"
 trade_states_action_name: "Trade [Concept('concept_state','$concept_states$')]"
 trade_states_action_propose_name: "Trade [Concept('concept_state','$concept_states$')]"
 trade_states_desc: "#header $trade_states$#!\n$TOOLTIP_DELIMITER$\nAn [concept_instant_diplomatic_action] where a [concept_country] proposes to give away or swap [Concept('concept_state','$concept_states$')] with another."
 trade_states_proposal_notification_name: "$trade_states_action_name$ Proposed"
 trade_states_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] has proposed a transfer of [Concept('concept_state','$concept_states$')]:\n$STATES_DESC$"
 trade_states_proposal_notification_effects_desc: "$trade_states_desc$"
 trade_states_proposal_accepted_name: "$trade_states_action_name$ Accepted"
 trade_states_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] accepted our proposal to a transfer of [Concept('concept_state','$concept_states$')]:\n$STATES_DESC$"
 trade_states_proposal_declined_name: "$trade_states_action_name$ Refused"
 trade_states_proposal_declined_desc: "[TARGET_COUNTRY.GetName] declined our proposal to a transfer of [Concept('concept_state','$concept_states$')]:\n$STATES_DESC$"
 trade_states_proposal_third_party_accepted_name: "$trade_states_action_name$ Accepted"
 trade_states_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] accepted a transfer of [Concept('concept_state','$concept_states$')] with [INITIATOR_COUNTRY.GetName]:\n$STATES_DESC$"
 trade_states_proposal_third_party_declined_name: "$trade_states_action_name$ Refused"
 trade_states_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] declined a transfer of [Concept('concept_state','$concept_states$')] with [INITIATOR_COUNTRY.GetName]:\n$STATES_DESC$"
 
 customs_union:0 "Customs Union"
 customs_union_action_name:0 "[concept_customs_union]"
 customs_union_action_propose_name:0 "Invite to [concept_customs_union]"
 customs_union_action_break_name:0 "End [concept_customs_union]"
 customs_union_action_notification_name:0 "[concept_customs_union] with [INITIATOR_COUNTRY.GetName]"
 customs_union_action_notification_desc:0 "We have entered into a [concept_customs_union] with [INITIATOR_COUNTRY.GetName]."
 customs_union_desc:1 "#header $customs_union$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_customs_union] between two [Concept('concept_country', '$concept_countries$')]."
 customs_union_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] is the [concept_senior_partner] in a [concept_customs_union] with [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName]."
 customs_union_proposal_notification_name:0 "Proposal for [concept_customs_union]"
 customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes for us to enter their #variable [concept_customs_union]#!."
 customs_union_proposal_notification_effects_desc:0 "$customs_union_desc$"
 customs_union_proposal_accepted_name:0 "[concept_customs_union] Accepted"
 customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our proposal for a #variable [concept_customs_union]#!."
 customs_union_proposal_declined_name:0 "[concept_customs_union] Declined"
 customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our proposal for a #variable [concept_customs_union]#!."
 customs_union_action_notification_break_name:0 "[concept_customs_union] with [INITIATOR_COUNTRY.GetName] broken"
 customs_union_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have broken off their #variable [concept_customs_union]#! with us."
 customs_union_proposal_third_party_accepted_name:0 "[concept_customs_union] Joined"
 customs_union_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] entered into a [concept_customs_union] with [INITIATOR_COUNTRY.GetName]."
 customs_union_proposal_third_party_declined_name:0 "[concept_customs_union] Rejected"
 customs_union_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to enter into a #variable [concept_customs_union]#! with [INITIATOR_COUNTRY.GetName]."
 customs_union_action_notification_third_party_break_name:0 "[concept_customs_union] Broken"
 customs_union_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] broke off their #variable [concept_customs_union]#! with [TARGET_COUNTRY.GetName]."
 
 customs_union_effect_desc_global:0 "Enters into a [concept_customs_union]"
 customs_union_effect_desc_first:0 "[TARGET_COUNTRY.GetName] enters into a [concept_customs_union] under [COUNTRY.GetAdjectiveNoFlag]"
 customs_union_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] enters into a [concept_customs_union] under [COUNTRY.GetName]"
 
 customs_union_trigger_desc_global:0 "Is in a [concept_customs_union]"
 customs_union_trigger_false_desc_global:0 "Is #b not#! in a [concept_customs_union]"
 customs_union_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is in a [concept_customs_union] under [COUNTRY.GetAdjectiveNoFlag] "
 customs_union_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! in a [concept_customs_union] under [COUNTRY.GetAdjectiveNoFlag] "
 customs_union_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is in a [concept_customs_union] under [COUNTRY.GetName]"
 customs_union_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is #b not#! in a [concept_customs_union] under [COUNTRY.GetName]"
 
 join_customs_union:0 "Join Customs Union"
 join_customs_union_action_name:0 "Join [concept_customs_union]"
 join_customs_union_action_propose_name:0 "Join [concept_customs_union]"
 join_customs_union_desc:1 "#header $join_customs_union$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_customs_union] between two [Concept('concept_country', '$concept_countries$')], with the proposing country as the junior participant."
 join_customs_union_proposal_notification_name:0 "Request to Join [concept_customs_union]"
 join_customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to join our #variable [concept_customs_union]#!."
 join_customs_union_proposal_notification_effects_desc:0 "If we accept, their states will be able to join our markets."
 join_customs_union_proposal_accepted_name:0 "[concept_customs_union] Request Accepted"
 join_customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our offer to join their #variable [concept_customs_union]#!."
 join_customs_union_proposal_declined_name:0 "[concept_customs_union] Request Declined"
 join_customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our offer to join their #variable [concept_customs_union]#!."
 join_customs_union_proposal_third_party_accepted_name:0 "[concept_customs_union] Joined"
 join_customs_union_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetName] entered into a [concept_customs_union] with [TARGET_COUNTRY.GetName]."
 join_customs_union_proposal_third_party_declined_name:0 "[concept_customs_union] Rejected"
 join_customs_union_proposal_third_party_declined_desc:0 "[INITIATOR_COUNTRY.GetName] refused to enter into a #variable [concept_customs_union]#! with [TARGET_COUNTRY.GetName]."

 change_customs_union:0 "Change to Our Customs Union"
 change_customs_union_action_name:0 "Change to Our [concept_customs_union]"
 change_customs_union_action_propose_name:0 "Change to Our [concept_customs_union]"
 change_customs_union_desc:1 "#header $change_customs_union$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_customs_union] between two [Concept('concept_country', '$concept_countries$')], with the recipient leaving their current [concept_customs_union] in the process."
 change_customs_union_proposal_notification_name:0 "Request to Change [concept_customs_union]"
 change_customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes us to change to their #variable [concept_customs_union]#!."
 change_customs_union_proposal_notification_effects_desc:0 "If we accept, we will leave our current [concept_customs_union] and join the [INITIATOR_COUNTRY.GetCapital.GetMarket.GetName]."
 change_customs_union_proposal_accepted_name:0 "$change_customs_union$ Request Accepted"
 change_customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our offer to change to our #variable [concept_customs_union]#!."
 change_customs_union_proposal_declined_name:0 "$change_customs_union$ Request Declined"
 change_customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our offer to change to our #variable [concept_customs_union]#!."
 change_customs_union_proposal_third_party_accepted_name:0 "$change_customs_union$ Joined"
 change_customs_union_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] changed their [concept_customs_union] to that of [INITIATOR_COUNTRY.GetName]."
 change_customs_union_proposal_third_party_declined_name:0 "$change_customs_union$ Rejected"
 change_customs_union_proposal_third_party_declined_desc:0 "[INITIATOR_COUNTRY.GetName] refused to change their [concept_customs_union] to that of [INITIATOR_COUNTRY.GetName]."
 
 alliance:0 "Alliance"
 alliance_action_name:0 "[concept_alliance]"
 alliance_action_propose_name:0 "Form [concept_alliance]"
 alliance_action_break_name:0 "End [concept_alliance]"
 alliance_action_notification_name:0 "[concept_alliance] with [INITIATOR_COUNTRY.GetName]"
 alliance_action_notification_desc:0 "We have formed an [concept_alliance] with [INITIATOR_COUNTRY.GetName]."
 alliance_desc:1 "#header $alliance$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes an [concept_alliance] between two [Concept('concept_country', '$concept_countries$')]."
 alliance_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] and [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] have an [concept_alliance]."
 alliance_proposal_notification_name:0 "Proposal for [concept_alliance]"
 alliance_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to enter into an [concept_alliance] with us."
 alliance_proposal_notification_effects_desc:0 "$alliance_desc$"
 alliance_proposal_accepted_name:0 "[concept_alliance] Accepted"
 alliance_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our proposal for an [concept_alliance]."
 alliance_proposal_declined_name:0 "[concept_alliance] Declined"
 alliance_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our proposal for an [concept_alliance]."
 alliance_action_notification_break_name:0 "[concept_alliance] with [INITIATOR_COUNTRY.GetName] broken"
 alliance_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have broken off their [concept_alliance] with us."
 alliance_proposal_third_party_accepted_name:0 "[concept_alliance] Signed"
 alliance_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetName] and [TARGET_COUNTRY.GetName] entered into a [concept_alliance]."
 alliance_proposal_third_party_declined_name:0 "[concept_alliance] Rejected"
 alliance_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to enter into an [concept_alliance] with [INITIATOR_COUNTRY.GetName]."
 alliance_action_notification_third_party_break_name:0 "[concept_alliance] Broken"
 alliance_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] broke off their [concept_alliance] with [TARGET_COUNTRY.GetName]."
 
 alliance_effect_desc_global:0 "Enters into an [concept_alliance]"
 alliance_effect_desc_first:0 "[TARGET_COUNTRY.GetName] enters into an [concept_alliance] with [COUNTRY.GetAdjectiveNoFlag]"
 alliance_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] enters into an [concept_alliance] with [COUNTRY.GetName]"
 
 alliance_trigger_desc_global:0 "Is in an [concept_alliance]"
 alliance_trigger_false_desc_global:0 "Is #b not#! in an [concept_alliance]"
 alliance_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is in an [concept_alliance] with [COUNTRY.GetAdjectiveNoFlag]"
 alliance_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! in an [concept_alliance] with [COUNTRY.GetAdjectiveNoFlag]"
 alliance_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is in an [concept_alliance] with [COUNTRY.GetName]"
 alliance_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is #b not#! in an [concept_alliance] with [COUNTRY.GetName]"
 
 defensive_pact:0 "Defensive Pact"
 defensive_pact_action_name:0 "[concept_defensive_pact]"
 defensive_pact_action_propose_name:0 "Form [concept_defensive_pact]"
 defensive_pact_action_break_name:0 "End [concept_defensive_pact]"
 defensive_pact_action_notification_name:0 "[concept_defensive_pact] with [INITIATOR_COUNTRY.GetName]"
 defensive_pact_action_notification_desc:0 "We have formed a [concept_defensive_pact] with [INITIATOR_COUNTRY.GetName]."
 defensive_pact_desc:1 "#header $defensive_pact$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_defensive_pact] between two [Concept('concept_country', '$concept_countries$')]."
 defensive_pact_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] and [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] have an [concept_defensive_pact]."
 defensive_pact_proposal_notification_name:0 "Proposal for [concept_defensive_pact]"
 defensive_pact_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to enter into a [concept_defensive_pact] with us."
 defensive_pact_proposal_notification_effects_desc:0 "$defensive_pact_desc$"
 defensive_pact_proposal_accepted_name:0 "[concept_defensive_pact] Accepted"
 defensive_pact_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our proposal for a [concept_defensive_pact]."
 defensive_pact_proposal_declined_name:0 "[concept_defensive_pact] Declined"
 defensive_pact_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our proposal for a [concept_defensive_pact]."
 defensive_pact_action_notification_break_name:0 "[concept_defensive_pact] with [INITIATOR_COUNTRY.GetName] broken"
 defensive_pact_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have broken off their [concept_defensive_pact] with us."
 defensive_pact_proposal_third_party_accepted_name:0 "[concept_defensive_pact] Signed"
 defensive_pact_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetName] and [TARGET_COUNTRY.GetName] entered into a [concept_defensive_pact]."
 defensive_pact_proposal_third_party_declined_name:0 "[concept_defensive_pact] Rejected"
 defensive_pact_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to enter into a [concept_defensive_pact] with [INITIATOR_COUNTRY.GetName]."
 defensive_pact_action_notification_third_party_break_name:0 "[concept_defensive_pact] Broken"
 defensive_pact_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] broke off their [concept_defensive_pact] with [TARGET_COUNTRY.GetName]."
 
 defensive_pact_effect_desc_global:0 "Enters into a [concept_defensive_pact]"
 defensive_pact_effect_desc_first:0 "[TARGET_COUNTRY.GetName] enters into a [concept_defensive_pact] with [COUNTRY.GetAdjectiveNoFlag]"
 defensive_pact_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] enters into a [concept_defensive_pact] with [COUNTRY.GetName]"
 
 defensive_pact_trigger_desc_global:0 "Is in a [concept_defensive_pact]"
 defensive_pact_trigger_false_desc_global:0 "Is #b not#! in a [concept_defensive_pact]"
 defensive_pact_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is in a [concept_defensive_pact] with [COUNTRY.GetAdjectiveNoFlag]"
 defensive_pact_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! in a [concept_defensive_pact] with [COUNTRY.GetAdjectiveNoFlag]"
 defensive_pact_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is in a [concept_defensive_pact] with [COUNTRY.GetName]"
 defensive_pact_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is #b not#! in a [concept_defensive_pact] with [COUNTRY.GetName]"
 
 trade_agreement:0 "Trade Agreement"
 trade_agreement_action_name:0 "[concept_trade_agreement]"
 trade_agreement_action_propose_name:0 "Propose [concept_trade_agreement]"
 trade_agreement_action_break_name:0 "End [concept_trade_agreement]"
 trade_agreement_action_notification_name:0 "[concept_trade_agreement] Formed"
 trade_agreement_action_notification_desc:0 "We have formed a [concept_trade_agreement] with [INITIATOR_COUNTRY.GetName]."
 trade_agreement_desc:1 "#header $trade_agreement$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_trade_agreement] between two [Concept('concept_country', '$concept_countries$')]."
 trade_agreement_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] and [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] have a [concept_trade_agreement]."
 trade_agreement_proposal_notification_name:0 "Proposal for [concept_trade_agreement]"
 trade_agreement_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to enter into an [concept_trade_agreement] with us."
 trade_agreement_proposal_notification_effects_desc:0 "$trade_agreement_desc$"
 trade_agreement_proposal_accepted_name:0 "[concept_trade_agreement] Accepted"
 trade_agreement_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our proposal for an [concept_trade_agreement]."
 trade_agreement_proposal_declined_name:0 "[concept_trade_agreement] Declined"
 trade_agreement_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our proposal for an [concept_trade_agreement]."
 trade_agreement_action_notification_break_name:0 "[concept_trade_agreement] Broken"
 trade_agreement_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have broken off their [concept_trade_agreement] with us."
 trade_agreement_proposal_third_party_accepted_name:0 "[concept_trade_agreement] Signed"
 trade_agreement_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetName] and [TARGET_COUNTRY.GetName] entered into a [concept_trade_agreement]."
 trade_agreement_proposal_third_party_declined_name:0 "[concept_trade_agreement] Rejected"
 trade_agreement_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to enter into an [concept_trade_agreement] with [INITIATOR_COUNTRY.GetName]."
 trade_agreement_action_notification_third_party_break_name:0 "[concept_trade_agreement] Broken"
 trade_agreement_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetName] broke off their [concept_trade_agreement] with [TARGET_COUNTRY.GetName]."

 trade_agreement_effect_desc_global:0 "Establishes a [concept_trade_agreement]"
 trade_agreement_effect_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] establishes a [concept_trade_agreement] with [TARGET_COUNTRY.GetName]"
 trade_agreement_effect_desc_third:0 "[COUNTRY.GetName] establishes a [concept_trade_agreement] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 trade_agreement_trigger_desc_global:0 "Has a [concept_trade_agreement]"
 trade_agreement_trigger_false_desc_global:0 "Does #b not#! have a [concept_trade_agreement]"
 trade_agreement_trigger_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] has a [concept_trade_agreement] with [TARGET_COUNTRY.GetName]"
 trade_agreement_trigger_false_desc_first:0 "[COUNTRY.GetAdjectiveNoFlag] does #b not#! have a [concept_trade_agreement] with [TARGET_COUNTRY.GetName]"
 trade_agreement_trigger_desc_third:0 "[COUNTRY.GetName] has a [concept_trade_agreement] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 trade_agreement_trigger_false_desc_third:0 "[COUNTRY.GetName] does #b not#! have a [concept_trade_agreement] with [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 protectorate:0 "Protectorate"
 protectorate_action_name:0 "[concept_protectorate]"
 protectorate_action_propose_name:0 "Make into [concept_protectorate]"
 protectorate_action_break_name:0 "Grant Independence"
 protectorate_action_ask_to_break_name:0 "Demand Independence"
 protectorate_desc:1 "#header $protectorate$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_protectorate] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 protectorate_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_protectorate] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 protectorate_action_notification_name: "$protectorate_proposal_notification_name$"
 protectorate_action_notification_desc: "$protectorate_proposal_notification_desc$"
 protectorate_proposal_notification_name:0 "Subjugation Demand"
 protectorate_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_protectorate]."
 protectorate_proposal_notification_effects_desc:0 "If we accept, we will become their subject."
 protectorate_proposal_accepted_name:0 "Subjugation Accepted"
 protectorate_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand for them to become our [concept_protectorate]."
 protectorate_proposal_declined_name:0 "Subjugation Refused"
 protectorate_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined the demand for them to become our [concept_protectorate]."
 protectorate_action_notification_break_name:0 "Independence Granted"
 protectorate_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_protectorate] status. We are independent once again."
 protectorate_proposal_notification_break_name:0 "Demand for Independence"
 protectorate_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end their [concept_protectorate] status."
 protectorate_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 protectorate_proposal_break_accepted_name:0 "Independence Granted"
 protectorate_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_protectorate] status. We are independent once again."
 protectorate_proposal_break_declined_name:0 "Independence Refused"
 protectorate_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_protectorate] status."
 protectorate_proposal_third_party_accepted_name:0 "Country Subjugated"
 protectorate_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the [concept_protectorate] of [INITIATOR_COUNTRY.GetName]."
 protectorate_proposal_third_party_declined_name:0 "Subjugation Refused"
 protectorate_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the [concept_protectorate] of [INITIATOR_COUNTRY.GetName]."
 protectorate_action_third_party_notification_break_name:0 "Independence Granted"
 protectorate_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended the [concept_protectorate] status of [TARGET_COUNTRY.GetName], granting them full independence."
 protectorate_proposal_third_party_break_accepted_name:0 "Independence Granted"
 protectorate_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended the [concept_protectorate] status of [INITIATOR_COUNTRY.GetName], granting them full independence."
 protectorate_proposal_third_party_break_declined_name:0 "Independence Refused"
 protectorate_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end the [concept_protectorate] status of [INITIATOR_COUNTRY.GetName]."
  
 protectorate_effect_desc_global:0 "Becomes a [concept_protectorate]"
 protectorate_effect_desc_first:0 "[TARGET_COUNTRY.GetName] becomes a [COUNTRY.GetAdjectiveNoFlag] [concept_protectorate]"
 protectorate_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] becomes a [concept_protectorate] of [COUNTRY.GetName]"
 
 protectorate_trigger_desc_global:0 "Is a [concept_protectorate]"
 protectorate_trigger_false_desc_global:0 "Is #b not#! a [concept_protectorate]"
 protectorate_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is a [COUNTRY.GetAdjectiveNoFlag] [concept_protectorate]"
 protectorate_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! a [COUNTRY.GetAdjectiveNoFlag] [concept_protectorate]"
 protectorate_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is a [concept_protectorate] of [COUNTRY.GetName]"
 protectorate_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is #b not#! a [concept_protectorate] of [COUNTRY.GetName]"
 
 become_protectorate:0 "Ask to Become Protectorate"
 become_protectorate_action_name:0 "Ask to Become [concept_protectorate]"
 become_protectorate_action_propose_name:0 "Ask to Become [concept_protectorate]"
 become_protectorate_desc:1 "#header $become_protectorate$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_protectorate] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')], with the proposing country becoming the [concept_subject]."
 become_protectorate_proposal_notification_name:0 "Request to Become [concept_protectorate]"
 become_protectorate_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to submit to us and become our [concept_protectorate]."
 become_protectorate_proposal_notification_effects_desc:0 "If we accept, they will become our subject."
 become_protectorate_proposal_accepted_name:0 "[concept_protectorate] Request Accepted"
 become_protectorate_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our offer to become their [concept_protectorate]."
 become_protectorate_proposal_declined_name:0 "[concept_protectorate] Request Declined"
 become_protectorate_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our offer to become their [concept_protectorate]."
 become_protectorate_proposal_third_party_accepted_name:0 "Country Subjugated"
 become_protectorate_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the $suzerain$ of [INITIATOR_COUNTRY.GetName], who is now their [concept_protectorate]."
 become_protectorate_proposal_third_party_declined_name:0 "Subjugation Refused"
 become_protectorate_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the $suzerain$ of [INITIATOR_COUNTRY.GetName]."

 puppet:0 "Puppet"
 puppet_action_name:0 "[concept_puppet]"
 puppet_action_propose_name:0 "Make into [concept_puppet]"
 puppet_action_break_name:0 "Grant Independence"
 puppet_action_ask_to_break_name:0 "Demand Independence"
 puppet_desc:1 "#header $puppet$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_puppet] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 puppet_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_puppet] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 puppet_action_notification_name:0 "Demand to become [concept_puppet]"
 puppet_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become a [concept_puppet]."
 puppet_action_notification_break_name:0 "Independence Granted"
 puppet_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_puppet] status. We are independent once again."
 puppet_proposal_notification_break_name:0 "[INITIATOR_COUNTRY.GetName] demands Independence"
 puppet_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end our [concept_puppet] status with them."
 puppet_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 puppet_proposal_break_accepted_name:0 "Independence Granted"
 puppet_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_puppet] status. We are independent once again."
 puppet_proposal_break_declined_name:0 "Independence Refused"
 puppet_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_puppet] status."
 puppet_proposal_third_party_break_accepted_name:0 "Independence Granted"
 puppet_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended their [concept_puppet] status with [INITIATOR_COUNTRY.GetName], granting them full independence."
 puppet_proposal_third_party_break_declined_name:0 "Independence Refused"
 puppet_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end their [concept_puppet] status with [INITIATOR_COUNTRY.GetName]."
 
 puppet_effect_desc_global:0 "Becomes a [concept_puppet]"
 puppet_effect_desc_first:0 "[TARGET_COUNTRY.GetName] becomes a [COUNTRY.GetAdjectiveNoFlag] [concept_puppet]"
 puppet_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] becomes a [concept_puppet] of [COUNTRY.GetName]"

 personal_union_effect_desc_global: "Becomes a [concept_personal_union]"
 personal_union_effect_desc_first: "[TARGET_COUNTRY.GetName] becomes the lesser partner in a [COUNTRY.GetAdjectiveNoFlag] [concept_personal_union]"
 personal_union_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] becomes the lesser partner of [COUNTRY.GetName] in a [concept_personal_union]" 

 puppet_trigger_desc_global:0 "Is a [concept_puppet]"
 puppet_trigger_false_desc_global:0 "Is #b not#! a [concept_puppet]"
 puppet_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is a [COUNTRY.GetAdjectiveNoFlag] [concept_puppet]"
 puppet_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! a [COUNTRY.GetAdjectiveNoFlag] [concept_puppet]"
 puppet_trigger_desc_third:1 "[COUNTRY.GetNameNoFlag] is a [concept_puppet] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 puppet_trigger_false_desc_third:1 "[COUNTRY.GetNameNoFlag] is #b not#! a [concept_puppet] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 tributary:0 "Tributary"
 tributary_action_name:0 "[concept_tributary]"
 tributary_action_propose_name:0 "Make into [concept_tributary]"
 tributary_action_break_name:0 "Grant Independence"
 tributary_action_ask_to_break_name:0 "Demand Independence"
 tributary_desc:1 "#header $tributary$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_tributary] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 tributary_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_tributary] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 tributary_action_notification_name: "$tributary_proposal_notification_name$"
 tributary_action_notification_desc: "$tributary_proposal_notification_desc$"
 tributary_proposal_notification_name:0 "Subjugation Demand"
 tributary_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_tributary]."
 tributary_proposal_notification_effects_desc:0 "If we accept, we will become their subject."
 tributary_proposal_accepted_name:0 "Subjugation Accepted"
 tributary_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand for them to become our [concept_tributary]."
 tributary_proposal_declined_name:0 "Subjugation Refused"
 tributary_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined the demand for them to become our [concept_tributary]."
 tributary_action_notification_break_name:0 "Independence Granted"
 tributary_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_tributary] status. We are independent once again."
 tributary_proposal_notification_break_name:0 "Demand for Independence"
 tributary_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end their [concept_tributary] status."
 tributary_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 tributary_proposal_break_accepted_name:0 "Independence Granted"
 tributary_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_tributary] status. We are independent once again."
 tributary_proposal_break_declined_name:0 "Independence Refused"
 tributary_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_tributary] status."
 tributary_proposal_third_party_accepted_name:0 "Country Subjugated"
 tributary_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the [concept_tributary] of [INITIATOR_COUNTRY.GetName]."
 tributary_proposal_third_party_declined_name:0 "Subjugation Refused"
 tributary_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the [concept_tributary] of [INITIATOR_COUNTRY.GetName]."
 tributary_action_third_party_notification_break_name:0 "Independence Granted"
 tributary_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended the [concept_tributary] status of [TARGET_COUNTRY.GetName], granting them full independence."
 tributary_proposal_third_party_break_accepted_name:0 "Independence Granted"
 tributary_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended the [concept_tributary] status of [INITIATOR_COUNTRY.GetName], granting them full independence."
 tributary_proposal_third_party_break_declined_name:0 "Independence Refused"
 tributary_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end the [concept_tributary] status of [INITIATOR_COUNTRY.GetName]."
  
 tributary_effect_desc_global:0 "Becomes a [concept_tributary]"
 tributary_effect_desc_first:0 "[TARGET_COUNTRY.GetName] becomes a [COUNTRY.GetAdjectiveNoFlag] [concept_tributary]"
 tributary_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] becomes a [concept_tributary] of [COUNTRY.GetName]"
 
 tributary_trigger_desc_global:0 "Is a [concept_tributary]"
 tributary_trigger_false_desc_global:0 "Is #b not#! a [concept_tributary]"
 tributary_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is a [COUNTRY.GetAdjectiveNoFlag] [concept_tributary]"
 tributary_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! a [COUNTRY.GetAdjectiveNoFlag] [concept_tributary]"
 tributary_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is a [concept_tributary] of [COUNTRY.GetName]"
 tributary_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] is #b not#! a [concept_tributary] of [COUNTRY.GetName]"
  
 become_tributary:0 "Ask to Become Tributary"
 become_tributary_action_name:0 "Ask to Become [concept_tributary]"
 become_tributary_action_propose_name:0 "Ask to Become [concept_tributary]"
 become_tributary_desc:2 "#header $become_tributary$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_tributary] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')], with the proposing country becoming the [concept_subject]."
 become_tributary_proposal_notification_name:0 "Request to Become [concept_tributary]"
 become_tributary_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to submit to us and become our [concept_tributary]."
 become_tributary_proposal_notification_effects_desc:0 "If we accept, they will become our subject."
 become_tributary_proposal_accepted_name:0 "[concept_tributary] Request Accepted"
 become_tributary_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our offer to become their [concept_tributary]."
 become_tributary_proposal_declined_name:0 "[concept_tributary] Request Declined"
 become_tributary_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our offer to become their [concept_tributary]."
 become_tributary_proposal_third_party_accepted_name:0 "Country Subjugated"
 become_tributary_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the $suzerain$ of [INITIATOR_COUNTRY.GetName], who is now their [concept_tributary]."
 become_tributary_proposal_third_party_declined_name:0 "Subjugation Refused"
 become_tributary_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the $suzerain$ of [INITIATOR_COUNTRY.GetName]."

 vassal:0 "Vassal"
 vassal_action_name:0 "[concept_vassal]"
 vassal_action_propose_name:0 "Make into [concept_vassal]"
 vassal_action_break_name:0 "Grant Independence"
 vassal_action_ask_to_break_name:0 "Demand Independence"
 vassal_desc:1 "#header $vassal$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_vassal] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 vassal_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_vassal] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 vassal_action_notification_name:0 "Demand to become [concept_vassal]"
 vassal_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become a [concept_vassal]."
 vassal_action_notification_break_name:0 "Independence Granted"
 vassal_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_vassal] status. We are independent once again."
 vassal_proposal_notification_break_name:0 "Demand for Independence"
 vassal_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end our [concept_vassal] status with them."
 vassal_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 vassal_proposal_break_accepted_name:0 "Independence Granted"
 vassal_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_vassal] status. We are independent once again."
 vassal_proposal_break_declined_name:0 "Independence Refused"
 vassal_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_vassal] status."
 vassal_proposal_third_party_break_accepted_name:0 "Independence Granted"
 vassal_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended their [concept_vassal] status with [INITIATOR_COUNTRY.GetName], granting them full independence."
 vassal_proposal_third_party_break_declined_name:0 "Independence Refused"
 vassal_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end their [concept_vassal] status with [INITIATOR_COUNTRY.GetName]."

 personal_union:0 "Personal Union"
 personal_union_action_name:0 "[concept_personal_union]"
 personal_union_action_propose_name:0 "Make into [concept_personal_union]"
 personal_union_action_break_name:0 "Grant Independence"
 personal_union_action_ask_to_break_name:0 "Demand Independence"
 personal_union_desc:1 "#header $personal_union$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_personal_union] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 personal_union_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is in a [concept_personal_union] under [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 personal_union_action_notification_name:0 "Demand for Union"
 personal_union_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and form a [concept_personal_union]."
 personal_union_action_notification_break_name:0 "Independence Granted"
 personal_union_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_personal_union]. We are independent once again."
 personal_union_proposal_notification_break_name:0 "Demand for Independence"
 personal_union_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end our [concept_personal_union] with them."
 personal_union_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 personal_union_proposal_break_accepted_name:0 "Independence Granted"
 personal_union_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_personal_union]. We are independent once again."
 personal_union_proposal_break_declined_name:0 "Independence Refused"
 personal_union_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_personal_union]."
 personal_union_proposal_third_party_break_accepted_name:0 "Independence Granted"
 personal_union_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended their [concept_personal_union] with [INITIATOR_COUNTRY.GetName], granting them full independence."
 personal_union_proposal_third_party_break_declined_name:0 "Independence Refused"
 personal_union_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end their [concept_personal_union] with [INITIATOR_COUNTRY.GetName]."
  
 dominion:0 "Dominion"
 dominion_action_name:0 "[concept_dominion]"
 dominion_action_propose_name:0 "Make into [concept_dominion]"
 dominion_action_break_name:0 "Grant Independence"
 dominion_action_ask_to_break_name:0 "Demand Independence"
 dominion_desc:1 "#header $dominion$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_dominion] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 dominion_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_dominion] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 dominion_action_notification_name:0 "Demand for [concept_dominion]"
 dominion_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_dominion]."
 dominion_action_notification_break_name:0 "Independence Granted"
 dominion_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_dominion] status. We are independent once again."
 dominion_proposal_notification_break_name:0 "Demand for Independence"
 dominion_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end their [concept_dominion] status."
 dominion_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 dominion_proposal_break_accepted_name:0 "Independence Granted"
 dominion_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_dominion] status. We are independent once again."
 dominion_proposal_break_declined_name:0 "Independence Refused"
 dominion_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_dominion] status."
 dominion_action_third_party_notification_break_name:0 "Independence Granted"
 dominion_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] ended the [concept_dominion] status of [TARGET_COUNTRY.GetName], granting them full independence."
 dominion_proposal_third_party_break_accepted_name:0 "Independence Granted"
 dominion_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] ended the [concept_dominion] status of [INITIATOR_COUNTRY.GetName], granting them full independence."
 dominion_proposal_third_party_break_declined_name:0 "Independence Refused"
 dominion_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to end the [concept_dominion] status of [INITIATOR_COUNTRY.GetName]."
 dominion_proposal_notification_name:0 "Subjugation Demand"
 dominion_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_dominion]."
 dominion_proposal_notification_effects_desc:0 "If we accept, we will become their subject."
 dominion_proposal_accepted_name:0 "Subjugation Accepted"
 dominion_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand for them to become our [concept_dominion]."
 dominion_proposal_declined_name:0 "Subjugation Refused"
 dominion_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined the demand for them to become our [concept_dominion]."
 dominion_proposal_third_party_accepted_name:0 "Country Subjugated"
 dominion_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the [concept_dominion] of [INITIATOR_COUNTRY.GetName]."
 dominion_proposal_third_party_declined_name:0 "Subjugation Refused"
 dominion_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the [concept_dominion] of [INITIATOR_COUNTRY.GetName]."

 dominion_effect_desc_global:0 "Becomes a [concept_dominion]"
 dominion_effect_desc_first:0 "[TARGET_COUNTRY.GetName] becomes a [COUNTRY.GetAdjectiveNoFlag] [concept_dominion]"
 dominion_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] becomes a [concept_dominion] of [COUNTRY.GetName]"
 
 dominion_trigger_desc_global:0 "Is a [concept_dominion]"
 dominion_trigger_false_desc_global:0 "Is #b not#! a [concept_dominion]"
 dominion_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is a [COUNTRY.GetAdjectiveNoFlag] [concept_dominion]"
 dominion_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! a [COUNTRY.GetAdjectiveNoFlag] [concept_dominion]"
 dominion_trigger_desc_third:1 "[COUNTRY.GetName] is a [concept_dominion] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 dominion_trigger_false_desc_third:1 "[COUNTRY.GetNameNoFlag] is #b not#! a [concept_dominion] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"

 vassal_trigger_desc_global:0 "Is a [concept_vassal]"
 vassal_trigger_false_desc_global:0 "Is #b not#! a [concept_vassal]"
 vassal_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is a [COUNTRY.GetAdjectiveNoFlag] [concept_vassal]"
 vassal_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! a [COUNTRY.GetAdjectiveNoFlag] [concept_vassal]"
 vassal_trigger_desc_third:0 "[COUNTRY.GetNameNoFlag] is a [concept_vassal] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(vassalqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 vassal_trigger_false_desc_third:0 "[COUNTRY.GetNameNoFlag] is #b not#! a [concept_vassal] of [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 
 become_dominion:0 "Ask to Become Dominion"
 become_dominion_action_name:0 "Ask to Become [concept_dominion]"
 become_dominion_desc:1 "#header $become_dominion$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_dominion] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')], with the proposing country becoming the [concept_subject]."
 become_dominion_proposal_notification_name:0 "Request to Become [concept_dominion]"
 become_dominion_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] wishes to submit to us and become our [concept_dominion]."
 become_dominion_proposal_notification_effects_desc:0 "If we accept, they will become our subject."
 become_dominion_proposal_accepted_name:0 "[concept_dominion] Request Accepted"
 become_dominion_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted our offer to become their [concept_dominion]."
 become_dominion_proposal_declined_name:0 "[concept_dominion] Request Declined"
 become_dominion_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined our offer to become their [concept_dominion]."
 become_dominion_proposal_third_party_accepted_name:0 "Country Subjugated"
 become_dominion_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetName] agreed to become the $suzerain$ of [INITIATOR_COUNTRY.GetName], who is now their [concept_dominion]."
 become_dominion_proposal_third_party_declined_name:0 "Subjugation Refused"
 become_dominion_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetName] refused to become the $suzerain$ of [INITIATOR_COUNTRY.GetName]."

 violate_sovereignty:0 "Violate Sovereignty"
 violate_sovereignty_action_name:0 "Violate Sovereignty"
 violate_sovereignty_action_propose_name:0 "Violate Sovereignty"
 violate_sovereignty_wars:1 "This affects the following wars:"
 violate_sovereignty_countries:0 "The following countries may get involved if [Country.GetName] refuses:"
 violate_sovereignty_desc:1 "#header $violate_sovereignty$#!\n$TOOLTIP_DELIMITER$\nAn [concept_instant_diplomatic_action] by which one [concept_country] can force another neutral country to join them in a [concept_war] in order to gain access to their borders. If the target [concept_country] refuses they will join on the side of the proposing [Concept('concept_country','$concept_country_possessive$')] enemies instead."
 violate_sovereignty_proposal_accepted_name:0 "[TARGET_COUNTRY.GetName] accepts our demands"
 violate_sovereignty_proposal_accepted_desc:1 "[TARGET_COUNTRY.GetName] has joined our side!"
 violate_sovereignty_proposal_declined_name:0 "[TARGET_COUNTRY.GetName] has refused our ultimatum"
 violate_sovereignty_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] have joined our enemies!"
 violate_sovereignty_proposal_notification_name:0 "Violate Sovereignty"
 violate_sovereignty_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we join their wars."
 violate_sovereignty_proposal_notification_effects_desc:0 "If we accept we will join them in their wars. If we refuse we will join their enemies."
 violate_sovereignty_proposal_third_party_accepted_name:2 "[TARGET_COUNTRY.GetName] accepts [INITIATOR_COUNTRY.GetName] demands"
 violate_sovereignty_proposal_third_party_accepted_desc:2 "[TARGET_COUNTRY.GetName] has joined the [concept_war] on side of [INITIATOR_COUNTRY.GetName]!"
 violate_sovereignty_proposal_third_party_declined_name:2 "[TARGET_COUNTRY.GetName] has refused [INITIATOR_COUNTRY.GetName] ultimatum"
 violate_sovereignty_proposal_third_party_declined_desc:2 "[TARGET_COUNTRY.GetName] has joined the [concept_war] against [INITIATOR_COUNTRY.GetName]!"

 personal_union_trigger_desc_global:0 "Is in a [concept_personal_union]"
 personal_union_trigger_false_desc_global:0 "Is #b not#! in a [concept_personal_union]"
 personal_union_trigger_desc_first:0 "[TARGET_COUNTRY.GetName] is in a [concept_personal_union] with [COUNTRY.GetAdjectiveNoFlag]"
 personal_union_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetName] is #b not#! in a [concept_personal_union] with [COUNTRY.GetAdjectiveNoFlag]"
 personal_union_trigger_desc_third:1 "[COUNTRY.GetName] is in a [concept_personal_union] under [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 personal_union_trigger_false_desc_third:1 "[COUNTRY.GetNameNoFlag] is #b not#! in a [concept_personal_union] under [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
